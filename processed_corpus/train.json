[
  {
    "intent": [
      "concatenate",
      "elements",
      "of",
      "a",
      "list",
      "str_0",
      "of",
      "multiple",
      "integers",
      "to",
      "a",
      "single",
      "integer"
    ],
    "code": [
      "sum",
      "(",
      "d",
      "*",
      "10",
      "**",
      "i",
      "for",
      "i",
      ",",
      "d",
      "in",
      "enumerate",
      "(",
      "str_0",
      "[",
      ":",
      ":",
      "-",
      "1",
      "]",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "x",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      0,
      1,
      2,
      3,
      4,
      5,
      2,
      6,
      7,
      8,
      3,
      9,
      10
    ],
    "code_indx_copy": [
      0,
      1,
      2,
      3,
      4,
      5,
      6,
      7,
      6,
      8,
      2,
      9,
      10,
      1,
      11,
      12,
      13,
      13,
      14,
      15,
      16,
      17,
      17
    ],
    "code_indx_nocopy": [
      0,
      1,
      2,
      3,
      4,
      5,
      6,
      7,
      6,
      8,
      2,
      9,
      10,
      1,
      11,
      12,
      13,
      13,
      14,
      15,
      16,
      17,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "list",
      "of",
      "integers",
      "into",
      "a",
      "single",
      "integer"
    ],
    "code": [
      "r",
      "=",
      "int",
      "(",
      "''",
      ".",
      "join",
      "(",
      "map",
      "(",
      "str",
      ",",
      "x",
      ")",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      11,
      3,
      4,
      2,
      7,
      12,
      3,
      9,
      10
    ],
    "code_indx_copy": [
      18,
      19,
      20,
      1,
      21,
      22,
      23,
      1,
      24,
      1,
      25,
      8,
      26,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      18,
      19,
      20,
      1,
      21,
      22,
      23,
      1,
      24,
      1,
      25,
      8,
      26,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "datetime",
      "string",
      "back",
      "to",
      "a",
      "datetime",
      "object",
      "of",
      "format",
      "str_0"
    ],
    "code": [
      "datetime",
      ".",
      "strptime",
      "(",
      "'2010-11-13 10:33:54.227806'",
      ",",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "%Y-%m-%d %H:%M:%S.%f",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      3,
      13,
      14,
      465,
      8,
      3,
      13,
      15,
      2,
      16,
      5
    ],
    "code_indx_copy": [
      27,
      22,
      28,
      1,
      524,
      8,
      29,
      17
    ],
    "code_indx_nocopy": [
      27,
      22,
      28,
      1,
      524,
      8,
      29,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "average",
      "of",
      "a",
      "list",
      "values",
      "for",
      "each",
      "key",
      "in",
      "dictionary",
      "var_0",
      ")"
    ],
    "code": [
      "[",
      "(",
      "i",
      ",",
      "sum",
      "(",
      "j",
      ")",
      "/",
      "len",
      "(",
      "j",
      ")",
      ")",
      "for",
      "i",
      ",",
      "j",
      "in",
      "list",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "d",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      18,
      19,
      2,
      3,
      4,
      20,
      21,
      22,
      23,
      24,
      25,
      26,
      27
    ],
    "code_indx_copy": [
      12,
      1,
      6,
      8,
      0,
      1,
      30,
      17,
      31,
      32,
      1,
      30,
      17,
      17,
      7,
      6,
      8,
      30,
      9,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      1,
      6,
      8,
      0,
      1,
      30,
      17,
      31,
      32,
      1,
      30,
      17,
      17,
      7,
      6,
      8,
      30,
      9,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      16
    ]
  },
  {
    "intent": [
      "zip",
      "two",
      "lists",
      "str_0",
      "and",
      "str_1",
      "into",
      "a",
      "list",
      "of",
      "two",
      "tuples",
      "containing",
      "elements",
      "at",
      "the",
      "same",
      "index",
      "in",
      "each",
      "list"
    ],
    "code": [
      "zip",
      "(",
      "[",
      "str_0",
      "]",
      ",",
      "[",
      "str_1",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "[1, 2]",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": "[3, 4]",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "[1, 2]",
        "quote": "`",
        "type": "str"
      },
      "[str_1]": {
        "value": "[3, 4]",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      28,
      29,
      30,
      5,
      31,
      32,
      12,
      3,
      4,
      2,
      29,
      33,
      34,
      1,
      35,
      18,
      36,
      37,
      24,
      22,
      4
    ],
    "code_indx_copy": [
      36,
      1,
      12,
      11,
      16,
      8,
      12,
      37,
      16,
      17
    ],
    "code_indx_nocopy": [
      36,
      1,
      12,
      11,
      16,
      8,
      12,
      37,
      16,
      17
    ]
  },
  {
    "intent": [
      "prepend",
      "string",
      "str_0",
      "to",
      "all",
      "items",
      "in",
      "list",
      "str_1"
    ],
    "code": [
      "[",
      "'hello{0}'",
      ".",
      "format",
      "(",
      "i",
      ")",
      "for",
      "i",
      "in",
      "str_1",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "hello",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "a",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      14,
      5,
      8,
      38,
      39,
      24,
      4,
      32
    ],
    "code_indx_copy": [
      12,
      524,
      22,
      38,
      1,
      6,
      17,
      7,
      6,
      9,
      37,
      16
    ],
    "code_indx_nocopy": [
      12,
      524,
      22,
      38,
      1,
      6,
      17,
      7,
      6,
      9,
      37,
      16
    ]
  },
  {
    "intent": [
      "regex",
      "for",
      "repeating",
      "words",
      "in",
      "a",
      "string",
      "var_0"
    ],
    "code": [
      "re",
      ".",
      "sub",
      "(",
      "'(?<!\\\\S)((\\\\S+)(?:\\\\s+\\\\2))(?:\\\\s+\\\\2)+(?!\\\\S)'",
      ",",
      "'\\\\1'",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      40,
      21,
      465,
      41,
      24,
      3,
      14,
      26
    ],
    "code_indx_copy": [
      39,
      22,
      40,
      1,
      524,
      8,
      41,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      40,
      1,
      524,
      8,
      41,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "normalize",
      "a",
      "pandas",
      "dataframe",
      "var_0",
      "by",
      "row"
    ],
    "code": [
      "var_0",
      ".",
      "div",
      "(",
      "var_0",
      ".",
      "sum",
      "(",
      "axis",
      "=",
      "1",
      ")",
      ",",
      "axis",
      "=",
      "0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      3,
      42,
      43,
      26,
      44,
      45
    ],
    "code_indx_copy": [
      34,
      22,
      524,
      1,
      34,
      22,
      0,
      1,
      42,
      19,
      15,
      17,
      8,
      42,
      19,
      43,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      524,
      1,
      34,
      22,
      0,
      1,
      42,
      19,
      15,
      17,
      8,
      42,
      19,
      43,
      17
    ]
  },
  {
    "intent": [
      "swap",
      "values",
      "in",
      "a",
      "tuple/list",
      "inside",
      "a",
      "list",
      "var_0"
    ],
    "code": [
      "map",
      "(",
      "lambda",
      "t",
      ":",
      "(",
      "t",
      "[",
      "1",
      "]",
      ",",
      "t",
      "[",
      "0",
      "]",
      ")",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "mylist",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      20,
      24,
      3,
      465,
      46,
      3,
      4,
      26
    ],
    "code_indx_copy": [
      24,
      1,
      44,
      45,
      13,
      1,
      45,
      12,
      15,
      16,
      8,
      45,
      12,
      43,
      16,
      17,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      24,
      1,
      44,
      45,
      13,
      1,
      45,
      12,
      15,
      16,
      8,
      45,
      12,
      43,
      16,
      17,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "swap",
      "values",
      "in",
      "a",
      "tuple/list",
      "in",
      "list",
      "var_0"
    ],
    "code": [
      "[",
      "(",
      "t",
      "[",
      "1",
      "]",
      ",",
      "t",
      "[",
      "0",
      "]",
      ")",
      "for",
      "t",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "mylist",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      20,
      24,
      3,
      465,
      24,
      4,
      26
    ],
    "code_indx_copy": [
      12,
      1,
      45,
      12,
      15,
      16,
      8,
      45,
      12,
      43,
      16,
      17,
      7,
      45,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      12,
      1,
      45,
      12,
      15,
      16,
      8,
      45,
      12,
      43,
      16,
      17,
      7,
      45,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "find",
      "next",
      "sibling",
      "element",
      "in",
      "python",
      "selenium",
      "?"
    ],
    "code": [
      "driver",
      ".",
      "find_element_by_xpath",
      "(",
      "\"//p[@id, 'one']/following-sibling::p\"",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      47,
      48,
      465,
      49,
      24,
      50,
      51,
      52
    ],
    "code_indx_copy": [
      46,
      22,
      47,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      46,
      22,
      47,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "find",
      "all",
      "occurrences",
      "of",
      "the",
      "pattern",
      "str_0",
      "within",
      "var_0"
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'str_0'",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "\\[[^\\]]*\\]|\\([^\\)]*\\)|\"[^\"]*\"|\\S+",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "strs",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      47,
      38,
      53,
      2,
      18,
      54,
      5,
      55,
      26
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      29,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      29,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "generate",
      "the",
      "combinations",
      "of",
      "3",
      "from",
      "a",
      "set",
      "str_0"
    ],
    "code": [
      "print",
      "(",
      "list",
      "(",
      "itertools",
      ".",
      "combinations",
      "(",
      "{",
      "str_0",
      "}",
      ",",
      "3",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "{1, 2, 3, 4}",
        "quote": "`",
        "type": "str"
      },
      "{str_0}": {
        "value": "{1, 2, 3, 4}",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      56,
      18,
      465,
      2,
      57,
      58,
      3,
      59,
      5
    ],
    "code_indx_copy": [
      49,
      1,
      33,
      1,
      50,
      22,
      51,
      1,
      52,
      11,
      53,
      8,
      54,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      33,
      1,
      50,
      22,
      51,
      1,
      52,
      11,
      53,
      8,
      54,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "add",
      "multiple",
      "columns",
      "var_0",
      ",",
      "var_1",
      ",",
      "var_2",
      "to",
      "pandas",
      "data",
      "frame",
      "var_3",
      "from",
      "lambda",
      "function",
      "var_4"
    ],
    "code": [
      "var_3",
      "[",
      "[",
      "'var_0'",
      ",",
      "'var_1'",
      ",",
      "'var_2'",
      "]",
      "]",
      "=",
      "var_3",
      ".",
      "apply",
      "(",
      "var_4",
      ",",
      "axis",
      "=",
      "1",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "hour",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "weekday",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "weeknum",
        "quote": "`",
        "type": "var"
      },
      "var_3": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "var_4": {
        "value": "lambdafunc",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      60,
      6,
      61,
      26,
      62,
      63,
      62,
      64,
      8,
      42,
      65,
      66,
      67,
      58,
      68,
      69,
      465
    ],
    "code_indx_copy": [
      55,
      12,
      12,
      56,
      8,
      57,
      8,
      58,
      16,
      16,
      19,
      55,
      22,
      59,
      1,
      60,
      8,
      42,
      19,
      15,
      17
    ],
    "code_indx_nocopy": [
      55,
      12,
      12,
      56,
      8,
      57,
      8,
      58,
      16,
      16,
      19,
      55,
      22,
      59,
      1,
      60,
      8,
      42,
      19,
      15,
      17
    ]
  },
  {
    "intent": [
      "beautifulsoup",
      "search",
      "string",
      "str_0",
      "inside",
      "tag",
      "str_1"
    ],
    "code": [
      "soup",
      ".",
      "find_all",
      "(",
      "'str_1'",
      ",",
      "string",
      "=",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "Elsie",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "a",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      70,
      71,
      14,
      5,
      46,
      72,
      32
    ],
    "code_indx_copy": [
      61,
      22,
      62,
      1,
      63,
      8,
      64,
      19,
      29,
      17
    ],
    "code_indx_nocopy": [
      61,
      22,
      62,
      1,
      63,
      8,
      64,
      19,
      29,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "datetime",
      "object",
      "var_0",
      "into",
      "readable",
      "format",
      "str_0"
    ],
    "code": [
      "var_0",
      ".",
      "strftime",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "my_datetime",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "%B %d, %Y",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      3,
      13,
      15,
      26,
      12,
      465,
      16,
      5
    ],
    "code_indx_copy": [
      34,
      22,
      65,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      65,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "parse",
      "string",
      "var_0",
      "to",
      "int",
      "when",
      "string",
      "contains",
      "a",
      "number"
    ],
    "code": [
      "int",
      "(",
      "''",
      ".",
      "join",
      "(",
      "c",
      "for",
      "c",
      "in",
      "var_0",
      "if",
      "c",
      ".",
      "isdigit",
      "(",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      73,
      14,
      26,
      8,
      74,
      465,
      14,
      75,
      3,
      76
    ],
    "code_indx_copy": [
      20,
      1,
      21,
      22,
      23,
      1,
      66,
      7,
      66,
      9,
      34,
      67,
      66,
      22,
      68,
      1,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      20,
      1,
      21,
      22,
      23,
      1,
      66,
      7,
      66,
      9,
      34,
      67,
      66,
      22,
      68,
      1,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "add",
      "dictionary",
      "str_0",
      "to",
      "key",
      "str_1",
      "of",
      "dictionary",
      "var_0"
    ],
    "code": [
      "var_0",
      "[",
      "'str_1'",
      "]",
      ".",
      "update",
      "(",
      "{",
      "str_0",
      "}",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "{'class': {'section': 5}}",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": "Test",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "dic",
        "quote": "`",
        "type": "var"
      },
      "{str_0}": {
        "value": "{'class': {'section': 5}}",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      60,
      25,
      5,
      8,
      23,
      32,
      2,
      25,
      26
    ],
    "code_indx_copy": [
      34,
      12,
      63,
      16,
      22,
      69,
      1,
      52,
      11,
      53,
      17
    ],
    "code_indx_nocopy": [
      34,
      12,
      63,
      16,
      22,
      69,
      1,
      52,
      11,
      53,
      17
    ]
  },
  {
    "intent": [
      "transforming",
      "the",
      "string",
      "var_0",
      "into",
      "dictionary"
    ],
    "code": [
      "dict",
      "(",
      "map",
      "(",
      "int",
      ",",
      "x",
      ".",
      "split",
      "(",
      "':'",
      ")",
      ")",
      "for",
      "x",
      "in",
      "var_0",
      ".",
      "split",
      "(",
      "','",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      18,
      14,
      26,
      12,
      25
    ],
    "code_indx_copy": [
      70,
      1,
      24,
      1,
      20,
      8,
      26,
      22,
      71,
      1,
      72,
      17,
      17,
      7,
      26,
      9,
      34,
      22,
      71,
      1,
      73,
      17,
      17
    ],
    "code_indx_nocopy": [
      70,
      1,
      24,
      1,
      20,
      8,
      26,
      22,
      71,
      1,
      72,
      17,
      17,
      7,
      26,
      9,
      34,
      22,
      71,
      1,
      73,
      17,
      17
    ]
  },
  {
    "intent": [
      "how",
      "to",
      "select",
      "element",
      "with",
      "selenium",
      "python",
      "xpath"
    ],
    "code": [
      "driver",
      ".",
      "find_element_by_xpath",
      "(",
      "\"//div[@id='a']//a[@class='click']\"",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      77,
      8,
      78,
      49,
      79,
      51,
      50,
      465
    ],
    "code_indx_copy": [
      46,
      22,
      47,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      46,
      22,
      47,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "find",
      "rows",
      "matching",
      "str_0",
      "in",
      "a",
      "2",
      "dimensional",
      "numpy",
      "array",
      "var_0"
    ],
    "code": [
      "np",
      ".",
      "where",
      "(",
      "(",
      "var_0",
      "==",
      "(",
      "0",
      ",",
      "1",
      ")",
      ")",
      ".",
      "all",
      "(",
      "axis",
      "=",
      "1",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "(0,1)",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "vals",
        "quote": "`",
        "type": "var"
      },
      "(str_0)": {
        "value": "(0,1)",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      47,
      80,
      81,
      5,
      24,
      3,
      82,
      83,
      84,
      85,
      26
    ],
    "code_indx_copy": [
      74,
      22,
      75,
      1,
      1,
      34,
      76,
      1,
      43,
      8,
      15,
      17,
      17,
      22,
      77,
      1,
      42,
      19,
      15,
      17,
      17
    ],
    "code_indx_nocopy": [
      74,
      22,
      75,
      1,
      1,
      34,
      76,
      1,
      43,
      8,
      15,
      17,
      17,
      22,
      77,
      1,
      42,
      19,
      15,
      17,
      17
    ]
  },
  {
    "intent": [
      "how",
      "to",
      "delete",
      "a",
      "record",
      "in",
      "django",
      "models",
      "?"
    ],
    "code": [
      "SomeModel",
      ".",
      "objects",
      ".",
      "filter",
      "(",
      "id",
      "=",
      "id",
      ")",
      ".",
      "delete",
      "(",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      77,
      8,
      86,
      3,
      465,
      24,
      87,
      465,
      52
    ],
    "code_indx_copy": [
      524,
      22,
      78,
      22,
      79,
      1,
      80,
      19,
      80,
      17,
      22,
      81,
      1,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      78,
      22,
      79,
      1,
      80,
      19,
      80,
      17,
      22,
      81,
      1,
      17
    ]
  },
  {
    "intent": [
      "build",
      "a",
      "dictionary",
      "containing",
      "the",
      "conversion",
      "of",
      "each",
      "list",
      "in",
      "list",
      "str_0",
      "to",
      "a",
      "key/value",
      "pair",
      "as",
      "its",
      "items"
    ],
    "code": [
      "dict",
      "(",
      "[",
      "str_0",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "[['two', 2], ['one', 1]]",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "[['two', 2], ['one', 1]]",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      3,
      25,
      34,
      18,
      465,
      2,
      22,
      4,
      24,
      4,
      5,
      8,
      3,
      88,
      89,
      90,
      91,
      39
    ],
    "code_indx_copy": [
      70,
      1,
      12,
      11,
      16,
      17
    ],
    "code_indx_nocopy": [
      70,
      1,
      12,
      11,
      16,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "list",
      "var_0",
      "to",
      "dictionary",
      "having",
      "each",
      "two",
      "adjacent",
      "elements",
      "as",
      "key/value",
      "pair"
    ],
    "code": [
      "dict",
      "(",
      "zip",
      "(",
      "var_0",
      "[",
      ":",
      ":",
      "2",
      "]",
      ",",
      "var_0",
      "[",
      "1",
      ":",
      ":",
      "2",
      "]",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "l",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      4,
      26,
      8,
      25,
      92,
      22,
      29,
      465,
      1,
      90,
      88,
      89
    ],
    "code_indx_copy": [
      70,
      1,
      36,
      1,
      34,
      12,
      13,
      13,
      82,
      16,
      8,
      34,
      12,
      15,
      13,
      13,
      82,
      16,
      17,
      17
    ],
    "code_indx_nocopy": [
      70,
      1,
      36,
      1,
      34,
      12,
      13,
      13,
      82,
      16,
      8,
      34,
      12,
      15,
      13,
      13,
      82,
      16,
      17,
      17
    ]
  },
  {
    "intent": [
      "assign",
      "float",
      "9.8",
      "to",
      "variable",
      "var_0"
    ],
    "code": [
      "var_0",
      "=",
      "9.8"
    ],
    "slot_map": {
      "var_0": {
        "value": "GRAVITY",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      93,
      94,
      465,
      8,
      95,
      26
    ],
    "code_indx_copy": [
      34,
      19,
      530
    ],
    "code_indx_nocopy": [
      34,
      19,
      524
    ]
  },
  {
    "intent": [
      "separate",
      "numbers",
      "from",
      "characters",
      "in",
      "string",
      "str_0"
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'(([0-9]+)([A-Z]))'",
      ",",
      "'20M10000N80M'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "30m1000n20m",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      96,
      97,
      58,
      98,
      24,
      14,
      5
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      524,
      8,
      524,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      524,
      8,
      524,
      17
    ]
  },
  {
    "intent": [
      "separate",
      "numbers",
      "and",
      "characters",
      "in",
      "string",
      "str_0"
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'([0-9]+|[A-Z])'",
      ",",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "20M10000N80M",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      96,
      97,
      31,
      98,
      24,
      14,
      5
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      524,
      8,
      29,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      524,
      8,
      29,
      17
    ]
  },
  {
    "intent": [
      "separate",
      "numbers",
      "and",
      "characters",
      "in",
      "string",
      "str_0"
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'([0-9]+)([A-Z])'",
      ",",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "20M10000N80M",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      96,
      97,
      31,
      98,
      24,
      14,
      5
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      524,
      8,
      29,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      524,
      8,
      29,
      17
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "list",
      "of",
      "words",
      "from",
      "a",
      "string",
      "str_0",
      "removing",
      "punctuation"
    ],
    "code": [
      "re",
      ".",
      "compile",
      "(",
      "'\\\\w+'",
      ")",
      ".",
      "findall",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "Hello world, my name is...James the 2nd!",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      3,
      4,
      2,
      41,
      58,
      3,
      14,
      5,
      99,
      100
    ],
    "code_indx_copy": [
      39,
      22,
      83,
      1,
      524,
      17,
      22,
      48,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      83,
      1,
      524,
      17,
      22,
      48,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "string",
      "str_0",
      "into",
      "datetime.time",
      "object"
    ],
    "code": [
      "datetime",
      ".",
      "datetime",
      ".",
      "strptime",
      "(",
      "'str_0'",
      ",",
      "'%H:%M'",
      ")",
      ".",
      "time",
      "(",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "03:55",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      14,
      5,
      12,
      465,
      15
    ],
    "code_indx_copy": [
      27,
      22,
      27,
      22,
      28,
      1,
      29,
      8,
      524,
      17,
      22,
      84,
      1,
      17
    ],
    "code_indx_nocopy": [
      27,
      22,
      27,
      22,
      28,
      1,
      29,
      8,
      524,
      17,
      22,
      84,
      1,
      17
    ]
  },
  {
    "intent": [
      "request",
      "url",
      "str_0",
      "without",
      "verifying",
      "ssl",
      "certificates"
    ],
    "code": [
      "requests",
      ".",
      "get",
      "(",
      "'str_0'",
      ",",
      "verify",
      "=",
      "False",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "https://www.reporo.com/",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      101,
      102,
      5,
      103,
      465,
      465,
      465
    ],
    "code_indx_copy": [
      85,
      22,
      86,
      1,
      29,
      8,
      524,
      19,
      87,
      17
    ],
    "code_indx_nocopy": [
      85,
      22,
      86,
      1,
      29,
      8,
      524,
      19,
      87,
      17
    ]
  },
  {
    "intent": [
      "extract",
      "values",
      "not",
      "equal",
      "to",
      "0",
      "from",
      "numpy",
      "array",
      "var_0"
    ],
    "code": [
      "var_0",
      "[",
      "var_0",
      "!=",
      "0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      104,
      20,
      105,
      106,
      8,
      107,
      58,
      84,
      85,
      26
    ],
    "code_indx_copy": [
      34,
      12,
      34,
      88,
      43,
      16
    ],
    "code_indx_nocopy": [
      34,
      12,
      34,
      88,
      43,
      16
    ]
  },
  {
    "intent": [
      "map",
      "two",
      "lists",
      "var_0",
      "and",
      "var_1",
      "into",
      "a",
      "dictionary"
    ],
    "code": [
      "new_dict",
      "=",
      "{",
      "k",
      ":",
      "v",
      "for",
      "k",
      ",",
      "v",
      "in",
      "zip",
      "(",
      "var_0",
      ",",
      "var_1",
      ")",
      "}"
    ],
    "slot_map": {
      "var_0": {
        "value": "keys",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "values",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      29,
      30,
      26,
      31,
      63,
      12,
      3,
      25
    ],
    "code_indx_copy": [
      524,
      19,
      52,
      89,
      13,
      90,
      7,
      89,
      8,
      90,
      9,
      36,
      1,
      34,
      8,
      91,
      17,
      53
    ],
    "code_indx_nocopy": [
      524,
      19,
      52,
      89,
      13,
      90,
      7,
      89,
      8,
      90,
      9,
      36,
      1,
      34,
      8,
      91,
      17,
      53
    ]
  },
  {
    "intent": [
      "map",
      "two",
      "lists",
      "var_0",
      "and",
      "var_1",
      "into",
      "a",
      "dictionary"
    ],
    "code": [
      "dict",
      "(",
      "(",
      "k",
      ",",
      "v",
      ")",
      "for",
      "k",
      ",",
      "v",
      "in",
      "zip",
      "(",
      "var_0",
      ",",
      "var_1",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "keys",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "values",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      29,
      30,
      26,
      31,
      63,
      12,
      3,
      25
    ],
    "code_indx_copy": [
      70,
      1,
      1,
      89,
      8,
      90,
      17,
      7,
      89,
      8,
      90,
      9,
      36,
      1,
      34,
      8,
      91,
      17,
      17
    ],
    "code_indx_nocopy": [
      70,
      1,
      1,
      89,
      8,
      90,
      17,
      7,
      89,
      8,
      90,
      9,
      36,
      1,
      34,
      8,
      91,
      17,
      17
    ]
  },
  {
    "intent": [
      "map",
      "two",
      "lists",
      "var_0",
      "and",
      "var_1",
      "into",
      "a",
      "dictionary"
    ],
    "code": [
      "dict",
      "(",
      "[",
      "(",
      "k",
      ",",
      "v",
      ")",
      "for",
      "k",
      ",",
      "v",
      "in",
      "zip",
      "(",
      "var_0",
      ",",
      "var_1",
      ")",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "keys",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "values",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      29,
      30,
      26,
      31,
      63,
      12,
      3,
      25
    ],
    "code_indx_copy": [
      70,
      1,
      12,
      1,
      89,
      8,
      90,
      17,
      7,
      89,
      8,
      90,
      9,
      36,
      1,
      34,
      8,
      91,
      17,
      16,
      17
    ],
    "code_indx_nocopy": [
      70,
      1,
      12,
      1,
      89,
      8,
      90,
      17,
      7,
      89,
      8,
      90,
      9,
      36,
      1,
      34,
      8,
      91,
      17,
      16,
      17
    ]
  },
  {
    "intent": [
      "find",
      "the",
      "string",
      "matches",
      "within",
      "parenthesis",
      "from",
      "a",
      "string",
      "var_0",
      "using",
      "regex"
    ],
    "code": [
      "m",
      "=",
      "re",
      ".",
      "search",
      "(",
      "'\\\\[(\\\\w+)\\\\]'",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      47,
      18,
      14,
      108,
      55,
      465,
      58,
      3,
      14,
      26,
      109,
      40
    ],
    "code_indx_copy": [
      92,
      19,
      39,
      22,
      93,
      1,
      524,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      92,
      19,
      39,
      22,
      93,
      1,
      524,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "enable",
      "the",
      "so_reuseaddr",
      "socket",
      "option",
      "in",
      "socket",
      "object",
      "var_0",
      "to",
      "fix",
      "the",
      "error",
      "str_0"
    ],
    "code": [
      "var_0",
      ".",
      "setsockopt",
      "(",
      "SOL_SOCKET",
      ",",
      "SO_REUSEADDR",
      ",",
      "1",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "only one usage of each socket address is normally permitted",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      18,
      465,
      465,
      465,
      24,
      465,
      15,
      26,
      8,
      465,
      18,
      110,
      5
    ],
    "code_indx_copy": [
      34,
      22,
      524,
      1,
      524,
      8,
      524,
      8,
      15,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      524,
      1,
      524,
      8,
      524,
      8,
      15,
      17
    ]
  },
  {
    "intent": [
      "append",
      "the",
      "sum",
      "of",
      "each",
      "tuple",
      "pair",
      "in",
      "the",
      "grouped",
      "list",
      "var_0",
      "and",
      "list",
      "var_1",
      "elements",
      "to",
      "list",
      "var_2"
    ],
    "code": [
      "var_2",
      "=",
      "[",
      "(",
      "a",
      "+",
      "b",
      ")",
      "for",
      "a",
      ",",
      "b",
      "in",
      "zip",
      "(",
      "var_0",
      ",",
      "var_1",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "list1",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "list2",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "list3",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      111,
      18,
      112,
      2,
      22,
      113,
      89,
      24,
      18,
      114,
      4,
      26,
      31,
      4,
      63,
      1,
      8,
      4,
      64
    ],
    "code_indx_copy": [
      94,
      19,
      12,
      1,
      95,
      96,
      97,
      17,
      7,
      95,
      8,
      97,
      9,
      36,
      1,
      34,
      8,
      91,
      17,
      16
    ],
    "code_indx_nocopy": [
      94,
      19,
      12,
      1,
      95,
      96,
      97,
      17,
      7,
      95,
      8,
      97,
      9,
      36,
      1,
      34,
      8,
      91,
      17,
      16
    ]
  },
  {
    "intent": [
      "converting",
      "hex",
      "string",
      "var_0",
      "to",
      "its",
      "integer",
      "representations"
    ],
    "code": [
      "[",
      "ord",
      "(",
      "c",
      ")",
      "for",
      "c",
      "in",
      "var_0",
      ".",
      "decode",
      "(",
      "'hex'",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      115,
      116,
      14,
      26,
      8,
      91,
      10,
      465
    ],
    "code_indx_copy": [
      12,
      98,
      1,
      66,
      17,
      7,
      66,
      9,
      34,
      22,
      99,
      1,
      100,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      98,
      1,
      66,
      17,
      7,
      66,
      9,
      34,
      22,
      99,
      1,
      100,
      17,
      16
    ]
  },
  {
    "intent": [
      "sort",
      "list",
      "var_0",
      "by",
      "second",
      "element",
      "of",
      "each",
      "tuple",
      "in",
      "ascending",
      "and",
      "third",
      "element",
      "of",
      "each",
      "tuple",
      "in",
      "descending"
    ],
    "code": [
      "print",
      "(",
      "sorted",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "lambda",
      "t",
      ":",
      "(",
      "-",
      "t",
      "[",
      "2",
      "]",
      ",",
      "t",
      "[",
      "0",
      "]",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "student_tuples",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      4,
      26,
      44,
      118,
      49,
      2,
      22,
      113,
      24,
      119,
      31,
      120,
      49,
      2,
      22,
      113,
      24,
      121
    ],
    "code_indx_copy": [
      49,
      1,
      101,
      1,
      34,
      8,
      102,
      19,
      44,
      45,
      13,
      1,
      14,
      45,
      12,
      82,
      16,
      8,
      45,
      12,
      43,
      16,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      101,
      1,
      34,
      8,
      102,
      19,
      44,
      45,
      13,
      1,
      14,
      45,
      12,
      82,
      16,
      8,
      45,
      12,
      43,
      16,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "list",
      "of",
      "duplicated",
      "elements",
      "in",
      "range",
      "of",
      "3"
    ],
    "code": [
      "[",
      "y",
      "for",
      "x",
      "in",
      "range",
      "(",
      "3",
      ")",
      "for",
      "y",
      "in",
      "[",
      "x",
      ",",
      "x",
      "]",
      "]"
    ],
    "slot_map": {},
    "intent_indx": [
      17,
      4,
      2,
      122,
      1,
      24,
      123,
      2,
      57
    ],
    "code_indx_copy": [
      12,
      103,
      7,
      26,
      9,
      104,
      1,
      54,
      17,
      7,
      103,
      9,
      12,
      26,
      8,
      26,
      16,
      16
    ],
    "code_indx_nocopy": [
      12,
      103,
      7,
      26,
      9,
      104,
      1,
      54,
      17,
      7,
      103,
      9,
      12,
      26,
      8,
      26,
      16,
      16
    ]
  },
  {
    "intent": [
      "read",
      "the",
      "contents",
      "of",
      "the",
      "file",
      "str_0",
      "into",
      "var_0"
    ],
    "code": [
      "var_0",
      "=",
      "open",
      "(",
      "'str_0'",
      ")",
      ".",
      "read",
      "(",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "file.txt",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "txt",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      124,
      18,
      125,
      2,
      18,
      126,
      5,
      12,
      26
    ],
    "code_indx_copy": [
      34,
      19,
      105,
      1,
      29,
      17,
      22,
      106,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      105,
      1,
      29,
      17,
      22,
      106,
      1,
      17
    ]
  },
  {
    "intent": [
      "divide",
      "each",
      "element",
      "in",
      "list",
      "var_0",
      "by",
      "integer",
      "var_1"
    ],
    "code": [
      "var_0",
      "[",
      ":",
      "]",
      "=",
      "[",
      "(",
      "x",
      "/",
      "var_1",
      ")",
      "for",
      "x",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "myList",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "myInt",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      127,
      22,
      49,
      24,
      4,
      26,
      44,
      10,
      63
    ],
    "code_indx_copy": [
      34,
      12,
      13,
      16,
      19,
      12,
      1,
      26,
      31,
      91,
      17,
      7,
      26,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      34,
      12,
      13,
      16,
      19,
      12,
      1,
      26,
      31,
      91,
      17,
      7,
      26,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "python",
      ":",
      "dots",
      "in",
      "the",
      "name",
      "of",
      "variable",
      "in",
      "a",
      "format",
      "string"
    ],
    "code": [
      "\"\"\"Name: {0[person.name]}\"\"\"",
      ".",
      "format",
      "(",
      "{",
      "'person.name'",
      ":",
      "'Joe'",
      "}",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      50,
      128,
      465,
      24,
      18,
      129,
      2,
      95,
      24,
      3,
      16,
      14
    ],
    "code_indx_copy": [
      524,
      22,
      38,
      1,
      52,
      524,
      13,
      524,
      53,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      38,
      1,
      52,
      524,
      13,
      524,
      53,
      17
    ]
  },
  {
    "intent": [
      "replace",
      "white",
      "spaces",
      "in",
      "dataframe",
      "var_0",
      "with",
      "str_0"
    ],
    "code": [
      "var_0",
      ".",
      "replace",
      "(",
      "' '",
      ",",
      "'str_0'",
      ",",
      "regex",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "_",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      130,
      131,
      132,
      24,
      43,
      26,
      79,
      5
    ],
    "code_indx_copy": [
      34,
      22,
      107,
      1,
      108,
      8,
      29,
      8,
      524,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      107,
      1,
      108,
      8,
      29,
      8,
      524,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "date",
      "var_0",
      "to",
      "datetime"
    ],
    "code": [
      "datetime",
      ".",
      "datetime",
      ".",
      "combine",
      "(",
      "var_0",
      ",",
      "datetime",
      ".",
      "time",
      ".",
      "min",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "my_date",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      133,
      26,
      8,
      13
    ],
    "code_indx_copy": [
      27,
      22,
      27,
      22,
      110,
      1,
      34,
      8,
      27,
      22,
      84,
      22,
      111,
      17
    ],
    "code_indx_nocopy": [
      27,
      22,
      27,
      22,
      110,
      1,
      34,
      8,
      27,
      22,
      84,
      22,
      111,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "tuple",
      "var_0",
      "to",
      "string",
      "var_1"
    ],
    "code": [
      "var_1",
      "=",
      "str",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "tst",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "tst2",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      113,
      26,
      8,
      14,
      63
    ],
    "code_indx_copy": [
      91,
      19,
      25,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      91,
      19,
      25,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "get",
      "modified",
      "time",
      "of",
      "file",
      "var_0"
    ],
    "code": [
      "time",
      ".",
      "ctime",
      "(",
      "os",
      ".",
      "path",
      ".",
      "getmtime",
      "(",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "file",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      465,
      134,
      2,
      126,
      26
    ],
    "code_indx_copy": [
      84,
      22,
      112,
      1,
      113,
      22,
      114,
      22,
      115,
      1,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      84,
      22,
      112,
      1,
      113,
      22,
      114,
      22,
      115,
      1,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "creation",
      "time",
      "of",
      "file",
      "var_0"
    ],
    "code": [
      "time",
      ".",
      "ctime",
      "(",
      "os",
      ".",
      "path",
      ".",
      "getctime",
      "(",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "file",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      465,
      134,
      2,
      126,
      26
    ],
    "code_indx_copy": [
      84,
      22,
      112,
      1,
      113,
      22,
      114,
      22,
      116,
      1,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      84,
      22,
      112,
      1,
      113,
      22,
      114,
      22,
      116,
      1,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "modification",
      "time",
      "of",
      "file",
      "var_0"
    ],
    "code": [
      "t",
      "=",
      "os",
      ".",
      "path",
      ".",
      "getmtime",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "filename",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      465,
      134,
      2,
      126,
      26
    ],
    "code_indx_copy": [
      45,
      19,
      113,
      22,
      114,
      22,
      115,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      45,
      19,
      113,
      22,
      114,
      22,
      115,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "get",
      "modification",
      "time",
      "of",
      "file",
      "var_0"
    ],
    "code": [
      "os",
      ".",
      "var_0",
      ".",
      "getmtime",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "path",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      465,
      134,
      2,
      126,
      26
    ],
    "code_indx_copy": [
      113,
      22,
      34,
      22,
      115,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      34,
      22,
      115,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "get",
      "modified",
      "time",
      "of",
      "file",
      "var_0"
    ],
    "code": [
      "print",
      "(",
      "'last modified: %s'",
      "%",
      "time",
      ".",
      "ctime",
      "(",
      "os",
      ".",
      "path",
      ".",
      "getmtime",
      "(",
      "var_0",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "file",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      465,
      134,
      2,
      126,
      26
    ],
    "code_indx_copy": [
      49,
      1,
      524,
      117,
      84,
      22,
      112,
      1,
      113,
      22,
      114,
      22,
      115,
      1,
      34,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      524,
      117,
      84,
      22,
      112,
      1,
      113,
      22,
      114,
      22,
      115,
      1,
      34,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "creation",
      "time",
      "of",
      "file",
      "var_0"
    ],
    "code": [
      "print",
      "(",
      "'created: %s'",
      "%",
      "time",
      ".",
      "ctime",
      "(",
      "os",
      ".",
      "path",
      ".",
      "getctime",
      "(",
      "var_0",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "file",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      18,
      465,
      134,
      2,
      126,
      26
    ],
    "code_indx_copy": [
      49,
      1,
      524,
      117,
      84,
      22,
      112,
      1,
      113,
      22,
      114,
      22,
      116,
      1,
      34,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      524,
      117,
      84,
      22,
      112,
      1,
      113,
      22,
      114,
      22,
      116,
      1,
      34,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "creation",
      "time",
      "of",
      "file",
      "var_0"
    ],
    "code": [
      "return",
      "os",
      ".",
      "path",
      ".",
      "getctime",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "path_to_file",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      18,
      465,
      134,
      2,
      126,
      26
    ],
    "code_indx_copy": [
      118,
      113,
      22,
      114,
      22,
      116,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      118,
      113,
      22,
      114,
      22,
      116,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "execute",
      "os",
      "command",
      "str_0"
    ],
    "code": [
      "os",
      ".",
      "system",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "TASKKILL /F /IM firefox.exe",
        "quote": "''",
        "type": "str"
      }
    },
    "intent_indx": [
      135,
      136,
      137,
      5
    ],
    "code_indx_copy": [
      113,
      22,
      119,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      119,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "split",
      "string",
      "var_0",
      "on",
      "whitespaces",
      "using",
      "a",
      "generator"
    ],
    "code": [
      "return",
      "(",
      "x",
      ".",
      "group",
      "(",
      "0",
      ")",
      "for",
      "x",
      "in",
      "re",
      ".",
      "finditer",
      "(",
      "\"[A-Za-z']+\"",
      ",",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "string",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      138,
      14,
      26,
      139,
      140,
      109,
      3,
      141
    ],
    "code_indx_copy": [
      118,
      1,
      26,
      22,
      120,
      1,
      43,
      17,
      7,
      26,
      9,
      39,
      22,
      121,
      1,
      524,
      8,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      118,
      1,
      26,
      22,
      120,
      1,
      43,
      17,
      7,
      26,
      9,
      39,
      22,
      121,
      1,
      524,
      8,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "unpack",
      "each",
      "value",
      "in",
      "list",
      "var_0",
      "to",
      "its",
      "placeholder",
      "str_0",
      "in",
      "string",
      "str_1"
    ],
    "code": [
      "\"\"\", \"\"\"",
      ".",
      "join",
      "(",
      "[",
      "'str_1'",
      "]",
      "*",
      "len",
      "(",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "x",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "%",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "%.2f",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      142,
      22,
      143,
      24,
      4,
      26,
      8,
      91,
      465,
      5,
      24,
      14,
      32
    ],
    "code_indx_copy": [
      122,
      22,
      23,
      1,
      12,
      63,
      16,
      3,
      32,
      1,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      122,
      22,
      23,
      1,
      12,
      63,
      16,
      3,
      32,
      1,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "match",
      "regex",
      "pattern",
      "str_0",
      "with",
      "string",
      "str_1"
    ],
    "code": [
      "print",
      "(",
      "re",
      ".",
      "match",
      "(",
      "'str_0'",
      ",",
      "'str_1'",
      ")",
      ".",
      "group",
      "(",
      "1",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "(\\d+(\\.\\d+)?)",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "3434.35353",
        "quote": "'",
        "type": "str"
      },
      "(str_0)": {
        "value": "(\\d+(\\.\\d+)?)",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      144,
      40,
      54,
      5,
      79,
      14,
      32
    ],
    "code_indx_copy": [
      49,
      1,
      39,
      22,
      123,
      1,
      29,
      8,
      63,
      17,
      22,
      120,
      1,
      15,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      39,
      22,
      123,
      1,
      29,
      8,
      63,
      17,
      22,
      120,
      1,
      15,
      17,
      17
    ]
  },
  {
    "intent": [
      "replace",
      "parentheses",
      "and",
      "all",
      "data",
      "within",
      "it",
      "with",
      "empty",
      "string",
      "str_0",
      "in",
      "column",
      "str_1",
      "of",
      "dataframe",
      "var_0"
    ],
    "code": [
      "var_0",
      "[",
      "'str_1'",
      "]",
      ".",
      "str",
      ".",
      "replace",
      "(",
      "'\\\\(.*\\\\)'",
      ",",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "name",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      130,
      465,
      31,
      38,
      65,
      55,
      145,
      79,
      146,
      14,
      5,
      24,
      147,
      32,
      2,
      43,
      26
    ],
    "code_indx_copy": [
      34,
      12,
      63,
      16,
      22,
      25,
      22,
      107,
      1,
      524,
      8,
      29,
      17
    ],
    "code_indx_nocopy": [
      34,
      12,
      63,
      16,
      22,
      25,
      22,
      107,
      1,
      524,
      8,
      29,
      17
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "list",
      "var_0",
      "containing",
      "elements",
      "form",
      "list",
      "var_1",
      "if",
      "first",
      "element",
      "of",
      "list",
      "var_1",
      "is",
      "in",
      "list",
      "var_3"
    ],
    "code": [
      "var_0",
      "=",
      "[",
      "x",
      "for",
      "x",
      "in",
      "var_2",
      "if",
      "x",
      "[",
      "0",
      "]",
      "in",
      "var_3",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "result",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "list_a",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "list_a",
        "quote": "`",
        "type": "var"
      },
      "var_3": {
        "value": "list_b",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      148,
      3,
      4,
      26,
      34,
      1,
      149,
      4,
      63,
      150,
      151,
      49,
      2,
      4,
      63,
      152,
      24,
      4,
      67
    ],
    "code_indx_copy": [
      34,
      19,
      12,
      26,
      7,
      26,
      9,
      94,
      67,
      26,
      12,
      43,
      16,
      9,
      55,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      12,
      26,
      7,
      26,
      9,
      94,
      67,
      26,
      12,
      43,
      16,
      9,
      55,
      16
    ]
  },
  {
    "intent": [
      "generate",
      "all",
      "possible",
      "string",
      "permutations",
      "of",
      "each",
      "two",
      "elements",
      "in",
      "list",
      "str_0"
    ],
    "code": [
      "print",
      "(",
      "[",
      "''",
      ".",
      "join",
      "(",
      "a",
      ")",
      "for",
      "a",
      "in",
      "combinations",
      "(",
      "[",
      "str_0",
      "]",
      ",",
      "2",
      ")",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "['hel', 'lo', 'bye']",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "['hel', 'lo', 'bye']",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      56,
      38,
      465,
      14,
      153,
      2,
      22,
      29,
      1,
      24,
      4,
      5
    ],
    "code_indx_copy": [
      49,
      1,
      12,
      21,
      22,
      23,
      1,
      95,
      17,
      7,
      95,
      9,
      51,
      1,
      12,
      11,
      16,
      8,
      82,
      17,
      16,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      12,
      21,
      22,
      23,
      1,
      95,
      17,
      7,
      95,
      9,
      51,
      1,
      12,
      11,
      16,
      8,
      82,
      17,
      16,
      17
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "list",
      "of",
      "items",
      "form",
      "nested",
      "list",
      "var_0",
      "where",
      "third",
      "element",
      "of",
      "each",
      "item",
      "contains",
      "string",
      "str_0"
    ],
    "code": [
      "[",
      "x",
      "for",
      "x",
      "in",
      "var_0",
      "if",
      "'str_0'",
      "in",
      "x",
      "[",
      "2",
      "]",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "li",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "ar",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      3,
      4,
      2,
      39,
      149,
      154,
      4,
      26,
      155,
      120,
      49,
      2,
      22,
      156,
      75,
      14,
      5
    ],
    "code_indx_copy": [
      12,
      26,
      7,
      26,
      9,
      34,
      67,
      29,
      9,
      26,
      12,
      82,
      16,
      16
    ],
    "code_indx_nocopy": [
      12,
      26,
      7,
      26,
      9,
      34,
      67,
      29,
      9,
      26,
      12,
      82,
      16,
      16
    ]
  },
  {
    "intent": [
      "sort",
      "lists",
      "in",
      "the",
      "list",
      "var_0",
      "by",
      "the",
      "element",
      "at",
      "index",
      "3",
      "of",
      "each",
      "list"
    ],
    "code": [
      "var_0",
      ".",
      "sort",
      "(",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "x",
      "[",
      "3",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "unsorted_list",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      30,
      24,
      18,
      4,
      26,
      44,
      18,
      49,
      35,
      37,
      57,
      2,
      22,
      4
    ],
    "code_indx_copy": [
      34,
      22,
      124,
      1,
      102,
      19,
      44,
      26,
      13,
      26,
      12,
      54,
      16,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      124,
      1,
      102,
      19,
      44,
      26,
      13,
      26,
      12,
      54,
      16,
      17
    ]
  },
  {
    "intent": [
      "log",
      "message",
      "str_0",
      "on",
      "the",
      "root",
      "logger",
      "."
    ],
    "code": [
      "logging",
      ".",
      "info",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "test",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      157,
      5,
      139,
      18,
      158,
      465,
      159
    ],
    "code_indx_copy": [
      125,
      22,
      126,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      125,
      22,
      126,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "return",
      "a",
      "subplot",
      "axes",
      "positioned",
      "by",
      "the",
      "grid",
      "definition",
      "str_0",
      "using",
      "matpotlib"
    ],
    "code": [
      "fig",
      ".",
      "add_subplot",
      "(",
      "1",
      ",",
      "1",
      ",",
      "1",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "1,1,1",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      160,
      3,
      465,
      161,
      465,
      44,
      18,
      465,
      465,
      5,
      109,
      465
    ],
    "code_indx_copy": [
      524,
      22,
      524,
      1,
      15,
      8,
      15,
      8,
      15,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      524,
      1,
      15,
      8,
      15,
      8,
      15,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "dictionary",
      "var_0",
      "by",
      "value",
      "in",
      "ascending",
      "order"
    ],
    "code": [
      "sorted",
      "(",
      "list",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      ",",
      "key",
      "=",
      "operator",
      ".",
      "itemgetter",
      "(",
      "1",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "x",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      25,
      26,
      44,
      143,
      24,
      119,
      162
    ],
    "code_indx_copy": [
      101,
      1,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      8,
      102,
      19,
      127,
      22,
      128,
      1,
      15,
      17,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      8,
      102,
      19,
      127,
      22,
      128,
      1,
      15,
      17,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "dictionary",
      "var_0",
      "by",
      "value",
      "in",
      "ascending",
      "order"
    ],
    "code": [
      "sorted",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "var_0",
      ".",
      "get",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "dict1",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      25,
      26,
      44,
      143,
      24,
      119,
      162
    ],
    "code_indx_copy": [
      101,
      1,
      34,
      8,
      102,
      19,
      34,
      22,
      86,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      34,
      8,
      102,
      19,
      34,
      22,
      86,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "dictionary",
      "var_0",
      "by",
      "value",
      "in",
      "descending",
      "order"
    ],
    "code": [
      "sorted",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "var_0",
      ".",
      "get",
      ",",
      "reverse",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "d",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      25,
      26,
      44,
      143,
      24,
      121,
      162
    ],
    "code_indx_copy": [
      101,
      1,
      34,
      8,
      102,
      19,
      34,
      22,
      86,
      8,
      129,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      34,
      8,
      102,
      19,
      34,
      22,
      86,
      8,
      129,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "dictionary",
      "var_0",
      "by",
      "value",
      "in",
      "ascending",
      "order"
    ],
    "code": [
      "sorted",
      "(",
      "list",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      ",",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "x",
      "[",
      "1",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "d",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      25,
      26,
      44,
      143,
      24,
      119,
      162
    ],
    "code_indx_copy": [
      101,
      1,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      8,
      102,
      19,
      44,
      26,
      13,
      26,
      12,
      15,
      16,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      8,
      102,
      19,
      44,
      26,
      13,
      26,
      12,
      15,
      16,
      17
    ]
  },
  {
    "intent": [
      "elementwise",
      "product",
      "of",
      "3d",
      "arrays",
      "var_0",
      "and",
      "var_1"
    ],
    "code": [
      "np",
      ".",
      "einsum",
      "(",
      "'ijk,ikl->ijl'",
      ",",
      "var_0",
      ",",
      "var_1",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "A",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "B",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      163,
      2,
      164,
      165,
      26,
      31,
      63
    ],
    "code_indx_copy": [
      74,
      22,
      130,
      1,
      524,
      8,
      34,
      8,
      91,
      17
    ],
    "code_indx_nocopy": [
      74,
      22,
      130,
      1,
      524,
      8,
      34,
      8,
      91,
      17
    ]
  },
  {
    "intent": [
      "print",
      "a",
      "string",
      "var_0",
      "with",
      "string",
      "formatting"
    ],
    "code": [
      "print",
      "(",
      "'I have: {0.price}'",
      ".",
      "format",
      "(",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "card",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      166,
      3,
      14,
      26,
      79,
      14,
      167
    ],
    "code_indx_copy": [
      49,
      1,
      524,
      22,
      38,
      1,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      524,
      22,
      38,
      1,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "write",
      "a",
      "comment",
      "str_0",
      "to",
      "a",
      "file",
      "object",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "write",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "# Data for Class A\n",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "f",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      168,
      3,
      465,
      5,
      8,
      3,
      126,
      15,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      131,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      131,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "move",
      "the",
      "last",
      "item",
      "in",
      "list",
      "var_0",
      "to",
      "the",
      "beginning"
    ],
    "code": [
      "var_0",
      "=",
      "var_0",
      "[",
      "-",
      "1",
      ":",
      "]",
      "+",
      "var_0",
      "[",
      ":",
      "-",
      "1",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      169,
      18,
      170,
      156,
      24,
      4,
      26,
      8,
      18,
      171
    ],
    "code_indx_copy": [
      34,
      19,
      34,
      12,
      14,
      15,
      13,
      16,
      96,
      34,
      12,
      13,
      14,
      15,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      34,
      12,
      14,
      15,
      13,
      16,
      96,
      34,
      12,
      13,
      14,
      15,
      16
    ]
  },
  {
    "intent": [
      "parse",
      "datetime",
      "object",
      "var_0",
      "using",
      "format",
      "str_0"
    ],
    "code": [
      "var_0",
      ".",
      "strftime",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "datetimevariable",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "%Y-%m-%d",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      73,
      13,
      15,
      26,
      109,
      16,
      5
    ],
    "code_indx_copy": [
      34,
      22,
      65,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      65,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "normalize",
      "line",
      "ends",
      "in",
      "a",
      "string",
      "str_0"
    ],
    "code": [
      "str_0",
      ".",
      "replace",
      "(",
      "'\\r\\n'",
      ",",
      "'\\n'",
      ")",
      ".",
      "replace",
      "(",
      "'\\r'",
      ",",
      "'\\n'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "mixed",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      172,
      173,
      24,
      3,
      14,
      5
    ],
    "code_indx_copy": [
      11,
      22,
      107,
      1,
      132,
      8,
      133,
      17,
      22,
      107,
      1,
      524,
      8,
      133,
      17
    ],
    "code_indx_nocopy": [
      11,
      22,
      107,
      1,
      132,
      8,
      133,
      17,
      22,
      107,
      1,
      524,
      8,
      133,
      17
    ]
  },
  {
    "intent": [
      "find",
      "the",
      "real",
      "user",
      "home",
      "directory",
      "using",
      "python"
    ],
    "code": [
      "os",
      ".",
      "path",
      ".",
      "expanduser",
      "(",
      "'~user'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      47,
      18,
      465,
      174,
      465,
      175,
      109,
      50
    ],
    "code_indx_copy": [
      113,
      22,
      114,
      22,
      524,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      114,
      22,
      524,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "index",
      "a",
      "list",
      "var_0",
      "with",
      "another",
      "list",
      "var_1"
    ],
    "code": [
      "T",
      "=",
      "[",
      "var_0",
      "[",
      "i",
      "]",
      "for",
      "i",
      "in",
      "var_1",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "L",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "Idx",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      37,
      3,
      4,
      26,
      79,
      176,
      4,
      63
    ],
    "code_indx_copy": [
      134,
      19,
      12,
      34,
      12,
      6,
      16,
      7,
      6,
      9,
      91,
      16
    ],
    "code_indx_nocopy": [
      134,
      19,
      12,
      34,
      12,
      6,
      16,
      7,
      6,
      9,
      91,
      16
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "list",
      "of",
      "words",
      "var_0",
      "of",
      "a",
      "file",
      "str_0"
    ],
    "code": [
      "var_0",
      "=",
      "open",
      "(",
      "'str_0'",
      ")",
      ".",
      "read",
      "(",
      ")",
      ".",
      "split",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "words",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "myfile",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      3,
      4,
      2,
      41,
      26,
      2,
      3,
      126,
      5
    ],
    "code_indx_copy": [
      34,
      19,
      105,
      1,
      29,
      17,
      22,
      106,
      1,
      17,
      22,
      71,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      105,
      1,
      29,
      17,
      22,
      106,
      1,
      17,
      22,
      71,
      1,
      17
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "list",
      "of",
      "lists",
      "with",
      "summing",
      "the",
      "values",
      "of",
      "the",
      "second",
      "element",
      "from",
      "each",
      "list",
      "of",
      "lists",
      "var_0"
    ],
    "code": [
      "[",
      "[",
      "sum",
      "(",
      "[",
      "x",
      "[",
      "1",
      "]",
      "for",
      "x",
      "in",
      "i",
      "]",
      ")",
      "]",
      "for",
      "i",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "data",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      3,
      4,
      2,
      30,
      79,
      177,
      18,
      20,
      2,
      18,
      118,
      49,
      58,
      22,
      4,
      2,
      30,
      26
    ],
    "code_indx_copy": [
      12,
      12,
      0,
      1,
      12,
      26,
      12,
      15,
      16,
      7,
      26,
      9,
      6,
      16,
      17,
      16,
      7,
      6,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      12,
      12,
      0,
      1,
      12,
      26,
      12,
      15,
      16,
      7,
      26,
      9,
      6,
      16,
      17,
      16,
      7,
      6,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "summing",
      "the",
      "second",
      "item",
      "in",
      "a",
      "list",
      "of",
      "lists",
      "of",
      "lists"
    ],
    "code": [
      "[",
      "sum",
      "(",
      "[",
      "x",
      "[",
      "1",
      "]",
      "for",
      "x",
      "in",
      "i",
      "]",
      ")",
      "for",
      "i",
      "in",
      "data",
      "]"
    ],
    "slot_map": {},
    "intent_indx": [
      177,
      18,
      118,
      156,
      24,
      3,
      4,
      2,
      30,
      2,
      30
    ],
    "code_indx_copy": [
      12,
      0,
      1,
      12,
      26,
      12,
      15,
      16,
      7,
      26,
      9,
      6,
      16,
      17,
      7,
      6,
      9,
      135,
      16
    ],
    "code_indx_nocopy": [
      12,
      0,
      1,
      12,
      26,
      12,
      15,
      16,
      7,
      26,
      9,
      6,
      16,
      17,
      7,
      6,
      9,
      135,
      16
    ]
  },
  {
    "intent": [
      "sort",
      "objects",
      "in",
      "var_0",
      "in",
      "descending",
      "order",
      "of",
      "counts",
      "of",
      "var_1"
    ],
    "code": [
      "Article",
      ".",
      "objects",
      ".",
      "annotate",
      "(",
      "like_count",
      "=",
      "Count",
      "(",
      "'var_1'",
      ")",
      ")",
      ".",
      "order_by",
      "(",
      "'-like_count'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "Articles",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "likes",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      178,
      24,
      26,
      24,
      121,
      162,
      2,
      465,
      2,
      63
    ],
    "code_indx_copy": [
      524,
      22,
      78,
      22,
      524,
      1,
      524,
      19,
      524,
      1,
      57,
      17,
      17,
      22,
      136,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      78,
      22,
      524,
      1,
      524,
      19,
      524,
      1,
      57,
      17,
      17,
      22,
      136,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "return",
      "a",
      "datetime",
      "object",
      "with",
      "the",
      "current",
      "utc",
      "date"
    ],
    "code": [
      "today",
      "=",
      "datetime",
      ".",
      "datetime",
      ".",
      "utcnow",
      "(",
      ")",
      ".",
      "date",
      "(",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      160,
      3,
      13,
      15,
      79,
      18,
      179,
      180,
      133
    ],
    "code_indx_copy": [
      137,
      19,
      27,
      22,
      27,
      22,
      138,
      1,
      17,
      22,
      139,
      1,
      17
    ],
    "code_indx_nocopy": [
      137,
      19,
      27,
      22,
      27,
      22,
      138,
      1,
      17,
      22,
      139,
      1,
      17
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "list",
      "containing",
      "the",
      "multiplication",
      "of",
      "each",
      "elements",
      "at",
      "the",
      "same",
      "index",
      "of",
      "list",
      "var_0",
      "and",
      "list",
      "var_1"
    ],
    "code": [
      "[",
      "(",
      "a",
      "*",
      "b",
      ")",
      "for",
      "a",
      ",",
      "b",
      "in",
      "zip",
      "(",
      "var_0",
      ",",
      "var_1",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "lista",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "listb",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      148,
      3,
      4,
      34,
      18,
      465,
      2,
      22,
      1,
      35,
      18,
      36,
      37,
      2,
      4,
      26,
      31,
      4,
      63
    ],
    "code_indx_copy": [
      12,
      1,
      95,
      3,
      97,
      17,
      7,
      95,
      8,
      97,
      9,
      36,
      1,
      34,
      8,
      91,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      1,
      95,
      3,
      97,
      17,
      7,
      95,
      8,
      97,
      9,
      36,
      1,
      34,
      8,
      91,
      17,
      16
    ]
  },
  {
    "intent": [
      "fetch",
      "smilies",
      "matching",
      "regex",
      "pattern",
      "str_0",
      "in",
      "string",
      "var_0"
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'str_0'",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "(?::|;|=)(?:-)?(?:\\)|\\(|D|P)",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      },
      "(str_0)": {
        "value": "(?::|;|=)(?:-)?(?:\\)|\\(|D|P)",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      465,
      81,
      40,
      54,
      5,
      24,
      14,
      26
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      29,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      29,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "match",
      "the",
      "pattern",
      "str_0",
      "to",
      "the",
      "string",
      "var_0"
    ],
    "code": [
      "re",
      ".",
      "match",
      "(",
      "'str_0'",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "[:;][)(](?![)(])",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "str",
        "quote": "`",
        "type": "var"
      },
      "[str_0)": {
        "value": "[:;][)(](?![)(])",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      144,
      18,
      54,
      5,
      8,
      18,
      14,
      26
    ],
    "code_indx_copy": [
      39,
      22,
      123,
      1,
      29,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      123,
      1,
      29,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "list",
      "of",
      "objects",
      "var_0",
      "to",
      "json",
      "string",
      "var_1"
    ],
    "code": [
      "var_1",
      "=",
      "json",
      ".",
      "dumps",
      "(",
      "[",
      "ob",
      ".",
      "__dict__",
      "for",
      "ob",
      "in",
      "var_0",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "list_name",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "json_string",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      3,
      4,
      2,
      178,
      26,
      8,
      181,
      14,
      63
    ],
    "code_indx_copy": [
      91,
      19,
      140,
      22,
      141,
      1,
      12,
      524,
      22,
      142,
      7,
      524,
      9,
      34,
      16,
      17
    ],
    "code_indx_nocopy": [
      91,
      19,
      140,
      22,
      141,
      1,
      12,
      524,
      22,
      142,
      7,
      524,
      9,
      34,
      16,
      17
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "list",
      "var_0",
      "of",
      "var_1",
      "zeros"
    ],
    "code": [
      "var_0",
      "=",
      "[",
      "0",
      "]",
      "*",
      "var_1"
    ],
    "slot_map": {
      "var_0": {
        "value": "listofzeros",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "n",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      148,
      3,
      4,
      26,
      2,
      63,
      465
    ],
    "code_indx_copy": [
      34,
      19,
      12,
      43,
      16,
      3,
      91
    ],
    "code_indx_nocopy": [
      34,
      19,
      12,
      43,
      16,
      3,
      91
    ]
  },
  {
    "intent": [
      "decode",
      "the",
      "string",
      "str_0",
      "to",
      "utf-8"
    ],
    "code": [
      "str_0",
      ".",
      "decode",
      "(",
      "'utf-8'",
      ",",
      "'ignore'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "stringnamehere",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      182,
      18,
      14,
      5,
      8,
      183
    ],
    "code_indx_copy": [
      11,
      22,
      99,
      1,
      143,
      8,
      144,
      17
    ],
    "code_indx_nocopy": [
      11,
      22,
      99,
      1,
      143,
      8,
      144,
      17
    ]
  },
  {
    "intent": [
      "match",
      "regex",
      "pattern",
      "str_0",
      "on",
      "string",
      "str_1"
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'str_0'",
      ",",
      "'str_1'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "((?:A|B|C)D)",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "BDE",
        "quote": "'",
        "type": "str"
      },
      "(str_0)": {
        "value": "((?:A|B|C)D)",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      144,
      40,
      54,
      5,
      139,
      14,
      32
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      29,
      8,
      63,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      29,
      8,
      63,
      17
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "key",
      "var_0",
      "if",
      "it",
      "does",
      "not",
      "exist",
      "in",
      "dict",
      "var_1",
      "and",
      "append",
      "element",
      "var_2",
      "to",
      "value",
      "."
    ],
    "code": [
      "var_1",
      ".",
      "setdefault",
      "(",
      "var_0",
      ",",
      "[",
      "]",
      ")",
      ".",
      "append",
      "(",
      "var_2",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "key",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "dic",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "value",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      148,
      3,
      23,
      26,
      150,
      145,
      184,
      105,
      185,
      24,
      186,
      63,
      31,
      111,
      49,
      64,
      8,
      143,
      159
    ],
    "code_indx_copy": [
      91,
      22,
      145,
      1,
      34,
      8,
      12,
      16,
      17,
      22,
      146,
      1,
      94,
      17
    ],
    "code_indx_nocopy": [
      91,
      22,
      145,
      1,
      34,
      8,
      12,
      16,
      17,
      22,
      146,
      1,
      94,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "value",
      "of",
      "the",
      "minimum",
      "element",
      "in",
      "the",
      "second",
      "column",
      "of",
      "array",
      "var_0"
    ],
    "code": [
      "var_0",
      "[",
      "np",
      ".",
      "argmin",
      "(",
      "var_0",
      "[",
      ":",
      ",",
      "(",
      "1",
      ")",
      "]",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      18,
      143,
      2,
      18,
      465,
      49,
      24,
      18,
      118,
      147,
      2,
      85,
      26
    ],
    "code_indx_copy": [
      34,
      12,
      74,
      22,
      524,
      1,
      34,
      12,
      13,
      8,
      1,
      15,
      17,
      16,
      17,
      16
    ],
    "code_indx_nocopy": [
      34,
      12,
      74,
      22,
      524,
      1,
      34,
      12,
      13,
      8,
      1,
      15,
      17,
      16,
      17,
      16
    ]
  },
  {
    "intent": [
      "extend",
      "dictionary",
      "var_0",
      "with",
      "key/value",
      "pairs",
      "of",
      "dictionary",
      "var_1"
    ],
    "code": [
      "var_0",
      ".",
      "update",
      "(",
      "var_1",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "b",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      25,
      26,
      79,
      88,
      187,
      2,
      25,
      63
    ],
    "code_indx_copy": [
      34,
      22,
      69,
      1,
      91,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      69,
      1,
      91,
      17
    ]
  },
  {
    "intent": [
      "removing",
      "key",
      "values",
      "pairs",
      "with",
      "key",
      "str_0",
      "from",
      "a",
      "list",
      "of",
      "dictionaries",
      "var_0"
    ],
    "code": [
      "[",
      "{",
      "k",
      ":",
      "v",
      "for",
      "k",
      ",",
      "v",
      "in",
      "d",
      ".",
      "items",
      "(",
      ")",
      "if",
      "k",
      "!=",
      "'str_0'",
      "}",
      "for",
      "d",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "mykey1",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "mylist",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      99,
      23,
      20,
      187,
      79,
      23,
      5,
      58,
      3,
      4,
      2,
      188,
      26
    ],
    "code_indx_copy": [
      12,
      52,
      89,
      13,
      90,
      7,
      89,
      8,
      90,
      9,
      2,
      22,
      35,
      1,
      17,
      67,
      89,
      88,
      29,
      53,
      7,
      2,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      12,
      52,
      89,
      13,
      90,
      7,
      89,
      8,
      90,
      9,
      2,
      22,
      35,
      1,
      17,
      67,
      89,
      88,
      29,
      53,
      7,
      2,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "removing",
      "key",
      "values",
      "pairs",
      "from",
      "a",
      "list",
      "of",
      "dictionaries"
    ],
    "code": [
      "[",
      "dict",
      "(",
      "(",
      "k",
      ",",
      "v",
      ")",
      "for",
      "k",
      ",",
      "v",
      "in",
      "d",
      ".",
      "items",
      "(",
      ")",
      "if",
      "k",
      "!=",
      "'mykey1'",
      ")",
      "for",
      "d",
      "in",
      "mylist",
      "]"
    ],
    "slot_map": {},
    "intent_indx": [
      99,
      23,
      20,
      187,
      58,
      3,
      4,
      2,
      188
    ],
    "code_indx_copy": [
      12,
      70,
      1,
      1,
      89,
      8,
      90,
      17,
      7,
      89,
      8,
      90,
      9,
      2,
      22,
      35,
      1,
      17,
      67,
      89,
      88,
      524,
      17,
      7,
      2,
      9,
      524,
      16
    ],
    "code_indx_nocopy": [
      12,
      70,
      1,
      1,
      89,
      8,
      90,
      17,
      7,
      89,
      8,
      90,
      9,
      2,
      22,
      35,
      1,
      17,
      67,
      89,
      88,
      524,
      17,
      7,
      2,
      9,
      524,
      16
    ]
  },
  {
    "intent": [
      "create",
      "3",
      "by",
      "3",
      "matrix",
      "of",
      "random",
      "numbers"
    ],
    "code": [
      "numpy",
      ".",
      "random",
      ".",
      "random",
      "(",
      "(",
      "3",
      ",",
      "3",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      148,
      57,
      44,
      57,
      189,
      2,
      190,
      97
    ],
    "code_indx_copy": [
      147,
      22,
      148,
      22,
      148,
      1,
      1,
      54,
      8,
      54,
      17,
      17
    ],
    "code_indx_nocopy": [
      147,
      22,
      148,
      22,
      148,
      1,
      1,
      54,
      8,
      54,
      17,
      17
    ]
  },
  {
    "intent": [
      "make",
      "new",
      "column",
      "str_0",
      "in",
      "panda",
      "dataframe",
      "by",
      "adding",
      "values",
      "from",
      "other",
      "columns",
      "str_1",
      "and",
      "str_2"
    ],
    "code": [
      "df",
      "[",
      "'str_0'",
      "]",
      "=",
      "df",
      "[",
      "'str_1'",
      "]",
      "+",
      "df",
      "[",
      "'str_2'",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "C",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "A",
        "quote": "'",
        "type": "str"
      },
      "str_2": {
        "value": "B",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      191,
      192,
      147,
      5,
      24,
      465,
      43,
      44,
      465,
      20,
      58,
      193,
      61,
      32,
      31,
      194
    ],
    "code_indx_copy": [
      149,
      12,
      29,
      16,
      19,
      149,
      12,
      63,
      16,
      96,
      149,
      12,
      150,
      16
    ],
    "code_indx_nocopy": [
      149,
      12,
      29,
      16,
      19,
      149,
      12,
      63,
      16,
      96,
      149,
      12,
      150,
      16
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "list",
      "of",
      "values",
      "from",
      "the",
      "dictionary",
      "var_0",
      "that",
      "have",
      "a",
      "key",
      "with",
      "a",
      "case",
      "insensitive",
      "match",
      "to",
      "str_0"
    ],
    "code": [
      "[",
      "value",
      "for",
      "key",
      ",",
      "value",
      "in",
      "list",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      "if",
      "'str_0'",
      "in",
      "key",
      ".",
      "lower",
      "(",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "programs",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "new york",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      148,
      3,
      4,
      2,
      20,
      58,
      18,
      25,
      26,
      195,
      196,
      3,
      23,
      79,
      3,
      197,
      198,
      144,
      8,
      5
    ],
    "code_indx_copy": [
      12,
      151,
      7,
      102,
      8,
      151,
      9,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      67,
      29,
      9,
      102,
      22,
      152,
      1,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      151,
      7,
      102,
      8,
      151,
      9,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      67,
      29,
      9,
      102,
      22,
      152,
      1,
      17,
      16
    ]
  },
  {
    "intent": [
      "append",
      "a",
      "path",
      "str_0",
      "in",
      "system",
      "path"
    ],
    "code": [
      "sys",
      ".",
      "path",
      ".",
      "append",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "/path/to/main_folder",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      111,
      3,
      199,
      5,
      24,
      465,
      199
    ],
    "code_indx_copy": [
      153,
      22,
      114,
      22,
      146,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      153,
      22,
      114,
      22,
      146,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "get",
      "all",
      "digits",
      "in",
      "a",
      "string",
      "var_0",
      "after",
      "a",
      "str_0",
      "character"
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'\\\\d+(?=[^[]+$)'",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "[",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      38,
      200,
      24,
      3,
      14,
      26,
      201,
      3,
      5,
      202
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      524,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      524,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "python",
      "pickle/unpickle",
      "a",
      "list",
      "to/from",
      "a",
      "file",
      "str_0"
    ],
    "code": [
      "pickle",
      ".",
      "load",
      "(",
      "open",
      "(",
      "'str_0'",
      ",",
      "'rb'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "afile",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      50,
      465,
      3,
      4,
      465,
      3,
      126,
      5
    ],
    "code_indx_copy": [
      524,
      22,
      154,
      1,
      105,
      1,
      29,
      8,
      155,
      17,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      154,
      1,
      105,
      1,
      29,
      8,
      155,
      17,
      17
    ]
  },
  {
    "intent": [
      "clicking",
      "a",
      "link",
      "using",
      "selenium",
      "using",
      "python"
    ],
    "code": [
      "driver",
      ".",
      "find_element_by_xpath",
      "(",
      "'xpath'",
      ")",
      ".",
      "click",
      "(",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      465,
      3,
      465,
      109,
      51,
      109,
      50
    ],
    "code_indx_copy": [
      46,
      22,
      47,
      1,
      524,
      17,
      22,
      156,
      1,
      17
    ],
    "code_indx_nocopy": [
      46,
      22,
      47,
      1,
      524,
      17,
      22,
      156,
      1,
      17
    ]
  },
  {
    "intent": [
      "count",
      "unique",
      "index",
      "values",
      "in",
      "column",
      "str_0",
      "in",
      "pandas",
      "dataframe",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "groupby",
      "(",
      "level",
      "=",
      "'str_0'",
      ")",
      ".",
      "agg",
      "(",
      "lambda",
      "x",
      ":",
      "x",
      ".",
      "index",
      ".",
      "get_level_values",
      "(",
      "1",
      ")",
      ".",
      "\n",
      "nunique",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "A",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "ex",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      203,
      204,
      37,
      20,
      24,
      147,
      5,
      24,
      42,
      43,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      157,
      1,
      158,
      19,
      29,
      17,
      22,
      159,
      1,
      44,
      26,
      13,
      26,
      22,
      160,
      22,
      524,
      1,
      15,
      17,
      22,
      161,
      524,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      157,
      1,
      158,
      19,
      29,
      17,
      22,
      159,
      1,
      44,
      26,
      13,
      26,
      22,
      160,
      22,
      524,
      1,
      15,
      17,
      22,
      161,
      524,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "pandas",
      "dataframe",
      "of",
      "values",
      "from",
      "a",
      "dictionary",
      "var_0",
      "which",
      "contains",
      "dictionaries",
      "of",
      "dictionaries"
    ],
    "code": [
      "pd",
      ".",
      "concat",
      "(",
      "map",
      "(",
      "pd",
      ".",
      "DataFrame",
      ",",
      "iter",
      "(",
      "var_0",
      ".",
      "values",
      "(",
      ")",
      ")",
      ")",
      ",",
      "keys",
      "=",
      "list",
      "(",
      "var_0",
      ".",
      "keys",
      "(",
      ")",
      ")",
      "\n",
      ")",
      ".",
      "stack",
      "(",
      ")",
      ".",
      "unstack",
      "(",
      "0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "d",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      148,
      3,
      42,
      43,
      2,
      20,
      58,
      3,
      25,
      26,
      205,
      75,
      188,
      2,
      188
    ],
    "code_indx_copy": [
      162,
      22,
      163,
      1,
      24,
      1,
      162,
      22,
      164,
      8,
      165,
      1,
      34,
      22,
      166,
      1,
      17,
      17,
      17,
      8,
      167,
      19,
      33,
      1,
      34,
      22,
      167,
      1,
      17,
      17,
      161,
      17,
      22,
      168,
      1,
      17,
      22,
      169,
      1,
      43,
      17
    ],
    "code_indx_nocopy": [
      162,
      22,
      163,
      1,
      24,
      1,
      162,
      22,
      164,
      8,
      165,
      1,
      34,
      22,
      166,
      1,
      17,
      17,
      17,
      8,
      167,
      19,
      33,
      1,
      34,
      22,
      167,
      1,
      17,
      17,
      161,
      17,
      22,
      168,
      1,
      17,
      22,
      169,
      1,
      43,
      17
    ]
  },
  {
    "intent": [
      "find",
      "out",
      "the",
      "number",
      "of",
      "non-matched",
      "elements",
      "at",
      "the",
      "same",
      "index",
      "of",
      "list",
      "var_0",
      "and",
      "list",
      "var_1"
    ],
    "code": [
      "sum",
      "(",
      "1",
      "for",
      "i",
      ",",
      "j",
      "in",
      "zip",
      "(",
      "var_0",
      ",",
      "var_1",
      ")",
      "if",
      "i",
      "!=",
      "j",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "b",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      47,
      465,
      18,
      76,
      2,
      465,
      1,
      35,
      18,
      36,
      37,
      2,
      4,
      26,
      31,
      4,
      63
    ],
    "code_indx_copy": [
      0,
      1,
      15,
      7,
      6,
      8,
      30,
      9,
      36,
      1,
      34,
      8,
      91,
      17,
      67,
      6,
      88,
      30,
      17
    ],
    "code_indx_nocopy": [
      0,
      1,
      15,
      7,
      6,
      8,
      30,
      9,
      36,
      1,
      34,
      8,
      91,
      17,
      67,
      6,
      88,
      30,
      17
    ]
  },
  {
    "intent": [
      "make",
      "all",
      "keys",
      "lowercase",
      "in",
      "dictionary",
      "var_0"
    ],
    "code": [
      "var_0",
      "=",
      "{",
      "(",
      "a",
      ".",
      "lower",
      "(",
      ")",
      ",",
      "b",
      ")",
      ":",
      "v",
      "for",
      "(",
      "a",
      ",",
      "b",
      ")",
      ",",
      "v",
      "in",
      "list",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      "}"
    ],
    "slot_map": {
      "var_0": {
        "value": "d",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      191,
      38,
      206,
      207,
      24,
      25,
      26
    ],
    "code_indx_copy": [
      34,
      19,
      52,
      1,
      95,
      22,
      152,
      1,
      17,
      8,
      97,
      17,
      13,
      90,
      7,
      1,
      95,
      8,
      97,
      17,
      8,
      90,
      9,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      53
    ],
    "code_indx_nocopy": [
      34,
      19,
      52,
      1,
      95,
      22,
      152,
      1,
      17,
      8,
      97,
      17,
      13,
      90,
      7,
      1,
      95,
      8,
      97,
      17,
      8,
      90,
      9,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      53
    ]
  },
  {
    "intent": [
      "sort",
      "list",
      "var_0",
      "based",
      "on",
      "first",
      "element",
      "of",
      "each",
      "tuple",
      "and",
      "by",
      "the",
      "length",
      "of",
      "the",
      "second",
      "element",
      "of",
      "each",
      "tuple"
    ],
    "code": [
      "var_0",
      ".",
      "sort",
      "(",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "[",
      "x",
      "[",
      "0",
      "]",
      ",",
      "len",
      "(",
      "x",
      "[",
      "1",
      "]",
      ")",
      ",",
      "x",
      "[",
      "1",
      "]",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "list_",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      4,
      26,
      208,
      139,
      151,
      49,
      2,
      22,
      113,
      31,
      44,
      18,
      209,
      2,
      18,
      118,
      49,
      2,
      22,
      113
    ],
    "code_indx_copy": [
      34,
      22,
      124,
      1,
      102,
      19,
      44,
      26,
      13,
      12,
      26,
      12,
      43,
      16,
      8,
      32,
      1,
      26,
      12,
      15,
      16,
      17,
      8,
      26,
      12,
      15,
      16,
      16,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      124,
      1,
      102,
      19,
      44,
      26,
      13,
      12,
      26,
      12,
      43,
      16,
      8,
      32,
      1,
      26,
      12,
      15,
      16,
      17,
      8,
      26,
      12,
      15,
      16,
      16,
      17
    ]
  },
  {
    "intent": [
      "trim",
      "whitespace",
      "in",
      "string",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "strip",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      210,
      211,
      24,
      14,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      170,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      170,
      1,
      17
    ]
  },
  {
    "intent": [
      "trim",
      "whitespace",
      "(",
      "including",
      "tabs",
      ")",
      "in",
      "var_0",
      "on",
      "the",
      "left",
      "side"
    ],
    "code": [
      "var_0",
      "=",
      "var_0",
      ".",
      "lstrip",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      210,
      211,
      212,
      213,
      465,
      27,
      24,
      26,
      139,
      18,
      214,
      215
    ],
    "code_indx_copy": [
      34,
      19,
      34,
      22,
      171,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      34,
      22,
      171,
      1,
      17
    ]
  },
  {
    "intent": [
      "trim",
      "whitespace",
      "(",
      "including",
      "tabs",
      ")",
      "in",
      "var_0",
      "on",
      "the",
      "right",
      "side"
    ],
    "code": [
      "var_0",
      "=",
      "var_0",
      ".",
      "rstrip",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      210,
      211,
      212,
      213,
      465,
      27,
      24,
      26,
      139,
      18,
      216,
      215
    ],
    "code_indx_copy": [
      34,
      19,
      34,
      22,
      172,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      34,
      22,
      172,
      1,
      17
    ]
  },
  {
    "intent": [
      "trim",
      "characters",
      "str_0",
      "in",
      "var_0"
    ],
    "code": [
      "var_0",
      "=",
      "var_0",
      ".",
      "strip",
      "(",
      "' \\t\\n\\r'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "\t\n\r",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      210,
      98,
      5,
      24,
      26
    ],
    "code_indx_copy": [
      34,
      19,
      34,
      22,
      170,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      34,
      22,
      170,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "trim",
      "whitespaces",
      "(",
      "including",
      "tabs",
      ")",
      "in",
      "string",
      "var_0"
    ],
    "code": [
      "print",
      "(",
      "re",
      ".",
      "sub",
      "(",
      "'[\\\\s+]'",
      ",",
      "''",
      ",",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      210,
      140,
      212,
      213,
      465,
      27,
      24,
      14,
      26
    ],
    "code_indx_copy": [
      49,
      1,
      39,
      22,
      40,
      1,
      524,
      8,
      21,
      8,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      39,
      22,
      40,
      1,
      524,
      8,
      21,
      8,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "in",
      "django",
      ",",
      "filter",
      "str_0",
      "based",
      "on",
      "all",
      "entities",
      "in",
      "[",
      "str_1",
      ",",
      "str_2",
      ",",
      "str_3",
      "]"
    ],
    "code": [
      "Task",
      ".",
      "objects",
      ".",
      "exclude",
      "(",
      "prerequisites__status__in",
      "=",
      "[",
      "'str_1'",
      ",",
      "'str_2'",
      ",",
      "'str_3'",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "Task.objects",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": "A",
        "quote": "'",
        "type": "str"
      },
      "str_2": {
        "value": "P",
        "quote": "'",
        "type": "str"
      },
      "str_3": {
        "value": "F",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      24,
      87,
      62,
      217,
      5,
      208,
      139,
      38,
      465,
      24,
      218,
      32,
      62,
      194,
      62,
      219,
      220
    ],
    "code_indx_copy": [
      524,
      22,
      78,
      22,
      524,
      1,
      524,
      19,
      12,
      63,
      8,
      150,
      8,
      173,
      16,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      78,
      22,
      524,
      1,
      524,
      19,
      12,
      63,
      8,
      150,
      8,
      173,
      16,
      17
    ]
  },
  {
    "intent": [
      "change",
      "background",
      "color",
      "in",
      "tkinter"
    ],
    "code": [
      "root",
      ".",
      "configure",
      "(",
      "background",
      "=",
      "'black'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      221,
      465,
      222,
      24,
      223
    ],
    "code_indx_copy": [
      174,
      22,
      524,
      1,
      529,
      19,
      524,
      17
    ],
    "code_indx_nocopy": [
      174,
      22,
      524,
      1,
      524,
      19,
      524,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "dict",
      "var_0",
      "to",
      "numpy",
      "structured",
      "array"
    ],
    "code": [
      "numpy",
      ".",
      "array",
      "(",
      "[",
      "(",
      "key",
      ",",
      "val",
      ")",
      "for",
      "key",
      ",",
      "val",
      "in",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      "]",
      ",",
      "dtype",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "result",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      186,
      26,
      8,
      84,
      465,
      85
    ],
    "code_indx_copy": [
      147,
      22,
      175,
      1,
      12,
      1,
      102,
      8,
      176,
      17,
      7,
      102,
      8,
      176,
      9,
      34,
      22,
      35,
      1,
      17,
      16,
      8,
      177,
      17
    ],
    "code_indx_nocopy": [
      147,
      22,
      175,
      1,
      12,
      1,
      102,
      8,
      176,
      17,
      7,
      102,
      8,
      176,
      9,
      34,
      22,
      35,
      1,
      17,
      16,
      8,
      177,
      17
    ]
  },
  {
    "intent": [
      "concatenate",
      "dataframe",
      "var_0",
      "to",
      "dataframe",
      "var_1",
      "sorted",
      "by",
      "values",
      "of",
      "the",
      "column",
      "str_0"
    ],
    "code": [
      "pd",
      ".",
      "concat",
      "(",
      "[",
      "var_0",
      ",",
      "var_1",
      ".",
      "sort_values",
      "(",
      "'str_0'",
      ")",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df_1",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "df_2",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "y",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      0,
      43,
      26,
      8,
      43,
      63,
      224,
      44,
      20,
      2,
      18,
      147,
      5
    ],
    "code_indx_copy": [
      162,
      22,
      163,
      1,
      12,
      34,
      8,
      91,
      22,
      178,
      1,
      29,
      17,
      16,
      17
    ],
    "code_indx_nocopy": [
      162,
      22,
      163,
      1,
      12,
      34,
      8,
      91,
      22,
      178,
      1,
      29,
      17,
      16,
      17
    ]
  },
  {
    "intent": [
      "replace",
      "the",
      "last",
      "occurence",
      "of",
      "an",
      "expression",
      "str_0",
      "with",
      "str_1",
      "in",
      "a",
      "string",
      "var_0"
    ],
    "code": [
      "re",
      ".",
      "sub",
      "(",
      "'(.*)</div>'",
      ",",
      "'\\\\1</bad>'",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "</div>",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "</bad>",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      130,
      18,
      170,
      465,
      2,
      225,
      226,
      5,
      79,
      32,
      24,
      3,
      14,
      26
    ],
    "code_indx_copy": [
      39,
      22,
      40,
      1,
      524,
      8,
      524,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      40,
      1,
      524,
      8,
      524,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "maximum",
      "of",
      "str_0",
      "and",
      "str_1",
      "values",
      "in",
      "a",
      "dictionary"
    ],
    "code": [
      "print",
      "(",
      "max",
      "(",
      "d",
      ",",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "(",
      "d",
      "[",
      "x",
      "]",
      "[",
      "'str_0'",
      "]",
      ",",
      "d",
      "[",
      "x",
      "]",
      "[",
      "'str_1'",
      "]",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "salary",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "bonus",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      18,
      227,
      2,
      5,
      31,
      32,
      20,
      24,
      3,
      25
    ],
    "code_indx_copy": [
      49,
      1,
      179,
      1,
      2,
      8,
      102,
      19,
      44,
      26,
      13,
      1,
      2,
      12,
      26,
      16,
      12,
      29,
      16,
      8,
      2,
      12,
      26,
      16,
      12,
      63,
      16,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      179,
      1,
      2,
      8,
      102,
      19,
      44,
      26,
      13,
      1,
      2,
      12,
      26,
      16,
      12,
      29,
      16,
      8,
      2,
      12,
      26,
      16,
      12,
      63,
      16,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "filter",
      "django",
      "objects",
      "by",
      "var_0",
      "with",
      "ids",
      "str_0",
      "and",
      "str_1"
    ],
    "code": [
      "Book",
      ".",
      "objects",
      ".",
      "filter",
      "(",
      "author__id",
      "=",
      "1",
      ")",
      ".",
      "filter",
      "(",
      "author__id",
      "=",
      "2",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "author",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "1",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": "2",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      217,
      87,
      178,
      44,
      26,
      79,
      465,
      5,
      31,
      32
    ],
    "code_indx_copy": [
      524,
      22,
      78,
      22,
      79,
      1,
      524,
      19,
      15,
      17,
      22,
      79,
      1,
      524,
      19,
      82,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      78,
      22,
      79,
      1,
      524,
      19,
      15,
      17,
      22,
      79,
      1,
      524,
      19,
      82,
      17
    ]
  },
  {
    "intent": [
      "split",
      "string",
      "str_0",
      "based",
      "on",
      "case-insensitive",
      "matching",
      "using",
      "string",
      "str_1"
    ],
    "code": [
      "re",
      ".",
      "compile",
      "(",
      "'str_1'",
      ",",
      "re",
      ".",
      "IGNORECASE",
      ")",
      ".",
      "split",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "fooxyzbar",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "XYZ",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      138,
      14,
      5,
      208,
      139,
      465,
      81,
      109,
      14,
      32
    ],
    "code_indx_copy": [
      39,
      22,
      83,
      1,
      63,
      8,
      39,
      22,
      180,
      17,
      22,
      71,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      83,
      1,
      63,
      8,
      39,
      22,
      180,
      17,
      22,
      71,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "get",
      "list",
      "of",
      "sums",
      "of",
      "neighboring",
      "integers",
      "in",
      "string",
      "var_0"
    ],
    "code": [
      "[",
      "sum",
      "(",
      "map",
      "(",
      "int",
      ",",
      "s",
      ")",
      ")",
      "for",
      "s",
      "in",
      "var_0",
      ".",
      "split",
      "(",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "example",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      4,
      2,
      465,
      2,
      465,
      7,
      24,
      14,
      26
    ],
    "code_indx_copy": [
      12,
      0,
      1,
      24,
      1,
      20,
      8,
      181,
      17,
      17,
      7,
      181,
      9,
      34,
      22,
      71,
      1,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      0,
      1,
      24,
      1,
      20,
      8,
      181,
      17,
      17,
      7,
      181,
      9,
      34,
      22,
      71,
      1,
      17,
      16
    ]
  },
  {
    "intent": [
      "get",
      "all",
      "the",
      "keys",
      "from",
      "dictionary",
      "var_0",
      "whose",
      "value",
      "is",
      "str_0"
    ],
    "code": [
      "[",
      "i",
      "for",
      "i",
      "in",
      "var_0",
      "if",
      "var_0",
      "[",
      "i",
      "]",
      "==",
      "1",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "y",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "1",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      38,
      18,
      206,
      58,
      25,
      26,
      228,
      143,
      152,
      5
    ],
    "code_indx_copy": [
      12,
      6,
      7,
      6,
      9,
      34,
      67,
      34,
      12,
      6,
      16,
      76,
      15,
      16
    ],
    "code_indx_nocopy": [
      12,
      6,
      7,
      6,
      9,
      34,
      67,
      34,
      12,
      6,
      16,
      76,
      15,
      16
    ]
  },
  {
    "intent": [
      "converting",
      "byte",
      "string",
      "var_0",
      "in",
      "unicode",
      "string"
    ],
    "code": [
      "var_0",
      ".",
      "decode",
      "(",
      "'unicode_escape'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "c",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      115,
      229,
      14,
      26,
      24,
      230,
      14
    ],
    "code_indx_copy": [
      34,
      22,
      99,
      1,
      182,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      99,
      1,
      182,
      17
    ]
  },
  {
    "intent": [
      "unpivot",
      "first",
      "2",
      "columns",
      "into",
      "new",
      "columns",
      "str_0",
      "and",
      "str_1",
      "from",
      "a",
      "pandas",
      "dataframe",
      "var_0"
    ],
    "code": [
      "pd",
      ".",
      "melt",
      "(",
      "var_0",
      ",",
      "id_vars",
      "=",
      "[",
      "'farm'",
      ",",
      "'fruit'",
      "]",
      ",",
      "var_name",
      "=",
      "'str_0'",
      ",",
      "value_name",
      "=",
      "'str_1'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "year",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "value",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "x",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      151,
      82,
      61,
      12,
      192,
      61,
      5,
      31,
      32,
      58,
      3,
      42,
      43,
      26
    ],
    "code_indx_copy": [
      162,
      22,
      524,
      1,
      34,
      8,
      524,
      19,
      12,
      524,
      8,
      524,
      16,
      8,
      524,
      19,
      29,
      8,
      524,
      19,
      63,
      17
    ],
    "code_indx_nocopy": [
      162,
      22,
      524,
      1,
      34,
      8,
      524,
      19,
      12,
      524,
      8,
      524,
      16,
      8,
      524,
      19,
      29,
      8,
      524,
      19,
      63,
      17
    ]
  },
  {
    "intent": [
      "add",
      "key",
      "str_0",
      "and",
      "value",
      "str_1",
      "to",
      "dictionary",
      "str_2"
    ],
    "code": [
      "str_2",
      "[",
      "'str_0'",
      "]",
      "=",
      "3"
    ],
    "slot_map": {
      "str_0": {
        "value": "item3",
        "quote": "\"",
        "type": "str"
      },
      "str_1": {
        "value": "3",
        "quote": "\"",
        "type": "str"
      },
      "str_2": {
        "value": "default_data",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      60,
      23,
      5,
      31,
      143,
      32,
      8,
      25,
      194
    ],
    "code_indx_copy": [
      183,
      12,
      29,
      16,
      19,
      54
    ],
    "code_indx_nocopy": [
      183,
      12,
      29,
      16,
      19,
      54
    ]
  },
  {
    "intent": [
      "add",
      "key",
      "str_0",
      "and",
      "value",
      "str_1",
      "to",
      "dictionary",
      "str_2"
    ],
    "code": [
      "str_2",
      ".",
      "update",
      "(",
      "{",
      "'str_0'",
      ":",
      "3",
      "}",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "item3",
        "quote": "\"",
        "type": "str"
      },
      "str_1": {
        "value": "3",
        "quote": "\"",
        "type": "str"
      },
      "str_2": {
        "value": "default_data",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      60,
      23,
      5,
      31,
      143,
      32,
      8,
      25,
      194
    ],
    "code_indx_copy": [
      183,
      22,
      69,
      1,
      52,
      29,
      13,
      54,
      53,
      17
    ],
    "code_indx_nocopy": [
      183,
      22,
      69,
      1,
      52,
      29,
      13,
      54,
      53,
      17
    ]
  },
  {
    "intent": [
      "add",
      "key",
      "value",
      "pairs",
      "str_0",
      ",",
      "4",
      "and",
      "str_1",
      ",",
      "5",
      "to",
      "dictionary",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "update",
      "(",
      "{",
      "'str_0'",
      ":",
      "4",
      ",",
      "'str_1'",
      ":",
      "5",
      "}",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "item4",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "item5",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "default_data",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      60,
      23,
      143,
      187,
      5,
      62,
      231,
      31,
      32,
      62,
      232,
      8,
      25,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      69,
      1,
      52,
      29,
      13,
      184,
      8,
      63,
      13,
      185,
      53,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      69,
      1,
      52,
      29,
      13,
      184,
      8,
      63,
      13,
      185,
      53,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "first",
      "and",
      "last",
      "3",
      "elements",
      "of",
      "list",
      "var_0"
    ],
    "code": [
      "var_0",
      "[",
      ":",
      "3",
      "]",
      "+",
      "var_0",
      "[",
      "-",
      "3",
      ":",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "l",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      18,
      151,
      31,
      170,
      57,
      1,
      2,
      4,
      26
    ],
    "code_indx_copy": [
      34,
      12,
      13,
      54,
      16,
      96,
      34,
      12,
      14,
      54,
      13,
      16
    ],
    "code_indx_nocopy": [
      34,
      12,
      13,
      54,
      16,
      96,
      34,
      12,
      14,
      54,
      13,
      16
    ]
  },
  {
    "intent": [
      "reset",
      "index",
      "to",
      "default",
      "in",
      "dataframe",
      "var_0"
    ],
    "code": [
      "var_0",
      "=",
      "var_0",
      ".",
      "reset_index",
      "(",
      "drop",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      37,
      8,
      233,
      24,
      43,
      26
    ],
    "code_indx_copy": [
      34,
      19,
      34,
      22,
      186,
      1,
      187,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      34,
      22,
      186,
      1,
      187,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "for",
      "each",
      "index",
      "var_0",
      "from",
      "0",
      "to",
      "3",
      ",",
      "append",
      "the",
      "element",
      "at",
      "index",
      "var_0",
      "of",
      "list",
      "var_2",
      "to",
      "the",
      "list",
      "at",
      "index",
      "var_0",
      "of",
      "list",
      "a",
      "."
    ],
    "code": [
      "[",
      "a",
      "[",
      "var_3",
      "]",
      ".",
      "append",
      "(",
      "var_2",
      "[",
      "var_3",
      "]",
      ")",
      "for",
      "var_3",
      "in",
      "range",
      "(",
      "3",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "x",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "x",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "b",
        "quote": "`",
        "type": "var"
      },
      "var_3": {
        "value": "x",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      21,
      22,
      37,
      26,
      58,
      107,
      8,
      57,
      62,
      111,
      18,
      49,
      35,
      37,
      26,
      2,
      4,
      64,
      8,
      18,
      4,
      35,
      37,
      26,
      2,
      4,
      3,
      159
    ],
    "code_indx_copy": [
      12,
      95,
      12,
      55,
      16,
      22,
      146,
      1,
      94,
      12,
      55,
      16,
      17,
      7,
      55,
      9,
      104,
      1,
      54,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      95,
      12,
      55,
      16,
      22,
      146,
      1,
      94,
      12,
      55,
      16,
      17,
      7,
      55,
      9,
      104,
      1,
      54,
      17,
      16
    ]
  },
  {
    "intent": [
      "get",
      "canonical",
      "path",
      "of",
      "the",
      "filename",
      "var_0"
    ],
    "code": [
      "os",
      ".",
      "var_0",
      ".",
      "realpath",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "path",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      465,
      199,
      2,
      18,
      465,
      26
    ],
    "code_indx_copy": [
      113,
      22,
      34,
      22,
      188,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      34,
      22,
      188,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "dictionary",
      "str_0",
      "is",
      "in",
      "dictionary",
      "str_1"
    ],
    "code": [
      "set",
      "(",
      "L",
      "[",
      "0",
      "]",
      ".",
      "f",
      ".",
      "items",
      "(",
      ")",
      ")",
      ".",
      "issubset",
      "(",
      "set",
      "(",
      "a3",
      ".",
      "f",
      ".",
      "items",
      "(",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "L[0].f.items()",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": "a3.f.items()",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      234,
      150,
      25,
      5,
      152,
      24,
      25,
      32
    ],
    "code_indx_copy": [
      189,
      1,
      524,
      12,
      43,
      16,
      22,
      190,
      22,
      35,
      1,
      17,
      17,
      22,
      191,
      1,
      189,
      1,
      524,
      22,
      190,
      22,
      35,
      1,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      189,
      1,
      524,
      12,
      43,
      16,
      22,
      190,
      22,
      35,
      1,
      17,
      17,
      22,
      191,
      1,
      189,
      1,
      524,
      22,
      190,
      22,
      35,
      1,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "find",
      "all",
      "the",
      "indexes",
      "in",
      "a",
      "numpy",
      "2d",
      "array",
      "where",
      "the",
      "value",
      "is",
      "1"
    ],
    "code": [
      "zip",
      "(",
      "*",
      "np",
      ".",
      "where",
      "(",
      "a",
      "==",
      "1",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      47,
      38,
      18,
      235,
      24,
      3,
      84,
      236,
      85,
      155,
      18,
      143,
      152,
      237
    ],
    "code_indx_copy": [
      36,
      1,
      3,
      74,
      22,
      75,
      1,
      95,
      76,
      15,
      17,
      17
    ],
    "code_indx_nocopy": [
      36,
      1,
      3,
      74,
      22,
      75,
      1,
      95,
      76,
      15,
      17,
      17
    ]
  },
  {
    "intent": [
      "how",
      "to",
      "find",
      "the",
      "index",
      "of",
      "a",
      "value",
      "in",
      "2d",
      "array",
      "in",
      "python",
      "?"
    ],
    "code": [
      "np",
      ".",
      "where",
      "(",
      "a",
      "==",
      "1",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      77,
      8,
      47,
      18,
      37,
      2,
      3,
      143,
      24,
      236,
      85,
      24,
      50,
      52
    ],
    "code_indx_copy": [
      74,
      22,
      75,
      1,
      95,
      76,
      15,
      17
    ],
    "code_indx_nocopy": [
      74,
      22,
      75,
      1,
      95,
      76,
      15,
      17
    ]
  },
  {
    "intent": [
      "collapse",
      "hierarchical",
      "column",
      "index",
      "to",
      "level",
      "0",
      "in",
      "dataframe",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "columns",
      "=",
      "var_0",
      ".",
      "columns",
      ".",
      "get_level_values",
      "(",
      "0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      465,
      147,
      37,
      8,
      238,
      107,
      24,
      43,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      192,
      19,
      34,
      22,
      192,
      22,
      524,
      1,
      43,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      192,
      19,
      34,
      22,
      192,
      22,
      524,
      1,
      43,
      17
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "matrix",
      "from",
      "a",
      "list",
      "str_0"
    ],
    "code": [
      "x",
      "=",
      "scipy",
      ".",
      "matrix",
      "(",
      "[",
      "str_0",
      "]",
      ")",
      ".",
      "transpose",
      "(",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "[1, 2, 3]",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "[1, 2, 3]",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      148,
      3,
      189,
      58,
      3,
      4,
      5
    ],
    "code_indx_copy": [
      26,
      19,
      524,
      22,
      530,
      1,
      12,
      11,
      16,
      17,
      22,
      524,
      1,
      17
    ],
    "code_indx_nocopy": [
      26,
      19,
      524,
      22,
      524,
      1,
      12,
      11,
      16,
      17,
      22,
      524,
      1,
      17
    ]
  },
  {
    "intent": [
      "add",
      "character",
      "str_0",
      "after",
      "word",
      "str_1",
      "in",
      "string",
      "var_0"
    ],
    "code": [
      "var_0",
      "=",
      "re",
      ".",
      "sub",
      "(",
      "'(\\\\bget\\\\b)'",
      ",",
      "'\\\\1@'",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "@",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "get",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "text",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      60,
      202,
      5,
      201,
      239,
      32,
      24,
      14,
      26
    ],
    "code_indx_copy": [
      34,
      19,
      39,
      22,
      40,
      1,
      524,
      8,
      524,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      39,
      22,
      40,
      1,
      524,
      8,
      524,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "numpy",
      "array",
      "that",
      "contains",
      "the",
      "element",
      "wise",
      "minimum",
      "of",
      "three",
      "3x1",
      "arrays"
    ],
    "code": [
      "np",
      ".",
      "array",
      "(",
      "[",
      "np",
      ".",
      "arange",
      "(",
      "3",
      ")",
      ",",
      "np",
      ".",
      "arange",
      "(",
      "2",
      ",",
      "-",
      "1",
      ",",
      "-",
      "1",
      ")",
      ",",
      "np",
      ".",
      "ones",
      "(",
      "(",
      "3",
      ",",
      ")",
      ")",
      "]",
      ")",
      ".",
      "min",
      "(",
      "axis",
      "=",
      "0",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      17,
      3,
      84,
      85,
      195,
      75,
      18,
      49,
      465,
      465,
      2,
      240,
      465,
      165
    ],
    "code_indx_copy": [
      74,
      22,
      175,
      1,
      12,
      74,
      22,
      193,
      1,
      54,
      17,
      8,
      74,
      22,
      193,
      1,
      82,
      8,
      14,
      15,
      8,
      14,
      15,
      17,
      8,
      74,
      22,
      524,
      1,
      1,
      54,
      8,
      17,
      17,
      16,
      17,
      22,
      111,
      1,
      42,
      19,
      43,
      17
    ],
    "code_indx_nocopy": [
      74,
      22,
      175,
      1,
      12,
      74,
      22,
      193,
      1,
      54,
      17,
      8,
      74,
      22,
      193,
      1,
      82,
      8,
      14,
      15,
      8,
      14,
      15,
      17,
      8,
      74,
      22,
      524,
      1,
      1,
      54,
      8,
      17,
      17,
      16,
      17,
      22,
      111,
      1,
      42,
      19,
      43,
      17
    ]
  },
  {
    "intent": [
      "add",
      "a",
      "column",
      "str_0",
      "to",
      "dataframe",
      "var_0",
      "for",
      "index",
      "in",
      "range"
    ],
    "code": [
      "var_0",
      "[",
      "'str_0'",
      "]",
      "=",
      "list",
      "(",
      "range",
      "(",
      "1",
      ",",
      "len",
      "(",
      "var_0",
      ")",
      "+",
      "1",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "new_col",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      60,
      3,
      147,
      5,
      8,
      43,
      26,
      21,
      37,
      24,
      123
    ],
    "code_indx_copy": [
      34,
      12,
      29,
      16,
      19,
      33,
      1,
      104,
      1,
      15,
      8,
      32,
      1,
      34,
      17,
      96,
      15,
      17,
      17
    ],
    "code_indx_nocopy": [
      34,
      12,
      29,
      16,
      19,
      33,
      1,
      104,
      1,
      15,
      8,
      32,
      1,
      34,
      17,
      96,
      15,
      17,
      17
    ]
  },
  {
    "intent": [
      "set",
      "environment",
      "variable",
      "str_0",
      "equal",
      "to",
      "1"
    ],
    "code": [
      "os",
      ".",
      "environ",
      "[",
      "'str_0'",
      "]",
      "=",
      "'1'"
    ],
    "slot_map": {
      "str_0": {
        "value": "DEBUSSY",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      59,
      241,
      95,
      5,
      106,
      8,
      237
    ],
    "code_indx_copy": [
      113,
      22,
      194,
      12,
      29,
      16,
      19,
      195
    ],
    "code_indx_nocopy": [
      113,
      22,
      194,
      12,
      29,
      16,
      19,
      195
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "environment",
      "variable",
      "var_0"
    ],
    "code": [
      "print",
      "(",
      "os",
      ".",
      "environ",
      "[",
      "'var_0'",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "DEBUSSY",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      3,
      241,
      95,
      26
    ],
    "code_indx_copy": [
      49,
      1,
      113,
      22,
      194,
      12,
      56,
      16,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      113,
      22,
      194,
      12,
      56,
      16,
      17
    ]
  },
  {
    "intent": [
      "set",
      "environment",
      "variable",
      "str_0",
      "to",
      "str_1"
    ],
    "code": [
      "os",
      ".",
      "environ",
      "[",
      "'str_0'",
      "]",
      "=",
      "'str_1'"
    ],
    "slot_map": {
      "str_0": {
        "value": "DEBUSSY",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "1",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      59,
      241,
      95,
      5,
      8,
      32
    ],
    "code_indx_copy": [
      113,
      22,
      194,
      12,
      29,
      16,
      19,
      63
    ],
    "code_indx_nocopy": [
      113,
      22,
      194,
      12,
      29,
      16,
      19,
      63
    ]
  },
  {
    "intent": [
      "update",
      "dictionary",
      "var_0",
      ",",
      "overwriting",
      "values",
      "where",
      "keys",
      "are",
      "identical",
      ",",
      "with",
      "contents",
      "of",
      "dictionary",
      "var_1"
    ],
    "code": [
      "var_0",
      ".",
      "update",
      "(",
      "var_1",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "b",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "d",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      242,
      25,
      26,
      62,
      465,
      20,
      155,
      206,
      243,
      465,
      62,
      79,
      125,
      2,
      25,
      63
    ],
    "code_indx_copy": [
      34,
      22,
      69,
      1,
      91,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      69,
      1,
      91,
      17
    ]
  },
  {
    "intent": [
      "get",
      "all",
      "the",
      "values",
      "in",
      "column",
      "var_0",
      "from",
      "pandas",
      "data",
      "frame",
      "var_1"
    ],
    "code": [
      "var_1",
      "[",
      "'var_0'",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "b",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      38,
      18,
      20,
      24,
      147,
      26,
      58,
      42,
      65,
      66,
      63
    ],
    "code_indx_copy": [
      91,
      12,
      56,
      16
    ],
    "code_indx_nocopy": [
      91,
      12,
      56,
      16
    ]
  },
  {
    "intent": [
      "make",
      "a",
      "line",
      "plot",
      "with",
      "errorbars",
      ",",
      "var_0",
      ",",
      "from",
      "data",
      "str_0",
      "and",
      "set",
      "color",
      "of",
      "the",
      "errorbars",
      "to",
      "var_1",
      "(",
      "yellow",
      ")"
    ],
    "code": [
      "var_0",
      "=",
      "plt",
      ".",
      "errorbar",
      "(",
      "x",
      ",",
      "var_1",
      ",",
      "yerr",
      "=",
      "err",
      ",",
      "ecolor",
      "=",
      "'var_1'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "ebar",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "x, y, err",
        "quote": "`",
        "type": "str"
      },
      "var_1": {
        "value": "y",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      191,
      3,
      172,
      244,
      79,
      465,
      62,
      26,
      62,
      58,
      65,
      5,
      31,
      59,
      222,
      2,
      18,
      465,
      8,
      63,
      212,
      465,
      27
    ],
    "code_indx_copy": [
      34,
      19,
      196,
      22,
      524,
      1,
      26,
      8,
      91,
      8,
      524,
      19,
      524,
      8,
      524,
      19,
      57,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      196,
      22,
      524,
      1,
      26,
      8,
      91,
      8,
      524,
      19,
      524,
      8,
      524,
      19,
      57,
      17
    ]
  },
  {
    "intent": [
      "find",
      "all",
      "files",
      "with",
      "extension",
      "str_0",
      "in",
      "directory",
      "var_0"
    ],
    "code": [
      "results",
      "+=",
      "[",
      "each",
      "for",
      "each",
      "in",
      "os",
      ".",
      "listdir",
      "(",
      "var_0",
      ")",
      "if",
      "each",
      ".",
      "endswith",
      "(",
      "'str_0'",
      ")",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": ".c",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "folder",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      47,
      38,
      245,
      79,
      465,
      5,
      24,
      175,
      26
    ],
    "code_indx_copy": [
      524,
      524,
      12,
      197,
      7,
      197,
      9,
      113,
      22,
      198,
      1,
      34,
      17,
      67,
      197,
      22,
      199,
      1,
      29,
      17,
      16
    ],
    "code_indx_nocopy": [
      524,
      524,
      12,
      197,
      7,
      197,
      9,
      113,
      22,
      198,
      1,
      34,
      17,
      67,
      197,
      22,
      199,
      1,
      29,
      17,
      16
    ]
  },
  {
    "intent": [
      "add",
      "unicode",
      "string",
      "str_0",
      "to",
      "utf-8",
      "decoded",
      "string",
      "str_1"
    ],
    "code": [
      "print",
      "(",
      "'str_1'",
      ".",
      "decode",
      "(",
      "'utf8'",
      ")",
      "+",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "1",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "\u00c2\u00a3",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      60,
      230,
      14,
      5,
      8,
      183,
      465,
      14,
      32
    ],
    "code_indx_copy": [
      49,
      1,
      63,
      22,
      99,
      1,
      200,
      17,
      96,
      29,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      63,
      22,
      99,
      1,
      200,
      17,
      96,
      29,
      17
    ]
  },
  {
    "intent": [
      "lower-case",
      "the",
      "string",
      "obtained",
      "by",
      "replacing",
      "the",
      "occurrences",
      "of",
      "regex",
      "pattern",
      "str_0",
      "in",
      "string",
      "var_0",
      "with",
      "eplacement",
      "str_1"
    ],
    "code": [
      "re",
      ".",
      "sub",
      "(",
      "'str_0'",
      ",",
      "'str_1'",
      ",",
      "var_0",
      ")",
      ".",
      "lower",
      "(",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "(?<=[a-z])([A-Z])",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      },
      "str_1": {
        "value": "-\\1",
        "quote": "'",
        "type": "str"
      },
      "(str_0)": {
        "value": "(?<=[a-z])([A-Z])",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      18,
      14,
      465,
      44,
      465,
      18,
      53,
      2,
      40,
      54,
      5,
      24,
      14,
      26,
      79,
      465,
      32
    ],
    "code_indx_copy": [
      39,
      22,
      40,
      1,
      29,
      8,
      63,
      8,
      34,
      17,
      22,
      152,
      1,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      40,
      1,
      29,
      8,
      63,
      8,
      34,
      17,
      22,
      152,
      1,
      17
    ]
  },
  {
    "intent": [
      "setting",
      "stacksize",
      "in",
      "a",
      "python",
      "script"
    ],
    "code": [
      "os",
      ".",
      "system",
      "(",
      "'ulimit -s unlimited; some_executable'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      465,
      465,
      24,
      3,
      50,
      246
    ],
    "code_indx_copy": [
      113,
      22,
      119,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      119,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "format",
      "a",
      "string",
      "var_0",
      "using",
      "string",
      "formatting"
    ],
    "code": [
      "\"\"\"{0:.3g}\"\"\"",
      ".",
      "format",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "num",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      16,
      3,
      14,
      26,
      109,
      14,
      167
    ],
    "code_indx_copy": [
      524,
      22,
      38,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      38,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "append",
      "the",
      "first",
      "element",
      "of",
      "array",
      "var_0",
      "to",
      "array",
      "var_0"
    ],
    "code": [
      "numpy",
      ".",
      "append",
      "(",
      "var_1",
      ",",
      "var_1",
      "[",
      "0",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      111,
      18,
      151,
      49,
      2,
      85,
      26,
      8,
      85,
      26
    ],
    "code_indx_copy": [
      147,
      22,
      146,
      1,
      91,
      8,
      91,
      12,
      43,
      16,
      17
    ],
    "code_indx_nocopy": [
      147,
      22,
      146,
      1,
      91,
      8,
      91,
      12,
      43,
      16,
      17
    ]
  },
  {
    "intent": [
      "return",
      "the",
      "column",
      "for",
      "value",
      "38.15",
      "in",
      "dataframe",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "ix",
      "[",
      ":",
      ",",
      "(",
      "var_0",
      ".",
      "loc",
      "[",
      "0",
      "]",
      "==",
      "38.15",
      ")",
      "]",
      ".",
      "columns"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      160,
      18,
      147,
      21,
      143,
      465,
      24,
      43,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      201,
      12,
      13,
      8,
      1,
      34,
      22,
      202,
      12,
      43,
      16,
      76,
      533,
      17,
      16,
      22,
      192
    ],
    "code_indx_nocopy": [
      34,
      22,
      201,
      12,
      13,
      8,
      1,
      34,
      22,
      202,
      12,
      43,
      16,
      76,
      524,
      17,
      16,
      22,
      192
    ]
  },
  {
    "intent": [
      "merge",
      "2",
      "dataframes",
      "var_0",
      "and",
      "var_1",
      "with",
      "same",
      "values",
      "in",
      "a",
      "column",
      "str_0",
      "with",
      "and",
      "index",
      "str_1"
    ],
    "code": [
      "var_1",
      "[",
      "'str_0'",
      "]",
      "=",
      "var_1",
      ".",
      "CET",
      ".",
      "map",
      "(",
      "var_0",
      ".",
      "set_index",
      "(",
      "'str_1'",
      ")",
      "[",
      "'str_0'",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df1",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "df2",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "revenue",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "date",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      247,
      82,
      248,
      26,
      31,
      63,
      79,
      36,
      20,
      24,
      3,
      147,
      5,
      79,
      31,
      37,
      32
    ],
    "code_indx_copy": [
      91,
      12,
      29,
      16,
      19,
      91,
      22,
      524,
      22,
      24,
      1,
      34,
      22,
      203,
      1,
      63,
      17,
      12,
      29,
      16,
      17
    ],
    "code_indx_nocopy": [
      91,
      12,
      29,
      16,
      19,
      91,
      22,
      524,
      22,
      24,
      1,
      34,
      22,
      203,
      1,
      63,
      17,
      12,
      29,
      16,
      17
    ]
  },
  {
    "intent": [
      "load",
      "a",
      "json",
      "data",
      "var_0",
      "into",
      "variable",
      "var_1"
    ],
    "code": [
      "var_1",
      "=",
      "json",
      ".",
      "loads",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "json_string",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "json_data",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      249,
      3,
      181,
      65,
      26,
      12,
      95,
      63
    ],
    "code_indx_copy": [
      91,
      19,
      140,
      22,
      204,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      91,
      19,
      140,
      22,
      204,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "radians",
      "1",
      "to",
      "degrees"
    ],
    "code": [
      "math",
      ".",
      "cos",
      "(",
      "math",
      ".",
      "radians",
      "(",
      "1",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      11,
      465,
      237,
      8,
      465
    ],
    "code_indx_copy": [
      205,
      22,
      524,
      1,
      205,
      22,
      529,
      1,
      15,
      17,
      17
    ],
    "code_indx_nocopy": [
      205,
      22,
      524,
      1,
      205,
      22,
      524,
      1,
      15,
      17,
      17
    ]
  },
  {
    "intent": [
      "count",
      "the",
      "number",
      "of",
      "integers",
      "in",
      "list",
      "var_0"
    ],
    "code": [
      "sum",
      "(",
      "isinstance",
      "(",
      "x",
      ",",
      "int",
      ")",
      "for",
      "x",
      "in",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      203,
      18,
      76,
      2,
      7,
      24,
      4,
      26
    ],
    "code_indx_copy": [
      0,
      1,
      206,
      1,
      26,
      8,
      20,
      17,
      7,
      26,
      9,
      34,
      17
    ],
    "code_indx_nocopy": [
      0,
      1,
      206,
      1,
      26,
      8,
      20,
      17,
      7,
      26,
      9,
      34,
      17
    ]
  },
  {
    "intent": [
      "replacing",
      "str_0",
      "with",
      "str_1",
      "in",
      "a",
      "string",
      "using",
      "regular",
      "expressions"
    ],
    "code": [
      "\"\"\"used\u200b\"\"\"",
      ".",
      "replace",
      "(",
      "'str_0'",
      ",",
      "'str_1'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "\u200b",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "*",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      5,
      79,
      32,
      24,
      3,
      14,
      109,
      250,
      465
    ],
    "code_indx_copy": [
      524,
      22,
      107,
      1,
      29,
      8,
      63,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      107,
      1,
      29,
      8,
      63,
      17
    ]
  },
  {
    "intent": [
      "run",
      "function",
      "str_0",
      "simultaneously"
    ],
    "code": [
      "threading",
      ".",
      "Thread",
      "(",
      "target",
      "=",
      "str_0",
      ")",
      ".",
      "start",
      "(",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "SudsMove",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      251,
      69,
      5,
      465
    ],
    "code_indx_copy": [
      524,
      22,
      524,
      1,
      524,
      19,
      11,
      17,
      22,
      207,
      1,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      524,
      1,
      524,
      19,
      11,
      17,
      22,
      207,
      1,
      17
    ]
  },
  {
    "intent": [
      "sum",
      "of",
      "squares",
      "values",
      "in",
      "a",
      "list",
      "var_0"
    ],
    "code": [
      "sum",
      "(",
      "i",
      "*",
      "i",
      "for",
      "i",
      "in",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "l",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      112,
      2,
      465,
      20,
      24,
      3,
      4,
      26
    ],
    "code_indx_copy": [
      0,
      1,
      6,
      3,
      6,
      7,
      6,
      9,
      34,
      17
    ],
    "code_indx_nocopy": [
      0,
      1,
      6,
      3,
      6,
      7,
      6,
      9,
      34,
      17
    ]
  },
  {
    "intent": [
      "calculate",
      "the",
      "sum",
      "of",
      "the",
      "squares",
      "of",
      "each",
      "value",
      "in",
      "list",
      "var_0"
    ],
    "code": [
      "sum",
      "(",
      "map",
      "(",
      "lambda",
      "x",
      ":",
      "x",
      "*",
      "x",
      ",",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "l",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      252,
      18,
      112,
      2,
      18,
      465,
      2,
      22,
      143,
      24,
      4,
      26
    ],
    "code_indx_copy": [
      0,
      1,
      24,
      1,
      44,
      26,
      13,
      26,
      3,
      26,
      8,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      0,
      1,
      24,
      1,
      44,
      26,
      13,
      26,
      3,
      26,
      8,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "dictionary",
      "var_0",
      "from",
      "list",
      "var_1"
    ],
    "code": [
      "var_0",
      "=",
      "dict",
      "(",
      "(",
      "key",
      ",",
      "value",
      ")",
      "for",
      "key",
      ",",
      "value",
      "in",
      "var_1",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "d",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "iterable",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      148,
      3,
      25,
      26,
      58,
      4,
      63
    ],
    "code_indx_copy": [
      34,
      19,
      70,
      1,
      1,
      102,
      8,
      151,
      17,
      7,
      102,
      8,
      151,
      9,
      91,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      70,
      1,
      1,
      102,
      8,
      151,
      17,
      7,
      102,
      8,
      151,
      9,
      91,
      17
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "dictionary",
      "var_0",
      "from",
      "list",
      "var_1"
    ],
    "code": [
      "var_0",
      "=",
      "{",
      "key",
      ":",
      "value",
      "for",
      "key",
      ",",
      "value",
      "in",
      "var_1",
      "}"
    ],
    "slot_map": {
      "var_0": {
        "value": "d",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "iterable",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      148,
      3,
      25,
      26,
      58,
      4,
      63
    ],
    "code_indx_copy": [
      34,
      19,
      52,
      102,
      13,
      151,
      7,
      102,
      8,
      151,
      9,
      91,
      53
    ],
    "code_indx_nocopy": [
      34,
      19,
      52,
      102,
      13,
      151,
      7,
      102,
      8,
      151,
      9,
      91,
      53
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "dictionary",
      "var_0",
      "from",
      "list",
      "of",
      "key",
      "value",
      "pairs",
      "var_1"
    ],
    "code": [
      "var_0",
      "=",
      "{",
      "k",
      ":",
      "v",
      "for",
      "k",
      ",",
      "v",
      "in",
      "var_1",
      "}"
    ],
    "slot_map": {
      "var_0": {
        "value": "d",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "iterable",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      148,
      3,
      25,
      26,
      58,
      4,
      2,
      23,
      143,
      187,
      63
    ],
    "code_indx_copy": [
      34,
      19,
      52,
      89,
      13,
      90,
      7,
      89,
      8,
      90,
      9,
      91,
      53
    ],
    "code_indx_nocopy": [
      34,
      19,
      52,
      89,
      13,
      90,
      7,
      89,
      8,
      90,
      9,
      91,
      53
    ]
  },
  {
    "intent": [
      "round",
      "off",
      "entries",
      "in",
      "dataframe",
      "var_0",
      "column",
      "var_1",
      "to",
      "two",
      "decimal",
      "places",
      ",",
      "and",
      "entries",
      "in",
      "column",
      "var_2",
      "to",
      "three",
      "decimal",
      "places"
    ],
    "code": [
      "var_0",
      ".",
      "round",
      "(",
      "{",
      "'var_1'",
      ":",
      "2",
      ",",
      "'var_2'",
      ":",
      "3",
      "}",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "Alabama_exp",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "Credit_exp",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      253,
      465,
      254,
      24,
      43,
      26,
      147,
      63,
      8,
      29,
      255,
      256,
      62,
      31,
      254,
      24,
      147,
      64,
      8,
      240,
      255,
      256
    ],
    "code_indx_copy": [
      34,
      22,
      208,
      1,
      52,
      57,
      13,
      82,
      8,
      58,
      13,
      54,
      53,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      208,
      1,
      52,
      57,
      13,
      82,
      8,
      58,
      13,
      54,
      53,
      17
    ]
  },
  {
    "intent": [
      "make",
      "function",
      "var_0",
      "output",
      "nothing",
      "in",
      "curl",
      "var_1"
    ],
    "code": [
      "var_1",
      ".",
      "setopt",
      "(",
      "pycurl",
      ".",
      "var_0",
      ",",
      "lambda",
      "x",
      ":",
      "None",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "WRITEFUNCTION",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "p",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      191,
      69,
      26,
      257,
      465,
      24,
      465,
      63
    ],
    "code_indx_copy": [
      91,
      22,
      524,
      1,
      524,
      22,
      34,
      8,
      44,
      26,
      13,
      209,
      17
    ],
    "code_indx_nocopy": [
      91,
      22,
      524,
      1,
      524,
      22,
      34,
      8,
      44,
      26,
      13,
      209,
      17
    ]
  },
  {
    "intent": [
      "return",
      "a",
      "random",
      "word",
      "from",
      "a",
      "word",
      "list",
      "str_0"
    ],
    "code": [
      "print",
      "(",
      "random",
      ".",
      "choice",
      "(",
      "str_0",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "words",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      160,
      3,
      190,
      239,
      58,
      3,
      239,
      4,
      5
    ],
    "code_indx_copy": [
      49,
      1,
      148,
      22,
      210,
      1,
      11,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      148,
      22,
      210,
      1,
      11,
      17,
      17
    ]
  },
  {
    "intent": [
      "find",
      "a",
      "max",
      "value",
      "of",
      "the",
      "key",
      "var_0",
      "in",
      "a",
      "nested",
      "dictionary",
      "var_1"
    ],
    "code": [
      "max",
      "(",
      "var_1",
      ",",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "var_1",
      "[",
      "x",
      "]",
      "[",
      "'var_0'",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "count",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "d",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      47,
      3,
      258,
      143,
      2,
      18,
      23,
      26,
      24,
      3,
      154,
      25,
      63
    ],
    "code_indx_copy": [
      179,
      1,
      91,
      8,
      102,
      19,
      44,
      26,
      13,
      91,
      12,
      26,
      16,
      12,
      56,
      16,
      17
    ],
    "code_indx_nocopy": [
      179,
      1,
      91,
      8,
      102,
      19,
      44,
      26,
      13,
      91,
      12,
      26,
      16,
      12,
      56,
      16,
      17
    ]
  },
  {
    "intent": [
      "get",
      "list",
      "of",
      "string",
      "elements",
      "in",
      "string",
      "var_0",
      "delimited",
      "by",
      "commas",
      ",",
      "putting",
      "str_0",
      "in",
      "place",
      "of",
      "empty",
      "strings"
    ],
    "code": [
      "[",
      "(",
      "int",
      "(",
      "x",
      ")",
      "if",
      "x",
      "else",
      "0",
      ")",
      "for",
      "x",
      "in",
      "var_0",
      ".",
      "split",
      "(",
      "','",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "data",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "0",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      4,
      2,
      14,
      1,
      24,
      14,
      26,
      465,
      44,
      465,
      62,
      465,
      5,
      24,
      465,
      2,
      146,
      259
    ],
    "code_indx_copy": [
      12,
      1,
      20,
      1,
      26,
      17,
      67,
      26,
      211,
      43,
      17,
      7,
      26,
      9,
      34,
      22,
      71,
      1,
      73,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      1,
      20,
      1,
      26,
      17,
      67,
      26,
      211,
      43,
      17,
      7,
      26,
      9,
      34,
      22,
      71,
      1,
      73,
      17,
      16
    ]
  },
  {
    "intent": [
      "split",
      "string",
      "var_0",
      "into",
      "a",
      "list",
      "of",
      "strings",
      "based",
      "on",
      "str_0",
      "then",
      "replace",
      "empty",
      "strings",
      "with",
      "zero"
    ],
    "code": [
      "\"\"\"str_0\"\"\"",
      ".",
      "join",
      "(",
      "x",
      "or",
      "'0'",
      "for",
      "x",
      "in",
      "var_0",
      ".",
      "split",
      "(",
      "'str_0'",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": ",",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      138,
      14,
      26,
      12,
      3,
      4,
      2,
      259,
      208,
      139,
      5,
      260,
      130,
      146,
      259,
      79,
      261
    ],
    "code_indx_copy": [
      212,
      22,
      23,
      1,
      26,
      524,
      213,
      7,
      26,
      9,
      34,
      22,
      71,
      1,
      29,
      17,
      17
    ],
    "code_indx_nocopy": [
      212,
      22,
      23,
      1,
      26,
      524,
      213,
      7,
      26,
      9,
      34,
      22,
      71,
      1,
      29,
      17,
      17
    ]
  },
  {
    "intent": [
      "regular",
      "expression",
      "match",
      "nothing"
    ],
    "code": [
      "re",
      ".",
      "compile",
      "(",
      "'$^'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      250,
      226,
      144,
      465
    ],
    "code_indx_copy": [
      39,
      22,
      83,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      83,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "regular",
      "expression",
      "syntax",
      "for",
      "not",
      "to",
      "match",
      "anything"
    ],
    "code": [
      "re",
      ".",
      "compile",
      "(",
      "'.\\\\A|.\\\\A*|.\\\\A+'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      250,
      226,
      465,
      21,
      105,
      8,
      144,
      465
    ],
    "code_indx_copy": [
      39,
      22,
      83,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      83,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "regular",
      "expression",
      "object",
      "with",
      "a",
      "pattern",
      "that",
      "will",
      "match",
      "nothing"
    ],
    "code": [
      "re",
      ".",
      "compile",
      "(",
      "'a^'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      148,
      3,
      250,
      226,
      15,
      79,
      3,
      54,
      195,
      465,
      144,
      465
    ],
    "code_indx_copy": [
      39,
      22,
      83,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      83,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "drop",
      "all",
      "columns",
      "in",
      "dataframe",
      "var_0",
      "that",
      "holds",
      "a",
      "maximum",
      "value",
      "bigger",
      "than",
      "0"
    ],
    "code": [
      "var_0",
      ".",
      "columns",
      "[",
      "var_0",
      ".",
      "max",
      "(",
      ")",
      ">",
      "0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      262,
      38,
      61,
      24,
      43,
      26,
      195,
      465,
      3,
      227,
      143,
      263,
      264,
      107
    ],
    "code_indx_copy": [
      34,
      22,
      192,
      12,
      34,
      22,
      179,
      1,
      17,
      214,
      43,
      16
    ],
    "code_indx_nocopy": [
      34,
      22,
      192,
      12,
      34,
      22,
      179,
      1,
      17,
      214,
      43,
      16
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "date",
      "var_0",
      "is",
      "equal",
      "to",
      "today",
      "'s",
      "date"
    ],
    "code": [
      "var_0",
      ".",
      "date",
      "(",
      ")",
      "==",
      "datetime",
      ".",
      "today",
      "(",
      ")",
      ".",
      "date",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "yourdatetime",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      234,
      150,
      133,
      26,
      152,
      106,
      8,
      265,
      266,
      133
    ],
    "code_indx_copy": [
      34,
      22,
      139,
      1,
      17,
      76,
      27,
      22,
      137,
      1,
      17,
      22,
      139,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      139,
      1,
      17,
      76,
      27,
      22,
      137,
      1,
      17,
      22,
      139,
      1,
      17
    ]
  },
  {
    "intent": [
      "print",
      "bold",
      "text",
      "str_0"
    ],
    "code": [
      "print",
      "(",
      "'\\x1b[1m'",
      "+",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "Hello",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      166,
      465,
      267,
      5
    ],
    "code_indx_copy": [
      49,
      1,
      524,
      96,
      29,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      524,
      96,
      29,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "20",
      "symbols",
      "in",
      "front",
      "of",
      "str_0",
      "in",
      "string",
      "str_1"
    ],
    "code": [
      "re",
      ".",
      "sub",
      "(",
      "'.{20}(.mkv)'",
      ",",
      "'\\\\1'",
      ",",
      "'str_1'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": ".",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "unique12345678901234567890.mkv",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      268,
      465,
      465,
      24,
      269,
      2,
      5,
      24,
      14,
      32
    ],
    "code_indx_copy": [
      39,
      22,
      40,
      1,
      524,
      8,
      41,
      8,
      63,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      40,
      1,
      524,
      8,
      41,
      8,
      63,
      17
    ]
  },
  {
    "intent": [
      "define",
      "a",
      "list",
      "with",
      "string",
      "values",
      "str_0"
    ],
    "code": [
      "[",
      "str_0",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "['a', 'c', 'b', 'obj']",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "['a', 'c', 'b', 'obj']",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      3,
      4,
      79,
      14,
      20,
      5
    ],
    "code_indx_copy": [
      12,
      11,
      16
    ],
    "code_indx_nocopy": [
      12,
      11,
      16
    ]
  },
  {
    "intent": [
      "substitute",
      "multiple",
      "whitespace",
      "with",
      "single",
      "whitespace",
      "in",
      "string",
      "var_0"
    ],
    "code": [
      "\"\"\" \"\"\"",
      ".",
      "join",
      "(",
      "var_0",
      ".",
      "split",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "mystring",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      6,
      211,
      79,
      9,
      211,
      24,
      14,
      26
    ],
    "code_indx_copy": [
      215,
      22,
      23,
      1,
      34,
      22,
      71,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      215,
      22,
      23,
      1,
      34,
      22,
      71,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "print",
      "a",
      "floating",
      "point",
      "number",
      "2.345e-67",
      "without",
      "any",
      "truncation"
    ],
    "code": [
      "print",
      "(",
      "'{:.100f}'",
      ".",
      "format",
      "(",
      "2.345e-67",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      166,
      3,
      270,
      271,
      76,
      465,
      103,
      272,
      465
    ],
    "code_indx_copy": [
      49,
      1,
      524,
      22,
      38,
      1,
      533,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      524,
      22,
      38,
      1,
      524,
      17,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "key",
      "str_0",
      "in",
      "var_0"
    ],
    "code": [
      "'str_0'",
      "in",
      "var_0"
    ],
    "slot_map": {
      "str_0": {
        "value": "key1",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "dict",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      234,
      150,
      23,
      5,
      24,
      26
    ],
    "code_indx_copy": [
      29,
      9,
      34
    ],
    "code_indx_nocopy": [
      29,
      9,
      34
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "key",
      "str_0",
      "in",
      "var_0"
    ],
    "code": [
      "'str_0'",
      "in",
      "var_0"
    ],
    "slot_map": {
      "str_0": {
        "value": "a",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "d",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      234,
      150,
      23,
      5,
      24,
      26
    ],
    "code_indx_copy": [
      29,
      9,
      34
    ],
    "code_indx_nocopy": [
      29,
      9,
      34
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "key",
      "str_0",
      "in",
      "var_0"
    ],
    "code": [
      "'str_0'",
      "in",
      "var_0"
    ],
    "slot_map": {
      "str_0": {
        "value": "c",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "d",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      234,
      150,
      23,
      5,
      24,
      26
    ],
    "code_indx_copy": [
      29,
      9,
      34
    ],
    "code_indx_nocopy": [
      29,
      9,
      34
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "a",
      "given",
      "key",
      "str_0",
      "exists",
      "in",
      "dictionary",
      "var_0"
    ],
    "code": [
      "if",
      "'str_0'",
      "in",
      "var_0",
      ":",
      "\n",
      "    ",
      "pass",
      ""
    ],
    "slot_map": {
      "str_0": {
        "value": "key1",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "dict",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      234,
      150,
      3,
      273,
      23,
      5,
      274,
      24,
      25,
      26
    ],
    "code_indx_copy": [
      67,
      29,
      9,
      34,
      13,
      161,
      216,
      217,
      218
    ],
    "code_indx_nocopy": [
      67,
      29,
      9,
      34,
      13,
      161,
      216,
      217,
      218
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "a",
      "given",
      "key",
      "var_0",
      "exists",
      "in",
      "dictionary",
      "var_1"
    ],
    "code": [
      "if",
      "var_0",
      "in",
      "var_1",
      ":",
      "\n",
      "    ",
      "pass",
      ""
    ],
    "slot_map": {
      "var_0": {
        "value": "key",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "d",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      234,
      150,
      3,
      273,
      23,
      26,
      274,
      24,
      25,
      63
    ],
    "code_indx_copy": [
      67,
      34,
      9,
      91,
      13,
      161,
      216,
      217,
      218
    ],
    "code_indx_nocopy": [
      67,
      34,
      9,
      91,
      13,
      161,
      216,
      217,
      218
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "django",
      "query",
      "for",
      "a",
      "list",
      "of",
      "values",
      "str_0"
    ],
    "code": [
      "Blog",
      ".",
      "objects",
      ".",
      "filter",
      "(",
      "pk__in",
      "=",
      "[",
      "1",
      ",",
      "4",
      ",",
      "7",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "1, 4, 7",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      148,
      3,
      87,
      275,
      21,
      3,
      4,
      2,
      20,
      5
    ],
    "code_indx_copy": [
      524,
      22,
      78,
      22,
      79,
      1,
      524,
      19,
      12,
      15,
      8,
      184,
      8,
      219,
      16,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      78,
      22,
      79,
      1,
      524,
      19,
      12,
      15,
      8,
      184,
      8,
      219,
      16,
      17
    ]
  },
  {
    "intent": [
      "read",
      "a",
      "binary",
      "file",
      "str_0"
    ],
    "code": [
      "f",
      "=",
      "open",
      "(",
      "'str_0'",
      ",",
      "'rb'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "test/test.pdf",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      124,
      3,
      276,
      126,
      5
    ],
    "code_indx_copy": [
      190,
      19,
      105,
      1,
      29,
      8,
      155,
      17
    ],
    "code_indx_nocopy": [
      190,
      19,
      105,
      1,
      29,
      8,
      155,
      17
    ]
  },
  {
    "intent": [
      "insert",
      "str_0",
      "between",
      "every",
      "three",
      "digit",
      "before",
      "str_1",
      "and",
      "replace",
      "str_2",
      "with",
      "str_1",
      "in",
      "12345678.46"
    ],
    "code": [
      "format",
      "(",
      "12345678.46",
      ",",
      "'str_2'",
      ")",
      ".",
      "replace",
      "(",
      "'str_2'",
      ",",
      "' '",
      ")",
      ".",
      "replace",
      "(",
      "'str_3'",
      ",",
      "'str_2'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": ".",
        "quote": "'",
        "type": "str"
      },
      "str_2": {
        "value": ",",
        "quote": "'",
        "type": "str"
      },
      "str_3": {
        "value": ".",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      277,
      5,
      278,
      279,
      240,
      465,
      280,
      32,
      31,
      130,
      194,
      79,
      32,
      24,
      465
    ],
    "code_indx_copy": [
      38,
      1,
      542,
      8,
      150,
      17,
      22,
      107,
      1,
      150,
      8,
      108,
      17,
      22,
      107,
      1,
      173,
      8,
      150,
      17
    ],
    "code_indx_nocopy": [
      38,
      1,
      524,
      8,
      150,
      17,
      22,
      107,
      1,
      150,
      8,
      108,
      17,
      22,
      107,
      1,
      173,
      8,
      150,
      17
    ]
  },
  {
    "intent": [
      "join",
      "pandas",
      "data",
      "frame",
      "var_0",
      "and",
      "var_1",
      "with",
      "left",
      "join",
      "by",
      "var_2",
      "and",
      "right",
      "join",
      "by",
      "var_3"
    ],
    "code": [
      "pd",
      ".",
      "merge",
      "(",
      "var_0",
      ",",
      "var_1",
      ",",
      "left_on",
      "=",
      "'var_2'",
      ",",
      "right_on",
      "=",
      "'var_3'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "frame_1",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "frame_2",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "county_ID",
        "quote": "`",
        "type": "var"
      },
      "var_3": {
        "value": "countyid",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      281,
      42,
      65,
      66,
      26,
      31,
      63,
      79,
      214,
      281,
      44,
      64,
      31,
      216,
      281,
      44,
      67
    ],
    "code_indx_copy": [
      162,
      22,
      220,
      1,
      34,
      8,
      91,
      8,
      524,
      19,
      58,
      8,
      524,
      19,
      221,
      17
    ],
    "code_indx_nocopy": [
      162,
      22,
      220,
      1,
      34,
      8,
      91,
      8,
      524,
      19,
      58,
      8,
      524,
      19,
      221,
      17
    ]
  },
  {
    "intent": [
      "calculate",
      "ratio",
      "of",
      "sparsity",
      "in",
      "a",
      "numpy",
      "array",
      "var_0"
    ],
    "code": [
      "np",
      ".",
      "isnan",
      "(",
      "var_0",
      ")",
      ".",
      "sum",
      "(",
      ")",
      "/",
      "np",
      ".",
      "prod",
      "(",
      "var_0",
      ".",
      "shape",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      252,
      465,
      2,
      465,
      24,
      3,
      84,
      85,
      26
    ],
    "code_indx_copy": [
      74,
      22,
      222,
      1,
      34,
      17,
      22,
      0,
      1,
      17,
      31,
      74,
      22,
      524,
      1,
      34,
      22,
      223,
      17
    ],
    "code_indx_nocopy": [
      74,
      22,
      222,
      1,
      34,
      17,
      22,
      0,
      1,
      17,
      31,
      74,
      22,
      524,
      1,
      34,
      22,
      223,
      17
    ]
  },
  {
    "intent": [
      "reverse",
      "sort",
      "items",
      "in",
      "default",
      "dictionary",
      "var_0",
      "by",
      "the",
      "third",
      "item",
      "in",
      "each",
      "key",
      "'s",
      "list",
      "of",
      "values"
    ],
    "code": [
      "sorted",
      "(",
      "iter",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      ",",
      "key",
      "=",
      "lambda",
      "k_v",
      ":",
      "k_v",
      "[",
      "1",
      "]",
      "[",
      "2",
      "]",
      ",",
      "reverse",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "cityPopulation",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      282,
      117,
      39,
      24,
      233,
      25,
      26,
      44,
      18,
      120,
      156,
      24,
      22,
      23,
      266,
      4,
      2,
      20
    ],
    "code_indx_copy": [
      101,
      1,
      165,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      8,
      102,
      19,
      44,
      224,
      13,
      224,
      12,
      15,
      16,
      12,
      82,
      16,
      8,
      129,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      165,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      8,
      102,
      19,
      44,
      224,
      13,
      224,
      12,
      15,
      16,
      12,
      82,
      16,
      8,
      129,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "dictionary",
      "var_0",
      "in",
      "ascending",
      "order",
      "based",
      "on",
      "second",
      "elements",
      "of",
      "its",
      "values"
    ],
    "code": [
      "sorted",
      "(",
      "list",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      ",",
      "key",
      "=",
      "lambda",
      "v",
      ":",
      "v",
      "[",
      "1",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "u",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      25,
      26,
      24,
      119,
      162,
      208,
      139,
      118,
      1,
      2,
      91,
      20
    ],
    "code_indx_copy": [
      101,
      1,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      8,
      102,
      19,
      44,
      90,
      13,
      90,
      12,
      15,
      16,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      8,
      102,
      19,
      44,
      90,
      13,
      90,
      12,
      15,
      16,
      17
    ]
  },
  {
    "intent": [
      "reverse",
      "sort",
      "dictionary",
      "var_0",
      "based",
      "on",
      "its",
      "values"
    ],
    "code": [
      "sorted",
      "(",
      "list",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      ",",
      "key",
      "=",
      "lambda",
      "k_v",
      ":",
      "k_v",
      "[",
      "1",
      "]",
      ",",
      "reverse",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "d",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      282,
      117,
      25,
      26,
      208,
      139,
      91,
      20
    ],
    "code_indx_copy": [
      101,
      1,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      8,
      102,
      19,
      44,
      224,
      13,
      224,
      12,
      15,
      16,
      8,
      129,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      8,
      102,
      19,
      44,
      224,
      13,
      224,
      12,
      15,
      16,
      8,
      129,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "sorting",
      "a",
      "defaultdict",
      "var_0",
      "by",
      "value"
    ],
    "code": [
      "sorted",
      "(",
      "list",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      ",",
      "key",
      "=",
      "lambda",
      "k_v",
      ":",
      "k_v",
      "[",
      "1",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "d",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      283,
      3,
      465,
      26,
      44,
      143
    ],
    "code_indx_copy": [
      101,
      1,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      8,
      102,
      19,
      44,
      224,
      13,
      224,
      12,
      15,
      16,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      8,
      102,
      19,
      44,
      224,
      13,
      224,
      12,
      15,
      16,
      17
    ]
  },
  {
    "intent": [
      "open",
      "a",
      "file",
      "str_0",
      "in",
      "the",
      "same",
      "directory",
      "as",
      "a",
      "python",
      "script"
    ],
    "code": [
      "f",
      "=",
      "open",
      "(",
      "os",
      ".",
      "path",
      ".",
      "join",
      "(",
      "__location__",
      ",",
      "'str_0'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "bundled-resource.jpg",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      284,
      3,
      126,
      5,
      24,
      18,
      36,
      175,
      90,
      3,
      50,
      246
    ],
    "code_indx_copy": [
      190,
      19,
      105,
      1,
      113,
      22,
      114,
      22,
      23,
      1,
      524,
      8,
      29,
      17,
      17
    ],
    "code_indx_nocopy": [
      190,
      19,
      105,
      1,
      113,
      22,
      114,
      22,
      23,
      1,
      524,
      8,
      29,
      17,
      17
    ]
  },
  {
    "intent": [
      "open",
      "the",
      "file",
      "str_0",
      "in",
      "str_1",
      "mode"
    ],
    "code": [
      "f",
      "=",
      "open",
      "(",
      "'str_0'",
      ",",
      "'str_1'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "words.txt",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "rU",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      284,
      18,
      126,
      5,
      24,
      32,
      285
    ],
    "code_indx_copy": [
      190,
      19,
      105,
      1,
      29,
      8,
      63,
      17
    ],
    "code_indx_nocopy": [
      190,
      19,
      105,
      1,
      29,
      8,
      63,
      17
    ]
  },
  {
    "intent": [
      "divide",
      "the",
      "values",
      "with",
      "same",
      "keys",
      "of",
      "two",
      "dictionary",
      "var_0",
      "and",
      "var_1"
    ],
    "code": [
      "{",
      "k",
      ":",
      "(",
      "float",
      "(",
      "var_1",
      "[",
      "k",
      "]",
      ")",
      "/",
      "var_0",
      "[",
      "k",
      "]",
      ")",
      "for",
      "k",
      "in",
      "var_1",
      "}"
    ],
    "slot_map": {
      "var_0": {
        "value": "d1",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "d2",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      127,
      18,
      20,
      79,
      36,
      206,
      2,
      29,
      25,
      26,
      31,
      63
    ],
    "code_indx_copy": [
      52,
      89,
      13,
      1,
      225,
      1,
      91,
      12,
      89,
      16,
      17,
      31,
      34,
      12,
      89,
      16,
      17,
      7,
      89,
      9,
      91,
      53
    ],
    "code_indx_nocopy": [
      52,
      89,
      13,
      1,
      225,
      1,
      91,
      12,
      89,
      16,
      17,
      31,
      34,
      12,
      89,
      16,
      17,
      7,
      89,
      9,
      91,
      53
    ]
  },
  {
    "intent": [
      "divide",
      "the",
      "value",
      "for",
      "each",
      "key",
      "var_0",
      "in",
      "dict",
      "var_1",
      "by",
      "the",
      "value",
      "for",
      "the",
      "same",
      "key",
      "var_0",
      "in",
      "dict",
      "var_3"
    ],
    "code": [
      "{",
      "var_2",
      ":",
      "(",
      "var_1",
      "[",
      "var_2",
      "]",
      "/",
      "var_3",
      "[",
      "var_2",
      "]",
      ")",
      "for",
      "var_2",
      "in",
      "list",
      "(",
      "var_3",
      ".",
      "keys",
      "(",
      ")",
      ")",
      "&",
      "var_1",
      "}"
    ],
    "slot_map": {
      "var_0": {
        "value": "k",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "d2",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "k",
        "quote": "`",
        "type": "var"
      },
      "var_3": {
        "value": "d1",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      127,
      18,
      143,
      21,
      22,
      23,
      26,
      24,
      186,
      63,
      44,
      18,
      143,
      21,
      18,
      36,
      23,
      26,
      24,
      186,
      67
    ],
    "code_indx_copy": [
      52,
      94,
      13,
      1,
      91,
      12,
      94,
      16,
      31,
      55,
      12,
      94,
      16,
      17,
      7,
      94,
      9,
      33,
      1,
      55,
      22,
      167,
      1,
      17,
      17,
      226,
      91,
      53
    ],
    "code_indx_nocopy": [
      52,
      94,
      13,
      1,
      91,
      12,
      94,
      16,
      31,
      55,
      12,
      94,
      16,
      17,
      7,
      94,
      9,
      33,
      1,
      55,
      22,
      167,
      1,
      17,
      17,
      226,
      91,
      53
    ]
  },
  {
    "intent": [
      "divide",
      "values",
      "associated",
      "with",
      "each",
      "key",
      "in",
      "dictionary",
      "var_0",
      "from",
      "values",
      "associated",
      "with",
      "the",
      "same",
      "key",
      "in",
      "dictionary",
      "var_1"
    ],
    "code": [
      "dict",
      "(",
      "(",
      "k",
      ",",
      "float",
      "(",
      "var_1",
      "[",
      "k",
      "]",
      ")",
      "/",
      "var_0",
      "[",
      "k",
      "]",
      ")",
      "for",
      "k",
      "in",
      "var_1",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "d1",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "d2",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      127,
      20,
      286,
      79,
      22,
      23,
      24,
      25,
      26,
      58,
      20,
      286,
      79,
      18,
      36,
      23,
      24,
      25,
      63
    ],
    "code_indx_copy": [
      70,
      1,
      1,
      89,
      8,
      225,
      1,
      91,
      12,
      89,
      16,
      17,
      31,
      34,
      12,
      89,
      16,
      17,
      7,
      89,
      9,
      91,
      17
    ],
    "code_indx_nocopy": [
      70,
      1,
      1,
      89,
      8,
      225,
      1,
      91,
      12,
      89,
      16,
      17,
      31,
      34,
      12,
      89,
      16,
      17,
      7,
      89,
      9,
      91,
      17
    ]
  },
  {
    "intent": [
      "write",
      "dataframe",
      "var_0",
      "to",
      "csv",
      "file",
      "var_1",
      "with",
      "dates",
      "formatted",
      "as",
      "yearmonthday",
      "str_0"
    ],
    "code": [
      "var_0",
      ".",
      "to_csv",
      "(",
      "var_1",
      ",",
      "date_format",
      "=",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "filename",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "%Y%m%d",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      168,
      43,
      26,
      8,
      287,
      126,
      63,
      79,
      465,
      288,
      90,
      465,
      5
    ],
    "code_indx_copy": [
      34,
      22,
      227,
      1,
      91,
      8,
      524,
      19,
      29,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      227,
      1,
      91,
      8,
      524,
      19,
      29,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "a",
      "key",
      "str_0",
      "from",
      "a",
      "dictionary",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "pop",
      "(",
      "'str_0'",
      ",",
      "None",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "key",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "my_dict",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      3,
      23,
      5,
      58,
      3,
      25,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      228,
      1,
      29,
      8,
      209,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      228,
      1,
      29,
      8,
      209,
      17
    ]
  },
  {
    "intent": [
      "replace",
      "nan",
      "values",
      "in",
      "array",
      "var_0",
      "with",
      "zeros"
    ],
    "code": [
      "b",
      "=",
      "np",
      ".",
      "where",
      "(",
      "np",
      ".",
      "isnan",
      "(",
      "var_0",
      ")",
      ",",
      "0",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      130,
      289,
      20,
      24,
      85,
      26,
      79,
      465
    ],
    "code_indx_copy": [
      97,
      19,
      74,
      22,
      75,
      1,
      74,
      22,
      222,
      1,
      34,
      17,
      8,
      43,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      97,
      19,
      74,
      22,
      75,
      1,
      74,
      22,
      222,
      1,
      34,
      17,
      8,
      43,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "subprocess",
      "run",
      "command",
      "str_0",
      "through",
      "the",
      "shell"
    ],
    "code": [
      "subprocess",
      ".",
      "call",
      "(",
      "'str_0'",
      ",",
      "shell",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "start command -flags arguments",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      290,
      251,
      137,
      5,
      291,
      18,
      292
    ],
    "code_indx_copy": [
      229,
      22,
      230,
      1,
      29,
      8,
      231,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      229,
      22,
      230,
      1,
      29,
      8,
      231,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "run",
      "command",
      "str_0",
      "on",
      "command",
      "line",
      "tools",
      "as",
      "separate",
      "processes"
    ],
    "code": [
      "subprocess",
      ".",
      "call",
      "(",
      "'str_0'",
      ",",
      "shell",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "command -flags arguments &",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      251,
      137,
      5,
      139,
      137,
      172,
      465,
      90,
      96,
      465
    ],
    "code_indx_copy": [
      229,
      22,
      230,
      1,
      29,
      8,
      231,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      229,
      22,
      230,
      1,
      29,
      8,
      231,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "replace",
      "percent-encoded",
      "code",
      "in",
      "request",
      "var_0",
      "to",
      "their",
      "single-character",
      "equivalent"
    ],
    "code": [
      "var_0",
      "=",
      "urllib",
      ".",
      "request",
      ".",
      "urlopen",
      "(",
      "url",
      ",",
      "urllib",
      ".",
      "parse",
      ".",
      "unquote",
      "(",
      "urllib",
      ".",
      "parse",
      ".",
      "\n",
      "urlencode",
      "(",
      "params",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "f",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      130,
      465,
      293,
      24,
      101,
      26,
      8,
      294,
      465,
      465
    ],
    "code_indx_copy": [
      34,
      19,
      232,
      22,
      233,
      22,
      234,
      1,
      235,
      8,
      232,
      22,
      236,
      22,
      237,
      1,
      232,
      22,
      236,
      22,
      161,
      524,
      1,
      238,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      232,
      22,
      233,
      22,
      234,
      1,
      235,
      8,
      232,
      22,
      236,
      22,
      237,
      1,
      232,
      22,
      236,
      22,
      161,
      524,
      1,
      238,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "white",
      "spaces",
      "from",
      "the",
      "end",
      "of",
      "string",
      "str_0"
    ],
    "code": [
      "\"\"\"    xyz     \"\"\"",
      ".",
      "rstrip",
      "(",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "xyz",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      268,
      131,
      132,
      58,
      18,
      295,
      2,
      14,
      5
    ],
    "code_indx_copy": [
      524,
      22,
      172,
      1,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      172,
      1,
      17
    ]
  },
  {
    "intent": [
      "replace",
      "special",
      "characters",
      "in",
      "utf-8",
      "encoded",
      "string",
      "var_0",
      "using",
      "the",
      "%",
      "xx",
      "escape"
    ],
    "code": [
      "urllib",
      ".",
      "parse",
      ".",
      "quote",
      "(",
      "var_0",
      ".",
      "encode",
      "(",
      "'utf-8'",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      130,
      465,
      98,
      24,
      183,
      296,
      14,
      26,
      109,
      18,
      465,
      465,
      297
    ],
    "code_indx_copy": [
      232,
      22,
      236,
      22,
      524,
      1,
      34,
      22,
      239,
      1,
      143,
      17,
      17
    ],
    "code_indx_nocopy": [
      232,
      22,
      236,
      22,
      524,
      1,
      34,
      22,
      239,
      1,
      143,
      17,
      17
    ]
  },
  {
    "intent": [
      "url",
      "encoding",
      "in",
      "python"
    ],
    "code": [
      "urllib",
      ".",
      "parse",
      ".",
      "quote_plus",
      "(",
      "'a b'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      102,
      298,
      24,
      50
    ],
    "code_indx_copy": [
      232,
      22,
      236,
      22,
      524,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      232,
      22,
      236,
      22,
      524,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "create",
      "an",
      "array",
      "containing",
      "the",
      "conversion",
      "of",
      "string",
      "str_0",
      "into",
      "separate",
      "elements"
    ],
    "code": [
      "np",
      ".",
      "array",
      "(",
      "map",
      "(",
      "int",
      ",",
      "'str_0'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "100110",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      148,
      225,
      85,
      34,
      18,
      465,
      2,
      14,
      5,
      12,
      96,
      1
    ],
    "code_indx_copy": [
      74,
      22,
      175,
      1,
      24,
      1,
      20,
      8,
      29,
      17,
      17
    ],
    "code_indx_nocopy": [
      74,
      22,
      175,
      1,
      24,
      1,
      20,
      8,
      29,
      17,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "string",
      "str_0",
      "to",
      "numpy",
      "array",
      "of",
      "integer",
      "values"
    ],
    "code": [
      "print",
      "(",
      "np",
      ".",
      "array",
      "(",
      "list",
      "(",
      "str_0",
      ")",
      ",",
      "dtype",
      "=",
      "int",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "mystr",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      3,
      14,
      5,
      8,
      84,
      85,
      2,
      10,
      20
    ],
    "code_indx_copy": [
      49,
      1,
      74,
      22,
      175,
      1,
      33,
      1,
      11,
      17,
      8,
      177,
      19,
      20,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      74,
      22,
      175,
      1,
      33,
      1,
      11,
      17,
      8,
      177,
      19,
      20,
      17,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "an",
      "rgb",
      "image",
      "str_0",
      "into",
      "grayscale",
      "var_0"
    ],
    "code": [
      "var_0",
      "=",
      "cv2",
      ".",
      "imread",
      "(",
      "'str_0'",
      ",",
      "0",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "messi5.jpg",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "img",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      225,
      465,
      299,
      5,
      12,
      465,
      26
    ],
    "code_indx_copy": [
      34,
      19,
      524,
      22,
      524,
      1,
      29,
      8,
      43,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      524,
      22,
      524,
      1,
      29,
      8,
      43,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "list",
      "var_0",
      "in",
      "descending",
      "order",
      "based",
      "on",
      "the",
      "second",
      "item",
      "of",
      "each",
      "tuple",
      "in",
      "it"
    ],
    "code": [
      "var_0",
      ".",
      "sort",
      "(",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "x",
      "[",
      "2",
      "]",
      ",",
      "reverse",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "lst",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      4,
      26,
      24,
      121,
      162,
      208,
      139,
      18,
      118,
      156,
      2,
      22,
      113,
      24,
      145
    ],
    "code_indx_copy": [
      34,
      22,
      124,
      1,
      102,
      19,
      44,
      26,
      13,
      26,
      12,
      82,
      16,
      8,
      129,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      124,
      1,
      102,
      19,
      44,
      26,
      13,
      26,
      12,
      82,
      16,
      8,
      129,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "how",
      "to",
      "find",
      "all",
      "occurrences",
      "of",
      "an",
      "element",
      "in",
      "a",
      "list",
      "?"
    ],
    "code": [
      "indices",
      "=",
      "[",
      "i",
      "for",
      "i",
      ",",
      "x",
      "in",
      "enumerate",
      "(",
      "my_list",
      ")",
      "if",
      "x",
      "==",
      "'whatever'",
      "]"
    ],
    "slot_map": {},
    "intent_indx": [
      77,
      8,
      47,
      38,
      53,
      2,
      225,
      49,
      24,
      3,
      4,
      52
    ],
    "code_indx_copy": [
      524,
      19,
      12,
      6,
      7,
      6,
      8,
      26,
      9,
      10,
      1,
      240,
      17,
      67,
      26,
      76,
      524,
      16
    ],
    "code_indx_nocopy": [
      524,
      19,
      12,
      6,
      7,
      6,
      8,
      26,
      9,
      10,
      1,
      240,
      17,
      67,
      26,
      76,
      524,
      16
    ]
  },
  {
    "intent": [
      "execute",
      "shell",
      "command",
      "str_0",
      "with",
      "a",
      "|",
      "pipe",
      "in",
      "it"
    ],
    "code": [
      "subprocess",
      ".",
      "call",
      "(",
      "'str_0'",
      ",",
      "shell",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "grep -r PASSED *.log | sort -u | wc -l",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      135,
      292,
      137,
      5,
      79,
      3,
      465,
      465,
      24,
      145
    ],
    "code_indx_copy": [
      229,
      22,
      230,
      1,
      29,
      8,
      231,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      229,
      22,
      230,
      1,
      29,
      8,
      231,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "count",
      "the",
      "number",
      "of",
      "trailing",
      "question",
      "marks",
      "in",
      "string",
      "var_0"
    ],
    "code": [
      "len",
      "(",
      "var_0",
      ")",
      "-",
      "len",
      "(",
      "var_0",
      ".",
      "rstrip",
      "(",
      "'?'",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "my_text",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      203,
      18,
      76,
      2,
      300,
      465,
      465,
      24,
      14,
      26
    ],
    "code_indx_copy": [
      32,
      1,
      34,
      17,
      14,
      32,
      1,
      34,
      22,
      172,
      1,
      241,
      17,
      17
    ],
    "code_indx_nocopy": [
      32,
      1,
      34,
      17,
      14,
      32,
      1,
      34,
      22,
      172,
      1,
      241,
      17,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "dollar",
      "sign",
      "str_0",
      "from",
      "second",
      "to",
      "last",
      "column",
      "data",
      "in",
      "dataframe",
      "str_1",
      "and",
      "convert",
      "the",
      "data",
      "into",
      "floats"
    ],
    "code": [
      "str_1",
      "[",
      "str_1",
      ".",
      "columns",
      "[",
      "1",
      ":",
      "]",
      "]",
      ".",
      "replace",
      "(",
      "'[\\\\$,]'",
      ",",
      "''",
      ",",
      "regex",
      "=",
      "True",
      ")",
      ".",
      "astype",
      "(",
      "float",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "$",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "df",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      268,
      465,
      465,
      5,
      58,
      118,
      8,
      170,
      147,
      65,
      24,
      43,
      32,
      31,
      11,
      18,
      65,
      12,
      301
    ],
    "code_indx_copy": [
      37,
      12,
      37,
      22,
      192,
      12,
      15,
      13,
      16,
      16,
      22,
      107,
      1,
      524,
      8,
      21,
      8,
      524,
      19,
      109,
      17,
      22,
      242,
      1,
      225,
      17
    ],
    "code_indx_nocopy": [
      37,
      12,
      37,
      22,
      192,
      12,
      15,
      13,
      16,
      16,
      22,
      107,
      1,
      524,
      8,
      21,
      8,
      524,
      19,
      109,
      17,
      22,
      242,
      1,
      225,
      17
    ]
  },
  {
    "intent": [
      "merge",
      "column",
      "str_0",
      "in",
      "dataframe",
      "var_0",
      "with",
      "column",
      "str_0",
      "on",
      "dataframe",
      "var_1"
    ],
    "code": [
      "var_1",
      ".",
      "merge",
      "(",
      "var_0",
      ",",
      "how",
      "=",
      "'left'",
      ",",
      "on",
      "=",
      "'str_1'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "word",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "df2",
        "quote": "`",
        "type": "var"
      },
      "str_1": {
        "value": "word",
        "quote": "'",
        "type": "str"
      },
      "var_1": {
        "value": "df1",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      247,
      147,
      5,
      24,
      43,
      26,
      79,
      147,
      5,
      139,
      43,
      63
    ],
    "code_indx_copy": [
      91,
      22,
      220,
      1,
      34,
      8,
      243,
      19,
      524,
      8,
      244,
      19,
      63,
      17
    ],
    "code_indx_nocopy": [
      91,
      22,
      220,
      1,
      34,
      8,
      243,
      19,
      524,
      8,
      244,
      19,
      63,
      17
    ]
  },
  {
    "intent": [
      "switch",
      "positions",
      "of",
      "each",
      "two",
      "adjacent",
      "characters",
      "in",
      "string",
      "var_0"
    ],
    "code": [
      "print",
      "(",
      "''",
      ".",
      "join",
      "(",
      "''",
      ".",
      "join",
      "(",
      "i",
      ")",
      "for",
      "i",
      "in",
      "zip",
      "(",
      "a2",
      ",",
      "a1",
      ")",
      ")",
      "+",
      "var_0",
      "[",
      "-",
      "1",
      "]",
      "if",
      "len",
      "(",
      "var_0",
      ")",
      "%",
      "\n",
      "2",
      "else",
      "''",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      465,
      2,
      22,
      29,
      465,
      98,
      24,
      14,
      26
    ],
    "code_indx_copy": [
      49,
      1,
      21,
      22,
      23,
      1,
      21,
      22,
      23,
      1,
      6,
      17,
      7,
      6,
      9,
      36,
      1,
      524,
      8,
      524,
      17,
      17,
      96,
      34,
      12,
      14,
      15,
      16,
      67,
      32,
      1,
      34,
      17,
      117,
      161,
      82,
      211,
      21,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      21,
      22,
      23,
      1,
      21,
      22,
      23,
      1,
      6,
      17,
      7,
      6,
      9,
      36,
      1,
      524,
      8,
      524,
      17,
      17,
      96,
      34,
      12,
      14,
      15,
      16,
      67,
      32,
      1,
      34,
      17,
      117,
      161,
      82,
      211,
      21,
      17
    ]
  },
  {
    "intent": [
      "make",
      "a",
      "window",
      "var_0",
      "jump",
      "to",
      "the",
      "front"
    ],
    "code": [
      "var_0",
      ".",
      "attributes",
      "(",
      "'-topmost'",
      ",",
      "True",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "root",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      191,
      3,
      302,
      26,
      465,
      8,
      18,
      269
    ],
    "code_indx_copy": [
      34,
      22,
      524,
      1,
      524,
      8,
      109,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      524,
      1,
      524,
      8,
      109,
      17
    ]
  },
  {
    "intent": [
      "make",
      "a",
      "window",
      "var_0",
      "jump",
      "to",
      "the",
      "front"
    ],
    "code": [
      "var_0",
      ".",
      "lift",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "root",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      191,
      3,
      302,
      26,
      465,
      8,
      18,
      269
    ],
    "code_indx_copy": [
      34,
      22,
      524,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      524,
      1,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "list",
      "of",
      "booleans",
      "var_0",
      "into",
      "a",
      "hex",
      "string"
    ],
    "code": [
      "hex",
      "(",
      "int",
      "(",
      "''",
      ".",
      "join",
      "(",
      "[",
      "str",
      "(",
      "int",
      "(",
      "b",
      ")",
      ")",
      "for",
      "b",
      "in",
      "var_0",
      "]",
      ")",
      ",",
      "2",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "walls",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      4,
      2,
      465,
      26,
      12,
      3,
      116,
      14
    ],
    "code_indx_copy": [
      245,
      1,
      20,
      1,
      21,
      22,
      23,
      1,
      12,
      25,
      1,
      20,
      1,
      97,
      17,
      17,
      7,
      97,
      9,
      34,
      16,
      17,
      8,
      82,
      17,
      17
    ],
    "code_indx_nocopy": [
      245,
      1,
      20,
      1,
      21,
      22,
      23,
      1,
      12,
      25,
      1,
      20,
      1,
      97,
      17,
      17,
      7,
      97,
      9,
      34,
      16,
      17,
      8,
      82,
      17,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "the",
      "sum",
      "of",
      "list",
      "var_0",
      "into",
      "a",
      "hex",
      "presentation"
    ],
    "code": [
      "hex",
      "(",
      "sum",
      "(",
      "b",
      "<<",
      "i",
      "for",
      "i",
      ",",
      "b",
      "in",
      "enumerate",
      "(",
      "reversed",
      "(",
      "var_0",
      ")",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "walls",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      18,
      112,
      2,
      4,
      26,
      12,
      3,
      116,
      465
    ],
    "code_indx_copy": [
      245,
      1,
      0,
      1,
      97,
      524,
      6,
      7,
      6,
      8,
      97,
      9,
      10,
      1,
      246,
      1,
      34,
      17,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      245,
      1,
      0,
      1,
      97,
      524,
      6,
      7,
      6,
      8,
      97,
      9,
      10,
      1,
      246,
      1,
      34,
      17,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "print",
      "the",
      "string",
      "str_0",
      ",",
      "the",
      "value",
      "of",
      "the",
      "variable",
      "var_0",
      ",",
      "the",
      "string",
      "var_1",
      "and",
      "the",
      "value",
      "of",
      "the",
      "variable",
      "var_2",
      "in",
      "one",
      "print",
      "call",
      "."
    ],
    "code": [
      "print",
      "(",
      "(",
      "'str_0'",
      ",",
      "var_0",
      ",",
      "'var_1'",
      ",",
      "var_2",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "Total score for",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "name",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "is",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "score",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      166,
      18,
      14,
      5,
      62,
      18,
      143,
      2,
      18,
      95,
      26,
      62,
      18,
      14,
      63,
      31,
      18,
      143,
      2,
      18,
      95,
      64,
      24,
      303,
      166,
      304,
      159
    ],
    "code_indx_copy": [
      49,
      1,
      1,
      29,
      8,
      34,
      8,
      57,
      8,
      94,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      1,
      29,
      8,
      34,
      8,
      57,
      8,
      94,
      17,
      17
    ]
  },
  {
    "intent": [
      "print",
      "multiple",
      "arguments",
      "str_0",
      "and",
      "str_1",
      "."
    ],
    "code": [
      "print",
      "(",
      "'Total score for {} is {}'",
      ".",
      "format",
      "(",
      "str_0",
      ",",
      "str_1",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "name",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "score",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      166,
      6,
      305,
      5,
      31,
      32,
      159
    ],
    "code_indx_copy": [
      49,
      1,
      524,
      22,
      38,
      1,
      11,
      8,
      37,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      524,
      22,
      38,
      1,
      11,
      8,
      37,
      17,
      17
    ]
  },
  {
    "intent": [
      "print",
      "a",
      "string",
      "using",
      "multiple",
      "strings",
      "var_0",
      "and",
      "var_1"
    ],
    "code": [
      "print",
      "(",
      "'Total score for %s is %s  '",
      "%",
      "(",
      "var_0",
      ",",
      "var_1",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "name",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "score",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      166,
      3,
      14,
      109,
      6,
      259,
      26,
      31,
      63
    ],
    "code_indx_copy": [
      49,
      1,
      524,
      117,
      1,
      34,
      8,
      91,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      524,
      117,
      1,
      34,
      8,
      91,
      17,
      17
    ]
  },
  {
    "intent": [
      "print",
      "string",
      "including",
      "multiple",
      "variables",
      "var_0",
      "and",
      "var_1"
    ],
    "code": [
      "print",
      "(",
      "(",
      "'Total score for'",
      ",",
      "var_0",
      ",",
      "'is'",
      ",",
      "var_1",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "name",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "score",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      166,
      14,
      213,
      6,
      306,
      26,
      31,
      63
    ],
    "code_indx_copy": [
      49,
      1,
      1,
      524,
      8,
      34,
      8,
      524,
      8,
      91,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      1,
      524,
      8,
      34,
      8,
      524,
      8,
      91,
      17,
      17
    ]
  },
  {
    "intent": [
      "serve",
      "a",
      "static",
      "html",
      "page",
      "str_0",
      "at",
      "the",
      "root",
      "of",
      "a",
      "django",
      "project"
    ],
    "code": [
      "url",
      "(",
      "'^$'",
      ",",
      "TemplateView",
      ".",
      "as_view",
      "(",
      "template_name",
      "=",
      "'str_0'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "your_template.html",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      3,
      465,
      307,
      308,
      5,
      35,
      18,
      158,
      2,
      3,
      87,
      465
    ],
    "code_indx_copy": [
      235,
      1,
      524,
      8,
      524,
      22,
      524,
      1,
      524,
      19,
      29,
      17,
      17
    ],
    "code_indx_nocopy": [
      235,
      1,
      524,
      8,
      524,
      22,
      524,
      1,
      524,
      19,
      29,
      17,
      17
    ]
  },
  {
    "intent": [
      "use",
      "a",
      "list",
      "of",
      "values",
      "str_0",
      "to",
      "select",
      "rows",
      "from",
      "a",
      "pandas",
      "dataframe",
      "var_0str_1a",
      "'"
    ],
    "code": [
      "var_0",
      "[",
      "var_0",
      "[",
      "'A'",
      "]",
      ".",
      "isin",
      "(",
      "[",
      "3",
      ",",
      "6",
      "]",
      ")",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "[3,6]",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "str_1": {
        "value": "s column",
        "quote": "'",
        "type": "str"
      },
      "[str_0]": {
        "value": "[3,6]",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      309,
      3,
      4,
      2,
      20,
      5,
      8,
      78,
      80,
      58,
      3,
      42,
      43,
      465,
      310
    ],
    "code_indx_copy": [
      34,
      12,
      34,
      12,
      247,
      16,
      22,
      248,
      1,
      12,
      54,
      8,
      249,
      16,
      17,
      16
    ],
    "code_indx_nocopy": [
      34,
      12,
      34,
      12,
      247,
      16,
      22,
      248,
      1,
      12,
      54,
      8,
      249,
      16,
      17,
      16
    ]
  },
  {
    "intent": [
      "how",
      "to",
      "get",
      "the",
      "concrete",
      "class",
      "name",
      "as",
      "a",
      "string",
      "?"
    ],
    "code": [
      "instance",
      ".",
      "__class__",
      ".",
      "__name__"
    ],
    "slot_map": {},
    "intent_indx": [
      77,
      8,
      17,
      18,
      465,
      311,
      129,
      90,
      3,
      14,
      52
    ],
    "code_indx_copy": [
      524,
      22,
      524,
      22,
      250
    ],
    "code_indx_nocopy": [
      524,
      22,
      524,
      22,
      250
    ]
  },
  {
    "intent": [
      "execute",
      "python",
      "code",
      "str_0",
      "in",
      "a",
      "virtualenv",
      "str_1",
      "from",
      "matlab"
    ],
    "code": [
      "system",
      "(",
      "'/path/to/my/venv/bin/python myscript.py'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "myscript.py",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": "/path/to/my/venv",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      135,
      50,
      293,
      5,
      24,
      3,
      465,
      32,
      58,
      465
    ],
    "code_indx_copy": [
      119,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      119,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "django",
      "return",
      "a",
      "queryset",
      "list",
      "containing",
      "the",
      "values",
      "of",
      "field",
      "str_0",
      "in",
      "model",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "objects",
      ".",
      "values_list",
      "(",
      "'str_0'",
      ",",
      "flat",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "eng_name",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "Employees",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      87,
      160,
      3,
      465,
      4,
      34,
      18,
      20,
      2,
      312,
      5,
      24,
      313,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      78,
      22,
      524,
      1,
      29,
      8,
      524,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      78,
      22,
      524,
      1,
      29,
      8,
      524,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "find",
      "all",
      "digits",
      "in",
      "string",
      "str_0",
      "and",
      "put",
      "them",
      "to",
      "a",
      "list"
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'\\\\d|\\\\d,\\\\d\\\\)'",
      ",",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "6,7)",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      47,
      38,
      200,
      24,
      14,
      5,
      31,
      465,
      465,
      8,
      3,
      4
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      524,
      8,
      29,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      524,
      8,
      29,
      17
    ]
  },
  {
    "intent": [
      "prompt",
      "string",
      "str_0",
      "to",
      "the",
      "console"
    ],
    "code": [
      "input",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "Press Enter to continue...",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      14,
      5,
      8,
      18,
      465
    ],
    "code_indx_copy": [
      251,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      251,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "print",
      "string",
      "str_0",
      "as",
      "hex",
      "literal"
    ],
    "code": [
      "\"\"\"\u0001ABC\"\"\"",
      ".",
      "encode",
      "(",
      "'hex'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "ABC",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      166,
      14,
      5,
      90,
      116,
      314
    ],
    "code_indx_copy": [
      524,
      22,
      239,
      1,
      100,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      239,
      1,
      100,
      17
    ]
  },
  {
    "intent": [
      "insert",
      "a",
      "new",
      "field",
      "str_0",
      "on",
      "an",
      "existing",
      "document",
      "str_1",
      "using",
      "pymongo"
    ],
    "code": [
      "db",
      ".",
      "Doc",
      ".",
      "update",
      "(",
      "{",
      "'_id'",
      ":",
      "str_1",
      "[",
      "'_id'",
      "]",
      "}",
      ",",
      "{",
      "'$set'",
      ":",
      "{",
      "'str_0'",
      ":",
      "myGeolocCountry",
      "}",
      "}",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "geolocCountry",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "b",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      277,
      3,
      192,
      312,
      5,
      139,
      225,
      465,
      465,
      32,
      109,
      465
    ],
    "code_indx_copy": [
      252,
      22,
      524,
      22,
      69,
      1,
      52,
      524,
      13,
      37,
      12,
      524,
      16,
      53,
      8,
      52,
      524,
      13,
      52,
      29,
      13,
      524,
      53,
      53,
      17
    ],
    "code_indx_nocopy": [
      252,
      22,
      524,
      22,
      69,
      1,
      52,
      524,
      13,
      37,
      12,
      524,
      16,
      53,
      8,
      52,
      524,
      13,
      52,
      29,
      13,
      524,
      53,
      53,
      17
    ]
  },
  {
    "intent": [
      "write",
      "a",
      "regex",
      "statement",
      "to",
      "match",
      "str_0",
      "to",
      "str_1",
      "."
    ],
    "code": [
      "re",
      ".",
      "sub",
      "(",
      "'l+'",
      ",",
      "'l'",
      ",",
      "'lollll'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "lol",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "lolllll",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      168,
      3,
      40,
      315,
      8,
      144,
      5,
      8,
      32,
      159
    ],
    "code_indx_copy": [
      39,
      22,
      40,
      1,
      524,
      8,
      524,
      8,
      524,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      40,
      1,
      524,
      8,
      524,
      8,
      524,
      17
    ]
  },
  {
    "intent": [
      "beautifulsoup",
      "find",
      "all",
      "str_0",
      "elements",
      "in",
      "html",
      "string",
      "var_0",
      "at",
      "the",
      "five",
      "stride",
      "starting",
      "from",
      "the",
      "fourth",
      "element"
    ],
    "code": [
      "rows",
      "=",
      "var_0",
      ".",
      "findAll",
      "(",
      "'str_0'",
      ")",
      "[",
      "4",
      ":",
      ":",
      "5",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "tr",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "soup",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      70,
      47,
      38,
      5,
      1,
      24,
      307,
      14,
      26,
      35,
      18,
      465,
      465,
      316,
      58,
      18,
      465,
      49
    ],
    "code_indx_copy": [
      253,
      19,
      34,
      22,
      254,
      1,
      29,
      17,
      12,
      184,
      13,
      13,
      185,
      16
    ],
    "code_indx_nocopy": [
      253,
      19,
      34,
      22,
      254,
      1,
      29,
      17,
      12,
      184,
      13,
      13,
      185,
      16
    ]
  },
  {
    "intent": [
      "reverse",
      "all",
      "x-axis",
      "points",
      "in",
      "pyplot"
    ],
    "code": [
      "plt",
      ".",
      "gca",
      "(",
      ")",
      ".",
      "invert_xaxis",
      "(",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      282,
      38,
      317,
      318,
      24,
      319
    ],
    "code_indx_copy": [
      196,
      22,
      255,
      1,
      17,
      22,
      524,
      1,
      17
    ],
    "code_indx_nocopy": [
      196,
      22,
      255,
      1,
      17,
      22,
      524,
      1,
      17
    ]
  },
  {
    "intent": [
      "reverse",
      "y-axis",
      "in",
      "pyplot"
    ],
    "code": [
      "plt",
      ".",
      "gca",
      "(",
      ")",
      ".",
      "invert_yaxis",
      "(",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      282,
      465,
      24,
      319
    ],
    "code_indx_copy": [
      196,
      22,
      255,
      1,
      17,
      22,
      524,
      1,
      17
    ],
    "code_indx_nocopy": [
      196,
      22,
      255,
      1,
      17,
      22,
      524,
      1,
      17
    ]
  },
  {
    "intent": [
      "stack",
      "two",
      "dataframes",
      "next",
      "to",
      "each",
      "other",
      "in",
      "pandas"
    ],
    "code": [
      "pd",
      ".",
      "concat",
      "(",
      "[",
      "GOOG",
      ",",
      "AAPL",
      "]",
      ",",
      "keys",
      "=",
      "[",
      "'GOOG'",
      ",",
      "'AAPL'",
      "]",
      ",",
      "axis",
      "=",
      "1",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      465,
      29,
      248,
      48,
      8,
      22,
      193,
      24,
      42
    ],
    "code_indx_copy": [
      162,
      22,
      163,
      1,
      12,
      524,
      8,
      524,
      16,
      8,
      167,
      19,
      12,
      524,
      8,
      524,
      16,
      8,
      42,
      19,
      15,
      17
    ],
    "code_indx_nocopy": [
      162,
      22,
      163,
      1,
      12,
      524,
      8,
      524,
      16,
      8,
      167,
      19,
      12,
      524,
      8,
      524,
      16,
      8,
      42,
      19,
      15,
      17
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "json",
      "response",
      "var_0"
    ],
    "code": [
      "return",
      "HttpResponse",
      "(",
      "json",
      ".",
      "dumps",
      "(",
      "var_0",
      ")",
      ",",
      "content_type",
      "=",
      "'application/json'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "response_data",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      148,
      3,
      181,
      465,
      26
    ],
    "code_indx_copy": [
      118,
      524,
      1,
      140,
      22,
      141,
      1,
      34,
      17,
      8,
      524,
      19,
      524,
      17
    ],
    "code_indx_nocopy": [
      118,
      524,
      1,
      140,
      22,
      141,
      1,
      34,
      17,
      8,
      524,
      19,
      524,
      17
    ]
  },
  {
    "intent": [
      "decode",
      "escape",
      "sequences",
      "in",
      "string",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "decode",
      "(",
      "'string_escape'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "myString",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      182,
      297,
      465,
      24,
      14,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      99,
      1,
      256,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      99,
      1,
      256,
      17
    ]
  },
  {
    "intent": [
      "calculate",
      "the",
      "md5",
      "checksum",
      "of",
      "a",
      "file",
      "named",
      "str_0"
    ],
    "code": [
      "hashlib",
      ".",
      "md5",
      "(",
      "open",
      "(",
      "'str_0'",
      ",",
      "'rb'",
      ")",
      ".",
      "read",
      "(",
      ")",
      ")",
      ".",
      "hexdigest",
      "(",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "filename.exe",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      252,
      18,
      465,
      465,
      2,
      3,
      126,
      320,
      5
    ],
    "code_indx_copy": [
      257,
      22,
      258,
      1,
      105,
      1,
      29,
      8,
      155,
      17,
      22,
      106,
      1,
      17,
      17,
      22,
      259,
      1,
      17
    ],
    "code_indx_nocopy": [
      257,
      22,
      258,
      1,
      105,
      1,
      29,
      8,
      155,
      17,
      22,
      106,
      1,
      17,
      17,
      22,
      259,
      1,
      17
    ]
  },
  {
    "intent": [
      "find",
      "all",
      "keys",
      "from",
      "a",
      "dictionary",
      "var_0",
      "whose",
      "values",
      "are",
      "var_1"
    ],
    "code": [
      "[",
      "k",
      "for",
      "k",
      ",",
      "v",
      "in",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      "if",
      "v",
      "==",
      "var_1",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "d",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "desired_value",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      47,
      38,
      206,
      58,
      3,
      25,
      26,
      228,
      20,
      243,
      63
    ],
    "code_indx_copy": [
      12,
      89,
      7,
      89,
      8,
      90,
      9,
      34,
      22,
      35,
      1,
      17,
      67,
      90,
      76,
      91,
      16
    ],
    "code_indx_nocopy": [
      12,
      89,
      7,
      89,
      8,
      90,
      9,
      34,
      22,
      35,
      1,
      17,
      67,
      90,
      76,
      91,
      16
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "set",
      "containing",
      "all",
      "keys",
      "'",
      "names",
      "from",
      "dictionary",
      "var_0"
    ],
    "code": [
      "{",
      "k",
      "for",
      "d",
      "in",
      "var_0",
      "for",
      "k",
      "in",
      "list",
      "(",
      "d",
      ".",
      "keys",
      "(",
      ")",
      ")",
      "}"
    ],
    "slot_map": {
      "var_0": {
        "value": "LoD",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      148,
      3,
      59,
      34,
      38,
      206,
      310,
      321,
      58,
      25,
      26
    ],
    "code_indx_copy": [
      52,
      89,
      7,
      2,
      9,
      34,
      7,
      89,
      9,
      33,
      1,
      2,
      22,
      167,
      1,
      17,
      17,
      53
    ],
    "code_indx_nocopy": [
      52,
      89,
      7,
      2,
      9,
      34,
      7,
      89,
      9,
      33,
      1,
      2,
      22,
      167,
      1,
      17,
      17,
      53
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "set",
      "containing",
      "all",
      "keys",
      "names",
      "from",
      "list",
      "of",
      "dictionaries",
      "var_0"
    ],
    "code": [
      "set",
      "(",
      "[",
      "i",
      "for",
      "s",
      "in",
      "[",
      "list",
      "(",
      "d",
      ".",
      "keys",
      "(",
      ")",
      ")",
      "for",
      "d",
      "in",
      "var_0",
      "]",
      "for",
      "i",
      "in",
      "s",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "LoD",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      148,
      3,
      59,
      34,
      38,
      206,
      321,
      58,
      4,
      2,
      188,
      26
    ],
    "code_indx_copy": [
      189,
      1,
      12,
      6,
      7,
      181,
      9,
      12,
      33,
      1,
      2,
      22,
      167,
      1,
      17,
      17,
      7,
      2,
      9,
      34,
      16,
      7,
      6,
      9,
      181,
      16,
      17
    ],
    "code_indx_nocopy": [
      189,
      1,
      12,
      6,
      7,
      181,
      9,
      12,
      33,
      1,
      2,
      22,
      167,
      1,
      17,
      17,
      7,
      2,
      9,
      34,
      16,
      7,
      6,
      9,
      181,
      16,
      17
    ]
  },
  {
    "intent": [
      "extract",
      "all",
      "keys",
      "from",
      "a",
      "list",
      "of",
      "dictionaries",
      "var_0"
    ],
    "code": [
      "[",
      "i",
      "for",
      "s",
      "in",
      "[",
      "list",
      "(",
      "d",
      ".",
      "keys",
      "(",
      ")",
      ")",
      "for",
      "d",
      "in",
      "var_0",
      "]",
      "for",
      "i",
      "in",
      "s",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "LoD",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      104,
      38,
      206,
      58,
      3,
      4,
      2,
      188,
      26
    ],
    "code_indx_copy": [
      12,
      6,
      7,
      181,
      9,
      12,
      33,
      1,
      2,
      22,
      167,
      1,
      17,
      17,
      7,
      2,
      9,
      34,
      16,
      7,
      6,
      9,
      181,
      16
    ],
    "code_indx_nocopy": [
      12,
      6,
      7,
      181,
      9,
      12,
      33,
      1,
      2,
      22,
      167,
      1,
      17,
      17,
      7,
      2,
      9,
      34,
      16,
      7,
      6,
      9,
      181,
      16
    ]
  },
  {
    "intent": [
      "unpack",
      "keys",
      "and",
      "values",
      "of",
      "a",
      "dictionary",
      "var_0",
      "into",
      "two",
      "lists"
    ],
    "code": [
      "keys",
      ",",
      "values",
      "=",
      "zip",
      "(",
      "*",
      "list",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "d",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      142,
      206,
      31,
      20,
      2,
      3,
      25,
      26,
      12,
      29,
      30
    ],
    "code_indx_copy": [
      167,
      8,
      166,
      19,
      36,
      1,
      3,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      167,
      8,
      166,
      19,
      36,
      1,
      3,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "string",
      "var_0",
      "containing",
      "a",
      "decimal",
      "to",
      "an",
      "integer"
    ],
    "code": [
      "int",
      "(",
      "Decimal",
      "(",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      3,
      14,
      26,
      34,
      3,
      255,
      8,
      225,
      10
    ],
    "code_indx_copy": [
      20,
      1,
      524,
      1,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      20,
      1,
      524,
      1,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "string",
      "to",
      "integer",
      "with",
      "decimal",
      "in",
      "python"
    ],
    "code": [
      "int",
      "(",
      "s",
      ".",
      "split",
      "(",
      "'.'",
      ")",
      "[",
      "0",
      "]",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      11,
      3,
      14,
      8,
      10,
      79,
      255,
      24,
      50
    ],
    "code_indx_copy": [
      20,
      1,
      181,
      22,
      71,
      1,
      260,
      17,
      12,
      43,
      16,
      17
    ],
    "code_indx_nocopy": [
      20,
      1,
      181,
      22,
      71,
      1,
      260,
      17,
      12,
      43,
      16,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "array",
      "var_0",
      "contains",
      "all",
      "elements",
      "of",
      "array",
      "var_1"
    ],
    "code": [
      "numpy",
      ".",
      "in1d",
      "(",
      "var_0",
      ",",
      "var_1",
      ")",
      ".",
      "all",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "b",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      234,
      150,
      85,
      26,
      75,
      38,
      1,
      2,
      85,
      63
    ],
    "code_indx_copy": [
      147,
      22,
      261,
      1,
      34,
      8,
      91,
      17,
      22,
      77,
      1,
      17
    ],
    "code_indx_nocopy": [
      147,
      22,
      261,
      1,
      34,
      8,
      91,
      17,
      22,
      77,
      1,
      17
    ]
  },
  {
    "intent": [
      "numpy",
      ":",
      "check",
      "if",
      "array",
      "str_0",
      "contains",
      "all",
      "the",
      "numbers",
      "in",
      "array",
      "str_1",
      "."
    ],
    "code": [
      "numpy",
      ".",
      "array",
      "(",
      "[",
      "(",
      "x",
      "in",
      "str_0",
      ")",
      "for",
      "x",
      "in",
      "str_1",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "a",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "b",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      84,
      128,
      234,
      150,
      85,
      5,
      75,
      38,
      18,
      97,
      24,
      85,
      32,
      159
    ],
    "code_indx_copy": [
      147,
      22,
      175,
      1,
      12,
      1,
      26,
      9,
      11,
      17,
      7,
      26,
      9,
      37,
      16,
      17
    ],
    "code_indx_nocopy": [
      147,
      22,
      175,
      1,
      12,
      1,
      26,
      9,
      11,
      17,
      7,
      26,
      9,
      37,
      16,
      17
    ]
  },
  {
    "intent": [
      "draw",
      "node",
      "labels",
      "var_0",
      "on",
      "networkx",
      "graph",
      "str_0",
      "at",
      "position",
      "var_1"
    ],
    "code": [
      "networkx",
      ".",
      "draw_networkx_labels",
      "(",
      "str_0",
      ",",
      "var_1",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "labels",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "G",
        "quote": "`",
        "type": "str"
      },
      "var_1": {
        "value": "pos",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      465,
      322,
      26,
      139,
      465,
      465,
      5,
      35,
      323,
      63
    ],
    "code_indx_copy": [
      533,
      22,
      524,
      1,
      11,
      8,
      91,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      524,
      1,
      11,
      8,
      91,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "make",
      "a",
      "row-by-row",
      "copy",
      "var_0",
      "of",
      "array",
      "var_1"
    ],
    "code": [
      "var_0",
      "=",
      "[",
      "row",
      "[",
      ":",
      "]",
      "for",
      "row",
      "in",
      "var_1",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "y",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "x",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      191,
      3,
      465,
      324,
      26,
      2,
      85,
      63
    ],
    "code_indx_copy": [
      34,
      19,
      12,
      262,
      12,
      13,
      16,
      7,
      262,
      9,
      91,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      12,
      262,
      12,
      13,
      16,
      7,
      262,
      9,
      91,
      16
    ]
  },
  {
    "intent": [
      "create",
      "2d",
      "numpy",
      "array",
      "from",
      "the",
      "data",
      "provided",
      "in",
      "str_0",
      "with",
      "each",
      "row",
      "in",
      "the",
      "file",
      "having",
      "same",
      "number",
      "of",
      "values"
    ],
    "code": [
      "X",
      "=",
      "numpy",
      ".",
      "loadtxt",
      "(",
      "'str_0'",
      ",",
      "delimiter",
      "=",
      "','",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "somefile.csv",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      148,
      236,
      84,
      85,
      58,
      18,
      65,
      465,
      24,
      5,
      79,
      22,
      45,
      24,
      18,
      126,
      92,
      36,
      76,
      2,
      20
    ],
    "code_indx_copy": [
      524,
      19,
      147,
      22,
      524,
      1,
      29,
      8,
      263,
      19,
      73,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      147,
      22,
      524,
      1,
      29,
      8,
      263,
      19,
      73,
      17
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "list",
      "of",
      "items",
      "from",
      "the",
      "list",
      "var_0",
      "that",
      "contain",
      "string",
      "str_0"
    ],
    "code": [
      "matching",
      "=",
      "[",
      "s",
      "for",
      "s",
      "in",
      "var_0",
      "if",
      "'str_0'",
      "in",
      "s",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "some_list",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "abc",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      3,
      4,
      2,
      39,
      58,
      18,
      4,
      26,
      195,
      325,
      14,
      5
    ],
    "code_indx_copy": [
      524,
      19,
      12,
      181,
      7,
      181,
      9,
      34,
      67,
      29,
      9,
      181,
      16
    ],
    "code_indx_nocopy": [
      524,
      19,
      12,
      181,
      7,
      181,
      9,
      34,
      67,
      29,
      9,
      181,
      16
    ]
  },
  {
    "intent": [
      "export",
      "a",
      "pandas",
      "data",
      "frame",
      "var_0",
      "to",
      "a",
      "file",
      "str_0",
      "and",
      "retain",
      "the",
      "indices"
    ],
    "code": [
      "var_0",
      ".",
      "to_csv",
      "(",
      "'str_0'",
      ",",
      "sep",
      "=",
      "'\\t'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "mydf.tsv",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      3,
      42,
      65,
      66,
      26,
      8,
      3,
      126,
      5,
      31,
      465,
      18,
      326
    ],
    "code_indx_copy": [
      34,
      22,
      227,
      1,
      29,
      8,
      264,
      19,
      265,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      227,
      1,
      29,
      8,
      264,
      19,
      265,
      17
    ]
  },
  {
    "intent": [
      "how",
      "do",
      "i",
      "create",
      "a",
      "list",
      "of",
      "unique",
      "random",
      "numbers",
      "?"
    ],
    "code": [
      "random",
      ".",
      "sample",
      "(",
      "list",
      "(",
      "range",
      "(",
      "100",
      ")",
      ")",
      ",",
      "10",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      77,
      327,
      328,
      148,
      3,
      4,
      2,
      204,
      190,
      97,
      52
    ],
    "code_indx_copy": [
      148,
      22,
      266,
      1,
      33,
      1,
      104,
      1,
      267,
      17,
      17,
      8,
      4,
      17
    ],
    "code_indx_nocopy": [
      148,
      22,
      266,
      1,
      33,
      1,
      104,
      1,
      267,
      17,
      17,
      8,
      4,
      17
    ]
  },
  {
    "intent": [
      "split",
      "a",
      "string",
      "var_0",
      "on",
      "last",
      "delimiter"
    ],
    "code": [
      "var_0",
      ".",
      "rsplit",
      "(",
      "','",
      ",",
      "1",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      138,
      3,
      14,
      26,
      139,
      170,
      329
    ],
    "code_indx_copy": [
      34,
      22,
      268,
      1,
      73,
      8,
      15,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      268,
      1,
      73,
      8,
      15,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "all",
      "elements",
      "in",
      "list",
      "var_0",
      "are",
      "tupples",
      "of",
      "long",
      "and",
      "int"
    ],
    "code": [
      "all",
      "(",
      "isinstance",
      "(",
      "x",
      ",",
      "int",
      ")",
      "for",
      "x",
      "in",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "lst",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      234,
      150,
      38,
      1,
      24,
      4,
      26,
      243,
      465,
      2,
      465,
      31,
      74
    ],
    "code_indx_copy": [
      77,
      1,
      206,
      1,
      26,
      8,
      20,
      17,
      7,
      26,
      9,
      34,
      17
    ],
    "code_indx_nocopy": [
      77,
      1,
      206,
      1,
      26,
      8,
      20,
      17,
      7,
      26,
      9,
      34,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "all",
      "elements",
      "in",
      "a",
      "list",
      "str_0",
      "are",
      "the",
      "same",
      "type",
      "str_1"
    ],
    "code": [
      "all",
      "(",
      "isinstance",
      "(",
      "x",
      ",",
      "str_1",
      ")",
      "for",
      "x",
      "in",
      "str_0",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "lst",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "int",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      234,
      150,
      38,
      1,
      24,
      3,
      4,
      5,
      243,
      18,
      36,
      330,
      32
    ],
    "code_indx_copy": [
      77,
      1,
      206,
      1,
      26,
      8,
      37,
      17,
      7,
      26,
      9,
      11,
      17
    ],
    "code_indx_nocopy": [
      77,
      1,
      206,
      1,
      26,
      8,
      37,
      17,
      7,
      26,
      9,
      11,
      17
    ]
  },
  {
    "intent": [
      "strip",
      "a",
      "string",
      "var_0",
      "of",
      "all",
      "carriage",
      "returns",
      "and",
      "newlines"
    ],
    "code": [
      "var_0",
      ".",
      "strip",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "line",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      331,
      3,
      14,
      26,
      2,
      38,
      465,
      465,
      31,
      465
    ],
    "code_indx_copy": [
      34,
      22,
      170,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      170,
      1,
      17
    ]
  },
  {
    "intent": [
      "scroll",
      "to",
      "the",
      "bottom",
      "of",
      "a",
      "web",
      "page",
      "using",
      "selenium",
      "webdriver"
    ],
    "code": [
      "driver",
      ".",
      "execute_script",
      "(",
      "'window.scrollTo(0, Y)'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      465,
      8,
      18,
      465,
      2,
      3,
      465,
      308,
      109,
      51,
      332
    ],
    "code_indx_copy": [
      46,
      22,
      524,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      46,
      22,
      524,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "scroll",
      "a",
      "to",
      "the",
      "bottom",
      "of",
      "a",
      "web",
      "page",
      "using",
      "selenium",
      "webdriver"
    ],
    "code": [
      "driver",
      ".",
      "execute_script",
      "(",
      "'window.scrollTo(0, document.body.scrollHeight);'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      465,
      3,
      8,
      18,
      465,
      2,
      3,
      465,
      308,
      109,
      51,
      332
    ],
    "code_indx_copy": [
      46,
      22,
      524,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      46,
      22,
      524,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "date",
      "object",
      "var_0",
      "into",
      "a",
      "datetime",
      "object"
    ],
    "code": [
      "datetime",
      ".",
      "datetime",
      ".",
      "combine",
      "(",
      "var_0",
      ",",
      "datetime",
      ".",
      "time",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "dateobject",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      133,
      15,
      26,
      12,
      3,
      13,
      15
    ],
    "code_indx_copy": [
      27,
      22,
      27,
      22,
      110,
      1,
      34,
      8,
      27,
      22,
      84,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      27,
      22,
      27,
      22,
      110,
      1,
      34,
      8,
      27,
      22,
      84,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "any",
      "item",
      "from",
      "list",
      "var_0",
      "is",
      "in",
      "list",
      "var_1"
    ],
    "code": [
      "print",
      "(",
      "any",
      "(",
      "x",
      "in",
      "var_1",
      "for",
      "x",
      "in",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "b",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      234,
      150,
      272,
      156,
      58,
      4,
      26,
      152,
      24,
      4,
      63
    ],
    "code_indx_copy": [
      49,
      1,
      269,
      1,
      26,
      9,
      91,
      7,
      26,
      9,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      269,
      1,
      26,
      9,
      91,
      7,
      26,
      9,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "save",
      "a",
      "numpy",
      "array",
      "var_0",
      "as",
      "an",
      "image",
      "str_0"
    ],
    "code": [
      "scipy",
      ".",
      "misc",
      ".",
      "imsave",
      "(",
      "'str_0'",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "image_array",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "outfile.jpg",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      333,
      3,
      84,
      85,
      26,
      90,
      225,
      299,
      5
    ],
    "code_indx_copy": [
      524,
      22,
      524,
      22,
      524,
      1,
      29,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      524,
      22,
      524,
      1,
      29,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "anything",
      "in",
      "parenthesis",
      "from",
      "string",
      "var_0",
      "with",
      "a",
      "regex"
    ],
    "code": [
      "var_0",
      "=",
      "re",
      ".",
      "sub",
      "(",
      "' ?\\\\([^)]+\\\\)'",
      ",",
      "''",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "item",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      465,
      24,
      465,
      58,
      14,
      26,
      79,
      3,
      40
    ],
    "code_indx_copy": [
      34,
      19,
      39,
      22,
      40,
      1,
      524,
      8,
      21,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      39,
      22,
      40,
      1,
      524,
      8,
      21,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "word",
      "characters",
      "in",
      "parenthesis",
      "from",
      "string",
      "var_0",
      "with",
      "a",
      "regex"
    ],
    "code": [
      "var_0",
      "=",
      "re",
      ".",
      "sub",
      "(",
      "' ?\\\\(\\\\w+\\\\)'",
      ",",
      "''",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "item",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      239,
      98,
      24,
      465,
      58,
      14,
      26,
      79,
      3,
      40
    ],
    "code_indx_copy": [
      34,
      19,
      39,
      22,
      40,
      1,
      524,
      8,
      21,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      39,
      22,
      40,
      1,
      524,
      8,
      21,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "all",
      "data",
      "inside",
      "parenthesis",
      "in",
      "string",
      "var_0"
    ],
    "code": [
      "var_0",
      "=",
      "re",
      ".",
      "sub",
      "(",
      "' \\\\(\\\\w+\\\\)'",
      ",",
      "''",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "item",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      38,
      65,
      46,
      465,
      24,
      14,
      26
    ],
    "code_indx_copy": [
      34,
      19,
      39,
      22,
      40,
      1,
      524,
      8,
      21,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      39,
      22,
      40,
      1,
      524,
      8,
      21,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "any",
      "elements",
      "in",
      "one",
      "list",
      "var_0",
      "are",
      "in",
      "another",
      "list",
      "var_1"
    ],
    "code": [
      "len",
      "(",
      "set",
      "(",
      "var_0",
      ")",
      ".",
      "intersection",
      "(",
      "var_1",
      ")",
      ")",
      ">",
      "0"
    ],
    "slot_map": {
      "var_0": {
        "value": "list1",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "list2",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      234,
      150,
      272,
      1,
      24,
      303,
      4,
      26,
      243,
      24,
      176,
      4,
      63
    ],
    "code_indx_copy": [
      32,
      1,
      189,
      1,
      34,
      17,
      22,
      270,
      1,
      91,
      17,
      17,
      214,
      43
    ],
    "code_indx_nocopy": [
      32,
      1,
      189,
      1,
      34,
      17,
      22,
      270,
      1,
      91,
      17,
      17,
      214,
      43
    ]
  },
  {
    "intent": [
      "convert",
      "hex",
      "string",
      "var_0",
      "to",
      "decimal"
    ],
    "code": [
      "i",
      "=",
      "int",
      "(",
      "var_0",
      ",",
      "16",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      116,
      14,
      26,
      8,
      255
    ],
    "code_indx_copy": [
      6,
      19,
      20,
      1,
      34,
      8,
      271,
      17
    ],
    "code_indx_nocopy": [
      6,
      19,
      20,
      1,
      34,
      8,
      271,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "hex",
      "string",
      "str_0",
      "to",
      "decimal"
    ],
    "code": [
      "int",
      "(",
      "'str_0'",
      ",",
      "16",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "0xff",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      116,
      14,
      5,
      8,
      255
    ],
    "code_indx_copy": [
      20,
      1,
      29,
      8,
      271,
      17
    ],
    "code_indx_nocopy": [
      20,
      1,
      29,
      8,
      271,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "hex",
      "string",
      "str_0",
      "to",
      "decimal"
    ],
    "code": [
      "int",
      "(",
      "'str_0'",
      ",",
      "16",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "FFFF",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      116,
      14,
      5,
      8,
      255
    ],
    "code_indx_copy": [
      20,
      1,
      29,
      8,
      271,
      17
    ],
    "code_indx_nocopy": [
      20,
      1,
      29,
      8,
      271,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "hex",
      "string",
      "str_0",
      "to",
      "decimal"
    ],
    "code": [
      "ast",
      ".",
      "literal_eval",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "0xdeadbeef",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      116,
      14,
      5,
      8,
      255
    ],
    "code_indx_copy": [
      272,
      22,
      273,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      272,
      22,
      273,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "hex",
      "string",
      "str_0",
      "to",
      "decimal"
    ],
    "code": [
      "int",
      "(",
      "'str_0'",
      ",",
      "16",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "deadbeef",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      116,
      14,
      5,
      8,
      255
    ],
    "code_indx_copy": [
      20,
      1,
      29,
      8,
      271,
      17
    ],
    "code_indx_nocopy": [
      20,
      1,
      29,
      8,
      271,
      17
    ]
  },
  {
    "intent": [
      "take",
      "screenshot",
      "str_0",
      "on",
      "mac",
      "os",
      "x"
    ],
    "code": [
      "os",
      ".",
      "system",
      "(",
      "'screencapture screen.png'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "screen.png",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      465,
      5,
      139,
      465,
      136,
      465
    ],
    "code_indx_copy": [
      113,
      22,
      119,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      119,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "set",
      "a",
      "window",
      "size",
      "to",
      "str_0",
      "using",
      "selenium",
      "webdriver"
    ],
    "code": [
      "driver",
      ".",
      "set_window_size",
      "(",
      "1400",
      ",",
      "1000",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "1400, 1000",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      59,
      3,
      302,
      334,
      8,
      5,
      109,
      51,
      332
    ],
    "code_indx_copy": [
      46,
      22,
      524,
      1,
      524,
      8,
      274,
      17
    ],
    "code_indx_nocopy": [
      46,
      22,
      524,
      1,
      524,
      8,
      274,
      17
    ]
  },
  {
    "intent": [
      "replace",
      "non-ascii",
      "chars",
      "from",
      "a",
      "unicode",
      "string",
      "ustr_0"
    ],
    "code": [
      "unicodedata",
      ".",
      "normalize",
      "(",
      "'NFKD'",
      ",",
      "'str_0'",
      ")",
      ".",
      "encode",
      "(",
      "'ascii'",
      ",",
      "'ignore'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "m\u00fasica",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      130,
      335,
      465,
      58,
      3,
      230,
      14,
      465
    ],
    "code_indx_copy": [
      275,
      22,
      524,
      1,
      524,
      8,
      29,
      17,
      22,
      239,
      1,
      524,
      8,
      144,
      17
    ],
    "code_indx_nocopy": [
      275,
      22,
      524,
      1,
      524,
      8,
      29,
      17,
      22,
      239,
      1,
      524,
      8,
      144,
      17
    ]
  },
  {
    "intent": [
      "concatenate",
      "dataframe",
      "var_0",
      "with",
      "var_1",
      "whilst",
      "removing",
      "duplicates"
    ],
    "code": [
      "pandas",
      ".",
      "concat",
      "(",
      "[",
      "var_0",
      ",",
      "var_1",
      "]",
      ")",
      ".",
      "drop_duplicates",
      "(",
      ")",
      ".",
      "reset_index",
      "(",
      "drop",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df1",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "df2",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      0,
      43,
      26,
      79,
      63,
      465,
      99,
      336
    ],
    "code_indx_copy": [
      276,
      22,
      163,
      1,
      12,
      34,
      8,
      91,
      16,
      17,
      22,
      524,
      1,
      17,
      22,
      186,
      1,
      187,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      276,
      22,
      163,
      1,
      12,
      34,
      8,
      91,
      16,
      17,
      22,
      524,
      1,
      17,
      22,
      186,
      1,
      187,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "construct",
      "an",
      "array",
      "with",
      "data",
      "type",
      "float32",
      "var_0",
      "from",
      "data",
      "in",
      "binary",
      "file",
      "str_0"
    ],
    "code": [
      "var_0",
      "=",
      "numpy",
      ".",
      "fromfile",
      "(",
      "'str_0'",
      ",",
      "dtype",
      "=",
      "numpy",
      ".",
      "float32",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "filename",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      225,
      85,
      79,
      65,
      330,
      465,
      26,
      58,
      65,
      24,
      276,
      126,
      5
    ],
    "code_indx_copy": [
      34,
      19,
      147,
      22,
      524,
      1,
      29,
      8,
      177,
      19,
      147,
      22,
      534,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      147,
      22,
      524,
      1,
      29,
      8,
      177,
      19,
      147,
      22,
      524,
      17
    ]
  },
  {
    "intent": [
      "execute",
      "a",
      "mv",
      "command",
      "str_0",
      "in",
      "subprocess"
    ],
    "code": [
      "subprocess",
      ".",
      "call",
      "(",
      "'str_0'",
      ",",
      "shell",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "mv /home/somedir/subdir/* somedir/",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      135,
      3,
      465,
      137,
      5,
      24,
      290
    ],
    "code_indx_copy": [
      229,
      22,
      230,
      1,
      29,
      8,
      231,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      229,
      22,
      230,
      1,
      29,
      8,
      231,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "how",
      "to",
      "use",
      "the",
      "mv",
      "command",
      "in",
      "python",
      "with",
      "subprocess"
    ],
    "code": [
      "subprocess",
      ".",
      "call",
      "(",
      "'mv /home/somedir/subdir/* somedir/'",
      ",",
      "shell",
      "=",
      "True",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      77,
      8,
      309,
      18,
      465,
      137,
      24,
      50,
      79,
      290
    ],
    "code_indx_copy": [
      229,
      22,
      230,
      1,
      524,
      8,
      231,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      229,
      22,
      230,
      1,
      524,
      8,
      231,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "print",
      "a",
      "character",
      "that",
      "has",
      "unicode",
      "value",
      "str_0"
    ],
    "code": [
      "print",
      "(",
      "'str_0'",
      ".",
      "encode",
      "(",
      "'utf-8'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "\u25b2",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      166,
      3,
      202,
      195,
      337,
      230,
      143,
      5
    ],
    "code_indx_copy": [
      49,
      1,
      29,
      22,
      239,
      1,
      143,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      29,
      22,
      239,
      1,
      143,
      17,
      17
    ]
  },
  {
    "intent": [
      "compare",
      "contents",
      "at",
      "filehandles",
      "var_0",
      "and",
      "var_1",
      "using",
      "difflib"
    ],
    "code": [
      "difflib",
      ".",
      "SequenceMatcher",
      "(",
      "None",
      ",",
      "var_0",
      ".",
      "read",
      "(",
      ")",
      ",",
      "var_1",
      ".",
      "read",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "file1",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "file2",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      125,
      35,
      465,
      26,
      31,
      63,
      109,
      465
    ],
    "code_indx_copy": [
      536,
      22,
      524,
      1,
      209,
      8,
      34,
      22,
      106,
      1,
      17,
      8,
      91,
      22,
      106,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      524,
      1,
      209,
      8,
      34,
      22,
      106,
      1,
      17,
      8,
      91,
      22,
      106,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "dictionary",
      "from",
      "string",
      "var_0",
      "separated",
      "by",
      "str_0",
      "and",
      "str_1"
    ],
    "code": [
      "dict",
      "(",
      "(",
      "k",
      ",",
      "int",
      "(",
      "v",
      ")",
      ")",
      "for",
      "k",
      ",",
      "v",
      "in",
      "(",
      "var_0",
      ".",
      "split",
      "(",
      "' - '",
      ")",
      "for",
      "var_0",
      "in",
      "s",
      ".",
      "split",
      "(",
      "'str_1'",
      ")",
      ")",
      "\n",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "e",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "-",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": ",",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      148,
      3,
      25,
      58,
      14,
      26,
      338,
      44,
      5,
      31,
      32
    ],
    "code_indx_copy": [
      70,
      1,
      1,
      89,
      8,
      20,
      1,
      90,
      17,
      17,
      7,
      89,
      8,
      90,
      9,
      1,
      34,
      22,
      71,
      1,
      524,
      17,
      7,
      34,
      9,
      181,
      22,
      71,
      1,
      63,
      17,
      17,
      161,
      17
    ],
    "code_indx_nocopy": [
      70,
      1,
      1,
      89,
      8,
      20,
      1,
      90,
      17,
      17,
      7,
      89,
      8,
      90,
      9,
      1,
      34,
      22,
      71,
      1,
      524,
      17,
      7,
      34,
      9,
      181,
      22,
      71,
      1,
      63,
      17,
      17,
      161,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "all",
      "elements",
      "in",
      "a",
      "tuple",
      "str_0",
      "are",
      "in",
      "another",
      "str_1"
    ],
    "code": [
      "all",
      "(",
      "i",
      "in",
      "(",
      "str_1",
      ")",
      "for",
      "i",
      "in",
      "(",
      "str_0",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "(1, 6)",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": "(1, 2, 3, 4, 5)",
        "quote": "`",
        "type": "str"
      },
      "(str_0)": {
        "value": "(1, 6)",
        "quote": "`",
        "type": "str"
      },
      "(str_1)": {
        "value": "(1, 2, 3, 4, 5)",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      234,
      150,
      38,
      1,
      24,
      3,
      113,
      5,
      243,
      24,
      176,
      32
    ],
    "code_indx_copy": [
      77,
      1,
      6,
      9,
      1,
      37,
      17,
      7,
      6,
      9,
      1,
      11,
      17,
      17
    ],
    "code_indx_nocopy": [
      77,
      1,
      6,
      9,
      1,
      37,
      17,
      7,
      6,
      9,
      1,
      11,
      17,
      17
    ]
  },
  {
    "intent": [
      "extract",
      "unique",
      "dates",
      "from",
      "time",
      "series",
      "str_0",
      "in",
      "dataframe",
      "var_0"
    ],
    "code": [
      "var_0",
      "[",
      "'str_0'",
      "]",
      ".",
      "map",
      "(",
      "lambda",
      "t",
      ":",
      "t",
      ".",
      "date",
      "(",
      ")",
      ")",
      ".",
      "unique",
      "(",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "Date",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      104,
      204,
      465,
      58,
      134,
      339,
      5,
      24,
      43,
      26
    ],
    "code_indx_copy": [
      34,
      12,
      29,
      16,
      22,
      24,
      1,
      44,
      45,
      13,
      45,
      22,
      139,
      1,
      17,
      17,
      22,
      277,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      12,
      29,
      16,
      22,
      24,
      1,
      44,
      45,
      13,
      45,
      22,
      139,
      1,
      17,
      17,
      22,
      277,
      1,
      17
    ]
  },
  {
    "intent": [
      "right",
      "align",
      "string",
      "var_0",
      "with",
      "a",
      "width",
      "of",
      "7"
    ],
    "code": [
      "\"\"\"{:>7s}\"\"\"",
      ".",
      "format",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "mystring",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      216,
      465,
      14,
      26,
      79,
      3,
      465,
      2,
      340
    ],
    "code_indx_copy": [
      524,
      22,
      38,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      38,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "read",
      "an",
      "excel",
      "file",
      "str_0"
    ],
    "code": [
      "open",
      "(",
      "'str_0'",
      ",",
      "'rb'",
      ")",
      ".",
      "read",
      "(",
      "200",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "ComponentReport-DJI.xls",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      124,
      225,
      465,
      126,
      5
    ],
    "code_indx_copy": [
      105,
      1,
      29,
      8,
      155,
      17,
      22,
      106,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      105,
      1,
      29,
      8,
      155,
      17,
      22,
      106,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "dataframe",
      "var_0",
      "based",
      "on",
      "column",
      "str_0",
      "in",
      "ascending",
      "and",
      "column",
      "str_1",
      "in",
      "descending"
    ],
    "code": [
      "var_0",
      ".",
      "sort_values",
      "(",
      "[",
      "'str_0'",
      ",",
      "'str_1'",
      "]",
      ",",
      "ascending",
      "=",
      "[",
      "True",
      ",",
      "False",
      "]",
      ",",
      "inplace",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "b",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "c",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      117,
      43,
      26,
      208,
      139,
      147,
      5,
      24,
      119,
      31,
      147,
      32,
      24,
      121
    ],
    "code_indx_copy": [
      34,
      22,
      178,
      1,
      12,
      29,
      8,
      63,
      16,
      8,
      278,
      19,
      12,
      109,
      8,
      87,
      16,
      8,
      279,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      178,
      1,
      12,
      29,
      8,
      63,
      16,
      8,
      278,
      19,
      12,
      109,
      8,
      87,
      16,
      8,
      279,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "dataframe",
      "var_0",
      "based",
      "on",
      "column",
      "str_0",
      "in",
      "ascending",
      "and",
      "column",
      "str_1",
      "in",
      "descending"
    ],
    "code": [
      "var_0",
      ".",
      "sort_values",
      "(",
      "[",
      "'str_0'",
      ",",
      "'str_1'",
      "]",
      ",",
      "ascending",
      "=",
      "[",
      "True",
      ",",
      "False",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "a",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "b",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      117,
      43,
      26,
      208,
      139,
      147,
      5,
      24,
      119,
      31,
      147,
      32,
      24,
      121
    ],
    "code_indx_copy": [
      34,
      22,
      178,
      1,
      12,
      29,
      8,
      63,
      16,
      8,
      278,
      19,
      12,
      109,
      8,
      87,
      16,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      178,
      1,
      12,
      29,
      8,
      63,
      16,
      8,
      278,
      19,
      12,
      109,
      8,
      87,
      16,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "pandas",
      "data",
      "frame",
      "with",
      "column",
      "var_0",
      "in",
      "ascending",
      "and",
      "var_1",
      "in",
      "descending",
      "order"
    ],
    "code": [
      "df1",
      ".",
      "sort",
      "(",
      "[",
      "'var_0'",
      ",",
      "'var_1'",
      "]",
      ",",
      "ascending",
      "=",
      "[",
      "True",
      ",",
      "False",
      "]",
      ",",
      "inplace",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "b",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      3,
      42,
      65,
      66,
      79,
      147,
      26,
      24,
      119,
      31,
      63,
      24,
      121,
      162
    ],
    "code_indx_copy": [
      280,
      22,
      124,
      1,
      12,
      56,
      8,
      57,
      16,
      8,
      278,
      19,
      12,
      109,
      8,
      87,
      16,
      8,
      279,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      280,
      22,
      124,
      1,
      12,
      56,
      8,
      57,
      16,
      8,
      278,
      19,
      12,
      109,
      8,
      87,
      16,
      8,
      279,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "pandas",
      "data",
      "frame",
      "by",
      "column",
      "var_0",
      "in",
      "ascending",
      ",",
      "and",
      "by",
      "column",
      "var_1",
      "in",
      "descending",
      "order"
    ],
    "code": [
      "df",
      ".",
      "sort",
      "(",
      "[",
      "'var_0'",
      ",",
      "'var_1'",
      "]",
      ",",
      "ascending",
      "=",
      "[",
      "True",
      ",",
      "False",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "b",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      3,
      42,
      65,
      66,
      44,
      147,
      26,
      24,
      119,
      62,
      31,
      44,
      147,
      63,
      24,
      121,
      162
    ],
    "code_indx_copy": [
      149,
      22,
      124,
      1,
      12,
      56,
      8,
      57,
      16,
      8,
      278,
      19,
      12,
      109,
      8,
      87,
      16,
      17
    ],
    "code_indx_nocopy": [
      149,
      22,
      124,
      1,
      12,
      56,
      8,
      57,
      16,
      8,
      278,
      19,
      12,
      109,
      8,
      87,
      16,
      17
    ]
  },
  {
    "intent": [
      "django",
      "redirect",
      "to",
      "view",
      "str_0"
    ],
    "code": [
      "redirect",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "Home.views.index",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      87,
      465,
      8,
      465,
      5
    ],
    "code_indx_copy": [
      529,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      524,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "all",
      "values",
      "within",
      "one",
      "list",
      "str_0",
      "from",
      "another",
      "list",
      "var_0"
    ],
    "code": [
      "[",
      "x",
      "for",
      "x",
      "in",
      "var_0",
      "if",
      "x",
      "not",
      "in",
      "[",
      "str_0",
      "]",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "[2, 3, 7]",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "[str_0]": {
        "value": "[2, 3, 7]",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      268,
      38,
      20,
      55,
      303,
      4,
      5,
      58,
      176,
      4,
      26
    ],
    "code_indx_copy": [
      12,
      26,
      7,
      26,
      9,
      34,
      67,
      26,
      281,
      9,
      12,
      11,
      16,
      16
    ],
    "code_indx_nocopy": [
      12,
      26,
      7,
      26,
      9,
      34,
      67,
      26,
      281,
      9,
      12,
      11,
      16,
      16
    ]
  },
  {
    "intent": [
      "remove",
      "the",
      "punctuation",
      "str_0",
      ",",
      "str_1",
      ",",
      "str_2",
      "from",
      "a",
      "string",
      "var_0"
    ],
    "code": [
      "out",
      "=",
      "''",
      ".",
      "join",
      "(",
      "c",
      "for",
      "c",
      "in",
      "var_0",
      "if",
      "c",
      "not",
      "in",
      "(",
      "'str_0'",
      ",",
      "'str_1'",
      ",",
      "'str_2'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "!",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": ".",
        "quote": "'",
        "type": "str"
      },
      "str_2": {
        "value": ":",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "asking",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      18,
      100,
      5,
      62,
      32,
      62,
      194,
      58,
      3,
      14,
      26
    ],
    "code_indx_copy": [
      524,
      19,
      21,
      22,
      23,
      1,
      66,
      7,
      66,
      9,
      34,
      67,
      66,
      281,
      9,
      1,
      29,
      8,
      63,
      8,
      150,
      17,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      21,
      22,
      23,
      1,
      66,
      7,
      66,
      9,
      34,
      67,
      66,
      281,
      9,
      1,
      29,
      8,
      63,
      8,
      150,
      17,
      17
    ]
  },
  {
    "intent": [
      "beautifulsoup",
      "get",
      "value",
      "associated",
      "with",
      "attribute",
      "str_0",
      "where",
      "attribute",
      "str_1",
      "is",
      "equal",
      "to",
      "str_2",
      "in",
      "tag",
      "str_3",
      "in",
      "html",
      "parsed",
      "string",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "find",
      "(",
      "'str_3'",
      ",",
      "{",
      "'str_1'",
      ":",
      "'str_2'",
      "}",
      ")",
      "[",
      "'str_0'",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "content",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "name",
        "quote": "'",
        "type": "str"
      },
      "str_2": {
        "value": "City",
        "quote": "'",
        "type": "str"
      },
      "str_3": {
        "value": "meta",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "soup",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      70,
      17,
      143,
      286,
      79,
      341,
      5,
      155,
      341,
      32,
      152,
      106,
      8,
      194,
      24,
      72,
      219,
      24,
      307,
      465,
      14,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      282,
      1,
      173,
      8,
      52,
      63,
      13,
      150,
      53,
      17,
      12,
      29,
      16
    ],
    "code_indx_nocopy": [
      34,
      22,
      282,
      1,
      173,
      8,
      52,
      63,
      13,
      150,
      53,
      17,
      12,
      29,
      16
    ]
  },
  {
    "intent": [
      "unquote",
      "a",
      "urlencoded",
      "unicode",
      "string",
      "str_0"
    ],
    "code": [
      "urllib",
      ".",
      "parse",
      ".",
      "unquote",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "%0a",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      3,
      465,
      230,
      14,
      5
    ],
    "code_indx_copy": [
      232,
      22,
      236,
      22,
      237,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      232,
      22,
      236,
      22,
      237,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "decode",
      "url",
      "var_0",
      "from",
      "utf-16",
      "code",
      "to",
      "utf-8",
      "code"
    ],
    "code": [
      "urllib",
      ".",
      "parse",
      ".",
      "unquote",
      "(",
      "var_0",
      ")",
      ".",
      "decode",
      "(",
      "'utf8'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "url",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      182,
      102,
      26,
      58,
      465,
      293,
      8,
      183,
      293
    ],
    "code_indx_copy": [
      232,
      22,
      236,
      22,
      237,
      1,
      34,
      17,
      22,
      99,
      1,
      200,
      17
    ],
    "code_indx_nocopy": [
      232,
      22,
      236,
      22,
      237,
      1,
      34,
      17,
      22,
      99,
      1,
      200,
      17
    ]
  },
  {
    "intent": [
      "empty",
      "a",
      "list",
      "var_0"
    ],
    "code": [
      "del",
      "var_0",
      "[",
      ":",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "lst",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      146,
      3,
      4,
      26
    ],
    "code_indx_copy": [
      283,
      34,
      12,
      13,
      16
    ],
    "code_indx_nocopy": [
      283,
      34,
      12,
      13,
      16
    ]
  },
  {
    "intent": [
      "empty",
      "a",
      "list",
      "var_0"
    ],
    "code": [
      "del",
      "lst1",
      "[",
      ":",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "lst",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      146,
      3,
      4,
      26
    ],
    "code_indx_copy": [
      283,
      524,
      12,
      13,
      16
    ],
    "code_indx_nocopy": [
      283,
      524,
      12,
      13,
      16
    ]
  },
  {
    "intent": [
      "empty",
      "a",
      "list",
      "var_0"
    ],
    "code": [
      "var_0",
      "[",
      ":",
      "]",
      "=",
      "[",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "lst",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      146,
      3,
      4,
      26
    ],
    "code_indx_copy": [
      34,
      12,
      13,
      16,
      19,
      12,
      16
    ],
    "code_indx_nocopy": [
      34,
      12,
      13,
      16,
      19,
      12,
      16
    ]
  },
  {
    "intent": [
      "empty",
      "a",
      "list",
      "var_0"
    ],
    "code": [
      "var_0",
      "[",
      ":",
      "]",
      "=",
      "[",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "alist",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      146,
      3,
      4,
      26
    ],
    "code_indx_copy": [
      34,
      12,
      13,
      16,
      19,
      12,
      16
    ],
    "code_indx_nocopy": [
      34,
      12,
      13,
      16,
      19,
      12,
      16
    ]
  },
  {
    "intent": [
      "reset",
      "index",
      "of",
      "series",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "reset_index",
      "(",
      "0",
      ")",
      ".",
      "reset_index",
      "(",
      "drop",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      37,
      2,
      339,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      186,
      1,
      43,
      17,
      22,
      186,
      1,
      187,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      186,
      1,
      43,
      17,
      22,
      186,
      1,
      187,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "unicode",
      "text",
      "from",
      "list",
      "var_0",
      "with",
      "index",
      "0",
      "to",
      "normal",
      "text",
      "str_0"
    ],
    "code": [
      "var_0",
      "[",
      "0",
      "]",
      ".",
      "getText",
      "(",
      ")",
      ".",
      "encode",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "elems",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "utf-8",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      230,
      267,
      58,
      4,
      26,
      79,
      37,
      107,
      8,
      465,
      267,
      5
    ],
    "code_indx_copy": [
      34,
      12,
      43,
      16,
      22,
      524,
      1,
      17,
      22,
      239,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      34,
      12,
      43,
      16,
      22,
      524,
      1,
      17,
      22,
      239,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "list",
      "containing",
      "the",
      "subtraction",
      "of",
      "each",
      "item",
      "in",
      "list",
      "var_0",
      "from",
      "the",
      "item",
      "prior",
      "to",
      "it"
    ],
    "code": [
      "[",
      "(",
      "y",
      "-",
      "x",
      ")",
      "for",
      "x",
      ",",
      "y",
      "in",
      "zip",
      "(",
      "var_0",
      ",",
      "var_0",
      "[",
      "1",
      ":",
      "]",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "L",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      148,
      3,
      4,
      34,
      18,
      465,
      2,
      22,
      156,
      24,
      4,
      26,
      58,
      18,
      156,
      465,
      8,
      145
    ],
    "code_indx_copy": [
      12,
      1,
      103,
      14,
      26,
      17,
      7,
      26,
      8,
      103,
      9,
      36,
      1,
      34,
      8,
      34,
      12,
      15,
      13,
      16,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      1,
      103,
      14,
      26,
      17,
      7,
      26,
      8,
      103,
      9,
      36,
      1,
      34,
      8,
      34,
      12,
      15,
      13,
      16,
      17,
      16
    ]
  },
  {
    "intent": [
      "get",
      "value",
      "in",
      "string",
      "var_0",
      "matched",
      "by",
      "regex",
      "pattern",
      "str_0"
    ],
    "code": [
      "print",
      "(",
      "re",
      ".",
      "search",
      "(",
      "'str_0'",
      ",",
      "var_0",
      ")",
      ".",
      "group",
      "(",
      "1",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "line",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "\\bLOG_ADDR\\s+(\\S+)",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      143,
      24,
      14,
      26,
      465,
      44,
      40,
      54,
      5
    ],
    "code_indx_copy": [
      49,
      1,
      39,
      22,
      93,
      1,
      29,
      8,
      34,
      17,
      22,
      120,
      1,
      15,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      39,
      22,
      93,
      1,
      29,
      8,
      34,
      17,
      22,
      120,
      1,
      15,
      17,
      17
    ]
  },
  {
    "intent": [
      "import",
      "all",
      "classes",
      "from",
      "module",
      "str_0"
    ],
    "code": [
      "globals",
      "(",
      ")",
      ".",
      "update",
      "(",
      "importlib",
      ".",
      "import_module",
      "(",
      "'str_0'",
      ")",
      ".",
      "__dict__",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "some.package",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      38,
      465,
      58,
      342,
      5
    ],
    "code_indx_copy": [
      284,
      1,
      17,
      22,
      69,
      1,
      285,
      22,
      286,
      1,
      29,
      17,
      22,
      142,
      17
    ],
    "code_indx_nocopy": [
      284,
      1,
      17,
      22,
      69,
      1,
      285,
      22,
      286,
      1,
      29,
      17,
      22,
      142,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "list",
      "of",
      "characters",
      "str_0",
      "into",
      "a",
      "string"
    ],
    "code": [
      "\"\"\"\"\"\"",
      ".",
      "join",
      "(",
      "[",
      "str_0",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "['a', 'b', 'c', 'd']",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "['a', 'b', 'c', 'd']",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      3,
      4,
      2,
      98,
      5,
      12,
      3,
      14
    ],
    "code_indx_copy": [
      287,
      22,
      23,
      1,
      12,
      11,
      16,
      17
    ],
    "code_indx_nocopy": [
      287,
      22,
      23,
      1,
      12,
      11,
      16,
      17
    ]
  },
  {
    "intent": [
      "slice",
      "var_0",
      "with",
      "str_0",
      "as",
      "delimiter",
      "to",
      "get",
      "str_1",
      "from",
      "url",
      "``",
      "http",
      ":",
      "//www.domainname.com/page",
      "?",
      "content_item_id=1234",
      "&",
      "param2",
      "&",
      "param3",
      "''"
    ],
    "code": [
      "var_0",
      ".",
      "split",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "url",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "&",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "http://www.domainname.com/page?CONTENT_ITEM_ID=1234",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      26,
      79,
      5,
      90,
      329,
      8,
      17,
      32,
      58,
      102,
      465,
      343,
      128,
      465,
      52,
      465,
      465,
      465,
      465,
      465,
      465
    ],
    "code_indx_copy": [
      34,
      22,
      71,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      71,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "dictionary",
      "var_0",
      "by",
      "key"
    ],
    "code": [
      "od",
      "=",
      "collections",
      ".",
      "OrderedDict",
      "(",
      "sorted",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "d",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      25,
      26,
      44,
      23
    ],
    "code_indx_copy": [
      524,
      19,
      524,
      22,
      288,
      1,
      101,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      524,
      22,
      288,
      1,
      101,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "dictionary",
      "var_0",
      "by",
      "key"
    ],
    "code": [
      "OrderedDict",
      "(",
      "sorted",
      "(",
      "list",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      ",",
      "key",
      "=",
      "lambda",
      "t",
      ":",
      "t",
      "[",
      "0",
      "]",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "d",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      3,
      25,
      26,
      44,
      23
    ],
    "code_indx_copy": [
      288,
      1,
      101,
      1,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      8,
      102,
      19,
      44,
      45,
      13,
      45,
      12,
      43,
      16,
      17,
      17
    ],
    "code_indx_nocopy": [
      288,
      1,
      101,
      1,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      8,
      102,
      19,
      44,
      45,
      13,
      45,
      12,
      43,
      16,
      17,
      17
    ]
  },
  {
    "intent": [
      "execute",
      "a",
      "put",
      "request",
      "to",
      "the",
      "url",
      "var_0"
    ],
    "code": [
      "response",
      "=",
      "requests",
      ".",
      "put",
      "(",
      "var_0",
      ",",
      "data",
      "=",
      "json",
      ".",
      "dumps",
      "(",
      "data",
      ")",
      ",",
      "headers",
      "=",
      "headers",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "url",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      135,
      3,
      465,
      101,
      8,
      18,
      102,
      26
    ],
    "code_indx_copy": [
      524,
      19,
      85,
      22,
      530,
      1,
      34,
      8,
      135,
      19,
      140,
      22,
      141,
      1,
      135,
      17,
      8,
      289,
      19,
      289,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      85,
      22,
      524,
      1,
      34,
      8,
      135,
      19,
      140,
      22,
      141,
      1,
      135,
      17,
      8,
      289,
      19,
      289,
      17
    ]
  },
  {
    "intent": [
      "replace",
      "everything",
      "that",
      "is",
      "not",
      "an",
      "alphabet",
      "or",
      "a",
      "digit",
      "with",
      "str_0",
      "in",
      "str_1",
      "."
    ],
    "code": [
      "re",
      ".",
      "sub",
      "(",
      "'[\\\\W_]+'",
      ",",
      "'str_0'",
      ",",
      "str_1",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "s",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      130,
      465,
      195,
      152,
      105,
      225,
      465,
      344,
      3,
      465,
      79,
      5,
      24,
      32,
      159
    ],
    "code_indx_copy": [
      39,
      22,
      40,
      1,
      524,
      8,
      29,
      8,
      37,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      40,
      1,
      524,
      8,
      29,
      8,
      37,
      17
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "list",
      "of",
      "aggregation",
      "of",
      "each",
      "element",
      "from",
      "list",
      "var_0",
      "to",
      "all",
      "elements",
      "of",
      "list",
      "var_1"
    ],
    "code": [
      "[",
      "(",
      "x",
      "+",
      "y",
      ")",
      "for",
      "x",
      "in",
      "var_0",
      "for",
      "y",
      "in",
      "var_1",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "l2",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "l1",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      148,
      3,
      4,
      2,
      465,
      2,
      22,
      49,
      58,
      4,
      26,
      8,
      38,
      1,
      2,
      4,
      63
    ],
    "code_indx_copy": [
      12,
      1,
      26,
      96,
      103,
      17,
      7,
      26,
      9,
      34,
      7,
      103,
      9,
      91,
      16
    ],
    "code_indx_nocopy": [
      12,
      1,
      26,
      96,
      103,
      17,
      7,
      26,
      9,
      34,
      7,
      103,
      9,
      91,
      16
    ]
  },
  {
    "intent": [
      "convert",
      "string",
      "str_0=",
      "`",
      "using",
      "list",
      "comprehension"
    ],
    "code": [
      "dict",
      "(",
      "[",
      "x",
      ".",
      "split",
      "(",
      "'='",
      ")",
      "for",
      "x",
      "in",
      "s",
      ".",
      "split",
      "(",
      ")",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "x'  to dictionary splitted by",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      14,
      465,
      345,
      109,
      4,
      346
    ],
    "code_indx_copy": [
      70,
      1,
      12,
      26,
      22,
      71,
      1,
      524,
      17,
      7,
      26,
      9,
      181,
      22,
      71,
      1,
      17,
      16,
      17
    ],
    "code_indx_nocopy": [
      70,
      1,
      12,
      26,
      22,
      71,
      1,
      524,
      17,
      7,
      26,
      9,
      181,
      22,
      71,
      1,
      17,
      16,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "index",
      "2",
      "element",
      "from",
      "a",
      "list",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "pop",
      "(",
      "2",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "my_list",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      37,
      82,
      49,
      58,
      3,
      4,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      228,
      1,
      82,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      228,
      1,
      82,
      17
    ]
  },
  {
    "intent": [
      "delete",
      "character",
      "str_0",
      "from",
      "a",
      "string",
      "var_0",
      "using",
      "python"
    ],
    "code": [
      "var_0",
      "=",
      "var_0",
      ".",
      "replace",
      "(",
      "'str_0'",
      ",",
      "''",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "M",
        "quote": "\"",
        "type": "str"
      },
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      86,
      202,
      5,
      58,
      3,
      14,
      26,
      109,
      50
    ],
    "code_indx_copy": [
      34,
      19,
      34,
      22,
      107,
      1,
      29,
      8,
      21,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      34,
      22,
      107,
      1,
      29,
      8,
      21,
      17
    ]
  },
  {
    "intent": [
      "how",
      "to",
      "delete",
      "a",
      "character",
      "from",
      "a",
      "string",
      "using",
      "python",
      "?"
    ],
    "code": [
      "newstr",
      "=",
      "oldstr",
      ".",
      "replace",
      "(",
      "'M'",
      ",",
      "''",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      77,
      8,
      86,
      3,
      202,
      58,
      3,
      14,
      109,
      50,
      52
    ],
    "code_indx_copy": [
      524,
      19,
      524,
      22,
      107,
      1,
      524,
      8,
      21,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      524,
      22,
      107,
      1,
      524,
      8,
      21,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "sum",
      "of",
      "the",
      "products",
      "of",
      "each",
      "pair",
      "of",
      "corresponding",
      "elements",
      "in",
      "lists",
      "var_0",
      "and",
      "var_1"
    ],
    "code": [
      "sum",
      "(",
      "x",
      "*",
      "y",
      "for",
      "x",
      ",",
      "y",
      "in",
      "zip",
      "(",
      "var_0",
      ",",
      "var_1",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "b",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      18,
      112,
      2,
      18,
      465,
      2,
      22,
      89,
      2,
      347,
      1,
      24,
      30,
      26,
      31,
      63
    ],
    "code_indx_copy": [
      0,
      1,
      26,
      3,
      103,
      7,
      26,
      8,
      103,
      9,
      36,
      1,
      34,
      8,
      91,
      17,
      17
    ],
    "code_indx_nocopy": [
      0,
      1,
      26,
      3,
      103,
      7,
      26,
      8,
      103,
      9,
      36,
      1,
      34,
      8,
      91,
      17,
      17
    ]
  },
  {
    "intent": [
      "sum",
      "the",
      "products",
      "of",
      "each",
      "two",
      "elements",
      "at",
      "the",
      "same",
      "index",
      "of",
      "list",
      "var_0",
      "and",
      "list",
      "var_1"
    ],
    "code": [
      "list",
      "(",
      "x",
      "*",
      "y",
      "for",
      "x",
      ",",
      "y",
      "in",
      "list",
      "(",
      "zip",
      "(",
      "var_0",
      ",",
      "var_1",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "b",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      112,
      18,
      465,
      2,
      22,
      29,
      1,
      35,
      18,
      36,
      37,
      2,
      4,
      26,
      31,
      4,
      63
    ],
    "code_indx_copy": [
      33,
      1,
      26,
      3,
      103,
      7,
      26,
      8,
      103,
      9,
      33,
      1,
      36,
      1,
      34,
      8,
      91,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      33,
      1,
      26,
      3,
      103,
      7,
      26,
      8,
      103,
      9,
      33,
      1,
      36,
      1,
      34,
      8,
      91,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "sum",
      "the",
      "product",
      "of",
      "each",
      "two",
      "items",
      "at",
      "the",
      "same",
      "index",
      "of",
      "list",
      "var_0",
      "and",
      "list",
      "var_1"
    ],
    "code": [
      "sum",
      "(",
      "i",
      "*",
      "j",
      "for",
      "i",
      ",",
      "j",
      "in",
      "zip",
      "(",
      "var_0",
      ",",
      "var_1",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "b",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      112,
      18,
      163,
      2,
      22,
      29,
      39,
      35,
      18,
      36,
      37,
      2,
      4,
      26,
      31,
      4,
      63
    ],
    "code_indx_copy": [
      0,
      1,
      6,
      3,
      30,
      7,
      6,
      8,
      30,
      9,
      36,
      1,
      34,
      8,
      91,
      17,
      17
    ],
    "code_indx_nocopy": [
      0,
      1,
      6,
      3,
      30,
      7,
      6,
      8,
      30,
      9,
      36,
      1,
      34,
      8,
      91,
      17,
      17
    ]
  },
  {
    "intent": [
      "sum",
      "the",
      "product",
      "of",
      "elements",
      "of",
      "two",
      "lists",
      "named",
      "var_0",
      "and",
      "var_1"
    ],
    "code": [
      "sum",
      "(",
      "x",
      "*",
      "y",
      "for",
      "x",
      ",",
      "y",
      "in",
      "list",
      "(",
      "zip",
      "(",
      "var_0",
      ",",
      "var_1",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "b",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      112,
      18,
      163,
      2,
      1,
      2,
      29,
      30,
      320,
      26,
      31,
      63
    ],
    "code_indx_copy": [
      0,
      1,
      26,
      3,
      103,
      7,
      26,
      8,
      103,
      9,
      33,
      1,
      36,
      1,
      34,
      8,
      91,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      0,
      1,
      26,
      3,
      103,
      7,
      26,
      8,
      103,
      9,
      33,
      1,
      36,
      1,
      34,
      8,
      91,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "write",
      "the",
      "content",
      "of",
      "file",
      "str_0",
      "to",
      "file",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "write",
      "(",
      "open",
      "(",
      "'str_0'",
      ",",
      "'rb'",
      ")",
      ".",
      "read",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "xxx.mp4",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "f",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      168,
      18,
      348,
      2,
      126,
      5,
      8,
      126,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      131,
      1,
      105,
      1,
      29,
      8,
      155,
      17,
      22,
      106,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      131,
      1,
      105,
      1,
      29,
      8,
      155,
      17,
      22,
      106,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "add",
      "1",
      "to",
      "each",
      "integer",
      "value",
      "in",
      "list",
      "var_0"
    ],
    "code": [
      "new_list",
      "=",
      "[",
      "(",
      "x",
      "+",
      "1",
      ")",
      "for",
      "x",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "my_list",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      60,
      237,
      8,
      22,
      10,
      143,
      24,
      4,
      26
    ],
    "code_indx_copy": [
      524,
      19,
      12,
      1,
      26,
      96,
      15,
      17,
      7,
      26,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      524,
      19,
      12,
      1,
      26,
      96,
      15,
      17,
      7,
      26,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "list",
      "of",
      "all",
      "items",
      "in",
      "list",
      "var_0",
      "with",
      "values",
      "greater",
      "than",
      "str_0"
    ],
    "code": [
      "[",
      "x",
      "for",
      "x",
      "in",
      "var_0",
      "if",
      "x",
      ">=",
      "5",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "j",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "5",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      3,
      4,
      2,
      38,
      39,
      24,
      4,
      26,
      79,
      20,
      349,
      264,
      5
    ],
    "code_indx_copy": [
      12,
      26,
      7,
      26,
      9,
      34,
      67,
      26,
      524,
      185,
      16
    ],
    "code_indx_nocopy": [
      12,
      26,
      7,
      26,
      9,
      34,
      67,
      26,
      524,
      185,
      16
    ]
  },
  {
    "intent": [
      "set",
      "color",
      "marker",
      "styles",
      "str_0",
      "in",
      "matplotlib"
    ],
    "code": [
      "plt",
      ".",
      "plot",
      "(",
      "list",
      "(",
      "range",
      "(",
      "10",
      ")",
      ")",
      ",",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "--bo",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      59,
      222,
      465,
      465,
      5,
      24,
      350
    ],
    "code_indx_copy": [
      196,
      22,
      290,
      1,
      33,
      1,
      104,
      1,
      4,
      17,
      17,
      8,
      29,
      17
    ],
    "code_indx_nocopy": [
      196,
      22,
      290,
      1,
      33,
      1,
      104,
      1,
      4,
      17,
      17,
      8,
      29,
      17
    ]
  },
  {
    "intent": [
      "set",
      "circle",
      "markers",
      "on",
      "plot",
      "for",
      "individual",
      "points",
      "defined",
      "in",
      "list",
      "str_0",
      "created",
      "by",
      "range",
      "(",
      "10",
      ")"
    ],
    "code": [
      "plt",
      ".",
      "plot",
      "(",
      "list",
      "(",
      "range",
      "(",
      "10",
      ")",
      ")",
      ",",
      "linestyle",
      "=",
      "'--'",
      ",",
      "marker",
      "=",
      "'o'",
      ",",
      "color",
      "=",
      "'b'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "[1,2,3,4,5,6,7,8,9,10]",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "[1,2,3,4,5,6,7,8,9,10]",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      59,
      465,
      465,
      139,
      244,
      21,
      465,
      318,
      465,
      24,
      4,
      5,
      465,
      44,
      123,
      212,
      351,
      27
    ],
    "code_indx_copy": [
      196,
      22,
      290,
      1,
      33,
      1,
      104,
      1,
      4,
      17,
      17,
      8,
      524,
      19,
      524,
      8,
      291,
      19,
      524,
      8,
      292,
      19,
      293,
      17
    ],
    "code_indx_nocopy": [
      196,
      22,
      290,
      1,
      33,
      1,
      104,
      1,
      4,
      17,
      17,
      8,
      524,
      19,
      524,
      8,
      291,
      19,
      524,
      8,
      292,
      19,
      293,
      17
    ]
  },
  {
    "intent": [
      "split",
      "strings",
      "in",
      "list",
      "var_0",
      "on",
      "the",
      "first",
      "occurring",
      "tab",
      "str_0",
      "and",
      "enter",
      "only",
      "the",
      "first",
      "resulting",
      "substring",
      "in",
      "a",
      "new",
      "list"
    ],
    "code": [
      "[",
      "i",
      ".",
      "split",
      "(",
      "'str_0'",
      ",",
      "1",
      ")",
      "[",
      "0",
      "]",
      "for",
      "i",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "l",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "\t",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      138,
      259,
      24,
      4,
      26,
      139,
      18,
      151,
      465,
      465,
      5,
      31,
      465,
      352,
      18,
      151,
      353,
      354,
      24,
      3,
      192,
      4
    ],
    "code_indx_copy": [
      12,
      6,
      22,
      71,
      1,
      29,
      8,
      15,
      17,
      12,
      43,
      16,
      7,
      6,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      12,
      6,
      22,
      71,
      1,
      29,
      8,
      15,
      17,
      12,
      43,
      16,
      7,
      6,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "split",
      "each",
      "string",
      "in",
      "list",
      "var_0",
      "on",
      "the",
      "tab",
      "character"
    ],
    "code": [
      "var_0",
      "=",
      "[",
      "i",
      ".",
      "split",
      "(",
      "'\\t'",
      ")",
      "[",
      "0",
      "]",
      "for",
      "i",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "myList",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      138,
      22,
      14,
      24,
      4,
      26,
      139,
      18,
      465,
      202
    ],
    "code_indx_copy": [
      34,
      19,
      12,
      6,
      22,
      71,
      1,
      265,
      17,
      12,
      43,
      16,
      7,
      6,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      12,
      6,
      22,
      71,
      1,
      265,
      17,
      12,
      43,
      16,
      7,
      6,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "sum",
      "numbers",
      "in",
      "a",
      "list",
      "str_0"
    ],
    "code": [
      "sum",
      "(",
      "str_0",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "your_list",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      112,
      97,
      24,
      3,
      4,
      5
    ],
    "code_indx_copy": [
      0,
      1,
      11,
      17
    ],
    "code_indx_nocopy": [
      0,
      1,
      11,
      17
    ]
  },
  {
    "intent": [
      "attach",
      "debugger",
      "pdb",
      "to",
      "class",
      "var_0"
    ],
    "code": [
      "var_0",
      "(",
      ")",
      ".",
      "set_trace",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "ForkedPdb",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      465,
      465,
      8,
      311,
      26
    ],
    "code_indx_copy": [
      34,
      1,
      17,
      22,
      524,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      1,
      17,
      22,
      524,
      1,
      17
    ]
  },
  {
    "intent": [
      "compose",
      "keys",
      "from",
      "dictionary",
      "var_0",
      "with",
      "respective",
      "values",
      "in",
      "dictionary",
      "var_1"
    ],
    "code": [
      "result",
      "=",
      "{",
      "k",
      ":",
      "var_1",
      ".",
      "get",
      "(",
      "v",
      ")",
      "for",
      "k",
      ",",
      "v",
      "in",
      "list",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      "}"
    ],
    "slot_map": {
      "var_0": {
        "value": "d1",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "d2",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      206,
      58,
      25,
      26,
      79,
      355,
      20,
      24,
      25,
      63
    ],
    "code_indx_copy": [
      524,
      19,
      52,
      89,
      13,
      91,
      22,
      86,
      1,
      90,
      17,
      7,
      89,
      8,
      90,
      9,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      53
    ],
    "code_indx_nocopy": [
      524,
      19,
      52,
      89,
      13,
      91,
      22,
      86,
      1,
      90,
      17,
      7,
      89,
      8,
      90,
      9,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      53
    ]
  },
  {
    "intent": [
      "add",
      "one",
      "day",
      "and",
      "three",
      "hours",
      "to",
      "the",
      "present",
      "time",
      "from",
      "datetime.now",
      "(",
      ")"
    ],
    "code": [
      "datetime",
      ".",
      "datetime",
      ".",
      "now",
      "(",
      ")",
      "+",
      "datetime",
      ".",
      "timedelta",
      "(",
      "days",
      "=",
      "1",
      ",",
      "hours",
      "=",
      "3",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      60,
      303,
      356,
      31,
      240,
      465,
      8,
      18,
      357,
      134,
      58,
      465,
      212,
      27
    ],
    "code_indx_copy": [
      27,
      22,
      27,
      22,
      294,
      1,
      17,
      96,
      27,
      22,
      295,
      1,
      296,
      19,
      15,
      8,
      297,
      19,
      54,
      17
    ],
    "code_indx_nocopy": [
      27,
      22,
      27,
      22,
      294,
      1,
      17,
      96,
      27,
      22,
      295,
      1,
      296,
      19,
      15,
      8,
      297,
      19,
      54,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "binary",
      "string",
      "to",
      "list",
      "of",
      "integers",
      "using",
      "python"
    ],
    "code": [
      "[",
      "int",
      "(",
      "s",
      "[",
      "i",
      ":",
      "i",
      "+",
      "3",
      "]",
      ",",
      "2",
      ")",
      "for",
      "i",
      "in",
      "range",
      "(",
      "0",
      ",",
      "len",
      "(",
      "s",
      ")",
      ",",
      "3",
      ")",
      "]"
    ],
    "slot_map": {},
    "intent_indx": [
      11,
      276,
      14,
      8,
      4,
      2,
      7,
      109,
      50
    ],
    "code_indx_copy": [
      12,
      20,
      1,
      181,
      12,
      6,
      13,
      6,
      96,
      54,
      16,
      8,
      82,
      17,
      7,
      6,
      9,
      104,
      1,
      43,
      8,
      32,
      1,
      181,
      17,
      8,
      54,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      20,
      1,
      181,
      12,
      6,
      13,
      6,
      96,
      54,
      16,
      8,
      82,
      17,
      7,
      6,
      9,
      104,
      1,
      43,
      8,
      32,
      1,
      181,
      17,
      8,
      54,
      17,
      16
    ]
  },
  {
    "intent": [
      "switch",
      "keys",
      "and",
      "values",
      "in",
      "a",
      "dictionary",
      "var_0"
    ],
    "code": [
      "dict",
      "(",
      "(",
      "v",
      ",",
      "k",
      ")",
      "for",
      "k",
      ",",
      "v",
      "in",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "my_dict",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      206,
      31,
      20,
      24,
      3,
      25,
      26
    ],
    "code_indx_copy": [
      70,
      1,
      1,
      90,
      8,
      89,
      17,
      7,
      89,
      8,
      90,
      9,
      34,
      22,
      35,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      70,
      1,
      1,
      90,
      8,
      89,
      17,
      7,
      89,
      8,
      90,
      9,
      34,
      22,
      35,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "list",
      "var_0",
      "by",
      "number",
      "after",
      "second",
      "str_0"
    ],
    "code": [
      "print",
      "(",
      "sorted",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "int",
      "(",
      "x",
      ".",
      "split",
      "(",
      "'str_0'",
      ")",
      "[",
      "2",
      "]",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "L",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": ".",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      117,
      3,
      4,
      26,
      44,
      76,
      201,
      118,
      5
    ],
    "code_indx_copy": [
      49,
      1,
      101,
      1,
      34,
      8,
      102,
      19,
      44,
      26,
      13,
      20,
      1,
      26,
      22,
      71,
      1,
      29,
      17,
      12,
      82,
      16,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      101,
      1,
      34,
      8,
      102,
      19,
      44,
      26,
      13,
      20,
      1,
      26,
      22,
      71,
      1,
      29,
      17,
      12,
      82,
      16,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "the",
      "value",
      "of",
      "the",
      "key",
      "str_0",
      "is",
      "str_1",
      "in",
      "a",
      "list",
      "of",
      "dictionaries",
      "var_0"
    ],
    "code": [
      "any",
      "(",
      "d",
      "[",
      "'str_0'",
      "]",
      "==",
      "'str_1'",
      "for",
      "d",
      "in",
      "var_0",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "name",
        "quote": "\"",
        "type": "str"
      },
      "str_1": {
        "value": "Test",
        "quote": "\"",
        "type": "str"
      },
      "var_0": {
        "value": "label",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      234,
      150,
      18,
      143,
      2,
      18,
      23,
      5,
      152,
      32,
      24,
      3,
      4,
      2,
      188,
      26
    ],
    "code_indx_copy": [
      269,
      1,
      2,
      12,
      29,
      16,
      76,
      63,
      7,
      2,
      9,
      34,
      17
    ],
    "code_indx_nocopy": [
      269,
      1,
      2,
      12,
      29,
      16,
      76,
      63,
      7,
      2,
      9,
      34,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "all",
      "instances",
      "of",
      "[",
      "1",
      ",",
      "1",
      "]",
      "from",
      "list",
      "var_0"
    ],
    "code": [
      "var_0",
      "[",
      ":",
      "]",
      "=",
      "[",
      "x",
      "for",
      "x",
      "in",
      "var_0",
      "if",
      "x",
      "!=",
      "[",
      "1",
      ",",
      "1",
      "]",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      38,
      358,
      2,
      218,
      237,
      62,
      237,
      220,
      58,
      4,
      26
    ],
    "code_indx_copy": [
      34,
      12,
      13,
      16,
      19,
      12,
      26,
      7,
      26,
      9,
      34,
      67,
      26,
      88,
      12,
      15,
      8,
      15,
      16,
      16
    ],
    "code_indx_nocopy": [
      34,
      12,
      13,
      16,
      19,
      12,
      26,
      7,
      26,
      9,
      34,
      67,
      26,
      88,
      12,
      15,
      8,
      15,
      16,
      16
    ]
  },
  {
    "intent": [
      "remove",
      "all",
      "instances",
      "of",
      "str_0",
      "from",
      "a",
      "list",
      "var_0"
    ],
    "code": [
      "[",
      "x",
      "for",
      "x",
      "in",
      "var_0",
      "if",
      "x",
      "!=",
      "[",
      "str_0",
      "]",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "[1, 1]",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "[str_0]": {
        "value": "[1, 1]",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      268,
      38,
      358,
      2,
      5,
      58,
      3,
      4,
      26
    ],
    "code_indx_copy": [
      12,
      26,
      7,
      26,
      9,
      34,
      67,
      26,
      88,
      12,
      11,
      16,
      16
    ],
    "code_indx_nocopy": [
      12,
      26,
      7,
      26,
      9,
      34,
      67,
      26,
      88,
      12,
      11,
      16,
      16
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "list",
      "str_0",
      "to",
      "a",
      "dictionary",
      "where",
      "each",
      "even",
      "element",
      "represents",
      "the",
      "key",
      "to",
      "the",
      "dictionary",
      ",",
      "and",
      "the",
      "following",
      "odd",
      "element",
      "is",
      "the",
      "value"
    ],
    "code": [
      "b",
      "=",
      "{",
      "str_0",
      "[",
      "i",
      "]",
      ":",
      "str_0",
      "[",
      "i",
      "+",
      "1",
      "]",
      "for",
      "i",
      "in",
      "range",
      "(",
      "0",
      ",",
      "len",
      "(",
      "str_0",
      ")",
      ",",
      "2",
      ")",
      "}"
    ],
    "slot_map": {
      "str_0": {
        "value": "a",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      3,
      4,
      5,
      8,
      3,
      25,
      155,
      22,
      465,
      49,
      465,
      18,
      23,
      8,
      18,
      25,
      62,
      31,
      18,
      465,
      465,
      49,
      152,
      18,
      143
    ],
    "code_indx_copy": [
      97,
      19,
      52,
      11,
      12,
      6,
      16,
      13,
      11,
      12,
      6,
      96,
      15,
      16,
      7,
      6,
      9,
      104,
      1,
      43,
      8,
      32,
      1,
      11,
      17,
      8,
      82,
      17,
      53
    ],
    "code_indx_nocopy": [
      97,
      19,
      52,
      11,
      12,
      6,
      16,
      13,
      11,
      12,
      6,
      96,
      15,
      16,
      7,
      6,
      9,
      104,
      1,
      43,
      8,
      32,
      1,
      11,
      17,
      8,
      82,
      17,
      53
    ]
  },
  {
    "intent": [
      "check",
      "whether",
      "elements",
      "in",
      "list",
      "var_0",
      "appear",
      "only",
      "once"
    ],
    "code": [
      "len",
      "(",
      "set",
      "(",
      "var_0",
      ")",
      ")",
      "==",
      "len",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      234,
      359,
      1,
      24,
      4,
      26,
      465,
      352,
      465
    ],
    "code_indx_copy": [
      32,
      1,
      189,
      1,
      34,
      17,
      17,
      76,
      32,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      32,
      1,
      189,
      1,
      34,
      17,
      17,
      76,
      32,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "generate",
      "md5",
      "checksum",
      "of",
      "file",
      "in",
      "the",
      "path",
      "var_0",
      "in",
      "hashlib"
    ],
    "code": [
      "print",
      "(",
      "hashlib",
      ".",
      "md5",
      "(",
      "open",
      "(",
      "var_0",
      ",",
      "'rb'",
      ")",
      ".",
      "read",
      "(",
      ")",
      ")",
      ".",
      "hexdigest",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "full_path",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      56,
      465,
      465,
      2,
      126,
      24,
      18,
      199,
      26,
      24,
      465
    ],
    "code_indx_copy": [
      49,
      1,
      257,
      22,
      258,
      1,
      105,
      1,
      34,
      8,
      155,
      17,
      22,
      106,
      1,
      17,
      17,
      22,
      259,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      257,
      22,
      258,
      1,
      105,
      1,
      34,
      8,
      155,
      17,
      22,
      106,
      1,
      17,
      17,
      22,
      259,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "how",
      "to",
      "sort",
      "a",
      "dictionary",
      "in",
      "python",
      "by",
      "value",
      "when",
      "the",
      "value",
      "is",
      "a",
      "list",
      "and",
      "i",
      "want",
      "to",
      "sort",
      "it",
      "by",
      "the",
      "first",
      "index",
      "of",
      "that",
      "list"
    ],
    "code": [
      "sorted",
      "(",
      "list",
      "(",
      "data",
      ".",
      "items",
      "(",
      ")",
      ")",
      ",",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "x",
      "[",
      "1",
      "]",
      "[",
      "0",
      "]",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      77,
      8,
      117,
      3,
      25,
      24,
      50,
      44,
      143,
      465,
      18,
      143,
      152,
      3,
      4,
      31,
      328,
      465,
      8,
      117,
      145,
      44,
      18,
      151,
      37,
      2,
      195,
      4
    ],
    "code_indx_copy": [
      101,
      1,
      33,
      1,
      135,
      22,
      35,
      1,
      17,
      17,
      8,
      102,
      19,
      44,
      26,
      13,
      26,
      12,
      15,
      16,
      12,
      43,
      16,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      33,
      1,
      135,
      22,
      35,
      1,
      17,
      17,
      8,
      102,
      19,
      44,
      26,
      13,
      26,
      12,
      15,
      16,
      12,
      43,
      16,
      17
    ]
  },
  {
    "intent": [
      "randomly",
      "switch",
      "letters",
      "'",
      "cases",
      "in",
      "string",
      "var_0"
    ],
    "code": [
      "\"\"\"\"\"\"",
      ".",
      "join",
      "(",
      "x",
      ".",
      "upper",
      "(",
      ")",
      "if",
      "random",
      ".",
      "randint",
      "(",
      "0",
      ",",
      "1",
      ")",
      "else",
      "x",
      "for",
      "x",
      "in",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      465,
      360,
      310,
      465,
      24,
      14,
      26
    ],
    "code_indx_copy": [
      287,
      22,
      23,
      1,
      26,
      22,
      298,
      1,
      17,
      67,
      148,
      22,
      299,
      1,
      43,
      8,
      15,
      17,
      211,
      26,
      7,
      26,
      9,
      34,
      17
    ],
    "code_indx_nocopy": [
      287,
      22,
      23,
      1,
      26,
      22,
      298,
      1,
      17,
      67,
      148,
      22,
      299,
      1,
      43,
      8,
      15,
      17,
      211,
      26,
      7,
      26,
      9,
      34,
      17
    ]
  },
  {
    "intent": [
      "force",
      "bash",
      "interpreter",
      "str_0",
      "to",
      "be",
      "used",
      "instead",
      "of",
      "shell"
    ],
    "code": [
      "os",
      ".",
      "system",
      "(",
      "'GREPDB=\"echo 123\"; /bin/bash -c \"$GREPDB\"'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "/bin/bash",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      361,
      465,
      5,
      8,
      362,
      465,
      465,
      2,
      292
    ],
    "code_indx_copy": [
      113,
      22,
      119,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      119,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "run",
      "a",
      "command",
      "str_0",
      "in",
      "bash",
      "instead",
      "of",
      "shell"
    ],
    "code": [
      "os",
      ".",
      "system",
      "(",
      "'/bin/bash -c \"echo hello world\"'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "echo hello world",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      251,
      3,
      137,
      5,
      24,
      361,
      465,
      2,
      292
    ],
    "code_indx_copy": [
      113,
      22,
      119,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      119,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "access",
      "the",
      "class",
      "variable",
      "var_0",
      "from",
      "a",
      "class",
      "object",
      "var_1"
    ],
    "code": [
      "getattr",
      "(",
      "var_1",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a_string",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "test",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      18,
      311,
      95,
      26,
      58,
      3,
      311,
      15,
      63
    ],
    "code_indx_copy": [
      300,
      1,
      91,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      300,
      1,
      91,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "display",
      "a",
      "image",
      "file",
      "var_0"
    ],
    "code": [
      "Image",
      ".",
      "open",
      "(",
      "'var_0'",
      ")",
      ".",
      "show",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "pathToFile",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      363,
      3,
      299,
      126,
      26
    ],
    "code_indx_copy": [
      301,
      22,
      105,
      1,
      56,
      17,
      22,
      302,
      1,
      17
    ],
    "code_indx_nocopy": [
      301,
      22,
      105,
      1,
      56,
      17,
      22,
      302,
      1,
      17
    ]
  },
  {
    "intent": [
      "replace",
      "single",
      "quote",
      "character",
      "in",
      "string",
      "str_0",
      "with",
      "empty",
      "string",
      "str_1"
    ],
    "code": [
      "\"\"\"str_0\"\"\"",
      ".",
      "replace",
      "(",
      "\"'\"",
      ",",
      "'str_1'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "didn't",
        "quote": "\"",
        "type": "str"
      },
      "str_1": {
        "value": "",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      130,
      9,
      465,
      202,
      24,
      14,
      5,
      79,
      146,
      14,
      32
    ],
    "code_indx_copy": [
      212,
      22,
      107,
      1,
      524,
      8,
      63,
      17
    ],
    "code_indx_nocopy": [
      212,
      22,
      107,
      1,
      524,
      8,
      63,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "list",
      "var_0",
      "based",
      "on",
      "variable",
      "var_1"
    ],
    "code": [
      "var_0",
      ".",
      "sort",
      "(",
      "key",
      "=",
      "var_1",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "files",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "file_number",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      4,
      26,
      208,
      139,
      95,
      63
    ],
    "code_indx_copy": [
      34,
      22,
      124,
      1,
      102,
      19,
      91,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      124,
      1,
      102,
      19,
      91,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "all",
      "whitespace",
      "in",
      "a",
      "string",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "replace",
      "(",
      "' '",
      ",",
      "''",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "sentence",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      38,
      211,
      24,
      3,
      14,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      107,
      1,
      108,
      8,
      21,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      107,
      1,
      108,
      8,
      21,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "all",
      "whitespace",
      "in",
      "a",
      "string",
      "var_0"
    ],
    "code": [
      "pattern",
      "=",
      "re",
      ".",
      "compile",
      "(",
      "'\\\\s+'",
      ")",
      "\n",
      "var_0",
      "=",
      "re",
      ".",
      "sub",
      "(",
      "pattern",
      ",",
      "''",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "sentence",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      38,
      211,
      24,
      3,
      14,
      26
    ],
    "code_indx_copy": [
      303,
      19,
      39,
      22,
      83,
      1,
      524,
      17,
      161,
      34,
      19,
      39,
      22,
      40,
      1,
      303,
      8,
      21,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      303,
      19,
      39,
      22,
      83,
      1,
      524,
      17,
      161,
      34,
      19,
      39,
      22,
      40,
      1,
      303,
      8,
      21,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "whitespace",
      "in",
      "string",
      "var_0",
      "from",
      "beginning",
      "and",
      "end"
    ],
    "code": [
      "var_0",
      ".",
      "strip",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "sentence",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      211,
      24,
      14,
      26,
      58,
      171,
      31,
      295
    ],
    "code_indx_copy": [
      34,
      22,
      170,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      170,
      1,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "all",
      "whitespaces",
      "in",
      "string",
      "var_0"
    ],
    "code": [
      "var_0",
      "=",
      "re",
      ".",
      "sub",
      "(",
      "'\\\\s+'",
      ",",
      "''",
      ",",
      "var_0",
      ",",
      "flags",
      "=",
      "re",
      ".",
      "UNICODE",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "sentence",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      38,
      140,
      24,
      14,
      26
    ],
    "code_indx_copy": [
      34,
      19,
      39,
      22,
      40,
      1,
      524,
      8,
      21,
      8,
      34,
      8,
      524,
      19,
      39,
      22,
      304,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      39,
      22,
      40,
      1,
      524,
      8,
      21,
      8,
      34,
      8,
      524,
      19,
      39,
      22,
      304,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "all",
      "whitespaces",
      "in",
      "a",
      "string",
      "var_0"
    ],
    "code": [
      "var_0",
      "=",
      "''",
      ".",
      "join",
      "(",
      "var_0",
      ".",
      "split",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "sentence",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      38,
      140,
      24,
      3,
      14,
      26
    ],
    "code_indx_copy": [
      34,
      19,
      21,
      22,
      23,
      1,
      34,
      22,
      71,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      21,
      22,
      23,
      1,
      34,
      22,
      71,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "sum",
      "all",
      "the",
      "values",
      "in",
      "a",
      "counter",
      "variable",
      "var_0"
    ],
    "code": [
      "sum",
      "(",
      "var_0",
      ".",
      "values",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "my_counter",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      112,
      38,
      18,
      20,
      24,
      3,
      465,
      95,
      26
    ],
    "code_indx_copy": [
      0,
      1,
      34,
      22,
      166,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      0,
      1,
      34,
      22,
      166,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "find",
      "the",
      "euclidean",
      "distance",
      "between",
      "two",
      "3-d",
      "arrays",
      "var_0",
      "and",
      "var_1"
    ],
    "code": [
      "np",
      ".",
      "sqrt",
      "(",
      "(",
      "(",
      "var_0",
      "-",
      "var_1",
      ")",
      "**",
      "2",
      ")",
      ".",
      "sum",
      "(",
      "-",
      "1",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "A",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "B",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      47,
      18,
      465,
      465,
      278,
      29,
      465,
      165,
      26,
      31,
      63
    ],
    "code_indx_copy": [
      74,
      22,
      524,
      1,
      1,
      1,
      34,
      14,
      91,
      17,
      5,
      82,
      17,
      22,
      0,
      1,
      14,
      15,
      17,
      17
    ],
    "code_indx_nocopy": [
      74,
      22,
      524,
      1,
      1,
      1,
      34,
      14,
      91,
      17,
      5,
      82,
      17,
      22,
      0,
      1,
      14,
      15,
      17,
      17
    ]
  },
  {
    "intent": [
      "create",
      "list",
      "var_0",
      "containing",
      "3",
      "empty",
      "dictionaries"
    ],
    "code": [
      "var_0",
      "=",
      "[",
      "{",
      "}",
      ",",
      "{",
      "}",
      ",",
      "{",
      "}",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "levels",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      148,
      4,
      26,
      34,
      57,
      146,
      188
    ],
    "code_indx_copy": [
      34,
      19,
      12,
      52,
      53,
      8,
      52,
      53,
      8,
      52,
      53,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      12,
      52,
      53,
      8,
      52,
      53,
      8,
      52,
      53,
      16
    ]
  },
  {
    "intent": [
      "find",
      "the",
      "sums",
      "of",
      "length",
      "7",
      "subsets",
      "of",
      "a",
      "list",
      "var_0"
    ],
    "code": [
      "weekly",
      "=",
      "[",
      "sum",
      "(",
      "visitors",
      "[",
      "x",
      ":",
      "x",
      "+",
      "7",
      "]",
      ")",
      "for",
      "x",
      "in",
      "range",
      "(",
      "0",
      ",",
      "len",
      "(",
      "var_0",
      ")",
      ",",
      "7",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "daily",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      47,
      18,
      465,
      2,
      209,
      340,
      465,
      2,
      3,
      4,
      26
    ],
    "code_indx_copy": [
      524,
      19,
      12,
      0,
      1,
      524,
      12,
      26,
      13,
      26,
      96,
      219,
      16,
      17,
      7,
      26,
      9,
      104,
      1,
      43,
      8,
      32,
      1,
      34,
      17,
      8,
      219,
      17,
      16
    ],
    "code_indx_nocopy": [
      524,
      19,
      12,
      0,
      1,
      524,
      12,
      26,
      13,
      26,
      96,
      219,
      16,
      17,
      7,
      26,
      9,
      104,
      1,
      43,
      8,
      32,
      1,
      34,
      17,
      8,
      219,
      17,
      16
    ]
  },
  {
    "intent": [
      "delete",
      "an",
      "element",
      "var_0",
      "from",
      "a",
      "dictionary",
      "var_1"
    ],
    "code": [
      "del",
      "var_1",
      "[",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "key",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "d",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      86,
      225,
      49,
      26,
      58,
      3,
      25,
      63
    ],
    "code_indx_copy": [
      283,
      91,
      12,
      34,
      16
    ],
    "code_indx_nocopy": [
      283,
      91,
      12,
      34,
      16
    ]
  },
  {
    "intent": [
      "delete",
      "an",
      "element",
      "0",
      "from",
      "a",
      "dictionary",
      "var_0"
    ],
    "code": [
      "{",
      "i",
      ":",
      "var_0",
      "[",
      "i",
      "]",
      "for",
      "i",
      "in",
      "var_0",
      "if",
      "i",
      "!=",
      "0",
      "}"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      86,
      225,
      49,
      107,
      58,
      3,
      25,
      26
    ],
    "code_indx_copy": [
      52,
      6,
      13,
      34,
      12,
      6,
      16,
      7,
      6,
      9,
      34,
      67,
      6,
      88,
      43,
      53
    ],
    "code_indx_nocopy": [
      52,
      6,
      13,
      34,
      12,
      6,
      16,
      7,
      6,
      9,
      34,
      67,
      6,
      88,
      43,
      53
    ]
  },
  {
    "intent": [
      "delete",
      "an",
      "element",
      "str_0",
      "from",
      "a",
      "dictionary",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "pop",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "hello",
        "quote": "\"",
        "type": "str"
      },
      "var_0": {
        "value": "lol",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      86,
      225,
      49,
      5,
      58,
      3,
      25,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      228,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      228,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "delete",
      "an",
      "element",
      "with",
      "key",
      "var_0",
      "dictionary",
      "var_1"
    ],
    "code": [
      "del",
      "var_1",
      "[",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "key",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "r",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      86,
      225,
      49,
      79,
      23,
      26,
      25,
      63
    ],
    "code_indx_copy": [
      283,
      91,
      12,
      34,
      16
    ],
    "code_indx_nocopy": [
      283,
      91,
      12,
      34,
      16
    ]
  },
  {
    "intent": [
      "solve",
      "for",
      "the",
      "least",
      "squares",
      "'",
      "solution",
      "of",
      "matrices",
      "var_0",
      "and",
      "var_1"
    ],
    "code": [
      "np",
      ".",
      "linalg",
      ".",
      "solve",
      "(",
      "np",
      ".",
      "dot",
      "(",
      "var_0",
      ".",
      "T",
      ",",
      "var_0",
      ")",
      ",",
      "np",
      ".",
      "dot",
      "(",
      "var_0",
      ".",
      "T",
      ",",
      "var_1",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "b",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      21,
      18,
      465,
      465,
      310,
      465,
      2,
      465,
      26,
      31,
      63
    ],
    "code_indx_copy": [
      74,
      22,
      524,
      22,
      528,
      1,
      74,
      22,
      305,
      1,
      34,
      22,
      134,
      8,
      34,
      17,
      8,
      74,
      22,
      305,
      1,
      34,
      22,
      134,
      8,
      91,
      17,
      17
    ],
    "code_indx_nocopy": [
      74,
      22,
      524,
      22,
      524,
      1,
      74,
      22,
      305,
      1,
      34,
      22,
      134,
      8,
      34,
      17,
      8,
      74,
      22,
      305,
      1,
      34,
      22,
      134,
      8,
      91,
      17,
      17
    ]
  },
  {
    "intent": [
      "split",
      "dictionary/list",
      "inside",
      "a",
      "pandas",
      "column",
      "str_0",
      "into",
      "separate",
      "columns",
      "in",
      "dataframe",
      "var_0"
    ],
    "code": [
      "pd",
      ".",
      "concat",
      "(",
      "[",
      "var_0",
      ".",
      "drop",
      "(",
      "'str_0'",
      ",",
      "axis",
      "=",
      "1",
      ")",
      ",",
      "pd",
      ".",
      "DataFrame",
      "(",
      "var_0",
      "[",
      "'str_0'",
      "]",
      ".",
      "tolist",
      "(",
      "\n",
      ")",
      ")",
      "]",
      ",",
      "axis",
      "=",
      "1",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "b",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      138,
      465,
      46,
      3,
      42,
      147,
      5,
      12,
      96,
      61,
      24,
      43,
      26
    ],
    "code_indx_copy": [
      162,
      22,
      163,
      1,
      12,
      34,
      22,
      187,
      1,
      29,
      8,
      42,
      19,
      15,
      17,
      8,
      162,
      22,
      164,
      1,
      34,
      12,
      29,
      16,
      22,
      306,
      1,
      161,
      17,
      17,
      16,
      8,
      42,
      19,
      15,
      17
    ],
    "code_indx_nocopy": [
      162,
      22,
      163,
      1,
      12,
      34,
      22,
      187,
      1,
      29,
      8,
      42,
      19,
      15,
      17,
      8,
      162,
      22,
      164,
      1,
      34,
      12,
      29,
      16,
      22,
      306,
      1,
      161,
      17,
      17,
      16,
      8,
      42,
      19,
      15,
      17
    ]
  },
  {
    "intent": [
      "loop",
      "through",
      "0",
      "to",
      "10",
      "with",
      "step",
      "2"
    ],
    "code": [
      "for",
      "i",
      "in",
      "range",
      "(",
      "0",
      ",",
      "10",
      ",",
      "2",
      ")",
      ":",
      "\n",
      "    ",
      "pass",
      ""
    ],
    "slot_map": {},
    "intent_indx": [
      465,
      291,
      107,
      8,
      351,
      79,
      465,
      82
    ],
    "code_indx_copy": [
      7,
      6,
      9,
      104,
      1,
      43,
      8,
      4,
      8,
      82,
      17,
      13,
      161,
      216,
      217,
      218
    ],
    "code_indx_nocopy": [
      7,
      6,
      9,
      104,
      1,
      43,
      8,
      4,
      8,
      82,
      17,
      13,
      161,
      216,
      217,
      218
    ]
  },
  {
    "intent": [
      "loop",
      "through",
      "var_0",
      "with",
      "step",
      "2"
    ],
    "code": [
      "for",
      "i",
      "in",
      "var_0",
      "[",
      ":",
      ":",
      "2",
      "]",
      ":",
      "\n",
      "    ",
      "pass",
      ""
    ],
    "slot_map": {
      "var_0": {
        "value": "mylist",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      291,
      26,
      79,
      465,
      82
    ],
    "code_indx_copy": [
      7,
      6,
      9,
      34,
      12,
      13,
      13,
      82,
      16,
      13,
      161,
      216,
      217,
      218
    ],
    "code_indx_nocopy": [
      7,
      6,
      9,
      34,
      12,
      13,
      13,
      82,
      16,
      13,
      161,
      216,
      217,
      218
    ]
  },
  {
    "intent": [
      "lowercase",
      "string",
      "values",
      "with",
      "key",
      "str_0",
      "in",
      "a",
      "list",
      "of",
      "dictionaries",
      "var_0"
    ],
    "code": [
      "[",
      "{",
      "'str_0'",
      ":",
      "x",
      "[",
      "'str_0'",
      "]",
      ".",
      "lower",
      "(",
      ")",
      "}",
      "for",
      "x",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "content",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "messages",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      207,
      14,
      20,
      79,
      23,
      5,
      24,
      3,
      4,
      2,
      188,
      26
    ],
    "code_indx_copy": [
      12,
      52,
      29,
      13,
      26,
      12,
      29,
      16,
      22,
      152,
      1,
      17,
      53,
      7,
      26,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      12,
      52,
      29,
      13,
      26,
      12,
      29,
      16,
      22,
      152,
      1,
      17,
      53,
      7,
      26,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "list",
      "var_0",
      "into",
      "string",
      "with",
      "values",
      "separated",
      "by",
      "spaces"
    ],
    "code": [
      "\"\"\" \"\"\"",
      ".",
      "join",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "my_list",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      3,
      4,
      26,
      12,
      14,
      79,
      20,
      338,
      44,
      132
    ],
    "code_indx_copy": [
      215,
      22,
      23,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      215,
      22,
      23,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "replace",
      "each",
      "occurrence",
      "of",
      "the",
      "pattern",
      "str_0",
      "within",
      "var_0",
      "with",
      "str_1"
    ],
    "code": [
      "re",
      ".",
      "sub",
      "(",
      "'str_0'",
      ",",
      "'str_1'",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "(http://\\S+|\\S*[^\\w\\s]\\S*)",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "str_1": {
        "value": "",
        "quote": "'",
        "type": "str"
      },
      "(str_0)": {
        "value": "(http://\\S+|\\S*[^\\w\\s]\\S*)",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      130,
      22,
      364,
      2,
      18,
      54,
      5,
      55,
      26,
      79,
      32
    ],
    "code_indx_copy": [
      39,
      22,
      40,
      1,
      29,
      8,
      63,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      40,
      1,
      29,
      8,
      63,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "string",
      "var_0",
      "is",
      "palindrome"
    ],
    "code": [
      "var_0",
      "(",
      "n",
      ")",
      "==",
      "var_0",
      "(",
      "n",
      ")",
      "[",
      ":",
      ":",
      "-",
      "1",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "str",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      234,
      150,
      14,
      26,
      152,
      465
    ],
    "code_indx_copy": [
      34,
      1,
      307,
      17,
      76,
      34,
      1,
      307,
      17,
      12,
      13,
      13,
      14,
      15,
      16
    ],
    "code_indx_nocopy": [
      34,
      1,
      307,
      17,
      76,
      34,
      1,
      307,
      17,
      12,
      13,
      13,
      14,
      15,
      16
    ]
  },
  {
    "intent": [
      "upload",
      "binary",
      "file",
      "str_0",
      "with",
      "ftplib"
    ],
    "code": [
      "ftp",
      ".",
      "storbinary",
      "(",
      "'STOR myfile.txt'",
      ",",
      "open",
      "(",
      "'str_0'",
      ",",
      "'rb'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "myfile.txt",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      276,
      126,
      5,
      79,
      465
    ],
    "code_indx_copy": [
      524,
      22,
      524,
      1,
      524,
      8,
      105,
      1,
      29,
      8,
      155,
      17,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      524,
      1,
      524,
      8,
      105,
      1,
      29,
      8,
      155,
      17,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "all",
      "characters",
      "from",
      "string",
      "var_0",
      "upto",
      "character",
      "str_0"
    ],
    "code": [
      "re",
      ".",
      "sub",
      "(",
      "'.*I'",
      ",",
      "'str_0'",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "stri",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "I",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      268,
      38,
      98,
      58,
      14,
      26,
      465,
      202,
      5
    ],
    "code_indx_copy": [
      39,
      22,
      40,
      1,
      524,
      8,
      29,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      40,
      1,
      524,
      8,
      29,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "parse",
      "a",
      "comma-separated",
      "string",
      "number",
      "str_0",
      "into",
      "int"
    ],
    "code": [
      "int",
      "(",
      "'str_0'",
      ".",
      "replace",
      "(",
      "','",
      ",",
      "''",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "1,000,000",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      73,
      3,
      465,
      14,
      76,
      5,
      12,
      74
    ],
    "code_indx_copy": [
      20,
      1,
      29,
      22,
      107,
      1,
      73,
      8,
      21,
      17,
      17
    ],
    "code_indx_nocopy": [
      20,
      1,
      29,
      22,
      107,
      1,
      73,
      8,
      21,
      17,
      17
    ]
  },
  {
    "intent": [
      "combine",
      "dataframe",
      "var_0",
      "and",
      "dataframe",
      "var_1",
      "by",
      "index",
      "number"
    ],
    "code": [
      "pd",
      ".",
      "merge",
      "(",
      "var_0",
      ",",
      "var_1",
      ",",
      "left_index",
      "=",
      "True",
      ",",
      "right_index",
      "=",
      "True",
      ",",
      "how",
      "=",
      "'outer'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df1",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "df2",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      365,
      43,
      26,
      31,
      43,
      63,
      44,
      37,
      76
    ],
    "code_indx_copy": [
      162,
      22,
      220,
      1,
      34,
      8,
      91,
      8,
      524,
      19,
      109,
      8,
      524,
      19,
      109,
      8,
      243,
      19,
      524,
      17
    ],
    "code_indx_nocopy": [
      162,
      22,
      220,
      1,
      34,
      8,
      91,
      8,
      524,
      19,
      109,
      8,
      524,
      19,
      109,
      8,
      243,
      19,
      524,
      17
    ]
  },
  {
    "intent": [
      "combine",
      "two",
      "pandas",
      "dataframes",
      "with",
      "the",
      "same",
      "index"
    ],
    "code": [
      "pandas",
      ".",
      "concat",
      "(",
      "[",
      "df1",
      ",",
      "df2",
      "]",
      ",",
      "axis",
      "=",
      "1",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      365,
      29,
      42,
      248,
      79,
      18,
      36,
      37
    ],
    "code_indx_copy": [
      276,
      22,
      163,
      1,
      12,
      280,
      8,
      308,
      16,
      8,
      42,
      19,
      15,
      17
    ],
    "code_indx_nocopy": [
      276,
      22,
      163,
      1,
      12,
      280,
      8,
      308,
      16,
      8,
      42,
      19,
      15,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "all",
      "boolean",
      "values",
      "in",
      "a",
      "python",
      "dictionary",
      "var_0",
      "are",
      "true"
    ],
    "code": [
      "all",
      "(",
      "var_0",
      ".",
      "values",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "dict",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      234,
      150,
      38,
      366,
      20,
      24,
      3,
      50,
      25,
      26,
      243,
      367
    ],
    "code_indx_copy": [
      77,
      1,
      34,
      22,
      166,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      77,
      1,
      34,
      22,
      166,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "use",
      "regex",
      "pattern",
      "str_0",
      "to",
      "remove",
      "digit",
      "12",
      "if",
      "followed",
      "by",
      "4",
      "other",
      "digits",
      "in",
      "column",
      "var_0",
      "of",
      "dataframe",
      "var_1"
    ],
    "code": [
      "var_1",
      ".",
      "var_0",
      ".",
      "str",
      ".",
      "replace",
      "(",
      "'str_0'",
      ",",
      "''",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "^12(?=.{4}$)",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "c_contofficeID",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      309,
      40,
      54,
      5,
      8,
      268,
      465,
      465,
      150,
      368,
      44,
      231,
      193,
      200,
      24,
      147,
      26,
      2,
      43,
      63
    ],
    "code_indx_copy": [
      91,
      22,
      34,
      22,
      25,
      22,
      107,
      1,
      29,
      8,
      21,
      17
    ],
    "code_indx_nocopy": [
      91,
      22,
      34,
      22,
      25,
      22,
      107,
      1,
      29,
      8,
      21,
      17
    ]
  },
  {
    "intent": [
      "reverse",
      "a",
      "list",
      "var_0"
    ],
    "code": [
      "var_0",
      "[",
      ":",
      ":",
      "-",
      "1",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "L",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      282,
      3,
      4,
      26
    ],
    "code_indx_copy": [
      34,
      12,
      13,
      13,
      14,
      15,
      16
    ],
    "code_indx_nocopy": [
      34,
      12,
      13,
      13,
      14,
      15,
      16
    ]
  },
  {
    "intent": [
      "reverse",
      "a",
      "list",
      "var_0"
    ],
    "code": [
      "reversed",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "array",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      282,
      3,
      4,
      26
    ],
    "code_indx_copy": [
      246,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      246,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "reverse",
      "a",
      "list",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "reverse",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "L",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      282,
      3,
      4,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      129,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      129,
      1,
      17
    ]
  },
  {
    "intent": [
      "reverse",
      "a",
      "list",
      "var_0"
    ],
    "code": [
      "list",
      "(",
      "reversed",
      "(",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "array",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      282,
      3,
      4,
      26
    ],
    "code_indx_copy": [
      33,
      1,
      246,
      1,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      33,
      1,
      246,
      1,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "first",
      "element",
      "of",
      "each",
      "tuple",
      "in",
      "list",
      "var_0"
    ],
    "code": [
      "[",
      "tup",
      "[",
      "0",
      "]",
      "for",
      "tup",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "A",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      151,
      49,
      2,
      22,
      113,
      24,
      4,
      26
    ],
    "code_indx_copy": [
      12,
      309,
      12,
      43,
      16,
      7,
      309,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      12,
      309,
      12,
      43,
      16,
      7,
      309,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "replace",
      "character",
      "str_0",
      "with",
      "character",
      "str_1",
      "and",
      "character",
      "str_2",
      "with",
      "character",
      "str_3",
      "in",
      "file",
      "var_0"
    ],
    "code": [
      "newcontents",
      "=",
      "var_0",
      ".",
      "replace",
      "(",
      "'str_0'",
      ",",
      "'str_1'",
      ")",
      ".",
      "replace",
      "(",
      "'str_2'",
      ",",
      "'str_3'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "a",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "e",
        "quote": "'",
        "type": "str"
      },
      "str_2": {
        "value": "s",
        "quote": "'",
        "type": "str"
      },
      "str_3": {
        "value": "3",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "contents",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      130,
      202,
      5,
      79,
      202,
      32,
      31,
      202,
      194,
      79,
      202,
      219,
      24,
      126,
      26
    ],
    "code_indx_copy": [
      524,
      19,
      34,
      22,
      107,
      1,
      29,
      8,
      63,
      17,
      22,
      107,
      1,
      150,
      8,
      173,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      34,
      22,
      107,
      1,
      29,
      8,
      63,
      17,
      22,
      107,
      1,
      150,
      8,
      173,
      17
    ]
  },
  {
    "intent": [
      "serialise",
      "sqlalchemy",
      "rowproxy",
      "object",
      "var_0",
      "to",
      "a",
      "json",
      "object"
    ],
    "code": [
      "json",
      ".",
      "dumps",
      "(",
      "[",
      "dict",
      "(",
      "list",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      ")",
      "for",
      "var_0",
      "in",
      "rs",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "row",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      369,
      465,
      15,
      26,
      8,
      3,
      181,
      15
    ],
    "code_indx_copy": [
      140,
      22,
      141,
      1,
      12,
      70,
      1,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      17,
      7,
      34,
      9,
      524,
      16,
      17
    ],
    "code_indx_nocopy": [
      140,
      22,
      141,
      1,
      12,
      70,
      1,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      17,
      7,
      34,
      9,
      524,
      16,
      17
    ]
  },
  {
    "intent": [
      "get",
      "file",
      "str_0"
    ],
    "code": [
      "config_file",
      "=",
      "os",
      ".",
      "path",
      ".",
      "expanduser",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "~/foo.ini",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      126,
      5
    ],
    "code_indx_copy": [
      524,
      19,
      113,
      22,
      114,
      22,
      524,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      113,
      22,
      114,
      22,
      524,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "get",
      "multiple",
      "parameters",
      "with",
      "same",
      "name",
      "from",
      "a",
      "url",
      "in",
      "pylons"
    ],
    "code": [
      "request",
      ".",
      "params",
      ".",
      "getall",
      "(",
      "'c'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      17,
      6,
      370,
      79,
      36,
      129,
      58,
      3,
      102,
      24,
      465
    ],
    "code_indx_copy": [
      233,
      22,
      238,
      22,
      524,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      233,
      22,
      238,
      22,
      524,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "array",
      "var_0",
      "into",
      "a",
      "correlation",
      "matrix"
    ],
    "code": [
      "np",
      ".",
      "corrcoef",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "x",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      85,
      26,
      12,
      3,
      465,
      189
    ],
    "code_indx_copy": [
      74,
      22,
      524,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      74,
      22,
      524,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "find",
      "the",
      "greatest",
      "number",
      "in",
      "set",
      "str_0"
    ],
    "code": [
      "print",
      "(",
      "max",
      "(",
      "str_0",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "(1, 2, 3)",
        "quote": "`",
        "type": "str"
      },
      "(str_0)": {
        "value": "(1, 2, 3)",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      47,
      18,
      465,
      76,
      24,
      59,
      5
    ],
    "code_indx_copy": [
      49,
      1,
      179,
      1,
      11,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      179,
      1,
      11,
      17,
      17
    ]
  },
  {
    "intent": [
      "retrieve",
      "parameter",
      "str_0",
      "from",
      "a",
      "get",
      "request",
      "."
    ],
    "code": [
      "self",
      ".",
      "request",
      ".",
      "get",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "var_name",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      371,
      372,
      5,
      58,
      3,
      17,
      101,
      159
    ],
    "code_indx_copy": [
      310,
      22,
      233,
      22,
      86,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      310,
      22,
      233,
      22,
      86,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "add",
      "100",
      "to",
      "each",
      "element",
      "of",
      "column",
      "str_0",
      "in",
      "dataframe",
      "var_0"
    ],
    "code": [
      "var_0",
      "[",
      "'str_0'",
      "]",
      ".",
      "apply",
      "(",
      "lambda",
      "str_0",
      ",",
      "y",
      ":",
      "str_0",
      "+",
      "y",
      ",",
      "args",
      "=",
      "(",
      "100",
      ",",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "x",
        "quote": "\"",
        "type": "str"
      },
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      60,
      373,
      8,
      22,
      49,
      2,
      147,
      5,
      24,
      43,
      26
    ],
    "code_indx_copy": [
      34,
      12,
      29,
      16,
      22,
      59,
      1,
      44,
      11,
      8,
      103,
      13,
      11,
      96,
      103,
      8,
      311,
      19,
      1,
      267,
      8,
      17,
      17
    ],
    "code_indx_nocopy": [
      34,
      12,
      29,
      16,
      22,
      59,
      1,
      44,
      11,
      8,
      103,
      13,
      11,
      96,
      103,
      8,
      311,
      19,
      1,
      267,
      8,
      17,
      17
    ]
  },
  {
    "intent": [
      "django",
      "get",
      "first",
      "10",
      "records",
      "of",
      "model",
      "var_0",
      "ordered",
      "by",
      "criteria",
      "str_0",
      "of",
      "model",
      "str_1"
    ],
    "code": [
      "var_0",
      ".",
      "objects",
      ".",
      "order_by",
      "(",
      "'-pet__age'",
      ")",
      "[",
      ":",
      "10",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "User",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "age",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "pet",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      87,
      17,
      151,
      351,
      374,
      2,
      313,
      26,
      465,
      44,
      465,
      5,
      2,
      313,
      32
    ],
    "code_indx_copy": [
      34,
      22,
      78,
      22,
      136,
      1,
      524,
      17,
      12,
      13,
      4,
      16
    ],
    "code_indx_nocopy": [
      34,
      22,
      78,
      22,
      136,
      1,
      524,
      17,
      12,
      13,
      4,
      16
    ]
  },
  {
    "intent": [
      "delay",
      "for",
      "str_0",
      "seconds"
    ],
    "code": [
      "time",
      ".",
      "sleep",
      "(",
      "5",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "5",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      375,
      21,
      5,
      376
    ],
    "code_indx_copy": [
      84,
      22,
      312,
      1,
      185,
      17
    ],
    "code_indx_nocopy": [
      84,
      22,
      312,
      1,
      185,
      17
    ]
  },
  {
    "intent": [
      "make",
      "a",
      "60",
      "seconds",
      "time",
      "delay"
    ],
    "code": [
      "time",
      ".",
      "sleep",
      "(",
      "60",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      191,
      3,
      465,
      376,
      134,
      375
    ],
    "code_indx_copy": [
      84,
      22,
      312,
      1,
      313,
      17
    ],
    "code_indx_nocopy": [
      84,
      22,
      312,
      1,
      313,
      17
    ]
  },
  {
    "intent": [
      "make",
      "a",
      "0.1",
      "seconds",
      "time",
      "delay"
    ],
    "code": [
      "sleep",
      "(",
      "0.1",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      191,
      3,
      465,
      376,
      134,
      375
    ],
    "code_indx_copy": [
      312,
      1,
      314,
      17
    ],
    "code_indx_nocopy": [
      312,
      1,
      314,
      17
    ]
  },
  {
    "intent": [
      "make",
      "a",
      "60",
      "seconds",
      "time",
      "delay"
    ],
    "code": [
      "time",
      ".",
      "sleep",
      "(",
      "60",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      191,
      3,
      465,
      376,
      134,
      375
    ],
    "code_indx_copy": [
      84,
      22,
      312,
      1,
      313,
      17
    ],
    "code_indx_nocopy": [
      84,
      22,
      312,
      1,
      313,
      17
    ]
  },
  {
    "intent": [
      "make",
      "a",
      "0.1",
      "seconds",
      "time",
      "delay"
    ],
    "code": [
      "time",
      ".",
      "sleep",
      "(",
      "0.1",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      191,
      3,
      465,
      376,
      134,
      375
    ],
    "code_indx_copy": [
      84,
      22,
      312,
      1,
      314,
      17
    ],
    "code_indx_nocopy": [
      84,
      22,
      312,
      1,
      314,
      17
    ]
  },
  {
    "intent": [
      "from",
      "a",
      "list",
      "of",
      "strings",
      "var_0",
      ",",
      "remove",
      "the",
      "values",
      "that",
      "contains",
      "numbers",
      "."
    ],
    "code": [
      "[",
      "x",
      "for",
      "x",
      "in",
      "var_0",
      "if",
      "not",
      "any",
      "(",
      "c",
      ".",
      "isdigit",
      "(",
      ")",
      "for",
      "c",
      "in",
      "x",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "my_list",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      58,
      3,
      4,
      2,
      259,
      26,
      62,
      268,
      18,
      20,
      195,
      75,
      97,
      159
    ],
    "code_indx_copy": [
      12,
      26,
      7,
      26,
      9,
      34,
      67,
      281,
      269,
      1,
      66,
      22,
      68,
      1,
      17,
      7,
      66,
      9,
      26,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      26,
      7,
      26,
      9,
      34,
      67,
      281,
      269,
      1,
      66,
      22,
      68,
      1,
      17,
      7,
      66,
      9,
      26,
      17,
      16
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "middle",
      "two",
      "characters",
      "of",
      "a",
      "string",
      "str_0",
      "in",
      "a",
      "pandas",
      "dataframe",
      "var_0"
    ],
    "code": [
      "var_0",
      "[",
      "'str_0'",
      "]",
      ".",
      "apply",
      "(",
      "lambda",
      "x",
      ":",
      "x",
      "[",
      "len",
      "(",
      "x",
      ")",
      "/",
      "2",
      "-",
      "1",
      ":",
      "len",
      "(",
      "x",
      ")",
      "/",
      "2",
      "+",
      "1",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "state",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      18,
      465,
      29,
      98,
      2,
      3,
      14,
      5,
      24,
      3,
      42,
      43,
      26
    ],
    "code_indx_copy": [
      34,
      12,
      29,
      16,
      22,
      59,
      1,
      44,
      26,
      13,
      26,
      12,
      32,
      1,
      26,
      17,
      31,
      82,
      14,
      15,
      13,
      32,
      1,
      26,
      17,
      31,
      82,
      96,
      15,
      16,
      17
    ],
    "code_indx_nocopy": [
      34,
      12,
      29,
      16,
      22,
      59,
      1,
      44,
      26,
      13,
      26,
      12,
      32,
      1,
      26,
      17,
      31,
      82,
      14,
      15,
      13,
      32,
      1,
      26,
      17,
      31,
      82,
      96,
      15,
      16,
      17
    ]
  },
  {
    "intent": [
      "draw",
      "a",
      "grid",
      "line",
      "on",
      "every",
      "tick",
      "of",
      "plot",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "grid",
      "(",
      "True",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "plt",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      3,
      465,
      172,
      139,
      279,
      465,
      2,
      244,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      530,
      1,
      109,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      524,
      1,
      109,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "list",
      "var_0",
      "based",
      "on",
      "each",
      "element",
      "'s",
      "number",
      "of",
      "occurrences"
    ],
    "code": [
      "sorted",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "(",
      "-",
      "1",
      "*",
      "c",
      "[",
      "x",
      "]",
      ",",
      "var_0",
      ".",
      "index",
      "(",
      "x",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "lst",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      4,
      26,
      208,
      139,
      22,
      49,
      266,
      76,
      2,
      53
    ],
    "code_indx_copy": [
      101,
      1,
      34,
      8,
      102,
      19,
      44,
      26,
      13,
      1,
      14,
      15,
      3,
      66,
      12,
      26,
      16,
      8,
      34,
      22,
      160,
      1,
      26,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      34,
      8,
      102,
      19,
      44,
      26,
      13,
      1,
      14,
      15,
      3,
      66,
      12,
      26,
      16,
      8,
      34,
      22,
      160,
      1,
      26,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "value",
      "with",
      "the",
      "maximum",
      "length",
      "in",
      "each",
      "column",
      "in",
      "array",
      "var_0"
    ],
    "code": [
      "[",
      "max",
      "(",
      "len",
      "(",
      "str",
      "(",
      "x",
      ")",
      ")",
      "for",
      "x",
      "in",
      "line",
      ")",
      "for",
      "line",
      "in",
      "zip",
      "(",
      "*",
      "var_0",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "foo",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      18,
      143,
      79,
      18,
      227,
      209,
      24,
      22,
      147,
      24,
      85,
      26
    ],
    "code_indx_copy": [
      12,
      179,
      1,
      32,
      1,
      25,
      1,
      26,
      17,
      17,
      7,
      26,
      9,
      315,
      17,
      7,
      315,
      9,
      36,
      1,
      3,
      34,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      179,
      1,
      32,
      1,
      25,
      1,
      26,
      17,
      17,
      7,
      26,
      9,
      315,
      17,
      7,
      315,
      9,
      36,
      1,
      3,
      34,
      17,
      16
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "count",
      "of",
      "each",
      "unique",
      "value",
      "in",
      "column",
      "var_0",
      "of",
      "dataframe",
      "var_1",
      "and",
      "store",
      "in",
      "column",
      "str_0"
    ],
    "code": [
      "var_1",
      ".",
      "var_0",
      ".",
      "value_counts",
      "(",
      ")",
      ".",
      "reset_index",
      "(",
      "name",
      "=",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "Country",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "Sum of Accidents",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      18,
      203,
      2,
      22,
      204,
      143,
      24,
      147,
      26,
      2,
      43,
      63,
      31,
      377,
      24,
      147,
      5
    ],
    "code_indx_copy": [
      91,
      22,
      34,
      22,
      524,
      1,
      17,
      22,
      186,
      1,
      316,
      19,
      29,
      17
    ],
    "code_indx_nocopy": [
      91,
      22,
      34,
      22,
      524,
      1,
      17,
      22,
      186,
      1,
      316,
      19,
      29,
      17
    ]
  },
  {
    "intent": [
      "calculat",
      "the",
      "difference",
      "between",
      "each",
      "row",
      "and",
      "the",
      "row",
      "previous",
      "to",
      "it",
      "in",
      "dataframe",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "set_index",
      "(",
      "'Date'",
      ")",
      ".",
      "diff",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "data",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      18,
      465,
      278,
      22,
      45,
      31,
      18,
      45,
      465,
      8,
      145,
      24,
      43,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      203,
      1,
      524,
      17,
      22,
      524,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      203,
      1,
      524,
      17,
      22,
      524,
      1,
      17
    ]
  },
  {
    "intent": [
      "append",
      "values",
      "str_0",
      "to",
      "a",
      "set",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "update",
      "(",
      "[",
      "str_0",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "[3, 4]",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "[str_0]": {
        "value": "[3, 4]",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      111,
      20,
      5,
      8,
      3,
      59,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      69,
      1,
      12,
      11,
      16,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      69,
      1,
      12,
      11,
      16,
      17
    ]
  },
  {
    "intent": [
      "set",
      "every",
      "two-stride",
      "far",
      "element",
      "to",
      "-1",
      "starting",
      "from",
      "second",
      "element",
      "in",
      "array",
      "var_0"
    ],
    "code": [
      "var_0",
      "[",
      "1",
      ":",
      ":",
      "2",
      "]",
      "=",
      "-",
      "1"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      59,
      279,
      465,
      465,
      49,
      8,
      465,
      316,
      58,
      118,
      49,
      24,
      85,
      26
    ],
    "code_indx_copy": [
      34,
      12,
      15,
      13,
      13,
      82,
      16,
      19,
      14,
      15
    ],
    "code_indx_nocopy": [
      34,
      12,
      15,
      13,
      13,
      82,
      16,
      19,
      14,
      15
    ]
  },
  {
    "intent": [
      "get",
      "rank",
      "of",
      "rows",
      "from",
      "highest",
      "to",
      "lowest",
      "of",
      "dataframe",
      "var_0",
      ",",
      "grouped",
      "by",
      "value",
      "in",
      "column",
      "var_1",
      ",",
      "according",
      "to",
      "value",
      "in",
      "column",
      "var_2"
    ],
    "code": [
      "var_0",
      ".",
      "groupby",
      "(",
      "'var_1'",
      ")",
      "[",
      "'var_2'",
      "]",
      ".",
      "rank",
      "(",
      "ascending",
      "=",
      "False",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "group",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "value",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      465,
      2,
      80,
      58,
      465,
      8,
      465,
      2,
      43,
      26,
      62,
      114,
      44,
      143,
      24,
      147,
      63,
      62,
      378,
      8,
      143,
      24,
      147,
      64
    ],
    "code_indx_copy": [
      34,
      22,
      157,
      1,
      57,
      17,
      12,
      58,
      16,
      22,
      529,
      1,
      278,
      19,
      87,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      157,
      1,
      57,
      17,
      12,
      58,
      16,
      22,
      524,
      1,
      278,
      19,
      87,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "js",
      "date",
      "object",
      "str_0",
      "to",
      "python",
      "datetime"
    ],
    "code": [
      "datetime",
      ".",
      "strptime",
      "(",
      "'str_0'",
      ",",
      "'%a, %d %b %Y %H:%M:%S %Z'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "Tue, 22 Nov 2011 06:00:00 GMT",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      465,
      133,
      15,
      5,
      8,
      50,
      13
    ],
    "code_indx_copy": [
      27,
      22,
      28,
      1,
      29,
      8,
      524,
      17
    ],
    "code_indx_nocopy": [
      27,
      22,
      28,
      1,
      29,
      8,
      524,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "binary",
      "value",
      "str_0",
      "to",
      "string"
    ],
    "code": [
      "struct",
      ".",
      "pack",
      "(",
      "'<I'",
      ",",
      "1633837924",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "1633837924",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      3,
      276,
      143,
      5,
      8,
      14
    ],
    "code_indx_copy": [
      317,
      22,
      318,
      1,
      524,
      8,
      524,
      17
    ],
    "code_indx_nocopy": [
      317,
      22,
      318,
      1,
      524,
      8,
      524,
      17
    ]
  },
  {
    "intent": [
      "append",
      "string",
      "var_0",
      "to",
      "list",
      "var_1"
    ],
    "code": [
      "var_1",
      ".",
      "append",
      "(",
      "'var_0'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "foo",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "list",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      111,
      14,
      26,
      8,
      4,
      63
    ],
    "code_indx_copy": [
      91,
      22,
      146,
      1,
      56,
      17
    ],
    "code_indx_nocopy": [
      91,
      22,
      146,
      1,
      56,
      17
    ]
  },
  {
    "intent": [
      "insert",
      "string",
      "var_0",
      "at",
      "position",
      "str_0",
      "of",
      "list",
      "var_1"
    ],
    "code": [
      "var_1",
      ".",
      "insert",
      "(",
      "0",
      ",",
      "'var_0'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "foo",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "0",
        "quote": "`",
        "type": "str"
      },
      "var_1": {
        "value": "list",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      277,
      14,
      26,
      35,
      323,
      5,
      2,
      4,
      63
    ],
    "code_indx_copy": [
      91,
      22,
      319,
      1,
      43,
      8,
      56,
      17
    ],
    "code_indx_nocopy": [
      91,
      22,
      319,
      1,
      43,
      8,
      56,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "keys",
      "in",
      "dictionary",
      "var_0",
      "into",
      "case",
      "insensitive"
    ],
    "code": [
      "theset",
      "=",
      "set",
      "(",
      "k",
      ".",
      "lower",
      "(",
      ")",
      "for",
      "k",
      "in",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "thedict",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      206,
      24,
      25,
      26,
      12,
      197,
      198
    ],
    "code_indx_copy": [
      524,
      19,
      189,
      1,
      89,
      22,
      152,
      1,
      17,
      7,
      89,
      9,
      34,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      189,
      1,
      89,
      22,
      152,
      1,
      17,
      7,
      89,
      9,
      34,
      17
    ]
  },
  {
    "intent": [
      "pad",
      "str_0",
      "up",
      "to",
      "a",
      "length",
      "of",
      "5",
      "characters",
      "with",
      "str_1"
    ],
    "code": [
      "\"\"\"{s:{c}^{n}}\"\"\"",
      ".",
      "format",
      "(",
      "s",
      "=",
      "'str_0'",
      ",",
      "n",
      "=",
      "5",
      ",",
      "c",
      "=",
      "'str_1'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "dog",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "x",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      5,
      379,
      8,
      3,
      209,
      2,
      232,
      98,
      79,
      32
    ],
    "code_indx_copy": [
      524,
      22,
      38,
      1,
      181,
      19,
      29,
      8,
      307,
      19,
      185,
      8,
      66,
      19,
      63,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      38,
      1,
      181,
      19,
      29,
      8,
      307,
      19,
      185,
      8,
      66,
      19,
      63,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "type",
      "of",
      "variable",
      "var_0",
      "is",
      "a",
      "string"
    ],
    "code": [
      "isinstance",
      "(",
      "var_0",
      ",",
      "str",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      234,
      150,
      330,
      2,
      95,
      26,
      152,
      3,
      14
    ],
    "code_indx_copy": [
      206,
      1,
      34,
      8,
      25,
      17
    ],
    "code_indx_nocopy": [
      206,
      1,
      34,
      8,
      25,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "type",
      "of",
      "a",
      "variable",
      "var_0",
      "is",
      "string"
    ],
    "code": [
      "isinstance",
      "(",
      "var_0",
      ",",
      "str",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      234,
      150,
      330,
      2,
      3,
      95,
      26,
      152,
      14
    ],
    "code_indx_copy": [
      206,
      1,
      34,
      8,
      25,
      17
    ],
    "code_indx_nocopy": [
      206,
      1,
      34,
      8,
      25,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "list",
      "of",
      "dictionaries",
      "var_0",
      "into",
      "a",
      "flat",
      "dictionary"
    ],
    "code": [
      "dict",
      "(",
      "pair",
      "for",
      "d",
      "in",
      "var_0",
      "for",
      "pair",
      "in",
      "list",
      "(",
      "d",
      ".",
      "items",
      "(",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "L",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      4,
      2,
      188,
      26,
      12,
      3,
      380,
      25
    ],
    "code_indx_copy": [
      70,
      1,
      320,
      7,
      2,
      9,
      34,
      7,
      320,
      9,
      33,
      1,
      2,
      22,
      35,
      1,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      70,
      1,
      320,
      7,
      2,
      9,
      34,
      7,
      320,
      9,
      33,
      1,
      2,
      22,
      35,
      1,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "merge",
      "a",
      "list",
      "of",
      "dictionaries",
      "in",
      "list",
      "var_0",
      "into",
      "a",
      "single",
      "dict"
    ],
    "code": [
      "{",
      "k",
      ":",
      "v",
      "for",
      "d",
      "in",
      "var_0",
      "for",
      "k",
      ",",
      "v",
      "in",
      "list",
      "(",
      "d",
      ".",
      "items",
      "(",
      ")",
      ")",
      "}"
    ],
    "slot_map": {
      "var_0": {
        "value": "L",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      247,
      3,
      4,
      2,
      188,
      24,
      4,
      26,
      12,
      3,
      9,
      186
    ],
    "code_indx_copy": [
      52,
      89,
      13,
      90,
      7,
      2,
      9,
      34,
      7,
      89,
      8,
      90,
      9,
      33,
      1,
      2,
      22,
      35,
      1,
      17,
      17,
      53
    ],
    "code_indx_nocopy": [
      52,
      89,
      13,
      90,
      7,
      2,
      9,
      34,
      7,
      89,
      8,
      90,
      9,
      33,
      1,
      2,
      22,
      35,
      1,
      17,
      17,
      53
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "pandas",
      "data",
      "frame",
      "according",
      "to",
      "column",
      "var_0",
      "in",
      "ascending",
      "and",
      "var_1",
      "in",
      "descending",
      "order"
    ],
    "code": [
      "df",
      ".",
      "sort_values",
      "(",
      "[",
      "'var_0'",
      ",",
      "'var_1'",
      "]",
      ",",
      "ascending",
      "=",
      "[",
      "True",
      ",",
      "False",
      "]",
      ",",
      "inplace",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "Peak",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "Weeks",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      3,
      42,
      65,
      66,
      378,
      8,
      147,
      26,
      24,
      119,
      31,
      63,
      24,
      121,
      162
    ],
    "code_indx_copy": [
      149,
      22,
      178,
      1,
      12,
      56,
      8,
      57,
      16,
      8,
      278,
      19,
      12,
      109,
      8,
      87,
      16,
      8,
      279,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      149,
      22,
      178,
      1,
      12,
      56,
      8,
      57,
      16,
      8,
      278,
      19,
      12,
      109,
      8,
      87,
      16,
      8,
      279,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "pandas",
      "data",
      "frame",
      "by",
      "column",
      "var_0",
      "in",
      "ascending",
      "and",
      "var_1",
      "in",
      "descending",
      "order"
    ],
    "code": [
      "df",
      ".",
      "sort",
      "(",
      "[",
      "'var_0'",
      ",",
      "'var_1'",
      "]",
      ",",
      "ascending",
      "=",
      "[",
      "True",
      ",",
      "False",
      "]",
      ",",
      "inplace",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "Peak",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "Weeks",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      3,
      42,
      65,
      66,
      44,
      147,
      26,
      24,
      119,
      31,
      63,
      24,
      121,
      162
    ],
    "code_indx_copy": [
      149,
      22,
      124,
      1,
      12,
      56,
      8,
      57,
      16,
      8,
      278,
      19,
      12,
      109,
      8,
      87,
      16,
      8,
      279,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      149,
      22,
      124,
      1,
      12,
      56,
      8,
      57,
      16,
      8,
      278,
      19,
      12,
      109,
      8,
      87,
      16,
      8,
      279,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "run",
      "the",
      "code",
      "contained",
      "in",
      "string",
      "str_0"
    ],
    "code": [
      "eval",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "print('Hello')",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      251,
      18,
      293,
      465,
      24,
      14,
      5
    ],
    "code_indx_copy": [
      321,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      321,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "creating",
      "a",
      "list",
      "of",
      "dictionaries",
      "[",
      "{",
      "str_0",
      ":",
      "1",
      ",",
      "str_1",
      ":",
      "4",
      ",",
      "str_2",
      ":",
      "2",
      ",",
      "str_3",
      ":",
      "4",
      "}",
      ",",
      "{",
      "str_0",
      ":",
      "1",
      ",",
      "str_1",
      ":",
      "4",
      ",",
      "str_2",
      ":",
      "1",
      ",",
      "str_3",
      ":",
      "5",
      "}",
      "]"
    ],
    "code": [
      "[",
      "{",
      "'str_4'",
      ":",
      "1",
      ",",
      "'str_5'",
      ":",
      "4",
      ",",
      "'str_6'",
      ":",
      "2",
      ",",
      "'str_7'",
      ":",
      "4",
      "}",
      ",",
      "{",
      "'str_4'",
      ":",
      "1",
      ",",
      "'str_5'",
      ":",
      "4",
      ",",
      "\n",
      "'str_6'",
      ":",
      "1",
      ",",
      "'str_7'",
      ":",
      "5",
      "}",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "A",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "C",
        "quote": "'",
        "type": "str"
      },
      "str_2": {
        "value": "B",
        "quote": "'",
        "type": "str"
      },
      "str_3": {
        "value": "D",
        "quote": "'",
        "type": "str"
      },
      "str_4": {
        "value": "A",
        "quote": "'",
        "type": "str"
      },
      "str_5": {
        "value": "C",
        "quote": "'",
        "type": "str"
      },
      "str_6": {
        "value": "B",
        "quote": "'",
        "type": "str"
      },
      "str_7": {
        "value": "D",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      381,
      3,
      4,
      2,
      188,
      218,
      465,
      5,
      128,
      237,
      62,
      32,
      128,
      231,
      62,
      194,
      128,
      82,
      62,
      219,
      128,
      231,
      465,
      62,
      465,
      5,
      128,
      237,
      62,
      32,
      128,
      231,
      62,
      194,
      128,
      237,
      62,
      219,
      128,
      232,
      465,
      220
    ],
    "code_indx_copy": [
      12,
      52,
      322,
      13,
      15,
      8,
      323,
      13,
      184,
      8,
      324,
      13,
      82,
      8,
      325,
      13,
      184,
      53,
      8,
      52,
      322,
      13,
      15,
      8,
      323,
      13,
      184,
      8,
      161,
      324,
      13,
      15,
      8,
      325,
      13,
      185,
      53,
      16
    ],
    "code_indx_nocopy": [
      12,
      52,
      322,
      13,
      15,
      8,
      323,
      13,
      184,
      8,
      324,
      13,
      82,
      8,
      325,
      13,
      184,
      53,
      8,
      52,
      322,
      13,
      15,
      8,
      323,
      13,
      184,
      8,
      161,
      324,
      13,
      15,
      8,
      325,
      13,
      185,
      53,
      16
    ]
  },
  {
    "intent": [
      "creating",
      "a",
      "list",
      "of",
      "dictionaries",
      "in",
      "python"
    ],
    "code": [
      "[",
      "{",
      "'A'",
      ":",
      "1",
      ",",
      "'C'",
      ":",
      "4",
      ",",
      "'B'",
      ":",
      "2",
      ",",
      "'D'",
      ":",
      "4",
      "}",
      ",",
      "{",
      "'A'",
      ":",
      "1",
      ",",
      "'C'",
      ":",
      "4",
      ",",
      "'B'",
      ":",
      "1",
      ",",
      "'D'",
      ":",
      "5",
      "}",
      "]"
    ],
    "slot_map": {},
    "intent_indx": [
      381,
      3,
      4,
      2,
      188,
      24,
      50
    ],
    "code_indx_copy": [
      12,
      52,
      247,
      13,
      15,
      8,
      326,
      13,
      184,
      8,
      327,
      13,
      82,
      8,
      524,
      13,
      184,
      53,
      8,
      52,
      247,
      13,
      15,
      8,
      326,
      13,
      184,
      8,
      327,
      13,
      15,
      8,
      524,
      13,
      185,
      53,
      16
    ],
    "code_indx_nocopy": [
      12,
      52,
      247,
      13,
      15,
      8,
      326,
      13,
      184,
      8,
      327,
      13,
      82,
      8,
      524,
      13,
      184,
      53,
      8,
      52,
      247,
      13,
      15,
      8,
      326,
      13,
      184,
      8,
      327,
      13,
      15,
      8,
      524,
      13,
      185,
      53,
      16
    ]
  },
  {
    "intent": [
      "get",
      "all",
      "possible",
      "combination",
      "of",
      "items",
      "from",
      "2-dimensional",
      "list",
      "var_0"
    ],
    "code": [
      "list",
      "(",
      "itertools",
      ".",
      "product",
      "(",
      "*",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      38,
      465,
      382,
      2,
      39,
      58,
      465,
      4,
      26
    ],
    "code_indx_copy": [
      33,
      1,
      50,
      22,
      328,
      1,
      3,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      33,
      1,
      50,
      22,
      328,
      1,
      3,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "sum",
      "of",
      "values",
      "of",
      "columns",
      "str_0",
      ",",
      "str_1",
      ",",
      "str_2",
      "after",
      "group",
      "by",
      "on",
      "columns",
      "str_3",
      "and",
      "str_4",
      "in",
      "dataframe",
      "var_0",
      "."
    ],
    "code": [
      "var_0",
      ".",
      "groupby",
      "(",
      "[",
      "'str_3'",
      ",",
      "'Item_Code'",
      "]",
      ")",
      "[",
      "[",
      "'str_0'",
      ",",
      "'str_1'",
      ",",
      "'str_2'",
      "]",
      "]",
      ".",
      "sum",
      "(",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "Y1961",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "Y1962",
        "quote": "'",
        "type": "str"
      },
      "str_2": {
        "value": "Y1963",
        "quote": "'",
        "type": "str"
      },
      "str_3": {
        "value": "Country",
        "quote": "\"",
        "type": "str"
      },
      "str_4": {
        "value": "Item_code",
        "quote": "\"",
        "type": "str"
      },
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      112,
      2,
      20,
      2,
      61,
      5,
      62,
      32,
      62,
      194,
      201,
      383,
      44,
      139,
      61,
      219,
      31,
      465,
      24,
      43,
      26,
      159
    ],
    "code_indx_copy": [
      34,
      22,
      157,
      1,
      12,
      173,
      8,
      524,
      16,
      17,
      12,
      12,
      29,
      8,
      63,
      8,
      150,
      16,
      16,
      22,
      0,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      157,
      1,
      12,
      173,
      8,
      524,
      16,
      17,
      12,
      12,
      29,
      8,
      63,
      8,
      150,
      16,
      16,
      22,
      0,
      1,
      17
    ]
  },
  {
    "intent": [
      "create",
      "list",
      "var_0",
      "containing",
      "permutations",
      "of",
      "each",
      "element",
      "in",
      "list",
      "str_0",
      "with",
      "variable",
      "var_1",
      "as",
      "tuples"
    ],
    "code": [
      "var_0",
      "=",
      "[",
      "(",
      "el",
      ",",
      "var_1",
      ")",
      "for",
      "el",
      "in",
      "[",
      "str_0",
      "]",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "done",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "[a, b, c, d]",
        "quote": "`",
        "type": "str"
      },
      "var_1": {
        "value": "x",
        "quote": "`",
        "type": "var"
      },
      "[str_0]": {
        "value": "[a, b, c, d]",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      148,
      4,
      26,
      34,
      153,
      2,
      22,
      49,
      24,
      4,
      5,
      79,
      95,
      63,
      90,
      33
    ],
    "code_indx_copy": [
      34,
      19,
      12,
      1,
      329,
      8,
      91,
      17,
      7,
      329,
      9,
      12,
      11,
      16,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      12,
      1,
      329,
      8,
      91,
      17,
      7,
      329,
      9,
      12,
      11,
      16,
      16
    ]
  },
  {
    "intent": [
      "remove",
      "nan",
      "values",
      "from",
      "array",
      "var_0"
    ],
    "code": [
      "var_0",
      "=",
      "var_0",
      "[",
      "numpy",
      ".",
      "logical_not",
      "(",
      "numpy",
      ".",
      "isnan",
      "(",
      "var_0",
      ")",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "x",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      289,
      20,
      58,
      85,
      26
    ],
    "code_indx_copy": [
      34,
      19,
      34,
      12,
      147,
      22,
      524,
      1,
      147,
      22,
      222,
      1,
      34,
      17,
      17,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      34,
      12,
      147,
      22,
      524,
      1,
      147,
      22,
      222,
      1,
      34,
      17,
      17,
      16
    ]
  },
  {
    "intent": [
      "remove",
      "first",
      "directory",
      "from",
      "path",
      "str_0"
    ],
    "code": [
      "os",
      ".",
      "path",
      ".",
      "join",
      "(",
      "*",
      "x",
      ".",
      "split",
      "(",
      "os",
      ".",
      "path",
      ".",
      "sep",
      ")",
      "[",
      "2",
      ":",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "/First/Second/Third/Fourth/Fifth",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      268,
      151,
      175,
      58,
      199,
      5
    ],
    "code_indx_copy": [
      113,
      22,
      114,
      22,
      23,
      1,
      3,
      26,
      22,
      71,
      1,
      113,
      22,
      114,
      22,
      264,
      17,
      12,
      82,
      13,
      16,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      114,
      22,
      23,
      1,
      3,
      26,
      22,
      71,
      1,
      113,
      22,
      114,
      22,
      264,
      17,
      12,
      82,
      13,
      16,
      17
    ]
  },
  {
    "intent": [
      "replace",
      "str_0",
      "with",
      "str_1",
      "in",
      "a",
      "string",
      "var_0"
    ],
    "code": [
      "var_0",
      "=",
      "var_0",
      ".",
      "replace",
      "(",
      "'str_0'",
      ",",
      "'str_1'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": ";",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": ":",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "line",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      130,
      5,
      79,
      32,
      24,
      3,
      14,
      26
    ],
    "code_indx_copy": [
      34,
      19,
      34,
      22,
      107,
      1,
      29,
      8,
      63,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      34,
      22,
      107,
      1,
      29,
      8,
      63,
      17
    ]
  },
  {
    "intent": [
      "call",
      "bash",
      "command",
      "str_0",
      "with",
      "pipe"
    ],
    "code": [
      "subprocess",
      ".",
      "call",
      "(",
      "'str_0'",
      ",",
      "shell",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "tar c my_dir | md5sum",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      304,
      361,
      137,
      5,
      79,
      465
    ],
    "code_indx_copy": [
      229,
      22,
      230,
      1,
      29,
      8,
      231,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      229,
      22,
      230,
      1,
      29,
      8,
      231,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "hex",
      "string",
      "str_0",
      "according",
      "to",
      "ascii",
      "value",
      "."
    ],
    "code": [
      "\"\"\"str_0\"\"\"",
      ".",
      "decode",
      "(",
      "'hex'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "437c2123",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      3,
      116,
      14,
      5,
      378,
      8,
      384,
      143,
      159
    ],
    "code_indx_copy": [
      212,
      22,
      99,
      1,
      100,
      17
    ],
    "code_indx_nocopy": [
      212,
      22,
      99,
      1,
      100,
      17
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "list",
      "of",
      "all",
      "fields",
      "in",
      "class",
      "var_0",
      "that",
      "are",
      "marked",
      "var_1"
    ],
    "code": [
      "[",
      "k",
      "for",
      "k",
      ",",
      "v",
      "in",
      "var_0",
      ".",
      "_fields",
      ".",
      "items",
      "(",
      ")",
      "if",
      "v",
      ".",
      "var_1",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "User",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "required",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      3,
      4,
      2,
      38,
      385,
      24,
      311,
      26,
      195,
      243,
      465,
      63
    ],
    "code_indx_copy": [
      12,
      89,
      7,
      89,
      8,
      90,
      9,
      34,
      22,
      524,
      22,
      35,
      1,
      17,
      67,
      90,
      22,
      91,
      16
    ],
    "code_indx_nocopy": [
      12,
      89,
      7,
      89,
      8,
      90,
      9,
      34,
      22,
      524,
      22,
      35,
      1,
      17,
      67,
      90,
      22,
      91,
      16
    ]
  },
  {
    "intent": [
      "remove",
      "column",
      "by",
      "index",
      "str_0",
      "in",
      "dataframe",
      "var_0"
    ],
    "code": [
      "var_0",
      "=",
      "var_0",
      ".",
      "ix",
      "[",
      "str_0",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "[:, 0:2]",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "[str_0]": {
        "value": "[:, 0:2]",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      268,
      147,
      44,
      37,
      5,
      24,
      43,
      26
    ],
    "code_indx_copy": [
      34,
      19,
      34,
      22,
      201,
      12,
      11,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      34,
      22,
      201,
      12,
      11,
      16
    ]
  },
  {
    "intent": [
      "change",
      "a",
      "string",
      "of",
      "integers",
      "var_0",
      "separated",
      "by",
      "spaces",
      "to",
      "a",
      "list",
      "of",
      "int"
    ],
    "code": [
      "var_0",
      "=",
      "map",
      "(",
      "int",
      ",",
      "var_0",
      ".",
      "split",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "x",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      221,
      3,
      14,
      2,
      7,
      26,
      338,
      44,
      132,
      8,
      3,
      4,
      2,
      74
    ],
    "code_indx_copy": [
      34,
      19,
      24,
      1,
      20,
      8,
      34,
      22,
      71,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      24,
      1,
      20,
      8,
      34,
      22,
      71,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "string",
      "of",
      "integers",
      "var_0",
      "separated",
      "by",
      "spaces",
      "to",
      "a",
      "list",
      "of",
      "integers"
    ],
    "code": [
      "var_0",
      "=",
      "[",
      "int",
      "(",
      "i",
      ")",
      "for",
      "i",
      "in",
      "var_0",
      ".",
      "split",
      "(",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "x",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      3,
      14,
      2,
      7,
      26,
      338,
      44,
      132,
      8,
      3,
      4,
      2,
      7
    ],
    "code_indx_copy": [
      34,
      19,
      12,
      20,
      1,
      6,
      17,
      7,
      6,
      9,
      34,
      22,
      71,
      1,
      17,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      12,
      20,
      1,
      6,
      17,
      7,
      6,
      9,
      34,
      22,
      71,
      1,
      17,
      16
    ]
  },
  {
    "intent": [
      "find",
      "element",
      "by",
      "css",
      "selector",
      "str_0"
    ],
    "code": [
      "driver",
      ".",
      "find_element_by_css_selector",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "input[onclick*='1 Bedroom Deluxe']",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      47,
      49,
      44,
      465,
      465,
      5
    ],
    "code_indx_copy": [
      46,
      22,
      330,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      46,
      22,
      330,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "python",
      "/",
      "remove",
      "special",
      "character",
      "from",
      "string"
    ],
    "code": [
      "re",
      ".",
      "sub",
      "(",
      "'[^a-zA-Z0-9-_*.]'",
      ",",
      "''",
      ",",
      "my_string",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      50,
      465,
      268,
      465,
      202,
      58,
      14
    ],
    "code_indx_copy": [
      39,
      22,
      40,
      1,
      524,
      8,
      21,
      8,
      524,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      40,
      1,
      524,
      8,
      21,
      8,
      524,
      17
    ]
  },
  {
    "intent": [
      "display",
      "a",
      "pdf",
      "file",
      "that",
      "has",
      "been",
      "downloaded",
      "as",
      "str_0"
    ],
    "code": [
      "webbrowser",
      ".",
      "open",
      "(",
      "'file:///my_pdf.pdf'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "my_pdf.pdf",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      363,
      3,
      465,
      126,
      195,
      337,
      465,
      465,
      90,
      5
    ],
    "code_indx_copy": [
      331,
      22,
      105,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      331,
      22,
      105,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "replace",
      "backslashes",
      "in",
      "string",
      "var_0",
      "with",
      "empty",
      "string",
      "str_0"
    ],
    "code": [
      "var_0",
      "=",
      "var_0",
      ".",
      "replace",
      "(",
      "'\\\\'",
      ",",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "result",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      130,
      465,
      24,
      14,
      26,
      79,
      146,
      14,
      5
    ],
    "code_indx_copy": [
      34,
      19,
      34,
      22,
      107,
      1,
      332,
      8,
      29,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      34,
      22,
      107,
      1,
      332,
      8,
      29,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "backslashes",
      "from",
      "string",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "replace",
      "(",
      "'\\\\'",
      ",",
      "''",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "result",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      465,
      58,
      14,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      107,
      1,
      332,
      8,
      21,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      107,
      1,
      332,
      8,
      21,
      17
    ]
  },
  {
    "intent": [
      "replace",
      "value",
      "str_0",
      "in",
      "any",
      "column",
      "of",
      "pandas",
      "dataframe",
      "to",
      "str_1"
    ],
    "code": [
      "df",
      ".",
      "replace",
      "(",
      "'str_0'",
      ",",
      "'str_1'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "-",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "NaN",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      130,
      143,
      5,
      24,
      272,
      147,
      2,
      42,
      43,
      8,
      32
    ],
    "code_indx_copy": [
      149,
      22,
      107,
      1,
      29,
      8,
      63,
      17
    ],
    "code_indx_nocopy": [
      149,
      22,
      107,
      1,
      29,
      8,
      63,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "datetime",
      "object",
      "to",
      "date",
      "object",
      "in",
      "python"
    ],
    "code": [
      "datetime",
      ".",
      "datetime",
      ".",
      "now",
      "(",
      ")",
      ".",
      "date",
      "(",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      11,
      13,
      15,
      8,
      133,
      15,
      24,
      50
    ],
    "code_indx_copy": [
      27,
      22,
      27,
      22,
      294,
      1,
      17,
      22,
      139,
      1,
      17
    ],
    "code_indx_nocopy": [
      27,
      22,
      27,
      22,
      294,
      1,
      17,
      22,
      139,
      1,
      17
    ]
  },
  {
    "intent": [
      "how",
      "do",
      "i",
      "convert",
      "datetime",
      "to",
      "date",
      "(",
      "in",
      "python",
      ")",
      "?"
    ],
    "code": [
      "datetime",
      ".",
      "datetime",
      ".",
      "now",
      "(",
      ")",
      ".",
      "date",
      "(",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      77,
      327,
      328,
      11,
      13,
      8,
      133,
      212,
      24,
      50,
      27,
      52
    ],
    "code_indx_copy": [
      27,
      22,
      27,
      22,
      294,
      1,
      17,
      22,
      139,
      1,
      17
    ],
    "code_indx_nocopy": [
      27,
      22,
      27,
      22,
      294,
      1,
      17,
      22,
      139,
      1,
      17
    ]
  },
  {
    "intent": [
      "get",
      "all",
      "sub-elements",
      "of",
      "an",
      "element",
      "var_0",
      "in",
      "an",
      "elementtree"
    ],
    "code": [
      "[",
      "elem",
      ".",
      "tag",
      "for",
      "elem",
      "in",
      "var_0",
      ".",
      "iter",
      "(",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      38,
      465,
      2,
      225,
      49,
      26,
      24,
      225,
      465
    ],
    "code_indx_copy": [
      12,
      333,
      22,
      334,
      7,
      333,
      9,
      34,
      22,
      165,
      1,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      333,
      22,
      334,
      7,
      333,
      9,
      34,
      22,
      165,
      1,
      17,
      16
    ]
  },
  {
    "intent": [
      "get",
      "all",
      "sub-elements",
      "of",
      "an",
      "element",
      "tree",
      "var_0",
      "excluding",
      "the",
      "root",
      "element"
    ],
    "code": [
      "[",
      "elem",
      ".",
      "tag",
      "for",
      "elem",
      "in",
      "var_0",
      ".",
      "iter",
      "(",
      ")",
      "if",
      "elem",
      "is",
      "not",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      38,
      465,
      2,
      225,
      49,
      465,
      26,
      465,
      18,
      158,
      49
    ],
    "code_indx_copy": [
      12,
      333,
      22,
      334,
      7,
      333,
      9,
      34,
      22,
      165,
      1,
      17,
      67,
      333,
      335,
      281,
      34,
      16
    ],
    "code_indx_nocopy": [
      12,
      333,
      22,
      334,
      7,
      333,
      9,
      34,
      22,
      165,
      1,
      17,
      67,
      333,
      335,
      281,
      34,
      16
    ]
  },
  {
    "intent": [
      "how",
      "can",
      "i",
      "split",
      "and",
      "parse",
      "a",
      "string",
      "in",
      "python",
      "?"
    ],
    "code": [
      "\"\"\"2.7.0_bf4fda703454\"\"\"",
      ".",
      "split",
      "(",
      "'_'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      77,
      386,
      328,
      138,
      31,
      73,
      3,
      14,
      24,
      50,
      52
    ],
    "code_indx_copy": [
      524,
      22,
      71,
      1,
      336,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      71,
      1,
      336,
      17
    ]
  },
  {
    "intent": [
      "move",
      "dictionaries",
      "in",
      "list",
      "var_0",
      "to",
      "the",
      "end",
      "of",
      "the",
      "list",
      "if",
      "value",
      "of",
      "key",
      "str_0",
      "in",
      "each",
      "dictionary",
      "is",
      "not",
      "equal",
      "to",
      "str_1"
    ],
    "code": [
      "sorted",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "x",
      "[",
      "'str_0'",
      "]",
      "!=",
      "'str_1'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "lst",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "language",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "en",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      169,
      188,
      24,
      4,
      26,
      8,
      18,
      295,
      2,
      18,
      4,
      150,
      143,
      2,
      23,
      5,
      24,
      22,
      25,
      152,
      105,
      106,
      8,
      32
    ],
    "code_indx_copy": [
      101,
      1,
      34,
      8,
      102,
      19,
      44,
      26,
      13,
      26,
      12,
      29,
      16,
      88,
      63,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      34,
      8,
      102,
      19,
      44,
      26,
      13,
      26,
      12,
      29,
      16,
      88,
      63,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "all",
      "values",
      "of",
      "a",
      "dictionary",
      "var_0",
      "are",
      "zero",
      "str_0"
    ],
    "code": [
      "all",
      "(",
      "value",
      "==",
      "0",
      "for",
      "value",
      "in",
      "list",
      "(",
      "var_0",
      ".",
      "values",
      "(",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "your_dict",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "0",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      234,
      150,
      38,
      20,
      2,
      3,
      25,
      26,
      243,
      261,
      5
    ],
    "code_indx_copy": [
      77,
      1,
      151,
      76,
      43,
      7,
      151,
      9,
      33,
      1,
      34,
      22,
      166,
      1,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      77,
      1,
      151,
      76,
      43,
      7,
      151,
      9,
      33,
      1,
      34,
      22,
      166,
      1,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "produce",
      "a",
      "pivot",
      "table",
      "as",
      "dataframe",
      "using",
      "column",
      "str_0",
      "in",
      "datafram",
      "var_0",
      "to",
      "form",
      "the",
      "axes",
      "of",
      "the",
      "resulting",
      "dataframe"
    ],
    "code": [
      "var_0",
      ".",
      "pivot_table",
      "(",
      "'str_0'",
      ",",
      "rows",
      "=",
      "'X'",
      ",",
      "cols",
      "=",
      "'X2'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "Y",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      3,
      387,
      388,
      90,
      43,
      109,
      147,
      5,
      24,
      465,
      26,
      8,
      149,
      18,
      161,
      2,
      18,
      353,
      43
    ],
    "code_indx_copy": [
      34,
      22,
      337,
      1,
      29,
      8,
      253,
      19,
      524,
      8,
      524,
      19,
      524,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      337,
      1,
      29,
      8,
      253,
      19,
      524,
      8,
      524,
      19,
      524,
      17
    ]
  },
  {
    "intent": [
      "call",
      "str_0",
      "in",
      "a",
      "try-except",
      "without",
      "handling",
      "the",
      "exception"
    ],
    "code": [
      "try",
      ":",
      "\n",
      "    ",
      "doSomething",
      "(",
      ")",
      "\n",
      "",
      "except",
      ":",
      "\n",
      "    ",
      "pass",
      ""
    ],
    "slot_map": {
      "str_0": {
        "value": "doSomething()",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      304,
      5,
      24,
      3,
      465,
      103,
      465,
      18,
      389
    ],
    "code_indx_copy": [
      338,
      13,
      161,
      216,
      524,
      1,
      17,
      161,
      218,
      339,
      13,
      161,
      216,
      217,
      218
    ],
    "code_indx_nocopy": [
      338,
      13,
      161,
      216,
      524,
      1,
      17,
      161,
      218,
      339,
      13,
      161,
      216,
      217,
      218
    ]
  },
  {
    "intent": [
      "call",
      "str_0",
      "in",
      "a",
      "try-except",
      "without",
      "handling",
      "the",
      "exception"
    ],
    "code": [
      "try",
      ":",
      "\n",
      "    ",
      "doSomething",
      "(",
      ")",
      "\n",
      "",
      "except",
      "Exception",
      ":",
      "\n",
      "    ",
      "pass",
      ""
    ],
    "slot_map": {
      "str_0": {
        "value": "doSomething()",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      304,
      5,
      24,
      3,
      465,
      103,
      465,
      18,
      389
    ],
    "code_indx_copy": [
      338,
      13,
      161,
      216,
      524,
      1,
      17,
      161,
      218,
      339,
      340,
      13,
      161,
      216,
      217,
      218
    ],
    "code_indx_nocopy": [
      338,
      13,
      161,
      216,
      524,
      1,
      17,
      161,
      218,
      339,
      340,
      13,
      161,
      216,
      217,
      218
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "sum",
      "of",
      "4d",
      "array",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "sum",
      "(",
      "axis",
      "=",
      "0",
      ")",
      ".",
      "sum",
      "(",
      "axis",
      "=",
      "0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "M",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      3,
      112,
      2,
      465,
      85,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      0,
      1,
      42,
      19,
      43,
      17,
      22,
      0,
      1,
      42,
      19,
      43,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      0,
      1,
      42,
      19,
      43,
      17,
      22,
      0,
      1,
      42,
      19,
      43,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "datetime",
      "object",
      "var_0",
      "to",
      "microtime"
    ],
    "code": [
      "time",
      ".",
      "mktime",
      "(",
      "var_0",
      ".",
      "timetuple",
      "(",
      ")",
      ")",
      "+",
      "var_0",
      ".",
      "microsecond",
      "/",
      "1000000.0"
    ],
    "slot_map": {
      "var_0": {
        "value": "dt",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      3,
      13,
      15,
      26,
      8,
      465
    ],
    "code_indx_copy": [
      84,
      22,
      524,
      1,
      34,
      22,
      524,
      1,
      17,
      17,
      96,
      34,
      22,
      524,
      31,
      524
    ],
    "code_indx_nocopy": [
      84,
      22,
      524,
      1,
      34,
      22,
      524,
      1,
      17,
      17,
      96,
      34,
      22,
      524,
      31,
      524
    ]
  },
  {
    "intent": [
      "select",
      "all",
      "rows",
      "in",
      "dataframe",
      "var_0",
      "where",
      "the",
      "values",
      "of",
      "column",
      "str_0",
      "is",
      "bigger",
      "than",
      "or",
      "equal",
      "to",
      "var_1",
      "and",
      "smaller",
      "than",
      "or",
      "equal",
      "to",
      "var_2"
    ],
    "code": [
      "var_0",
      "[",
      "(",
      "var_1",
      "<=",
      "var_0",
      "[",
      "'str_0'",
      "]",
      ")",
      "&",
      "(",
      "var_0",
      "[",
      "'str_0'",
      "]",
      "<=",
      "var_2",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "columnX",
        "quote": "'",
        "type": "str"
      },
      "var_1": {
        "value": "x",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "y",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      78,
      38,
      80,
      24,
      43,
      26,
      155,
      18,
      20,
      2,
      147,
      5,
      152,
      263,
      264,
      344,
      106,
      8,
      63,
      31,
      465,
      264,
      344,
      106,
      8,
      64
    ],
    "code_indx_copy": [
      34,
      12,
      1,
      91,
      524,
      34,
      12,
      29,
      16,
      17,
      226,
      1,
      34,
      12,
      29,
      16,
      524,
      94,
      17,
      16
    ],
    "code_indx_nocopy": [
      34,
      12,
      1,
      91,
      524,
      34,
      12,
      29,
      16,
      17,
      226,
      1,
      34,
      12,
      29,
      16,
      524,
      94,
      17,
      16
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "list",
      "of",
      "lists",
      "var_0",
      "by",
      "index",
      "2",
      "of",
      "the",
      "inner",
      "list"
    ],
    "code": [
      "sorted",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "itemgetter",
      "(",
      "2",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "L",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      3,
      4,
      2,
      30,
      26,
      44,
      37,
      82,
      2,
      18,
      465,
      4
    ],
    "code_indx_copy": [
      101,
      1,
      34,
      8,
      102,
      19,
      128,
      1,
      82,
      17,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      34,
      8,
      102,
      19,
      128,
      1,
      82,
      17,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "list",
      "of",
      "lists",
      "var_0",
      "by",
      "index",
      "2",
      "of",
      "the",
      "inner",
      "list"
    ],
    "code": [
      "var_0",
      ".",
      "sort",
      "(",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "x",
      "[",
      "2",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "l",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      3,
      4,
      2,
      30,
      26,
      44,
      37,
      82,
      2,
      18,
      465,
      4
    ],
    "code_indx_copy": [
      34,
      22,
      124,
      1,
      102,
      19,
      44,
      26,
      13,
      26,
      12,
      82,
      16,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      124,
      1,
      102,
      19,
      44,
      26,
      13,
      26,
      12,
      82,
      16,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "list",
      "var_0",
      "by",
      "index",
      "2",
      "of",
      "the",
      "item"
    ],
    "code": [
      "sorted",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "x",
      "[",
      "2",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "l",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      4,
      26,
      44,
      37,
      82,
      2,
      18,
      156
    ],
    "code_indx_copy": [
      101,
      1,
      34,
      8,
      102,
      19,
      44,
      26,
      13,
      26,
      12,
      82,
      16,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      34,
      8,
      102,
      19,
      44,
      26,
      13,
      26,
      12,
      82,
      16,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "list",
      "of",
      "lists",
      "var_0",
      "by",
      "indices",
      "2,0,1",
      "of",
      "the",
      "inner",
      "list"
    ],
    "code": [
      "sorted_list",
      "=",
      "sorted",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "itemgetter",
      "(",
      "2",
      ",",
      "0",
      ",",
      "1",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "list_to_sort",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      3,
      4,
      2,
      30,
      26,
      44,
      326,
      465,
      2,
      18,
      465,
      4
    ],
    "code_indx_copy": [
      524,
      19,
      101,
      1,
      34,
      8,
      102,
      19,
      128,
      1,
      82,
      8,
      43,
      8,
      15,
      17,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      101,
      1,
      34,
      8,
      102,
      19,
      128,
      1,
      82,
      8,
      43,
      8,
      15,
      17,
      17
    ]
  },
  {
    "intent": [
      "find",
      "rows",
      "of",
      "2d",
      "array",
      "in",
      "3d",
      "numpy",
      "array",
      "str_0",
      "if",
      "the",
      "row",
      "has",
      "value",
      "str_1"
    ],
    "code": [
      "np",
      ".",
      "argwhere",
      "(",
      "np",
      ".",
      "all",
      "(",
      "str_0",
      "==",
      "[",
      "str_1",
      "]",
      ",",
      "axis",
      "=",
      "(",
      "1",
      ",",
      "2",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "arr",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "[[0, 3], [3, 0]]",
        "quote": "'",
        "type": "str"
      },
      "[str_1]": {
        "value": "[[0, 3], [3, 0]]",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      47,
      80,
      2,
      236,
      85,
      24,
      164,
      84,
      85,
      5,
      150,
      18,
      45,
      337,
      143,
      32
    ],
    "code_indx_copy": [
      74,
      22,
      524,
      1,
      74,
      22,
      77,
      1,
      11,
      76,
      12,
      37,
      16,
      8,
      42,
      19,
      1,
      15,
      8,
      82,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      74,
      22,
      524,
      1,
      74,
      22,
      77,
      1,
      11,
      76,
      12,
      37,
      16,
      8,
      42,
      19,
      1,
      15,
      8,
      82,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "from",
      "multiindexed",
      "dataframe",
      "var_0",
      "select",
      "columns",
      "var_1",
      "and",
      "var_2",
      "within",
      "each",
      "higher",
      "order",
      "column",
      "var_3",
      "and",
      "var_4"
    ],
    "code": [
      "var_0",
      ".",
      "loc",
      "[",
      ":",
      ",",
      "(",
      "list",
      "(",
      "itertools",
      ".",
      "product",
      "(",
      "[",
      "'var_3'",
      ",",
      "'var_4'",
      "]",
      ",",
      "[",
      "'var_1'",
      ",",
      "'var_2'",
      "]",
      ")",
      ")",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "data",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "c",
        "quote": "`",
        "type": "var"
      },
      "var_3": {
        "value": "one",
        "quote": "`",
        "type": "var"
      },
      "var_4": {
        "value": "two",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      58,
      465,
      43,
      26,
      78,
      61,
      63,
      31,
      64,
      55,
      22,
      465,
      162,
      147,
      67,
      31,
      465
    ],
    "code_indx_copy": [
      34,
      22,
      202,
      12,
      13,
      8,
      1,
      33,
      1,
      50,
      22,
      328,
      1,
      12,
      221,
      8,
      524,
      16,
      8,
      12,
      57,
      8,
      58,
      16,
      17,
      17,
      17,
      16
    ],
    "code_indx_nocopy": [
      34,
      22,
      202,
      12,
      13,
      8,
      1,
      33,
      1,
      50,
      22,
      328,
      1,
      12,
      221,
      8,
      524,
      16,
      8,
      12,
      57,
      8,
      58,
      16,
      17,
      17,
      17,
      16
    ]
  },
  {
    "intent": [
      "select",
      "only",
      "specific",
      "columns",
      "str_0",
      "and",
      "str_1",
      "from",
      "a",
      "dataframe",
      "str_2",
      "with",
      "multiindex",
      "columns"
    ],
    "code": [
      "str_2",
      ".",
      "loc",
      "[",
      ":",
      ",",
      "(",
      "[",
      "(",
      "'one'",
      ",",
      "'str_0'",
      ")",
      ",",
      "(",
      "'one'",
      ",",
      "'str_1'",
      ")",
      ",",
      "(",
      "'two'",
      ",",
      "'str_0'",
      ")",
      ",",
      "(",
      "'two'",
      ",",
      "\n",
      "'str_1'",
      ")",
      "]",
      ")",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "a",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "c",
        "quote": "'",
        "type": "str"
      },
      "str_2": {
        "value": "data",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      78,
      352,
      390,
      61,
      5,
      31,
      32,
      58,
      3,
      43,
      194,
      79,
      465,
      61
    ],
    "code_indx_copy": [
      183,
      22,
      202,
      12,
      13,
      8,
      1,
      12,
      1,
      524,
      8,
      29,
      17,
      8,
      1,
      524,
      8,
      63,
      17,
      8,
      1,
      524,
      8,
      29,
      17,
      8,
      1,
      524,
      8,
      161,
      63,
      17,
      16,
      17,
      16
    ],
    "code_indx_nocopy": [
      183,
      22,
      202,
      12,
      13,
      8,
      1,
      12,
      1,
      524,
      8,
      29,
      17,
      8,
      1,
      524,
      8,
      63,
      17,
      8,
      1,
      524,
      8,
      29,
      17,
      8,
      1,
      524,
      8,
      161,
      63,
      17,
      16,
      17,
      16
    ]
  },
  {
    "intent": [
      "match",
      "a",
      "sharp",
      ",",
      "followed",
      "by",
      "letters",
      "(",
      "including",
      "accent",
      "characters",
      ")",
      "in",
      "string",
      "var_0",
      "using",
      "a",
      "regex"
    ],
    "code": [
      "hashtags",
      "=",
      "re",
      ".",
      "findall",
      "(",
      "'#(\\\\w+)'",
      ",",
      "var_0",
      ",",
      "re",
      ".",
      "UNICODE",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "str1",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      144,
      3,
      465,
      62,
      368,
      44,
      360,
      212,
      213,
      465,
      98,
      27,
      24,
      14,
      26,
      109,
      3,
      40
    ],
    "code_indx_copy": [
      524,
      19,
      39,
      22,
      48,
      1,
      524,
      8,
      34,
      8,
      39,
      22,
      304,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      39,
      22,
      48,
      1,
      524,
      8,
      34,
      8,
      39,
      22,
      304,
      17
    ]
  },
  {
    "intent": [
      "rename",
      "file",
      "from",
      "var_0",
      "to",
      "var_1"
    ],
    "code": [
      "os",
      ".",
      "rename",
      "(",
      "var_0",
      ",",
      "var_1",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "src",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "dst",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      391,
      126,
      58,
      26,
      8,
      63
    ],
    "code_indx_copy": [
      113,
      22,
      341,
      1,
      34,
      8,
      91,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      341,
      1,
      34,
      8,
      91,
      17
    ]
  },
  {
    "intent": [
      "get",
      "all",
      "texts",
      "and",
      "tags",
      "from",
      "a",
      "tag",
      "var_0",
      "from",
      "etree",
      "tag",
      "var_1",
      "using",
      "lxml"
    ],
    "code": [
      "print",
      "(",
      "etree",
      ".",
      "tostring",
      "(",
      "var_1",
      ".",
      "find",
      "(",
      "'var_0'",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "strong",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "some_tag",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      38,
      465,
      31,
      392,
      58,
      3,
      72,
      26,
      58,
      465,
      72,
      63,
      109,
      465
    ],
    "code_indx_copy": [
      49,
      1,
      538,
      22,
      524,
      1,
      91,
      22,
      282,
      1,
      56,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      524,
      22,
      524,
      1,
      91,
      22,
      282,
      1,
      56,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "serialize",
      "dictionary",
      "var_0",
      "and",
      "its",
      "keys",
      "to",
      "a",
      "json",
      "formatted",
      "string"
    ],
    "code": [
      "json",
      ".",
      "dumps",
      "(",
      "{",
      "str",
      "(",
      "k",
      ")",
      ":",
      "v",
      "for",
      "k",
      ",",
      "v",
      "in",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      "}",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "data",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      25,
      26,
      31,
      91,
      206,
      8,
      3,
      181,
      288,
      14
    ],
    "code_indx_copy": [
      140,
      22,
      141,
      1,
      52,
      25,
      1,
      89,
      17,
      13,
      90,
      7,
      89,
      8,
      90,
      9,
      34,
      22,
      35,
      1,
      17,
      53,
      17
    ],
    "code_indx_nocopy": [
      140,
      22,
      141,
      1,
      52,
      25,
      1,
      89,
      17,
      13,
      90,
      7,
      89,
      8,
      90,
      9,
      34,
      22,
      35,
      1,
      17,
      53,
      17
    ]
  },
  {
    "intent": [
      "parse",
      "utf-8",
      "encoded",
      "html",
      "response",
      "var_0",
      "to",
      "beautifulsoup",
      "object"
    ],
    "code": [
      "soup",
      "=",
      "BeautifulSoup",
      "(",
      "var_0",
      ".",
      "read",
      "(",
      ")",
      ".",
      "decode",
      "(",
      "'utf-8'",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "response",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      73,
      183,
      296,
      307,
      465,
      26,
      8,
      70,
      15
    ],
    "code_indx_copy": [
      61,
      19,
      342,
      1,
      34,
      22,
      106,
      1,
      17,
      22,
      99,
      1,
      143,
      17,
      17
    ],
    "code_indx_nocopy": [
      61,
      19,
      342,
      1,
      34,
      22,
      106,
      1,
      17,
      22,
      99,
      1,
      143,
      17,
      17
    ]
  },
  {
    "intent": [
      "delete",
      "file",
      "var_0"
    ],
    "code": [
      "os",
      ".",
      "remove",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "filename",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      86,
      126,
      26
    ],
    "code_indx_copy": [
      113,
      22,
      343,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      343,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "next",
      "value",
      "greatest",
      "to",
      "str_0",
      "from",
      "a",
      "list",
      "of",
      "numbers",
      "var_0"
    ],
    "code": [
      "min",
      "(",
      "[",
      "x",
      "for",
      "x",
      "in",
      "var_0",
      "if",
      "x",
      ">",
      "2",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "2",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "num_list",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      18,
      48,
      143,
      465,
      8,
      5,
      58,
      3,
      4,
      2,
      97,
      26
    ],
    "code_indx_copy": [
      111,
      1,
      12,
      26,
      7,
      26,
      9,
      34,
      67,
      26,
      214,
      82,
      16,
      17
    ],
    "code_indx_nocopy": [
      111,
      1,
      12,
      26,
      7,
      26,
      9,
      34,
      67,
      26,
      214,
      82,
      16,
      17
    ]
  },
  {
    "intent": [
      "replace",
      "each",
      "value",
      "in",
      "column",
      "str_0",
      "of",
      "dataframe",
      "var_0",
      "with",
      "string",
      "str_1"
    ],
    "code": [
      "var_0",
      "[",
      "'str_0'",
      "]",
      "=",
      "'str_1'"
    ],
    "slot_map": {
      "str_0": {
        "value": "prod_type",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "str_1": {
        "value": "responsive",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      130,
      22,
      143,
      24,
      147,
      5,
      2,
      43,
      26,
      79,
      14,
      32
    ],
    "code_indx_copy": [
      34,
      12,
      29,
      16,
      19,
      63
    ],
    "code_indx_nocopy": [
      34,
      12,
      29,
      16,
      19,
      63
    ]
  },
  {
    "intent": [
      "sort",
      "list",
      "var_0",
      "with",
      "positives",
      "coming",
      "before",
      "negatives",
      "with",
      "values",
      "sorted",
      "respectively"
    ],
    "code": [
      "sorted",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "(",
      "x",
      "<",
      "0",
      ",",
      "x",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "lst",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      4,
      26,
      79,
      465,
      465,
      280,
      465,
      79,
      20,
      224,
      465
    ],
    "code_indx_copy": [
      101,
      1,
      34,
      8,
      102,
      19,
      44,
      26,
      13,
      1,
      26,
      344,
      43,
      8,
      26,
      17,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      34,
      8,
      102,
      19,
      44,
      26,
      13,
      1,
      26,
      344,
      43,
      8,
      26,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "date",
      "6",
      "months",
      "from",
      "today"
    ],
    "code": [
      "six_months",
      "=",
      "date",
      ".",
      "today",
      "(",
      ")",
      "+",
      "relativedelta",
      "(",
      "months",
      "=",
      "+",
      "6",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      17,
      18,
      133,
      393,
      465,
      58,
      265
    ],
    "code_indx_copy": [
      524,
      19,
      139,
      22,
      137,
      1,
      17,
      96,
      345,
      1,
      346,
      19,
      96,
      249,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      139,
      22,
      137,
      1,
      17,
      96,
      345,
      1,
      346,
      19,
      96,
      249,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "date",
      "1",
      "month",
      "from",
      "today"
    ],
    "code": [
      "date",
      "(",
      "2010",
      ",",
      "12",
      ",",
      "31",
      ")",
      "+",
      "relativedelta",
      "(",
      "months",
      "=",
      "+",
      "1",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      17,
      18,
      133,
      237,
      394,
      58,
      265
    ],
    "code_indx_copy": [
      139,
      1,
      347,
      8,
      348,
      8,
      524,
      17,
      96,
      345,
      1,
      346,
      19,
      96,
      15,
      17
    ],
    "code_indx_nocopy": [
      139,
      1,
      347,
      8,
      348,
      8,
      524,
      17,
      96,
      345,
      1,
      346,
      19,
      96,
      15,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "date",
      "2",
      "months",
      "from",
      "today"
    ],
    "code": [
      "date",
      "(",
      "2010",
      ",",
      "12",
      ",",
      "31",
      ")",
      "+",
      "relativedelta",
      "(",
      "months",
      "=",
      "+",
      "2",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      17,
      18,
      133,
      82,
      465,
      58,
      265
    ],
    "code_indx_copy": [
      139,
      1,
      347,
      8,
      348,
      8,
      524,
      17,
      96,
      345,
      1,
      346,
      19,
      96,
      82,
      17
    ],
    "code_indx_nocopy": [
      139,
      1,
      347,
      8,
      348,
      8,
      524,
      17,
      96,
      345,
      1,
      346,
      19,
      96,
      82,
      17
    ]
  },
  {
    "intent": [
      "calculate",
      "the",
      "date",
      "six",
      "months",
      "from",
      "the",
      "current",
      "date"
    ],
    "code": [
      "print",
      "(",
      "(",
      "datetime",
      ".",
      "date",
      ".",
      "today",
      "(",
      ")",
      "+",
      "datetime",
      ".",
      "timedelta",
      "(",
      "6",
      "*",
      "365",
      "/",
      "12",
      ")",
      ")",
      ".",
      "isoformat",
      "(",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      252,
      18,
      133,
      465,
      465,
      58,
      18,
      179,
      133
    ],
    "code_indx_copy": [
      49,
      1,
      1,
      27,
      22,
      139,
      22,
      137,
      1,
      17,
      96,
      27,
      22,
      295,
      1,
      249,
      3,
      524,
      31,
      348,
      17,
      17,
      22,
      349,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      1,
      27,
      22,
      139,
      22,
      137,
      1,
      17,
      96,
      27,
      22,
      295,
      1,
      249,
      3,
      524,
      31,
      348,
      17,
      17,
      22,
      349,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "list",
      "of",
      "keys",
      "of",
      "dictionary",
      "var_0",
      "sorted",
      "by",
      "the",
      "value",
      "of",
      "nested",
      "dictionary",
      "key",
      "str_0"
    ],
    "code": [
      "sorted",
      "(",
      "list",
      "(",
      "var_0",
      ".",
      "keys",
      "(",
      ")",
      ")",
      ",",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "var_0",
      "[",
      "x",
      "]",
      "[",
      "'str_0'",
      "]",
      ",",
      "reverse",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "things",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "weight",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      3,
      4,
      2,
      206,
      2,
      25,
      26,
      224,
      44,
      18,
      143,
      2,
      154,
      25,
      23,
      5
    ],
    "code_indx_copy": [
      101,
      1,
      33,
      1,
      34,
      22,
      167,
      1,
      17,
      17,
      8,
      102,
      19,
      44,
      26,
      13,
      34,
      12,
      26,
      16,
      12,
      29,
      16,
      8,
      129,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      33,
      1,
      34,
      22,
      167,
      1,
      17,
      17,
      8,
      102,
      19,
      44,
      26,
      13,
      34,
      12,
      26,
      16,
      12,
      29,
      16,
      8,
      129,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "get",
      "all",
      "the",
      "values",
      "from",
      "a",
      "numpy",
      "array",
      "var_0",
      "excluding",
      "index",
      "3"
    ],
    "code": [
      "var_0",
      "[",
      "np",
      ".",
      "arange",
      "(",
      "len",
      "(",
      "var_0",
      ")",
      ")",
      "!=",
      "3",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      38,
      18,
      20,
      58,
      3,
      84,
      85,
      26,
      465,
      37,
      57
    ],
    "code_indx_copy": [
      34,
      12,
      74,
      22,
      193,
      1,
      32,
      1,
      34,
      17,
      17,
      88,
      54,
      16
    ],
    "code_indx_nocopy": [
      34,
      12,
      74,
      22,
      193,
      1,
      32,
      1,
      34,
      17,
      17,
      88,
      54,
      16
    ]
  },
  {
    "intent": [
      "delete",
      "all",
      "elements",
      "from",
      "a",
      "list",
      "var_0",
      "if",
      "a",
      "function",
      "var_1",
      "taking",
      "value",
      "as",
      "parameter",
      "returns",
      "str_0"
    ],
    "code": [
      "[",
      "var_0",
      "for",
      "var_0",
      "in",
      "lst",
      "if",
      "var_1",
      "(",
      "var_0",
      ")",
      "!=",
      "0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "x",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "fn",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "0",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      86,
      38,
      1,
      58,
      3,
      4,
      26,
      150,
      3,
      69,
      63,
      465,
      143,
      90,
      372,
      465,
      5
    ],
    "code_indx_copy": [
      12,
      34,
      7,
      34,
      9,
      350,
      67,
      91,
      1,
      34,
      17,
      88,
      43,
      16
    ],
    "code_indx_nocopy": [
      12,
      34,
      7,
      34,
      9,
      350,
      67,
      91,
      1,
      34,
      17,
      88,
      43,
      16
    ]
  },
  {
    "intent": [
      "set",
      "dataframe",
      "var_0",
      "index",
      "using",
      "column",
      "str_0"
    ],
    "code": [
      "var_0",
      ".",
      "set_index",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "month",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      59,
      43,
      26,
      37,
      109,
      147,
      5
    ],
    "code_indx_copy": [
      34,
      22,
      203,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      203,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "read",
      "lines",
      "from",
      "a",
      "csv",
      "file",
      "str_0",
      "into",
      "a",
      "list",
      "of",
      "lists",
      "var_0"
    ],
    "code": [
      "var_0",
      "=",
      "[",
      "line",
      ".",
      "split",
      "(",
      "','",
      ")",
      "for",
      "line",
      "in",
      "open",
      "(",
      "'str_0'",
      ")",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "./urls-eu.csv",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "arr",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      124,
      395,
      58,
      3,
      287,
      126,
      5,
      12,
      3,
      4,
      2,
      30,
      26
    ],
    "code_indx_copy": [
      34,
      19,
      12,
      315,
      22,
      71,
      1,
      73,
      17,
      7,
      315,
      9,
      105,
      1,
      29,
      17,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      12,
      315,
      22,
      71,
      1,
      73,
      17,
      7,
      315,
      9,
      105,
      1,
      29,
      17,
      16
    ]
  },
  {
    "intent": [
      "list",
      "comprehension",
      "that",
      "produces",
      "integers",
      "between",
      "11",
      "and",
      "19"
    ],
    "code": [
      "[",
      "i",
      "for",
      "i",
      "in",
      "range",
      "(",
      "100",
      ")",
      "if",
      "i",
      ">",
      "10",
      "if",
      "i",
      "<",
      "20",
      "]"
    ],
    "slot_map": {},
    "intent_indx": [
      4,
      346,
      195,
      465,
      7,
      278,
      465,
      31,
      465
    ],
    "code_indx_copy": [
      12,
      6,
      7,
      6,
      9,
      104,
      1,
      267,
      17,
      67,
      6,
      214,
      4,
      67,
      6,
      344,
      351,
      16
    ],
    "code_indx_nocopy": [
      12,
      6,
      7,
      6,
      9,
      104,
      1,
      267,
      17,
      67,
      6,
      214,
      4,
      67,
      6,
      344,
      351,
      16
    ]
  },
  {
    "intent": [
      "get",
      "only",
      "digits",
      "from",
      "a",
      "string",
      "var_0"
    ],
    "code": [
      "\"\"\"\"\"\"",
      ".",
      "join",
      "(",
      "[",
      "c",
      "for",
      "c",
      "in",
      "var_0",
      "if",
      "c",
      ".",
      "isdigit",
      "(",
      ")",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "strs",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      352,
      200,
      58,
      3,
      14,
      26
    ],
    "code_indx_copy": [
      287,
      22,
      23,
      1,
      12,
      66,
      7,
      66,
      9,
      34,
      67,
      66,
      22,
      68,
      1,
      17,
      16,
      17
    ],
    "code_indx_nocopy": [
      287,
      22,
      23,
      1,
      12,
      66,
      7,
      66,
      9,
      34,
      67,
      66,
      22,
      68,
      1,
      17,
      16,
      17
    ]
  },
  {
    "intent": [
      "split",
      "a",
      "string",
      "var_0",
      "based",
      "on",
      "tab",
      "str_0"
    ],
    "code": [
      "re",
      ".",
      "split",
      "(",
      "'\\\\t+'",
      ",",
      "var_0",
      ".",
      "rstrip",
      "(",
      "'str_0'",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "yas",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "\t",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      138,
      3,
      14,
      26,
      208,
      139,
      465,
      5
    ],
    "code_indx_copy": [
      39,
      22,
      71,
      1,
      524,
      8,
      34,
      22,
      172,
      1,
      29,
      17,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      71,
      1,
      524,
      8,
      34,
      22,
      172,
      1,
      29,
      17,
      17
    ]
  },
  {
    "intent": [
      "scalar",
      "multiply",
      "matrix",
      "var_0",
      "by",
      "var_1"
    ],
    "code": [
      "(",
      "var_0",
      ".",
      "T",
      "*",
      "var_1",
      ")",
      ".",
      "T"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "b",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      396,
      189,
      26,
      44,
      63
    ],
    "code_indx_copy": [
      1,
      34,
      22,
      134,
      3,
      91,
      17,
      22,
      134
    ],
    "code_indx_nocopy": [
      1,
      34,
      22,
      134,
      3,
      91,
      17,
      22,
      134
    ]
  },
  {
    "intent": [
      "remove",
      "trailing",
      "newline",
      "in",
      "string",
      "str_0"
    ],
    "code": [
      "\"\"\"str_0\"\"\"",
      ".",
      "rstrip",
      "(",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "test string\n",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      268,
      300,
      397,
      24,
      14,
      5
    ],
    "code_indx_copy": [
      212,
      22,
      172,
      1,
      17
    ],
    "code_indx_nocopy": [
      212,
      22,
      172,
      1,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "trailing",
      "newline",
      "in",
      "string",
      "str_0"
    ],
    "code": [
      "\"\"\"str_0\"\"\"",
      ".",
      "rstrip",
      "(",
      "'\\n'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "test string \n\n",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      268,
      300,
      397,
      24,
      14,
      5
    ],
    "code_indx_copy": [
      212,
      22,
      172,
      1,
      133,
      17
    ],
    "code_indx_nocopy": [
      212,
      22,
      172,
      1,
      133,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "newline",
      "in",
      "string",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "strip",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      397,
      24,
      14,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      170,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      170,
      1,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "newline",
      "in",
      "string",
      "var_0",
      "on",
      "the",
      "right",
      "side"
    ],
    "code": [
      "var_0",
      ".",
      "rstrip",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      397,
      24,
      14,
      26,
      139,
      18,
      216,
      215
    ],
    "code_indx_copy": [
      34,
      22,
      172,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      172,
      1,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "newline",
      "in",
      "string",
      "var_0",
      "on",
      "the",
      "left",
      "side"
    ],
    "code": [
      "var_0",
      ".",
      "lstrip",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      397,
      24,
      14,
      26,
      139,
      18,
      214,
      215
    ],
    "code_indx_copy": [
      34,
      22,
      171,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      171,
      1,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "newline",
      "in",
      "string",
      "str_0"
    ],
    "code": [
      "\"\"\"str_0\"\"\"",
      ".",
      "rstrip",
      "(",
      "'\\r\\n'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "Mac EOL\r",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      268,
      397,
      24,
      14,
      5
    ],
    "code_indx_copy": [
      212,
      22,
      172,
      1,
      132,
      17
    ],
    "code_indx_nocopy": [
      212,
      22,
      172,
      1,
      132,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "newline",
      "in",
      "string",
      "str_0",
      "on",
      "the",
      "right",
      "side"
    ],
    "code": [
      "\"\"\"str_0\"\"\"",
      ".",
      "rstrip",
      "(",
      "'\\r\\n'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "Windows EOL\r\n",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      268,
      397,
      24,
      14,
      5,
      139,
      18,
      216,
      215
    ],
    "code_indx_copy": [
      212,
      22,
      172,
      1,
      132,
      17
    ],
    "code_indx_nocopy": [
      212,
      22,
      172,
      1,
      132,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "newline",
      "in",
      "string",
      "str_0",
      "on",
      "the",
      "right",
      "side"
    ],
    "code": [
      "\"\"\"str_0\"\"\"",
      ".",
      "rstrip",
      "(",
      "'\\r\\n'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "Unix EOL\n",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      268,
      397,
      24,
      14,
      5,
      139,
      18,
      216,
      215
    ],
    "code_indx_copy": [
      212,
      22,
      172,
      1,
      132,
      17
    ],
    "code_indx_nocopy": [
      212,
      22,
      172,
      1,
      132,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "newline",
      "in",
      "string",
      "str_0",
      "on",
      "the",
      "right",
      "side"
    ],
    "code": [
      "\"\"\"str_0\"\"\"",
      ".",
      "rstrip",
      "(",
      "'\\n'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "Hello\n\n\n",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      268,
      397,
      24,
      14,
      5,
      139,
      18,
      216,
      215
    ],
    "code_indx_copy": [
      212,
      22,
      172,
      1,
      133,
      17
    ],
    "code_indx_nocopy": [
      212,
      22,
      172,
      1,
      133,
      17
    ]
  },
  {
    "intent": [
      "split",
      "string",
      "var_0",
      "into",
      "chunks",
      "of",
      "16",
      "characters",
      "each"
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'.{,16}\\\\b'",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "text",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      138,
      14,
      26,
      12,
      465,
      2,
      465,
      98,
      22
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      524,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      524,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "list",
      "comprehension",
      "in",
      "list",
      "of",
      "lists",
      "var_0"
    ],
    "code": [
      "[",
      "[",
      "var_0",
      "[",
      "i",
      "]",
      "[",
      "j",
      "]",
      "for",
      "j",
      "in",
      "range",
      "(",
      "len",
      "(",
      "var_0",
      "[",
      "i",
      "]",
      ")",
      ")",
      "]",
      "for",
      "i",
      "in",
      "range",
      "(",
      "len",
      "(",
      "var_0",
      ")",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "X",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      3,
      4,
      346,
      24,
      4,
      2,
      30,
      26
    ],
    "code_indx_copy": [
      12,
      12,
      34,
      12,
      6,
      16,
      12,
      30,
      16,
      7,
      30,
      9,
      104,
      1,
      32,
      1,
      34,
      12,
      6,
      16,
      17,
      17,
      16,
      7,
      6,
      9,
      104,
      1,
      32,
      1,
      34,
      17,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      12,
      34,
      12,
      6,
      16,
      12,
      30,
      16,
      7,
      30,
      9,
      104,
      1,
      32,
      1,
      34,
      12,
      6,
      16,
      17,
      17,
      16,
      7,
      6,
      9,
      104,
      1,
      32,
      1,
      34,
      17,
      17,
      16
    ]
  },
  {
    "intent": [
      "convert",
      "unicode",
      "string",
      "str_0",
      "to",
      "byte",
      "string"
    ],
    "code": [
      "\"\"\"str_0\"\"\"",
      ".",
      "encode",
      "(",
      "'latin-1'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "\u00d0\u00bc\u00d0\u00b0\u00d1\u0080\u00d0\u00ba\u00d0\u00b0",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      230,
      14,
      5,
      8,
      229,
      14
    ],
    "code_indx_copy": [
      212,
      22,
      239,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      212,
      22,
      239,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "split",
      "dataframe",
      "var_0",
      "where",
      "the",
      "value",
      "of",
      "column",
      "var_1",
      "is",
      "equal",
      "to",
      "str_0"
    ],
    "code": [
      "var_0",
      ".",
      "groupby",
      "(",
      "(",
      "var_0",
      ".",
      "var_1",
      "==",
      "'str_0'",
      ")",
      ".",
      "shift",
      "(",
      "1",
      ")",
      ".",
      "fillna",
      "(",
      "0",
      ")",
      ".",
      "cumsum",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "B",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      138,
      43,
      26,
      155,
      18,
      143,
      2,
      147,
      63,
      152,
      106,
      8,
      5
    ],
    "code_indx_copy": [
      34,
      22,
      157,
      1,
      1,
      34,
      22,
      91,
      76,
      29,
      17,
      22,
      524,
      1,
      15,
      17,
      22,
      352,
      1,
      43,
      17,
      22,
      524,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      157,
      1,
      1,
      34,
      22,
      91,
      76,
      29,
      17,
      22,
      524,
      1,
      15,
      17,
      22,
      352,
      1,
      43,
      17,
      22,
      524,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "save",
      "json",
      "output",
      "from",
      "a",
      "url",
      "\u2018",
      "http",
      ":",
      "//search.twitter.com/search.json",
      "?",
      "q=hi",
      "\u2019",
      "to",
      "file",
      "\u2018",
      "hi.json",
      "\u2019",
      "in",
      "python",
      "2"
    ],
    "code": [
      "urllib",
      ".",
      "request",
      ".",
      "urlretrieve",
      "(",
      "'http://search.twitter.com/search.json?q=hi'",
      ",",
      "\n",
      "'hi.json'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      333,
      181,
      257,
      58,
      3,
      102,
      398,
      343,
      128,
      465,
      52,
      465,
      399,
      8,
      126,
      398,
      465,
      399,
      24,
      50,
      82
    ],
    "code_indx_copy": [
      232,
      22,
      233,
      22,
      353,
      1,
      524,
      8,
      161,
      524,
      17
    ],
    "code_indx_nocopy": [
      232,
      22,
      233,
      22,
      353,
      1,
      524,
      8,
      161,
      524,
      17
    ]
  },
  {
    "intent": [
      "find",
      "indices",
      "of",
      "elements",
      "equal",
      "to",
      "zero",
      "from",
      "numpy",
      "array",
      "var_0"
    ],
    "code": [
      "numpy",
      ".",
      "where",
      "(",
      "var_0",
      "==",
      "0",
      ")",
      "[",
      "0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "x",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      47,
      326,
      2,
      1,
      106,
      8,
      261,
      58,
      84,
      85,
      26
    ],
    "code_indx_copy": [
      147,
      22,
      75,
      1,
      34,
      76,
      43,
      17,
      12,
      43,
      16
    ],
    "code_indx_nocopy": [
      147,
      22,
      75,
      1,
      34,
      76,
      43,
      17,
      12,
      43,
      16
    ]
  },
  {
    "intent": [
      "flush",
      "output",
      "of",
      "python",
      "print"
    ],
    "code": [
      "sys",
      ".",
      "stdout",
      ".",
      "flush",
      "(",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      465,
      257,
      2,
      50,
      166
    ],
    "code_indx_copy": [
      153,
      22,
      354,
      22,
      528,
      1,
      17
    ],
    "code_indx_nocopy": [
      153,
      22,
      354,
      22,
      524,
      1,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "var_0",
      "to",
      "string"
    ],
    "code": [
      "str",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "i",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      26,
      8,
      14
    ],
    "code_indx_copy": [
      25,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      25,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "var_0",
      "to",
      "string"
    ],
    "code": [
      "var_0",
      ".",
      "__str__",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      26,
      8,
      14
    ],
    "code_indx_copy": [
      34,
      22,
      524,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      524,
      1,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "var_0",
      "to",
      "string"
    ],
    "code": [
      "str",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      26,
      8,
      14
    ],
    "code_indx_copy": [
      25,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      25,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "list",
      "of",
      "lists",
      "var_0",
      "by",
      "the",
      "second",
      "item",
      "in",
      "each",
      "list"
    ],
    "code": [
      "var_0",
      ".",
      "sort",
      "(",
      "key",
      "=",
      "operator",
      ".",
      "itemgetter",
      "(",
      "1",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "L",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      4,
      2,
      30,
      26,
      44,
      18,
      118,
      156,
      24,
      22,
      4
    ],
    "code_indx_copy": [
      34,
      22,
      124,
      1,
      102,
      19,
      127,
      22,
      128,
      1,
      15,
      17,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      124,
      1,
      102,
      19,
      127,
      22,
      128,
      1,
      15,
      17,
      17
    ]
  },
  {
    "intent": [
      "print",
      "variable",
      "var_0",
      "and",
      "variable",
      "var_1",
      "with",
      "space",
      "string",
      "str_0",
      "in",
      "between"
    ],
    "code": [
      "print",
      "(",
      "str",
      "(",
      "var_0",
      ")",
      "+",
      "'    '",
      "+",
      "str",
      "(",
      "var_1",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "count",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "conv",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      166,
      95,
      26,
      31,
      95,
      63,
      79,
      400,
      14,
      5,
      24,
      278
    ],
    "code_indx_copy": [
      49,
      1,
      25,
      1,
      34,
      17,
      96,
      524,
      96,
      25,
      1,
      91,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      25,
      1,
      34,
      17,
      96,
      524,
      96,
      25,
      1,
      91,
      17,
      17
    ]
  },
  {
    "intent": [
      "change",
      "nan",
      "values",
      "in",
      "dataframe",
      "var_0",
      "using",
      "preceding",
      "values",
      "in",
      "the",
      "frame"
    ],
    "code": [
      "var_0",
      ".",
      "fillna",
      "(",
      "method",
      "=",
      "'ffill'",
      ",",
      "inplace",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      221,
      289,
      20,
      24,
      43,
      26,
      109,
      465,
      20,
      24,
      18,
      66
    ],
    "code_indx_copy": [
      34,
      22,
      352,
      1,
      524,
      19,
      524,
      8,
      279,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      352,
      1,
      524,
      19,
      524,
      8,
      279,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "change",
      "the",
      "state",
      "of",
      "the",
      "tkinter",
      "var_0",
      "widget",
      "to",
      "read",
      "only",
      "i.e",
      ".",
      "var_1"
    ],
    "code": [
      "text",
      ".",
      "config",
      "(",
      "state",
      "=",
      "DISABLED",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "Text",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "disabled",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      221,
      18,
      465,
      2,
      18,
      223,
      26,
      465,
      8,
      124,
      352,
      465,
      159,
      63
    ],
    "code_indx_copy": [
      355,
      22,
      524,
      1,
      530,
      19,
      524,
      17
    ],
    "code_indx_nocopy": [
      355,
      22,
      524,
      1,
      524,
      19,
      524,
      17
    ]
  },
  {
    "intent": [
      "python",
      "sum",
      "of",
      "ascii",
      "values",
      "of",
      "all",
      "characters",
      "in",
      "a",
      "string",
      "var_0"
    ],
    "code": [
      "sum",
      "(",
      "map",
      "(",
      "ord",
      ",",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "string",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      50,
      112,
      2,
      384,
      20,
      2,
      38,
      98,
      24,
      3,
      14,
      26
    ],
    "code_indx_copy": [
      0,
      1,
      24,
      1,
      98,
      8,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      0,
      1,
      24,
      1,
      98,
      8,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "apply",
      "itertools.product",
      "to",
      "elements",
      "of",
      "a",
      "list",
      "of",
      "lists",
      "var_0"
    ],
    "code": [
      "list",
      "(",
      "itertools",
      ".",
      "product",
      "(",
      "*",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "arrays",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      401,
      465,
      8,
      1,
      2,
      3,
      4,
      2,
      30,
      26
    ],
    "code_indx_copy": [
      33,
      1,
      50,
      22,
      328,
      1,
      3,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      33,
      1,
      50,
      22,
      328,
      1,
      3,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "print",
      "number",
      "var_0",
      "as",
      "thousands",
      "separators"
    ],
    "code": [
      "\"\"\"{:,}\"\"\"",
      ".",
      "format",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "value",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      166,
      76,
      26,
      90,
      465,
      465
    ],
    "code_indx_copy": [
      524,
      22,
      38,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      38,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "print",
      "number",
      "1255000",
      "as",
      "thousands",
      "separators"
    ],
    "code": [
      "locale",
      ".",
      "setlocale",
      "(",
      "locale",
      ".",
      "LC_ALL",
      ",",
      "'en_US'",
      ")",
      "\n",
      "locale",
      ".",
      "format",
      "(",
      "'%d'",
      ",",
      "1255000",
      ",",
      "grouping",
      "=",
      "True",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      166,
      76,
      465,
      90,
      465,
      465
    ],
    "code_indx_copy": [
      356,
      22,
      524,
      1,
      356,
      22,
      524,
      8,
      524,
      17,
      161,
      356,
      22,
      38,
      1,
      524,
      8,
      530,
      8,
      524,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      356,
      22,
      524,
      1,
      356,
      22,
      524,
      8,
      524,
      17,
      161,
      356,
      22,
      38,
      1,
      524,
      8,
      524,
      8,
      524,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "get",
      "rows",
      "of",
      "dataframe",
      "var_0",
      "where",
      "column",
      "var_1",
      "has",
      "values",
      "str_0"
    ],
    "code": [
      "var_0",
      "[",
      "var_0",
      ".",
      "var_1",
      ".",
      "isin",
      "(",
      "[",
      "str_0",
      "]",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "Col1",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "['men', 'rocks', 'mountains']",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "['men', 'rocks', 'mountains']",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      80,
      2,
      43,
      26,
      155,
      147,
      63,
      337,
      20,
      5
    ],
    "code_indx_copy": [
      34,
      12,
      34,
      22,
      91,
      22,
      248,
      1,
      12,
      11,
      16,
      17,
      16
    ],
    "code_indx_nocopy": [
      34,
      12,
      34,
      22,
      91,
      22,
      248,
      1,
      12,
      11,
      16,
      17,
      16
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "value",
      "at",
      "index",
      "1",
      "for",
      "each",
      "tuple",
      "in",
      "the",
      "list",
      "of",
      "tuples",
      "var_0"
    ],
    "code": [
      "[",
      "x",
      "[",
      "1",
      "]",
      "for",
      "x",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "L",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      18,
      143,
      35,
      37,
      237,
      21,
      22,
      113,
      24,
      18,
      4,
      2,
      33,
      26
    ],
    "code_indx_copy": [
      12,
      26,
      12,
      15,
      16,
      7,
      26,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      12,
      26,
      12,
      15,
      16,
      7,
      26,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "split",
      "unicode",
      "string",
      "str_0",
      "into",
      "words"
    ],
    "code": [
      "\"\"\"\u0440\u0430\u0437 \u0434\u0432\u0430 \u0442\u0440\u0438\"\"\"",
      ".",
      "split",
      "(",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "\u00d1\u0080\u00d0\u00b0\u00d0\u00b7 \u00d0\u00b4\u00d0\u00b2\u00d0\u00b0 \u00d1\u0082\u00d1\u0080\u00d0\u00b8",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      138,
      230,
      14,
      5,
      12,
      41
    ],
    "code_indx_copy": [
      524,
      22,
      71,
      1,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      71,
      1,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "query",
      "set",
      "by",
      "number",
      "of",
      "characters",
      "in",
      "a",
      "field",
      "var_0",
      "in",
      "django",
      "model",
      "var_1"
    ],
    "code": [
      "var_1",
      ".",
      "objects",
      ".",
      "extra",
      "(",
      "select",
      "=",
      "{",
      "'var_0'",
      ":",
      "'Length(name)'",
      "}",
      ")",
      ".",
      "order_by",
      "(",
      "'var_0'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "length",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "MyModel",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      275,
      59,
      44,
      76,
      2,
      98,
      24,
      3,
      312,
      26,
      24,
      87,
      313,
      63
    ],
    "code_indx_copy": [
      91,
      22,
      78,
      22,
      357,
      1,
      358,
      19,
      52,
      56,
      13,
      524,
      53,
      17,
      22,
      136,
      1,
      56,
      17
    ],
    "code_indx_nocopy": [
      91,
      22,
      78,
      22,
      357,
      1,
      358,
      19,
      52,
      56,
      13,
      524,
      53,
      17,
      22,
      136,
      1,
      56,
      17
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "dictionary",
      "in",
      "list",
      "var_0",
      "which",
      "key",
      "str_0",
      "is",
      "closer",
      "to",
      "a",
      "global",
      "value",
      "1.77672955975"
    ],
    "code": [
      "min",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "(",
      "abs",
      "(",
      "1.77672955975",
      "-",
      "x",
      "[",
      "'str_0'",
      "]",
      ")",
      ",",
      "-",
      "x",
      "[",
      "'pixels'",
      "]",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "dicts",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "ratio",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      3,
      25,
      24,
      4,
      26,
      205,
      23,
      5,
      152,
      465,
      8,
      3,
      465,
      143,
      465
    ],
    "code_indx_copy": [
      111,
      1,
      34,
      8,
      102,
      19,
      44,
      26,
      13,
      1,
      359,
      1,
      543,
      14,
      26,
      12,
      29,
      16,
      17,
      8,
      14,
      26,
      12,
      524,
      16,
      17,
      17
    ],
    "code_indx_nocopy": [
      111,
      1,
      34,
      8,
      102,
      19,
      44,
      26,
      13,
      1,
      359,
      1,
      524,
      14,
      26,
      12,
      29,
      16,
      17,
      8,
      14,
      26,
      12,
      524,
      16,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "non-masked",
      "values",
      "of",
      "array",
      "var_0"
    ],
    "code": [
      "var_0",
      "[",
      "~",
      "var_0",
      ".",
      "mask",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "m",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      18,
      465,
      20,
      2,
      85,
      26
    ],
    "code_indx_copy": [
      34,
      12,
      360,
      34,
      22,
      524,
      16
    ],
    "code_indx_nocopy": [
      34,
      12,
      360,
      34,
      22,
      524,
      16
    ]
  },
  {
    "intent": [
      "find",
      "all",
      "words",
      "containing",
      "letters",
      "between",
      "a",
      "and",
      "z",
      "in",
      "string",
      "var_0"
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'\\\\b[A-Z]'",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "formula",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      47,
      38,
      41,
      34,
      360,
      278,
      3,
      31,
      465,
      24,
      14,
      26
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      524,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      524,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "list",
      "var_0",
      "containing",
      "5",
      "lists",
      ",",
      "each",
      "of",
      "5",
      "items",
      "all",
      "set",
      "to",
      "0"
    ],
    "code": [
      "var_0",
      "=",
      "[",
      "(",
      "[",
      "0",
      "]",
      "*",
      "5",
      ")",
      "for",
      "i",
      "in",
      "range",
      "(",
      "5",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "matrix",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      148,
      3,
      4,
      26,
      34,
      232,
      30,
      62,
      22,
      2,
      232,
      39,
      38,
      59,
      8,
      107
    ],
    "code_indx_copy": [
      34,
      19,
      12,
      1,
      12,
      43,
      16,
      3,
      185,
      17,
      7,
      6,
      9,
      104,
      1,
      185,
      17,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      12,
      1,
      12,
      43,
      16,
      3,
      185,
      17,
      7,
      6,
      9,
      104,
      1,
      185,
      17,
      16
    ]
  },
  {
    "intent": [
      "creating",
      "a",
      "numpy",
      "array",
      "of",
      "3d",
      "coordinates",
      "from",
      "three",
      "1d",
      "arrays",
      "var_0",
      ",",
      "var_1",
      "and",
      "var_2"
    ],
    "code": [
      "np",
      ".",
      "vstack",
      "(",
      "np",
      ".",
      "meshgrid",
      "(",
      "var_0",
      ",",
      "var_1",
      ",",
      "var_2",
      ")",
      ")",
      ".",
      "reshape",
      "(",
      "3",
      ",",
      "-",
      "1",
      ")",
      ".",
      "T"
    ],
    "slot_map": {
      "var_0": {
        "value": "x_p",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "y_p",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "z_p",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      381,
      3,
      84,
      85,
      2,
      164,
      465,
      58,
      240,
      465,
      165,
      26,
      62,
      63,
      31,
      64
    ],
    "code_indx_copy": [
      74,
      22,
      524,
      1,
      74,
      22,
      524,
      1,
      34,
      8,
      91,
      8,
      94,
      17,
      17,
      22,
      361,
      1,
      54,
      8,
      14,
      15,
      17,
      22,
      134
    ],
    "code_indx_nocopy": [
      74,
      22,
      524,
      1,
      74,
      22,
      524,
      1,
      34,
      8,
      91,
      8,
      94,
      17,
      17,
      22,
      361,
      1,
      54,
      8,
      14,
      15,
      17,
      22,
      134
    ]
  },
  {
    "intent": [
      "find",
      "the",
      "minimum",
      "value",
      "in",
      "a",
      "numpy",
      "array",
      "var_0",
      "excluding",
      "0"
    ],
    "code": [
      "var_0",
      "[",
      "var_0",
      "!=",
      "0",
      "]",
      ".",
      "min",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "arr",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      47,
      18,
      465,
      143,
      24,
      3,
      84,
      85,
      26,
      465,
      107
    ],
    "code_indx_copy": [
      34,
      12,
      34,
      88,
      43,
      16,
      22,
      111,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      12,
      34,
      88,
      43,
      16,
      22,
      111,
      1,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "text",
      "of",
      "multiple",
      "elements",
      "found",
      "by",
      "xpath",
      "str_0"
    ],
    "code": [
      "browser",
      ".",
      "find_elements_by_xpath",
      "(",
      "'str_0'",
      ")",
      ".",
      "text"
    ],
    "slot_map": {
      "str_0": {
        "value": "//*[@type='submit']/@value",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      18,
      267,
      2,
      6,
      1,
      465,
      44,
      465,
      5
    ],
    "code_indx_copy": [
      362,
      22,
      363,
      1,
      29,
      17,
      22,
      355
    ],
    "code_indx_nocopy": [
      362,
      22,
      363,
      1,
      29,
      17,
      22,
      355
    ]
  },
  {
    "intent": [
      "find",
      "all",
      "the",
      "values",
      "in",
      "attribute",
      "var_0",
      "for",
      "the",
      "tags",
      "whose",
      "var_1",
      "attribute",
      "is",
      "var_2",
      "in",
      "selenium"
    ],
    "code": [
      "browser",
      ".",
      "find_elements_by_xpath",
      "(",
      "\"//*[@type='submit']\"",
      ")",
      ".",
      "get_attribute",
      "(",
      "'var_0'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "value",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "type",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "submit",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      47,
      38,
      18,
      20,
      24,
      341,
      26,
      21,
      18,
      392,
      228,
      63,
      341,
      152,
      64,
      24,
      51
    ],
    "code_indx_copy": [
      362,
      22,
      363,
      1,
      524,
      17,
      22,
      524,
      1,
      56,
      17
    ],
    "code_indx_nocopy": [
      362,
      22,
      363,
      1,
      524,
      17,
      22,
      524,
      1,
      56,
      17
    ]
  },
  {
    "intent": [
      "parse",
      "a",
      "yaml",
      "file",
      "str_0"
    ],
    "code": [
      "with",
      "open",
      "(",
      "'str_0'",
      ",",
      "'r'",
      ")",
      "as",
      "stream",
      ":",
      "\n",
      "    ",
      "try",
      ":",
      "\n",
      "        ",
      "print",
      "(",
      "yaml",
      ".",
      "load",
      "(",
      "stream",
      ")",
      ")",
      "\n",
      "",
      "except",
      "yaml",
      ".",
      "YAMLError",
      "as",
      "exc",
      ":",
      "\n",
      "        ",
      "print",
      "(",
      "exc",
      ")",
      "",
      ""
    ],
    "slot_map": {
      "str_0": {
        "value": "example.yaml",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      73,
      3,
      465,
      126,
      5
    ],
    "code_indx_copy": [
      364,
      105,
      1,
      29,
      8,
      365,
      17,
      366,
      367,
      13,
      161,
      216,
      338,
      13,
      161,
      368,
      49,
      1,
      369,
      22,
      154,
      1,
      367,
      17,
      17,
      161,
      218,
      339,
      369,
      22,
      524,
      366,
      370,
      13,
      161,
      368,
      49,
      1,
      370,
      17,
      218,
      218
    ],
    "code_indx_nocopy": [
      364,
      105,
      1,
      29,
      8,
      365,
      17,
      366,
      367,
      13,
      161,
      216,
      338,
      13,
      161,
      368,
      49,
      1,
      369,
      22,
      154,
      1,
      367,
      17,
      17,
      161,
      218,
      339,
      369,
      22,
      524,
      366,
      370,
      13,
      161,
      368,
      49,
      1,
      370,
      17,
      218,
      218
    ]
  },
  {
    "intent": [
      "parse",
      "a",
      "yaml",
      "file",
      "str_0"
    ],
    "code": [
      "with",
      "open",
      "(",
      "'str_0'",
      ")",
      "as",
      "stream",
      ":",
      "\n",
      "    ",
      "try",
      ":",
      "\n",
      "        ",
      "print",
      "(",
      "yaml",
      ".",
      "load",
      "(",
      "stream",
      ")",
      ")",
      "\n",
      "",
      "except",
      "yaml",
      ".",
      "YAMLError",
      "as",
      "exc",
      ":",
      "\n",
      "        ",
      "print",
      "(",
      "exc",
      ")",
      "",
      ""
    ],
    "slot_map": {
      "str_0": {
        "value": "example.yaml",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      73,
      3,
      465,
      126,
      5
    ],
    "code_indx_copy": [
      364,
      105,
      1,
      29,
      17,
      366,
      367,
      13,
      161,
      216,
      338,
      13,
      161,
      368,
      49,
      1,
      369,
      22,
      154,
      1,
      367,
      17,
      17,
      161,
      218,
      339,
      369,
      22,
      524,
      366,
      370,
      13,
      161,
      368,
      49,
      1,
      370,
      17,
      218,
      218
    ],
    "code_indx_nocopy": [
      364,
      105,
      1,
      29,
      17,
      366,
      367,
      13,
      161,
      216,
      338,
      13,
      161,
      368,
      49,
      1,
      369,
      22,
      154,
      1,
      367,
      17,
      17,
      161,
      218,
      339,
      369,
      22,
      524,
      366,
      370,
      13,
      161,
      368,
      49,
      1,
      370,
      17,
      218,
      218
    ]
  },
  {
    "intent": [
      "sort",
      "the",
      "values",
      "of",
      "the",
      "dataframe",
      "var_0",
      "and",
      "align",
      "the",
      "columns",
      "accordingly",
      "based",
      "on",
      "the",
      "obtained",
      "indices",
      "after",
      "np.argsort",
      "."
    ],
    "code": [
      "pd",
      ".",
      "DataFrame",
      "(",
      "var_0",
      ".",
      "columns",
      "[",
      "np",
      ".",
      "argsort",
      "(",
      "var_0",
      ".",
      "values",
      ")",
      "]",
      ",",
      "var_0",
      ".",
      "index",
      ",",
      "np",
      ".",
      "\n",
      "unique",
      "(",
      "var_0",
      ".",
      "values",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      18,
      20,
      2,
      18,
      43,
      26,
      31,
      465,
      18,
      61,
      465,
      208,
      139,
      18,
      465,
      326,
      201,
      465,
      159
    ],
    "code_indx_copy": [
      162,
      22,
      164,
      1,
      34,
      22,
      192,
      12,
      74,
      22,
      524,
      1,
      34,
      22,
      166,
      17,
      16,
      8,
      34,
      22,
      160,
      8,
      74,
      22,
      161,
      277,
      1,
      34,
      22,
      166,
      17,
      17
    ],
    "code_indx_nocopy": [
      162,
      22,
      164,
      1,
      34,
      22,
      192,
      12,
      74,
      22,
      524,
      1,
      34,
      22,
      166,
      17,
      16,
      8,
      34,
      22,
      160,
      8,
      74,
      22,
      161,
      277,
      1,
      34,
      22,
      166,
      17,
      17
    ]
  },
  {
    "intent": [
      "getting",
      "today",
      "'s",
      "date",
      "in",
      "yyyy-mm-dd"
    ],
    "code": [
      "datetime",
      ".",
      "datetime",
      ".",
      "today",
      "(",
      ")",
      ".",
      "strftime",
      "(",
      "'%Y-%m-%d'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      402,
      265,
      266,
      133,
      24,
      465
    ],
    "code_indx_copy": [
      27,
      22,
      27,
      22,
      137,
      1,
      17,
      22,
      65,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      27,
      22,
      27,
      22,
      137,
      1,
      17,
      22,
      65,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "urlencode",
      "a",
      "querystring",
      "str_0",
      "in",
      "python",
      "2"
    ],
    "code": [
      "urllib",
      ".",
      "parse",
      ".",
      "quote_plus",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "string_of_characters_like_these:$#@=?%^Q^$",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      3,
      465,
      5,
      24,
      50,
      82
    ],
    "code_indx_copy": [
      232,
      22,
      236,
      22,
      524,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      232,
      22,
      236,
      22,
      524,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "dictionary",
      "var_0",
      "by",
      "length",
      "of",
      "its",
      "values",
      "and",
      "print",
      "as",
      "string"
    ],
    "code": [
      "print",
      "(",
      "' '",
      ".",
      "join",
      "(",
      "sorted",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "lambda",
      "k",
      ":",
      "len",
      "(",
      "var_0",
      "[",
      "k",
      "]",
      ")",
      ",",
      "reverse",
      "=",
      "True",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "d",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      3,
      25,
      26,
      44,
      209,
      2,
      91,
      20,
      31,
      166,
      90,
      14
    ],
    "code_indx_copy": [
      49,
      1,
      108,
      22,
      23,
      1,
      101,
      1,
      34,
      8,
      102,
      19,
      44,
      89,
      13,
      32,
      1,
      34,
      12,
      89,
      16,
      17,
      8,
      129,
      19,
      109,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      108,
      22,
      23,
      1,
      101,
      1,
      34,
      8,
      102,
      19,
      44,
      89,
      13,
      32,
      1,
      34,
      12,
      89,
      16,
      17,
      8,
      129,
      19,
      109,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "tuple",
      "elements",
      "in",
      "list",
      "str_0",
      "into",
      "lists"
    ],
    "code": [
      "map",
      "(",
      "list",
      ",",
      "zip",
      "(",
      "*",
      "[",
      "(",
      "1",
      ",",
      "2",
      ")",
      ",",
      "(",
      "3",
      ",",
      "4",
      ")",
      ",",
      "(",
      "5",
      ",",
      "6",
      ")",
      "]",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "[(1,2),(3,4),(5,6),]",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "[(1,2),(3,4),(5,6),]",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      113,
      1,
      24,
      4,
      5,
      12,
      30
    ],
    "code_indx_copy": [
      24,
      1,
      33,
      8,
      36,
      1,
      3,
      12,
      1,
      15,
      8,
      82,
      17,
      8,
      1,
      54,
      8,
      184,
      17,
      8,
      1,
      185,
      8,
      249,
      17,
      16,
      17,
      17
    ],
    "code_indx_nocopy": [
      24,
      1,
      33,
      8,
      36,
      1,
      3,
      12,
      1,
      15,
      8,
      82,
      17,
      8,
      1,
      54,
      8,
      184,
      17,
      8,
      1,
      185,
      8,
      249,
      17,
      16,
      17,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "list",
      "of",
      "tuples",
      "to",
      "multiple",
      "lists",
      "in",
      "python"
    ],
    "code": [
      "map",
      "(",
      "list",
      ",",
      "zip",
      "(",
      "*",
      "[",
      "(",
      "1",
      ",",
      "2",
      ")",
      ",",
      "(",
      "3",
      ",",
      "4",
      ")",
      ",",
      "(",
      "5",
      ",",
      "6",
      ")",
      "]",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      11,
      4,
      2,
      33,
      8,
      6,
      30,
      24,
      50
    ],
    "code_indx_copy": [
      24,
      1,
      33,
      8,
      36,
      1,
      3,
      12,
      1,
      15,
      8,
      82,
      17,
      8,
      1,
      54,
      8,
      184,
      17,
      8,
      1,
      185,
      8,
      249,
      17,
      16,
      17,
      17
    ],
    "code_indx_nocopy": [
      24,
      1,
      33,
      8,
      36,
      1,
      3,
      12,
      1,
      15,
      8,
      82,
      17,
      8,
      1,
      54,
      8,
      184,
      17,
      8,
      1,
      185,
      8,
      249,
      17,
      16,
      17,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "list",
      "of",
      "tuples",
      "to",
      "multiple",
      "lists",
      "in",
      "python"
    ],
    "code": [
      "zip",
      "(",
      "*",
      "[",
      "(",
      "1",
      ",",
      "2",
      ")",
      ",",
      "(",
      "3",
      ",",
      "4",
      ")",
      ",",
      "(",
      "5",
      ",",
      "6",
      ")",
      "]",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      11,
      4,
      2,
      33,
      8,
      6,
      30,
      24,
      50
    ],
    "code_indx_copy": [
      36,
      1,
      3,
      12,
      1,
      15,
      8,
      82,
      17,
      8,
      1,
      54,
      8,
      184,
      17,
      8,
      1,
      185,
      8,
      249,
      17,
      16,
      17
    ],
    "code_indx_nocopy": [
      36,
      1,
      3,
      12,
      1,
      15,
      8,
      82,
      17,
      8,
      1,
      54,
      8,
      184,
      17,
      8,
      1,
      185,
      8,
      249,
      17,
      16,
      17
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "list",
      "of",
      "tuples",
      "which",
      "contains",
      "number",
      "9",
      "and",
      "the",
      "number",
      "before",
      "it",
      ",",
      "for",
      "each",
      "occurrence",
      "of",
      "9",
      "in",
      "the",
      "list",
      "str_0"
    ],
    "code": [
      "[",
      "(",
      "x",
      ",",
      "y",
      ")",
      "for",
      "x",
      ",",
      "y",
      "in",
      "zip",
      "(",
      "str_0",
      ",",
      "str_0",
      "[",
      "1",
      ":",
      "]",
      ")",
      "if",
      "y",
      "==",
      "9",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "myList",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      148,
      3,
      4,
      2,
      33,
      205,
      75,
      76,
      403,
      31,
      18,
      76,
      280,
      145,
      62,
      21,
      22,
      364,
      2,
      403,
      24,
      18,
      4,
      5
    ],
    "code_indx_copy": [
      12,
      1,
      26,
      8,
      103,
      17,
      7,
      26,
      8,
      103,
      9,
      36,
      1,
      11,
      8,
      11,
      12,
      15,
      13,
      16,
      17,
      67,
      103,
      76,
      371,
      16
    ],
    "code_indx_nocopy": [
      12,
      1,
      26,
      8,
      103,
      17,
      7,
      26,
      8,
      103,
      9,
      36,
      1,
      11,
      8,
      11,
      12,
      15,
      13,
      16,
      17,
      67,
      103,
      76,
      371,
      16
    ]
  },
  {
    "intent": [
      "navigate",
      "to",
      "webpage",
      "given",
      "by",
      "url",
      "str_0",
      "using",
      "selenium"
    ],
    "code": [
      "driver",
      ".",
      "get",
      "(",
      "'http://www.google.com.br'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "http://www.python.org",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      8,
      465,
      273,
      44,
      102,
      5,
      109,
      51
    ],
    "code_indx_copy": [
      46,
      22,
      86,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      46,
      22,
      86,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "reverse",
      "a",
      "utf-8",
      "string",
      "str_0"
    ],
    "code": [
      "b",
      "=",
      "str_0",
      ".",
      "decode",
      "(",
      "'utf8'",
      ")",
      "[",
      ":",
      ":",
      "-",
      "1",
      "]",
      ".",
      "encode",
      "(",
      "'utf8'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "a",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      282,
      3,
      183,
      14,
      5
    ],
    "code_indx_copy": [
      97,
      19,
      11,
      22,
      99,
      1,
      200,
      17,
      12,
      13,
      13,
      14,
      15,
      16,
      22,
      239,
      1,
      200,
      17
    ],
    "code_indx_nocopy": [
      97,
      19,
      11,
      22,
      99,
      1,
      200,
      17,
      12,
      13,
      13,
      14,
      15,
      16,
      22,
      239,
      1,
      200,
      17
    ]
  },
  {
    "intent": [
      "extract",
      "date",
      "from",
      "a",
      "string",
      "str_0"
    ],
    "code": [
      "dparser",
      ".",
      "parse",
      "(",
      "'str_0'",
      ",",
      "fuzzy",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "monkey 2010-07-32 love banana",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      104,
      133,
      58,
      3,
      14,
      5
    ],
    "code_indx_copy": [
      372,
      22,
      236,
      1,
      29,
      8,
      373,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      372,
      22,
      236,
      1,
      29,
      8,
      373,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "extract",
      "date",
      "from",
      "a",
      "string",
      "str_0"
    ],
    "code": [
      "dparser",
      ".",
      "parse",
      "(",
      "'str_0'",
      ",",
      "fuzzy",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "monkey 20/01/1980 love banana",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      104,
      133,
      58,
      3,
      14,
      5
    ],
    "code_indx_copy": [
      372,
      22,
      236,
      1,
      29,
      8,
      373,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      372,
      22,
      236,
      1,
      29,
      8,
      373,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "extract",
      "date",
      "from",
      "a",
      "string",
      "str_0"
    ],
    "code": [
      "dparser",
      ".",
      "parse",
      "(",
      "'str_0'",
      ",",
      "fuzzy",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "monkey 10/01/1980 love banana",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      104,
      133,
      58,
      3,
      14,
      5
    ],
    "code_indx_copy": [
      372,
      22,
      236,
      1,
      29,
      8,
      373,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      372,
      22,
      236,
      1,
      29,
      8,
      373,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "list",
      "str_0",
      "to",
      "dictionary"
    ],
    "code": [
      "dict",
      "(",
      "map",
      "(",
      "lambda",
      "s",
      ":",
      "s",
      ".",
      "split",
      "(",
      "':'",
      ")",
      ",",
      "[",
      "str_0",
      "]",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "['A:1', 'B:2', 'C:3', 'D:4']",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "['A:1', 'B:2', 'C:3', 'D:4']",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      3,
      4,
      5,
      8,
      25
    ],
    "code_indx_copy": [
      70,
      1,
      24,
      1,
      44,
      181,
      13,
      181,
      22,
      71,
      1,
      72,
      17,
      8,
      12,
      11,
      16,
      17,
      17
    ],
    "code_indx_nocopy": [
      70,
      1,
      24,
      1,
      44,
      181,
      13,
      181,
      22,
      71,
      1,
      72,
      17,
      8,
      12,
      11,
      16,
      17,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "string",
      "var_0",
      "contains",
      "any",
      "upper",
      "or",
      "lower-case",
      "ascii",
      "letters"
    ],
    "code": [
      "re",
      ".",
      "search",
      "(",
      "'[a-zA-Z]'",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "the_string",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      234,
      150,
      14,
      26,
      75,
      272,
      465,
      344,
      465,
      384,
      360
    ],
    "code_indx_copy": [
      39,
      22,
      93,
      1,
      524,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      93,
      1,
      524,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "pandas",
      "var_0",
      "groupby",
      "object",
      "to",
      "dataframe"
    ],
    "code": [
      "DataFrame",
      "(",
      "{",
      "'count'",
      ":",
      "var_0",
      ".",
      "groupby",
      "(",
      "[",
      "'Name'",
      ",",
      "'City'",
      "]",
      ")",
      ".",
      "size",
      "(",
      ")",
      "}",
      ")",
      ".",
      "reset_index",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df1",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      3,
      42,
      26,
      404,
      15,
      8,
      43
    ],
    "code_indx_copy": [
      164,
      1,
      52,
      524,
      13,
      34,
      22,
      157,
      1,
      12,
      524,
      8,
      524,
      16,
      17,
      22,
      374,
      1,
      17,
      53,
      17,
      22,
      186,
      1,
      17
    ],
    "code_indx_nocopy": [
      164,
      1,
      52,
      524,
      13,
      34,
      22,
      157,
      1,
      12,
      524,
      8,
      524,
      16,
      17,
      22,
      374,
      1,
      17,
      53,
      17,
      22,
      186,
      1,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "all",
      "non-numeric",
      "characters",
      "from",
      "string",
      "str_0"
    ],
    "code": [
      "re",
      ".",
      "sub",
      "(",
      "'[^0-9]'",
      ",",
      "''",
      ",",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "sdkjh987978asd098as0980a98sd",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      268,
      38,
      465,
      98,
      58,
      14,
      5
    ],
    "code_indx_copy": [
      39,
      22,
      40,
      1,
      524,
      8,
      21,
      8,
      29,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      40,
      1,
      524,
      8,
      21,
      8,
      29,
      17
    ]
  },
  {
    "intent": [
      "get",
      "items",
      "from",
      "list",
      "var_0",
      "that",
      "do",
      "n't",
      "appear",
      "in",
      "list",
      "var_1"
    ],
    "code": [
      "[",
      "y",
      "for",
      "y",
      "in",
      "var_0",
      "if",
      "y",
      "not",
      "in",
      "var_1",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "b",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      39,
      58,
      4,
      26,
      195,
      327,
      465,
      465,
      24,
      4,
      63
    ],
    "code_indx_copy": [
      12,
      103,
      7,
      103,
      9,
      34,
      67,
      103,
      281,
      9,
      91,
      16
    ],
    "code_indx_nocopy": [
      12,
      103,
      7,
      103,
      9,
      34,
      67,
      103,
      281,
      9,
      91,
      16
    ]
  },
  {
    "intent": [
      "extract",
      "the",
      "first",
      "four",
      "rows",
      "of",
      "the",
      "column",
      "var_0",
      "from",
      "a",
      "pandas",
      "dataframe",
      "var_1"
    ],
    "code": [
      "var_1",
      ".",
      "groupby",
      "(",
      "'var_0'",
      ")",
      ".",
      "head",
      "(",
      "4",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "ID",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      104,
      18,
      151,
      465,
      80,
      2,
      18,
      147,
      26,
      58,
      3,
      42,
      43,
      63
    ],
    "code_indx_copy": [
      91,
      22,
      157,
      1,
      56,
      17,
      22,
      375,
      1,
      184,
      17
    ],
    "code_indx_nocopy": [
      91,
      22,
      157,
      1,
      56,
      17,
      22,
      375,
      1,
      184,
      17
    ]
  },
  {
    "intent": [
      "unzip",
      "a",
      "list",
      "of",
      "tuples",
      "var_0",
      "into",
      "a",
      "list",
      "of",
      "lists"
    ],
    "code": [
      "zip",
      "(",
      "*",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "l",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      3,
      4,
      2,
      33,
      26,
      12,
      3,
      4,
      2,
      30
    ],
    "code_indx_copy": [
      36,
      1,
      3,
      34,
      17
    ],
    "code_indx_nocopy": [
      36,
      1,
      3,
      34,
      17
    ]
  },
  {
    "intent": [
      "combine",
      "two",
      "lists",
      "str_0",
      "and",
      "str_1",
      "into",
      "a",
      "dictionary"
    ],
    "code": [
      "dict",
      "(",
      "zip",
      "(",
      "[",
      "str_0",
      "]",
      ",",
      "[",
      "str_1",
      "]",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "[1, 2, 3, 4]",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": "['a', 'b', 'c', 'd']",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "[1, 2, 3, 4]",
        "quote": "`",
        "type": "str"
      },
      "[str_1]": {
        "value": "['a', 'b', 'c', 'd']",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      365,
      29,
      30,
      5,
      31,
      32,
      12,
      3,
      25
    ],
    "code_indx_copy": [
      70,
      1,
      36,
      1,
      12,
      11,
      16,
      8,
      12,
      37,
      16,
      17,
      17
    ],
    "code_indx_nocopy": [
      70,
      1,
      36,
      1,
      12,
      11,
      16,
      8,
      12,
      37,
      16,
      17,
      17
    ]
  },
  {
    "intent": [
      "combine",
      "two",
      "lists",
      "str_0",
      "and",
      "str_1",
      "into",
      "a",
      "dictionary"
    ],
    "code": [
      "dict",
      "(",
      "zip",
      "(",
      "[",
      "str_0",
      "]",
      ",",
      "[",
      "str_1",
      "]",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "[1, 2, 3, 4]",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": "['a', 'b', 'c', 'd']",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "[1, 2, 3, 4]",
        "quote": "`",
        "type": "str"
      },
      "[str_1]": {
        "value": "['a', 'b', 'c', 'd']",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      365,
      29,
      30,
      5,
      31,
      32,
      12,
      3,
      25
    ],
    "code_indx_copy": [
      70,
      1,
      36,
      1,
      12,
      11,
      16,
      8,
      12,
      37,
      16,
      17,
      17
    ],
    "code_indx_nocopy": [
      70,
      1,
      36,
      1,
      12,
      11,
      16,
      8,
      12,
      37,
      16,
      17,
      17
    ]
  },
  {
    "intent": [
      "retrieve",
      "the",
      "path",
      "from",
      "a",
      "flask",
      "request"
    ],
    "code": [
      "request",
      ".",
      "url"
    ],
    "slot_map": {},
    "intent_indx": [
      371,
      18,
      199,
      58,
      3,
      405,
      101
    ],
    "code_indx_copy": [
      233,
      22,
      235
    ],
    "code_indx_nocopy": [
      233,
      22,
      235
    ]
  },
  {
    "intent": [
      "replace",
      "carriage",
      "return",
      "in",
      "string",
      "var_0",
      "with",
      "empty",
      "string",
      "str_0"
    ],
    "code": [
      "var_0",
      ".",
      "replace",
      "(",
      "'\\\\r'",
      ",",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "somestring",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      130,
      465,
      160,
      24,
      14,
      26,
      79,
      146,
      14,
      5
    ],
    "code_indx_copy": [
      34,
      22,
      107,
      1,
      524,
      8,
      29,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      107,
      1,
      524,
      8,
      29,
      17
    ]
  },
  {
    "intent": [
      "serialize",
      "dictionary",
      "var_0",
      "as",
      "a",
      "json",
      "formatted",
      "string",
      "with",
      "each",
      "key",
      "formatted",
      "to",
      "pattern",
      "str_0"
    ],
    "code": [
      "simplejson",
      ".",
      "dumps",
      "(",
      "dict",
      "(",
      "[",
      "(",
      "'str_0'",
      "%",
      "k",
      ",",
      "v",
      ")",
      "for",
      "k",
      ",",
      "v",
      "in",
      "list",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      "]",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "d",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "%d,%d",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      25,
      26,
      90,
      3,
      181,
      288,
      14,
      79,
      22,
      23,
      288,
      8,
      54,
      5
    ],
    "code_indx_copy": [
      524,
      22,
      141,
      1,
      70,
      1,
      12,
      1,
      29,
      117,
      89,
      8,
      90,
      17,
      7,
      89,
      8,
      90,
      9,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      16,
      17,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      141,
      1,
      70,
      1,
      12,
      1,
      29,
      117,
      89,
      8,
      90,
      17,
      7,
      89,
      8,
      90,
      9,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      16,
      17,
      17
    ]
  },
  {
    "intent": [
      "parse",
      "string",
      "str_0",
      "into",
      "datetime",
      "by",
      "format",
      "str_1"
    ],
    "code": [
      "datetime",
      ".",
      "strptime",
      "(",
      "'str_0'",
      ",",
      "'str_1'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "Jun 1 2005  1:33PM",
        "quote": "\"",
        "type": "str"
      },
      "str_1": {
        "value": "%b %d %Y %I:%M%p",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      73,
      14,
      5,
      12,
      13,
      44,
      16,
      32
    ],
    "code_indx_copy": [
      27,
      22,
      28,
      1,
      29,
      8,
      63,
      17
    ],
    "code_indx_nocopy": [
      27,
      22,
      28,
      1,
      29,
      8,
      63,
      17
    ]
  },
  {
    "intent": [
      "parse",
      "string",
      "str_0",
      "into",
      "datetime"
    ],
    "code": [
      "parser",
      ".",
      "parse",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "Aug 28 1999 12:00AM",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      73,
      14,
      5,
      12,
      13
    ],
    "code_indx_copy": [
      376,
      22,
      236,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      376,
      22,
      236,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "get",
      "absolute",
      "folder",
      "path",
      "and",
      "filename",
      "for",
      "file",
      "str_0"
    ],
    "code": [
      "os",
      ".",
      "path",
      ".",
      "split",
      "(",
      "os",
      ".",
      "path",
      ".",
      "abspath",
      "(",
      "str_0",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "existGDBPath",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      465,
      406,
      199,
      31,
      465,
      21,
      126,
      5
    ],
    "code_indx_copy": [
      113,
      22,
      114,
      22,
      71,
      1,
      113,
      22,
      114,
      22,
      377,
      1,
      11,
      17,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      114,
      22,
      71,
      1,
      113,
      22,
      114,
      22,
      377,
      1,
      11,
      17,
      17
    ]
  },
  {
    "intent": [
      "extract",
      "folder",
      "path",
      "from",
      "file",
      "path"
    ],
    "code": [
      "os",
      ".",
      "path",
      ".",
      "dirname",
      "(",
      "os",
      ".",
      "path",
      ".",
      "abspath",
      "(",
      "existGDBPath",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      104,
      406,
      199,
      58,
      126,
      199
    ],
    "code_indx_copy": [
      113,
      22,
      114,
      22,
      378,
      1,
      113,
      22,
      114,
      22,
      377,
      1,
      524,
      17,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      114,
      22,
      378,
      1,
      113,
      22,
      114,
      22,
      377,
      1,
      524,
      17,
      17
    ]
  },
  {
    "intent": [
      "execute",
      "a",
      "post",
      "request",
      "to",
      "url",
      "str_0",
      "with",
      "json",
      "data",
      "str_1"
    ],
    "code": [
      "requests",
      ".",
      "post",
      "(",
      "'str_0'",
      ",",
      "json",
      "=",
      "{",
      "str_1",
      "}",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "http://httpbin.org/post",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": "{'test': 'cheers'}",
        "quote": "`",
        "type": "str"
      },
      "{str_1}": {
        "value": "{'test': 'cheers'}",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      135,
      3,
      407,
      101,
      8,
      102,
      5,
      79,
      181,
      65,
      32
    ],
    "code_indx_copy": [
      85,
      22,
      379,
      1,
      29,
      8,
      140,
      19,
      52,
      37,
      53,
      17
    ],
    "code_indx_nocopy": [
      85,
      22,
      379,
      1,
      29,
      8,
      140,
      19,
      52,
      37,
      53,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "dictionary",
      "from",
      "list",
      "var_0",
      "if",
      "the",
      "value",
      "associated",
      "with",
      "its",
      "key",
      "str_0",
      "is",
      "in",
      "list",
      "var_1"
    ],
    "code": [
      "var_0",
      "=",
      "[",
      "x",
      "for",
      "x",
      "in",
      "var_0",
      "if",
      "x",
      "[",
      "'str_0'",
      "]",
      "not",
      "in",
      "var_1",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "link",
        "quote": "'",
        "type": "str"
      },
      "var_1": {
        "value": "b",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      25,
      58,
      4,
      26,
      150,
      18,
      143,
      286,
      79,
      91,
      23,
      5,
      152,
      24,
      4,
      63
    ],
    "code_indx_copy": [
      34,
      19,
      12,
      26,
      7,
      26,
      9,
      34,
      67,
      26,
      12,
      29,
      16,
      281,
      9,
      91,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      12,
      26,
      7,
      26,
      9,
      34,
      67,
      26,
      12,
      29,
      16,
      281,
      9,
      91,
      16
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "request",
      "parameter",
      "var_0",
      "in",
      "jinja2"
    ],
    "code": [
      "{",
      "{",
      "request",
      ".",
      "args",
      ".",
      "get",
      "(",
      "'var_0'",
      ")",
      "}",
      "}"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      3,
      101,
      372,
      26,
      24,
      465
    ],
    "code_indx_copy": [
      52,
      52,
      233,
      22,
      311,
      22,
      86,
      1,
      56,
      17,
      53,
      53
    ],
    "code_indx_nocopy": [
      52,
      52,
      233,
      22,
      311,
      22,
      86,
      1,
      56,
      17,
      53,
      53
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "list",
      "of",
      "integers",
      "between",
      "2",
      "values",
      "str_0",
      "and",
      "str_1"
    ],
    "code": [
      "list",
      "(",
      "range",
      "(",
      "11",
      ",",
      "17",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "11",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": "17",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      148,
      3,
      4,
      2,
      7,
      278,
      82,
      20,
      5,
      31,
      32
    ],
    "code_indx_copy": [
      33,
      1,
      104,
      1,
      380,
      8,
      524,
      17,
      17
    ],
    "code_indx_nocopy": [
      33,
      1,
      104,
      1,
      380,
      8,
      524,
      17,
      17
    ]
  },
  {
    "intent": [
      "change",
      "data",
      "type",
      "of",
      "data",
      "in",
      "column",
      "str_0",
      "of",
      "dataframe",
      "var_0",
      "into",
      "float",
      "and",
      "then",
      "to",
      "int"
    ],
    "code": [
      "var_0",
      "[",
      "'str_0'",
      "]",
      "=",
      "var_0",
      "[",
      "'str_0'",
      "]",
      ".",
      "astype",
      "(",
      "float",
      ")",
      ".",
      "astype",
      "(",
      "int",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "grade",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "data_df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      221,
      65,
      330,
      2,
      65,
      24,
      147,
      5,
      2,
      43,
      26,
      12,
      94,
      31,
      260,
      8,
      74
    ],
    "code_indx_copy": [
      34,
      12,
      29,
      16,
      19,
      34,
      12,
      29,
      16,
      22,
      242,
      1,
      225,
      17,
      22,
      242,
      1,
      20,
      17
    ],
    "code_indx_nocopy": [
      34,
      12,
      29,
      16,
      19,
      34,
      12,
      29,
      16,
      22,
      242,
      1,
      225,
      17,
      22,
      242,
      1,
      20,
      17
    ]
  },
  {
    "intent": [
      "find",
      "the",
      "list",
      "in",
      "a",
      "list",
      "of",
      "lists",
      "var_0",
      "with",
      "the",
      "max",
      "value",
      "of",
      "the",
      "second",
      "element",
      "."
    ],
    "code": [
      "max",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "x",
      "[",
      "1",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "alkaline_earth_values",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      47,
      18,
      4,
      24,
      3,
      4,
      2,
      30,
      26,
      79,
      18,
      258,
      143,
      2,
      18,
      118,
      49,
      159
    ],
    "code_indx_copy": [
      179,
      1,
      34,
      8,
      102,
      19,
      44,
      26,
      13,
      26,
      12,
      15,
      16,
      17
    ],
    "code_indx_nocopy": [
      179,
      1,
      34,
      8,
      102,
      19,
      44,
      26,
      13,
      26,
      12,
      15,
      16,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "leading",
      "and",
      "trailing",
      "zeros",
      "in",
      "the",
      "string",
      "str_0"
    ],
    "code": [
      "your_string",
      ".",
      "strip",
      "(",
      "'0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "your_Strip",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      268,
      465,
      31,
      300,
      465,
      24,
      18,
      14,
      5
    ],
    "code_indx_copy": [
      524,
      22,
      170,
      1,
      213,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      170,
      1,
      213,
      17
    ]
  },
  {
    "intent": [
      "generate",
      "a",
      "list",
      "of",
      "all",
      "unique",
      "pairs",
      "of",
      "integers",
      "in",
      "str_0"
    ],
    "code": [
      "list",
      "(",
      "permutations",
      "(",
      "list",
      "(",
      "range",
      "(",
      "9",
      ")",
      ")",
      ",",
      "2",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "range(9)",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      56,
      3,
      4,
      2,
      38,
      204,
      187,
      2,
      7,
      24,
      5
    ],
    "code_indx_copy": [
      33,
      1,
      381,
      1,
      33,
      1,
      104,
      1,
      371,
      17,
      17,
      8,
      82,
      17,
      17
    ],
    "code_indx_nocopy": [
      33,
      1,
      381,
      1,
      33,
      1,
      104,
      1,
      371,
      17,
      17,
      8,
      82,
      17,
      17
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "regular",
      "expression",
      "that",
      "matches",
      "the",
      "pattern",
      "str_0",
      "over",
      "multiple",
      "lines",
      "of",
      "text"
    ],
    "code": [
      "re",
      ".",
      "compile",
      "(",
      "'str_0'",
      ",",
      "re",
      ".",
      "MULTILINE",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "^(.+)(?:\\n|\\r\\n?)((?:(?:\\n|\\r\\n?).+)+)",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      148,
      3,
      250,
      226,
      195,
      108,
      18,
      54,
      5,
      408,
      6,
      395,
      2,
      267
    ],
    "code_indx_copy": [
      39,
      22,
      83,
      1,
      29,
      8,
      39,
      22,
      524,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      83,
      1,
      29,
      8,
      39,
      22,
      524,
      17
    ]
  },
  {
    "intent": [
      "regular",
      "expression",
      "str_0",
      "matching",
      "a",
      "multiline",
      "block",
      "of",
      "text"
    ],
    "code": [
      "re",
      ".",
      "compile",
      "(",
      "'str_0'",
      ",",
      "re",
      ".",
      "MULTILINE",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "^(.+)\\n((?:\\n.+)+)",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      250,
      226,
      5,
      81,
      3,
      465,
      465,
      2,
      267
    ],
    "code_indx_copy": [
      39,
      22,
      83,
      1,
      29,
      8,
      39,
      22,
      524,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      83,
      1,
      29,
      8,
      39,
      22,
      524,
      17
    ]
  },
  {
    "intent": [
      "run",
      "str_0",
      "file",
      "with",
      "python",
      "location",
      "str_1",
      "and",
      "arguments",
      "str_2",
      "as",
      "a",
      "subprocess"
    ],
    "code": [
      "call",
      "(",
      "[",
      "'str_1'",
      ",",
      "'str_0'",
      ",",
      "'str_2'",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "test2.py",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "path/to/python",
        "quote": "'",
        "type": "str"
      },
      "str_2": {
        "value": "neededArgumetGoHere",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      251,
      5,
      126,
      79,
      50,
      465,
      32,
      31,
      305,
      194,
      90,
      3,
      290
    ],
    "code_indx_copy": [
      230,
      1,
      12,
      63,
      8,
      29,
      8,
      150,
      16,
      17
    ],
    "code_indx_nocopy": [
      230,
      1,
      12,
      63,
      8,
      29,
      8,
      150,
      16,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "multidimensional",
      "list",
      "var_0",
      "by",
      "second",
      "and",
      "third",
      "column"
    ],
    "code": [
      "var_0",
      ".",
      "sort",
      "(",
      "key",
      "=",
      "operator",
      ".",
      "itemgetter",
      "(",
      "2",
      ",",
      "3",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      3,
      465,
      4,
      26,
      44,
      118,
      31,
      120,
      147
    ],
    "code_indx_copy": [
      34,
      22,
      124,
      1,
      102,
      19,
      127,
      22,
      128,
      1,
      82,
      8,
      54,
      17,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      124,
      1,
      102,
      19,
      127,
      22,
      128,
      1,
      82,
      8,
      54,
      17,
      17
    ]
  },
  {
    "intent": [
      "add",
      "a",
      "tuple",
      "with",
      "value",
      "var_0",
      "to",
      "a",
      "tuple",
      "var_1"
    ],
    "code": [
      "final_choices",
      "=",
      "(",
      "var_0",
      ",",
      ")",
      "+",
      "var_1"
    ],
    "slot_map": {
      "var_0": {
        "value": "another_choice",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "my_choices",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      60,
      3,
      113,
      79,
      143,
      26,
      8,
      3,
      113,
      63
    ],
    "code_indx_copy": [
      524,
      19,
      1,
      34,
      8,
      17,
      96,
      91
    ],
    "code_indx_nocopy": [
      524,
      19,
      1,
      34,
      8,
      17,
      96,
      91
    ]
  },
  {
    "intent": [
      "add",
      "a",
      "tuple",
      "with",
      "value",
      "var_0",
      "to",
      "a",
      "tuple",
      "var_1"
    ],
    "code": [
      "final_choices",
      "=",
      "(",
      "var_0",
      ",",
      ")",
      "+",
      "var_1"
    ],
    "slot_map": {
      "var_0": {
        "value": "another_choice",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "my_choices",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      60,
      3,
      113,
      79,
      143,
      26,
      8,
      3,
      113,
      63
    ],
    "code_indx_copy": [
      524,
      19,
      1,
      34,
      8,
      17,
      96,
      91
    ],
    "code_indx_nocopy": [
      524,
      19,
      1,
      34,
      8,
      17,
      96,
      91
    ]
  },
  {
    "intent": [
      "find",
      "the",
      "current",
      "directory"
    ],
    "code": [
      "os",
      ".",
      "getcwd",
      "(",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      47,
      18,
      179,
      175
    ],
    "code_indx_copy": [
      113,
      22,
      382,
      1,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      382,
      1,
      17
    ]
  },
  {
    "intent": [
      "find",
      "the",
      "current",
      "directory"
    ],
    "code": [
      "os",
      ".",
      "path",
      ".",
      "realpath",
      "(",
      "__file__",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      47,
      18,
      179,
      175
    ],
    "code_indx_copy": [
      113,
      22,
      114,
      22,
      188,
      1,
      383,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      114,
      22,
      188,
      1,
      383,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "directory",
      "name",
      "of",
      "var_0"
    ],
    "code": [
      "os",
      ".",
      "var_0",
      ".",
      "dirname",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "path",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      18,
      175,
      129,
      2,
      26
    ],
    "code_indx_copy": [
      113,
      22,
      34,
      22,
      378,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      34,
      22,
      378,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "canonical",
      "path",
      "of",
      "file",
      "var_0"
    ],
    "code": [
      "os",
      ".",
      "var_0",
      ".",
      "realpath",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "path",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      18,
      465,
      199,
      2,
      126,
      26
    ],
    "code_indx_copy": [
      113,
      22,
      34,
      22,
      188,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      34,
      22,
      188,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "find",
      "name",
      "of",
      "current",
      "directory"
    ],
    "code": [
      "dir_path",
      "=",
      "os",
      ".",
      "path",
      ".",
      "dirname",
      "(",
      "os",
      ".",
      "path",
      ".",
      "realpath",
      "(",
      "__file__",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      47,
      129,
      2,
      179,
      175
    ],
    "code_indx_copy": [
      524,
      19,
      113,
      22,
      114,
      22,
      378,
      1,
      113,
      22,
      114,
      22,
      188,
      1,
      383,
      17,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      113,
      22,
      114,
      22,
      378,
      1,
      113,
      22,
      114,
      22,
      188,
      1,
      383,
      17,
      17
    ]
  },
  {
    "intent": [
      "find",
      "current",
      "directory"
    ],
    "code": [
      "cwd",
      "=",
      "os",
      ".",
      "getcwd",
      "(",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      47,
      179,
      175
    ],
    "code_indx_copy": [
      524,
      19,
      113,
      22,
      382,
      1,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      113,
      22,
      382,
      1,
      17
    ]
  },
  {
    "intent": [
      "find",
      "the",
      "full",
      "path",
      "of",
      "current",
      "directory"
    ],
    "code": [
      "full_path",
      "=",
      "os",
      ".",
      "path",
      ".",
      "realpath",
      "(",
      "__file__",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      47,
      18,
      465,
      199,
      2,
      179,
      175
    ],
    "code_indx_copy": [
      524,
      19,
      113,
      22,
      114,
      22,
      188,
      1,
      383,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      113,
      22,
      114,
      22,
      188,
      1,
      383,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "array",
      "var_0",
      "in",
      "ascending",
      "order",
      "by",
      "values",
      "of",
      "the",
      "3rd",
      "column"
    ],
    "code": [
      "var_0",
      "[",
      "var_0",
      "[",
      ":",
      ",",
      "(",
      "2",
      ")",
      "]",
      ".",
      "argsort",
      "(",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "arr",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      85,
      26,
      24,
      119,
      162,
      44,
      20,
      2,
      18,
      465,
      147
    ],
    "code_indx_copy": [
      34,
      12,
      34,
      12,
      13,
      8,
      1,
      82,
      17,
      16,
      22,
      524,
      1,
      17,
      16
    ],
    "code_indx_nocopy": [
      34,
      12,
      34,
      12,
      13,
      8,
      1,
      82,
      17,
      16,
      22,
      524,
      1,
      17,
      16
    ]
  },
  {
    "intent": [
      "sort",
      "rows",
      "of",
      "numpy",
      "matrix",
      "var_0",
      "in",
      "ascending",
      "order",
      "according",
      "to",
      "all",
      "column",
      "values"
    ],
    "code": [
      "numpy",
      ".",
      "sort",
      "(",
      "var_0",
      ",",
      "axis",
      "=",
      "0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "arr",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      80,
      2,
      84,
      189,
      26,
      24,
      119,
      162,
      378,
      8,
      38,
      147,
      20
    ],
    "code_indx_copy": [
      147,
      22,
      124,
      1,
      34,
      8,
      42,
      19,
      43,
      17
    ],
    "code_indx_nocopy": [
      147,
      22,
      124,
      1,
      34,
      8,
      42,
      19,
      43,
      17
    ]
  },
  {
    "intent": [
      "split",
      "string",
      "str_0",
      "on",
      "space",
      "str_1",
      "and",
      "dot",
      "character",
      "str_2"
    ],
    "code": [
      "re",
      ".",
      "split",
      "(",
      "'[ .]'",
      ",",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "a b.c",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "",
        "quote": "\"",
        "type": "str"
      },
      "str_2": {
        "value": ".",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      138,
      14,
      5,
      139,
      400,
      32,
      31,
      409,
      202,
      194
    ],
    "code_indx_copy": [
      39,
      22,
      71,
      1,
      524,
      8,
      29,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      71,
      1,
      524,
      8,
      29,
      17
    ]
  },
  {
    "intent": [
      "copy",
      "the",
      "content",
      "of",
      "file",
      "str_0",
      "to",
      "file",
      "str_1"
    ],
    "code": [
      "shutil",
      ".",
      "copy",
      "(",
      "'str_0'",
      ",",
      "'str_1'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "file.txt",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "file2.txt",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      324,
      18,
      348,
      2,
      126,
      5,
      8,
      126,
      32
    ],
    "code_indx_copy": [
      384,
      22,
      385,
      1,
      29,
      8,
      63,
      17
    ],
    "code_indx_nocopy": [
      384,
      22,
      385,
      1,
      29,
      8,
      63,
      17
    ]
  },
  {
    "intent": [
      "generate",
      "random",
      "upper-case",
      "ascii",
      "string",
      "of",
      "12",
      "characters",
      "length"
    ],
    "code": [
      "print",
      "(",
      "''",
      ".",
      "join",
      "(",
      "choice",
      "(",
      "ascii_uppercase",
      ")",
      "for",
      "i",
      "in",
      "range",
      "(",
      "12",
      ")",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      56,
      190,
      465,
      384,
      14,
      2,
      465,
      98,
      209
    ],
    "code_indx_copy": [
      49,
      1,
      21,
      22,
      23,
      1,
      210,
      1,
      524,
      17,
      7,
      6,
      9,
      104,
      1,
      348,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      21,
      22,
      23,
      1,
      210,
      1,
      524,
      17,
      7,
      6,
      9,
      104,
      1,
      348,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "merge",
      "the",
      "elements",
      "in",
      "a",
      "list",
      "var_0",
      "sequentially"
    ],
    "code": [
      "[",
      "''",
      ".",
      "join",
      "(",
      "seq",
      ")",
      "for",
      "seq",
      "in",
      "zip",
      "(",
      "var_0",
      ",",
      "var_0",
      "[",
      "1",
      ":",
      "]",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "lst",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      247,
      18,
      1,
      24,
      3,
      4,
      26,
      465
    ],
    "code_indx_copy": [
      12,
      21,
      22,
      23,
      1,
      524,
      17,
      7,
      524,
      9,
      36,
      1,
      34,
      8,
      34,
      12,
      15,
      13,
      16,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      21,
      22,
      23,
      1,
      524,
      17,
      7,
      524,
      9,
      36,
      1,
      34,
      8,
      34,
      12,
      15,
      13,
      16,
      17,
      16
    ]
  },
  {
    "intent": [
      "rename",
      "column",
      "str_0",
      "in",
      "dataframe",
      "var_0",
      "to",
      "str_1"
    ],
    "code": [
      "var_0",
      ".",
      "rename",
      "(",
      "columns",
      "=",
      "{",
      "'str_0'",
      ":",
      "'str_1'",
      "}",
      ",",
      "inplace",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "gdp",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "data",
        "quote": "`",
        "type": "var"
      },
      "str_1": {
        "value": "log(gdp)",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      391,
      147,
      5,
      24,
      43,
      26,
      8,
      32
    ],
    "code_indx_copy": [
      34,
      22,
      341,
      1,
      192,
      19,
      52,
      29,
      13,
      63,
      53,
      8,
      279,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      341,
      1,
      192,
      19,
      52,
      29,
      13,
      63,
      53,
      8,
      279,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "beautiful",
      "soup",
      "html",
      "var_0",
      "to",
      "text"
    ],
    "code": [
      "print",
      "(",
      "var_0",
      ".",
      "get_text",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "soup",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      3,
      465,
      465,
      307,
      26,
      8,
      267
    ],
    "code_indx_copy": [
      49,
      1,
      34,
      22,
      524,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      34,
      22,
      524,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "list",
      "var_0",
      "in",
      "descending",
      "order",
      "based",
      "on",
      "the",
      "second",
      "element",
      "of",
      "each",
      "list",
      "inside",
      "listvar_0"
    ],
    "code": [
      "sorted",
      "(",
      "var_1",
      ",",
      "key",
      "=",
      "operator",
      ".",
      "itemgetter",
      "(",
      "1",
      ")",
      ",",
      "reverse",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "li",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "li",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      4,
      26,
      24,
      121,
      162,
      208,
      139,
      18,
      118,
      49,
      2,
      22,
      4,
      46,
      465
    ],
    "code_indx_copy": [
      101,
      1,
      91,
      8,
      102,
      19,
      127,
      22,
      128,
      1,
      15,
      17,
      8,
      129,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      91,
      8,
      102,
      19,
      127,
      22,
      128,
      1,
      15,
      17,
      8,
      129,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "replace",
      "value",
      "0",
      "with",
      "str_0",
      "and",
      "value",
      "1",
      "with",
      "str_1",
      "in",
      "column",
      "str_2",
      "of",
      "dataframe",
      "var_0"
    ],
    "code": [
      "var_0",
      "[",
      "'str_2'",
      "]",
      ".",
      "replace",
      "(",
      "[",
      "0",
      ",",
      "1",
      "]",
      ",",
      "[",
      "'str_0'",
      ",",
      "'str_1'",
      "]",
      ",",
      "inplace",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "Female",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "Male",
        "quote": "'",
        "type": "str"
      },
      "str_2": {
        "value": "sex",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "data",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      130,
      143,
      107,
      79,
      5,
      31,
      143,
      237,
      79,
      32,
      24,
      147,
      194,
      2,
      43,
      26
    ],
    "code_indx_copy": [
      34,
      12,
      150,
      16,
      22,
      107,
      1,
      12,
      43,
      8,
      15,
      16,
      8,
      12,
      29,
      8,
      63,
      16,
      8,
      279,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      34,
      12,
      150,
      16,
      22,
      107,
      1,
      12,
      43,
      8,
      15,
      16,
      8,
      12,
      29,
      8,
      63,
      16,
      8,
      279,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "split",
      "string",
      "str_0",
      "on",
      "punctuation"
    ],
    "code": [
      "re",
      ".",
      "split",
      "(",
      "'\\\\W+'",
      ",",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "Words, words, words.",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      138,
      14,
      5,
      139,
      100
    ],
    "code_indx_copy": [
      39,
      22,
      71,
      1,
      524,
      8,
      29,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      71,
      1,
      524,
      8,
      29,
      17
    ]
  },
  {
    "intent": [
      "extract",
      "first",
      "two",
      "substrings",
      "in",
      "string",
      "var_0",
      "that",
      "end",
      "in",
      "str_0",
      ",",
      "str_1",
      "or",
      "str_2"
    ],
    "code": [
      "re",
      ".",
      "match",
      "(",
      "'(.*?[.?!](?:\\\\s+.*?[.?!]){0,1})'",
      ",",
      "var_0",
      ")",
      ".",
      "group",
      "(",
      "1",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "phrase",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": ".",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": "?",
        "quote": "`",
        "type": "str"
      },
      "str_2": {
        "value": "!",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      104,
      151,
      29,
      410,
      24,
      14,
      26,
      195,
      295,
      24,
      5,
      62,
      32,
      344,
      194
    ],
    "code_indx_copy": [
      39,
      22,
      123,
      1,
      524,
      8,
      34,
      17,
      22,
      120,
      1,
      15,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      123,
      1,
      524,
      8,
      34,
      17,
      22,
      120,
      1,
      15,
      17
    ]
  },
  {
    "intent": [
      "split",
      "string",
      "var_0",
      "into",
      "strings",
      "of",
      "repeating",
      "elements"
    ],
    "code": [
      "print",
      "(",
      "[",
      "a",
      "for",
      "a",
      ",",
      "b",
      "in",
      "re",
      ".",
      "findall",
      "(",
      "'((\\\\w)\\\\2*)'",
      ",",
      "var_0",
      ")",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      138,
      14,
      26,
      12,
      259,
      2,
      465,
      1
    ],
    "code_indx_copy": [
      49,
      1,
      12,
      95,
      7,
      95,
      8,
      97,
      9,
      39,
      22,
      48,
      1,
      524,
      8,
      34,
      17,
      16,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      12,
      95,
      7,
      95,
      8,
      97,
      9,
      39,
      22,
      48,
      1,
      524,
      8,
      34,
      17,
      16,
      17
    ]
  },
  {
    "intent": [
      "create",
      "new",
      "string",
      "with",
      "unique",
      "characters",
      "from",
      "var_0",
      "seperated",
      "by",
      "str_0"
    ],
    "code": [
      "print",
      "(",
      "' '",
      ".",
      "join",
      "(",
      "OrderedDict",
      ".",
      "fromkeys",
      "(",
      "var_0",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      148,
      192,
      14,
      79,
      204,
      98,
      58,
      26,
      465,
      44,
      5
    ],
    "code_indx_copy": [
      49,
      1,
      108,
      22,
      23,
      1,
      288,
      22,
      524,
      1,
      34,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      108,
      22,
      23,
      1,
      288,
      22,
      524,
      1,
      34,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "set",
      "from",
      "string",
      "var_0",
      "to",
      "remove",
      "duplicate",
      "characters"
    ],
    "code": [
      "print",
      "(",
      "' '",
      ".",
      "join",
      "(",
      "set",
      "(",
      "var_0",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      148,
      3,
      59,
      58,
      14,
      26,
      8,
      268,
      411,
      98
    ],
    "code_indx_copy": [
      49,
      1,
      108,
      22,
      23,
      1,
      189,
      1,
      34,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      108,
      22,
      23,
      1,
      189,
      1,
      34,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "list",
      "folders",
      "in",
      "zip",
      "file",
      "str_0",
      "that",
      "ends",
      "with",
      "str_1"
    ],
    "code": [
      "[",
      "x",
      "for",
      "x",
      "in",
      "str_0",
      ".",
      "namelist",
      "(",
      ")",
      "if",
      "x",
      ".",
      "endswith",
      "(",
      "'str_1'",
      ")",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "file",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "/",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      4,
      465,
      24,
      28,
      126,
      5,
      195,
      173,
      79,
      32
    ],
    "code_indx_copy": [
      12,
      26,
      7,
      26,
      9,
      11,
      22,
      524,
      1,
      17,
      67,
      26,
      22,
      199,
      1,
      63,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      26,
      7,
      26,
      9,
      11,
      22,
      524,
      1,
      17,
      67,
      26,
      22,
      199,
      1,
      63,
      17,
      16
    ]
  },
  {
    "intent": [
      "find",
      "the",
      "count",
      "of",
      "a",
      "word",
      "str_0",
      "in",
      "a",
      "string",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "count",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "Hello",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "input_string",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      47,
      18,
      203,
      2,
      3,
      239,
      5,
      24,
      3,
      14,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      386,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      386,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "reduce",
      "the",
      "first",
      "element",
      "of",
      "list",
      "of",
      "strings",
      "var_0",
      "to",
      "a",
      "string",
      ",",
      "separated",
      "by",
      "str_0"
    ],
    "code": [
      "print",
      "(",
      "'str_0'",
      ".",
      "join",
      "(",
      "[",
      "item",
      "[",
      "0",
      "]",
      "for",
      "item",
      "in",
      "var_0",
      "]",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "data",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": ".",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      18,
      151,
      49,
      2,
      4,
      2,
      259,
      26,
      8,
      3,
      14,
      62,
      338,
      44,
      5
    ],
    "code_indx_copy": [
      49,
      1,
      29,
      22,
      23,
      1,
      12,
      387,
      12,
      43,
      16,
      7,
      387,
      9,
      34,
      16,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      29,
      22,
      23,
      1,
      12,
      387,
      12,
      43,
      16,
      7,
      387,
      9,
      34,
      16,
      17,
      17
    ]
  },
  {
    "intent": [
      "move",
      "the",
      "cursor",
      "of",
      "file",
      "pointer",
      "var_0",
      "at",
      "the",
      "end",
      "of",
      "the",
      "file",
      "."
    ],
    "code": [
      "var_0",
      ".",
      "seek",
      "(",
      "2",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "fh1",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      169,
      18,
      465,
      2,
      126,
      465,
      26,
      35,
      18,
      295,
      2,
      18,
      126,
      159
    ],
    "code_indx_copy": [
      34,
      22,
      524,
      1,
      82,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      524,
      1,
      82,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "flat",
      "list",
      "into",
      "a",
      "list",
      "of",
      "tuples",
      "of",
      "every",
      "two",
      "items",
      "in",
      "the",
      "list",
      ",",
      "in",
      "order"
    ],
    "code": [
      "print",
      "(",
      "zip",
      "(",
      "my_list",
      "[",
      "0",
      ":",
      ":",
      "2",
      "]",
      ",",
      "my_list",
      "[",
      "1",
      ":",
      ":",
      "2",
      "]",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      11,
      3,
      380,
      4,
      12,
      3,
      4,
      2,
      33,
      2,
      279,
      29,
      39,
      24,
      18,
      4,
      62,
      24,
      162
    ],
    "code_indx_copy": [
      49,
      1,
      36,
      1,
      240,
      12,
      43,
      13,
      13,
      82,
      16,
      8,
      240,
      12,
      15,
      13,
      13,
      82,
      16,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      36,
      1,
      240,
      12,
      43,
      13,
      13,
      82,
      16,
      8,
      240,
      12,
      15,
      13,
      13,
      82,
      16,
      17,
      17
    ]
  },
  {
    "intent": [
      "group",
      "a",
      "list",
      "of",
      "ints",
      "into",
      "a",
      "list",
      "of",
      "tuples",
      "of",
      "each",
      "2",
      "elements"
    ],
    "code": [
      "my_new_list",
      "=",
      "zip",
      "(",
      "my_list",
      "[",
      "0",
      ":",
      ":",
      "2",
      "]",
      ",",
      "my_list",
      "[",
      "1",
      ":",
      ":",
      "2",
      "]",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      383,
      3,
      4,
      2,
      465,
      12,
      3,
      4,
      2,
      33,
      2,
      22,
      82,
      1
    ],
    "code_indx_copy": [
      524,
      19,
      36,
      1,
      240,
      12,
      43,
      13,
      13,
      82,
      16,
      8,
      240,
      12,
      15,
      13,
      13,
      82,
      16,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      36,
      1,
      240,
      12,
      43,
      13,
      13,
      82,
      16,
      8,
      240,
      12,
      15,
      13,
      13,
      82,
      16,
      17
    ]
  },
  {
    "intent": [
      "set",
      "the",
      "default",
      "encoding",
      "to",
      "str_0"
    ],
    "code": [
      "sys",
      ".",
      "setdefaultencoding",
      "(",
      "'utf8'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "utf-8",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      59,
      18,
      233,
      298,
      8,
      5
    ],
    "code_indx_copy": [
      153,
      22,
      524,
      1,
      200,
      17
    ],
    "code_indx_nocopy": [
      153,
      22,
      524,
      1,
      200,
      17
    ]
  },
  {
    "intent": [
      "formate",
      "current",
      "date",
      "and",
      "time",
      "to",
      "a",
      "string",
      "using",
      "pattern",
      "str_0"
    ],
    "code": [
      "datetime",
      ".",
      "datetime",
      ".",
      "now",
      "(",
      ")",
      ".",
      "strftime",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "%Y-%m-%d %H:%M:%S",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      179,
      133,
      31,
      134,
      8,
      3,
      14,
      109,
      54,
      5
    ],
    "code_indx_copy": [
      27,
      22,
      27,
      22,
      294,
      1,
      17,
      22,
      65,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      27,
      22,
      27,
      22,
      294,
      1,
      17,
      22,
      65,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "retrieve",
      "arabic",
      "texts",
      "from",
      "string",
      "var_0"
    ],
    "code": [
      "print",
      "(",
      "re",
      ".",
      "findall",
      "(",
      "'[\\\\u0600-\\\\u06FF]+'",
      ",",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "my_string",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      371,
      465,
      465,
      58,
      14,
      26
    ],
    "code_indx_copy": [
      49,
      1,
      39,
      22,
      48,
      1,
      524,
      8,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      39,
      22,
      48,
      1,
      524,
      8,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "group",
      "dataframe",
      "var_0",
      "based",
      "on",
      "minute",
      "interval"
    ],
    "code": [
      "var_0",
      ".",
      "groupby",
      "(",
      "var_0",
      ".",
      "index",
      ".",
      "map",
      "(",
      "lambda",
      "t",
      ":",
      "t",
      ".",
      "minute",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      383,
      43,
      26,
      208,
      139,
      465,
      465
    ],
    "code_indx_copy": [
      34,
      22,
      157,
      1,
      34,
      22,
      160,
      22,
      24,
      1,
      44,
      45,
      13,
      45,
      22,
      533,
      17,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      157,
      1,
      34,
      22,
      160,
      22,
      24,
      1,
      44,
      45,
      13,
      45,
      22,
      524,
      17,
      17
    ]
  },
  {
    "intent": [
      "access",
      "value",
      "associated",
      "with",
      "key",
      "str_0",
      "of",
      "key",
      "str_1",
      "from",
      "dictionary",
      "var_0"
    ],
    "code": [
      "var_0",
      "[",
      "'str_1'",
      "]",
      "[",
      "'str_0'",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "American",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "Apple",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "dict",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      143,
      286,
      79,
      23,
      5,
      2,
      23,
      32,
      58,
      25,
      26
    ],
    "code_indx_copy": [
      34,
      12,
      63,
      16,
      12,
      29,
      16
    ],
    "code_indx_nocopy": [
      34,
      12,
      63,
      16,
      12,
      29,
      16
    ]
  },
  {
    "intent": [
      "remove",
      "all",
      "null",
      "values",
      "from",
      "columns",
      "str_0",
      ",",
      "str_1",
      "and",
      "str_2",
      "of",
      "dataframe",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "dropna",
      "(",
      "subset",
      "=",
      "[",
      "'str_0'",
      ",",
      "'str_1'",
      ",",
      "'str_2'",
      "]",
      ",",
      "how",
      "=",
      "'all'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "three",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "four",
        "quote": "'",
        "type": "str"
      },
      "str_2": {
        "value": "five",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "df2",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      38,
      465,
      20,
      58,
      61,
      5,
      62,
      32,
      31,
      194,
      2,
      43,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      388,
      1,
      524,
      19,
      12,
      29,
      8,
      63,
      8,
      150,
      16,
      8,
      243,
      19,
      389,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      388,
      1,
      524,
      19,
      12,
      29,
      8,
      63,
      8,
      150,
      16,
      8,
      243,
      19,
      389,
      17
    ]
  },
  {
    "intent": [
      "insert",
      "a",
      "list",
      "var_0",
      "at",
      "the",
      "front",
      "of",
      "list",
      "var_1"
    ],
    "code": [
      "var_1",
      ".",
      "insert",
      "(",
      "0",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "k",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      277,
      3,
      4,
      26,
      35,
      18,
      269,
      2,
      4,
      63
    ],
    "code_indx_copy": [
      91,
      22,
      319,
      1,
      43,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      91,
      22,
      319,
      1,
      43,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "insert",
      "elements",
      "of",
      "list",
      "var_0",
      "into",
      "list",
      "var_1",
      "at",
      "position",
      "var_2"
    ],
    "code": [
      "var_1",
      "=",
      "var_1",
      "[",
      ":",
      "var_2",
      "]",
      "+",
      "var_0",
      "+",
      "var_1",
      "[",
      "var_2",
      ":",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "k",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "n",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      277,
      1,
      2,
      4,
      26,
      12,
      4,
      63,
      35,
      323,
      64
    ],
    "code_indx_copy": [
      91,
      19,
      91,
      12,
      13,
      94,
      16,
      96,
      34,
      96,
      91,
      12,
      94,
      13,
      16
    ],
    "code_indx_nocopy": [
      91,
      19,
      91,
      12,
      13,
      94,
      16,
      96,
      34,
      96,
      91,
      12,
      94,
      13,
      16
    ]
  },
  {
    "intent": [
      "calculate",
      "the",
      "mean",
      "of",
      "the",
      "nonzero",
      "values",
      "'",
      "indices",
      "of",
      "dataframe",
      "var_0"
    ],
    "code": [
      "np",
      ".",
      "flatnonzero",
      "(",
      "x",
      ")",
      ".",
      "mean",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      252,
      18,
      412,
      2,
      18,
      465,
      20,
      310,
      326,
      2,
      43,
      26
    ],
    "code_indx_copy": [
      74,
      22,
      524,
      1,
      26,
      17,
      22,
      390,
      1,
      17
    ],
    "code_indx_nocopy": [
      74,
      22,
      524,
      1,
      26,
      17,
      22,
      390,
      1,
      17
    ]
  },
  {
    "intent": [
      "get",
      "date",
      "from",
      "dataframe",
      "var_0",
      "column",
      "str_0",
      "to",
      "column",
      "str_1"
    ],
    "code": [
      "var_0",
      "[",
      "'str_1'",
      "]",
      "=",
      "var_0",
      "[",
      "'str_0'",
      "]",
      ".",
      "dt",
      ".",
      "date"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "dates",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "just_date",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      133,
      58,
      43,
      26,
      147,
      5,
      8,
      147,
      32
    ],
    "code_indx_copy": [
      34,
      12,
      63,
      16,
      19,
      34,
      12,
      29,
      16,
      22,
      391,
      22,
      139
    ],
    "code_indx_nocopy": [
      34,
      12,
      63,
      16,
      19,
      34,
      12,
      29,
      16,
      22,
      391,
      22,
      139
    ]
  },
  {
    "intent": [
      "remove",
      "elements",
      "in",
      "list",
      "var_0",
      "from",
      "list",
      "var_1"
    ],
    "code": [
      "[",
      "x",
      "for",
      "x",
      "in",
      "var_1",
      "if",
      "x",
      "not",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "b",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      1,
      24,
      4,
      26,
      58,
      4,
      63
    ],
    "code_indx_copy": [
      12,
      26,
      7,
      26,
      9,
      91,
      67,
      26,
      281,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      12,
      26,
      7,
      26,
      9,
      91,
      67,
      26,
      281,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "join",
      "elements",
      "of",
      "each",
      "tuple",
      "in",
      "list",
      "var_0",
      "into",
      "one",
      "string"
    ],
    "code": [
      "[",
      "''",
      ".",
      "join",
      "(",
      "x",
      ")",
      "for",
      "x",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      281,
      1,
      2,
      22,
      113,
      24,
      4,
      26,
      12,
      303,
      14
    ],
    "code_indx_copy": [
      12,
      21,
      22,
      23,
      1,
      26,
      17,
      7,
      26,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      12,
      21,
      22,
      23,
      1,
      26,
      17,
      7,
      26,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "join",
      "items",
      "of",
      "each",
      "tuple",
      "in",
      "list",
      "of",
      "tuples",
      "var_0",
      "into",
      "a",
      "list",
      "of",
      "strings"
    ],
    "code": [
      "list",
      "(",
      "map",
      "(",
      "''",
      ".",
      "join",
      ",",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      281,
      39,
      2,
      22,
      113,
      24,
      4,
      2,
      33,
      26,
      12,
      3,
      4,
      2,
      259
    ],
    "code_indx_copy": [
      33,
      1,
      24,
      1,
      21,
      22,
      23,
      8,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      33,
      1,
      24,
      1,
      21,
      22,
      23,
      8,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "match",
      "blank",
      "lines",
      "in",
      "var_0",
      "with",
      "regular",
      "expressions"
    ],
    "code": [
      "re",
      ".",
      "split",
      "(",
      "'\\n\\\\s*\\n'",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      144,
      465,
      395,
      24,
      26,
      79,
      250,
      465
    ],
    "code_indx_copy": [
      39,
      22,
      71,
      1,
      524,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      71,
      1,
      524,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "merge",
      "a",
      "list",
      "of",
      "integers",
      "str_0",
      "into",
      "a",
      "single",
      "integer"
    ],
    "code": [
      "from",
      "functools",
      "import",
      "reduce",
      "\n",
      "reduce",
      "(",
      "lambda",
      "x",
      ",",
      "y",
      ":",
      "10",
      "*",
      "x",
      "+",
      "y",
      ",",
      "[",
      "str_0",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "[1, 2, 3, 4, 5]",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "[1, 2, 3, 4, 5]",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      247,
      3,
      4,
      2,
      7,
      5,
      12,
      3,
      9,
      10
    ],
    "code_indx_copy": [
      392,
      524,
      393,
      394,
      161,
      394,
      1,
      44,
      26,
      8,
      103,
      13,
      4,
      3,
      26,
      96,
      103,
      8,
      12,
      11,
      16,
      17
    ],
    "code_indx_nocopy": [
      392,
      524,
      393,
      394,
      161,
      394,
      1,
      44,
      26,
      8,
      103,
      13,
      4,
      3,
      26,
      96,
      103,
      8,
      12,
      11,
      16,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "float",
      "24322.34",
      "to",
      "comma-separated",
      "string"
    ],
    "code": [
      "\"\"\"{0:,.2f}\"\"\"",
      ".",
      "format",
      "(",
      "24322.34",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      11,
      94,
      465,
      8,
      465,
      14
    ],
    "code_indx_copy": [
      524,
      22,
      38,
      1,
      530,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      38,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "pass",
      "dictionary",
      "items",
      "var_0",
      "as",
      "keyword",
      "arguments",
      "in",
      "function",
      "var_1"
    ],
    "code": [
      "var_1",
      "(",
      "**",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "data",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "my_function",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      25,
      39,
      26,
      90,
      465,
      305,
      24,
      69,
      63
    ],
    "code_indx_copy": [
      91,
      1,
      5,
      34,
      17
    ],
    "code_indx_nocopy": [
      91,
      1,
      5,
      34,
      17
    ]
  },
  {
    "intent": [
      "get",
      "line",
      "count",
      "of",
      "file",
      "str_0"
    ],
    "code": [
      "sum",
      "(",
      "1",
      "for",
      "line",
      "in",
      "open",
      "(",
      "'str_0'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "myfile.txt",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      172,
      203,
      2,
      126,
      5
    ],
    "code_indx_copy": [
      0,
      1,
      15,
      7,
      315,
      9,
      105,
      1,
      29,
      17,
      17
    ],
    "code_indx_nocopy": [
      0,
      1,
      15,
      7,
      315,
      9,
      105,
      1,
      29,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "line",
      "count",
      "of",
      "file",
      "var_0"
    ],
    "code": [
      "def",
      "bufcount",
      "(",
      "var_0",
      ")",
      ":",
      "\n",
      "    ",
      "f",
      "=",
      "open",
      "(",
      "var_0",
      ")",
      "\n",
      "lines",
      "=",
      "0",
      "\n",
      "buf_size",
      "=",
      "1024",
      "*",
      "1024",
      "\n",
      "read_f",
      "=",
      "f",
      ".",
      "read",
      "\n",
      "buf",
      "=",
      "read_f",
      "(",
      "buf_size",
      ")",
      "\n",
      "while",
      "buf",
      ":",
      "\n",
      "        ",
      "lines",
      "+=",
      "buf",
      ".",
      "count",
      "(",
      "'\\n'",
      ")",
      "\n",
      "buf",
      "=",
      "read_f",
      "(",
      "buf_size",
      ")",
      "\n",
      "",
      "return",
      "lines",
      ""
    ],
    "slot_map": {
      "var_0": {
        "value": "filename",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      172,
      203,
      2,
      126,
      26
    ],
    "code_indx_copy": [
      524,
      524,
      1,
      34,
      17,
      13,
      161,
      216,
      190,
      19,
      105,
      1,
      34,
      17,
      161,
      395,
      19,
      43,
      161,
      396,
      19,
      524,
      3,
      524,
      161,
      397,
      19,
      190,
      22,
      106,
      161,
      398,
      19,
      397,
      1,
      396,
      17,
      161,
      524,
      398,
      13,
      161,
      368,
      395,
      524,
      398,
      22,
      386,
      1,
      133,
      17,
      161,
      398,
      19,
      397,
      1,
      396,
      17,
      161,
      218,
      118,
      395,
      218
    ],
    "code_indx_nocopy": [
      524,
      524,
      1,
      34,
      17,
      13,
      161,
      216,
      190,
      19,
      105,
      1,
      34,
      17,
      161,
      395,
      19,
      43,
      161,
      396,
      19,
      524,
      3,
      524,
      161,
      397,
      19,
      190,
      22,
      106,
      161,
      398,
      19,
      397,
      1,
      396,
      17,
      161,
      524,
      398,
      13,
      161,
      368,
      395,
      524,
      398,
      22,
      386,
      1,
      133,
      17,
      161,
      398,
      19,
      397,
      1,
      396,
      17,
      161,
      218,
      118,
      395,
      218
    ]
  },
  {
    "intent": [
      "round",
      "1123.456789",
      "to",
      "be",
      "an",
      "integer"
    ],
    "code": [
      "print",
      "(",
      "round",
      "(",
      "1123.456789",
      ",",
      "-",
      "1",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      253,
      465,
      8,
      362,
      225,
      10
    ],
    "code_indx_copy": [
      49,
      1,
      208,
      1,
      529,
      8,
      14,
      15,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      208,
      1,
      524,
      8,
      14,
      15,
      17,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "list",
      "var_0",
      "based",
      "on",
      "values",
      "from",
      "another",
      "list",
      "var_1"
    ],
    "code": [
      "[",
      "x",
      "for",
      "y",
      ",",
      "x",
      "in",
      "sorted",
      "(",
      "zip",
      "(",
      "var_1",
      ",",
      "var_0",
      ")",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "X",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "Y",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      4,
      26,
      208,
      139,
      20,
      58,
      176,
      4,
      63
    ],
    "code_indx_copy": [
      12,
      26,
      7,
      103,
      8,
      26,
      9,
      101,
      1,
      36,
      1,
      91,
      8,
      34,
      17,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      26,
      7,
      103,
      8,
      26,
      9,
      101,
      1,
      36,
      1,
      91,
      8,
      34,
      17,
      17,
      16
    ]
  },
  {
    "intent": [
      "sorting",
      "list",
      "str_0",
      "based",
      "on",
      "values",
      "from",
      "another",
      "list",
      "str_1"
    ],
    "code": [
      "[",
      "x",
      "for",
      "y",
      ",",
      "x",
      "in",
      "sorted",
      "(",
      "zip",
      "(",
      "str_1",
      ",",
      "str_0",
      ")",
      ")",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "X",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "Y",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      283,
      4,
      5,
      208,
      139,
      20,
      58,
      176,
      4,
      32
    ],
    "code_indx_copy": [
      12,
      26,
      7,
      103,
      8,
      26,
      9,
      101,
      1,
      36,
      1,
      37,
      8,
      11,
      17,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      26,
      7,
      103,
      8,
      26,
      9,
      101,
      1,
      36,
      1,
      37,
      8,
      11,
      17,
      17,
      16
    ]
  },
  {
    "intent": [
      "get",
      "equivalent",
      "week",
      "number",
      "from",
      "a",
      "date",
      "str_0",
      "using",
      "isocalendar"
    ],
    "code": [
      "datetime",
      ".",
      "date",
      "(",
      "2010",
      ",",
      "6",
      ",",
      "16",
      ")",
      ".",
      "isocalendar",
      "(",
      ")",
      "[",
      "1",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "2010/6/16",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      465,
      413,
      76,
      58,
      3,
      133,
      5,
      109,
      465
    ],
    "code_indx_copy": [
      27,
      22,
      139,
      1,
      347,
      8,
      249,
      8,
      271,
      17,
      22,
      537,
      1,
      17,
      12,
      15,
      16
    ],
    "code_indx_nocopy": [
      27,
      22,
      139,
      1,
      347,
      8,
      249,
      8,
      271,
      17,
      22,
      524,
      1,
      17,
      12,
      15,
      16
    ]
  },
  {
    "intent": [
      "select",
      "multiple",
      "ranges",
      "of",
      "columns",
      "1-10",
      ",",
      "15",
      ",",
      "17",
      ",",
      "and",
      "50-100",
      "in",
      "pandas",
      "dataframe",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "iloc",
      "[",
      ":",
      ",",
      "(",
      "np",
      ".",
      "r_",
      "[",
      "1",
      ":",
      "10",
      ",",
      "(",
      "15",
      ")",
      ",",
      "(",
      "17",
      ")",
      ",",
      "50",
      ":",
      "100",
      "]",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      78,
      6,
      465,
      2,
      61,
      465,
      62,
      465,
      62,
      465,
      62,
      31,
      465,
      24,
      42,
      43,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      399,
      12,
      13,
      8,
      1,
      74,
      22,
      524,
      12,
      15,
      13,
      4,
      8,
      1,
      400,
      17,
      8,
      1,
      537,
      17,
      8,
      401,
      13,
      267,
      16,
      17,
      16
    ],
    "code_indx_nocopy": [
      34,
      22,
      399,
      12,
      13,
      8,
      1,
      74,
      22,
      524,
      12,
      15,
      13,
      4,
      8,
      1,
      400,
      17,
      8,
      1,
      524,
      17,
      8,
      401,
      13,
      267,
      16,
      17,
      16
    ]
  },
  {
    "intent": [
      "apply",
      "two",
      "different",
      "aggregating",
      "functions",
      "var_0",
      "and",
      "var_1",
      "to",
      "the",
      "same",
      "column",
      "var_2",
      "in",
      "pandas",
      "data",
      "frame",
      "var_3"
    ],
    "code": [
      "var_3",
      ".",
      "groupby",
      "(",
      "'var_2'",
      ")",
      ".",
      "agg",
      "(",
      "{",
      "'returns'",
      ":",
      "[",
      "np",
      ".",
      "var_0",
      ",",
      "np",
      ".",
      "var_1",
      "]",
      "}",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "mean",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "sum",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "dummy",
        "quote": "`",
        "type": "var"
      },
      "var_3": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      401,
      29,
      465,
      465,
      465,
      26,
      31,
      63,
      8,
      18,
      36,
      147,
      64,
      24,
      42,
      65,
      66,
      67
    ],
    "code_indx_copy": [
      55,
      22,
      157,
      1,
      58,
      17,
      22,
      159,
      1,
      52,
      524,
      13,
      12,
      74,
      22,
      34,
      8,
      74,
      22,
      91,
      16,
      53,
      17
    ],
    "code_indx_nocopy": [
      55,
      22,
      157,
      1,
      58,
      17,
      22,
      159,
      1,
      52,
      524,
      13,
      12,
      74,
      22,
      34,
      8,
      74,
      22,
      91,
      16,
      53,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "string",
      "var_0",
      "to",
      "lowercase"
    ],
    "code": [
      "var_0",
      ".",
      "lower",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      14,
      26,
      8,
      207
    ],
    "code_indx_copy": [
      34,
      22,
      152,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      152,
      1,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "utf-8",
      "string",
      "var_0",
      "to",
      "lowercase"
    ],
    "code": [
      "var_0",
      ".",
      "decode",
      "(",
      "'utf-8'",
      ")",
      ".",
      "lower",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      183,
      14,
      26,
      8,
      207
    ],
    "code_indx_copy": [
      34,
      22,
      99,
      1,
      143,
      17,
      22,
      152,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      99,
      1,
      143,
      17,
      22,
      152,
      1,
      17
    ]
  },
  {
    "intent": [
      "how",
      "to",
      "download",
      "a",
      "file",
      "via",
      "ftp",
      "with",
      "python",
      "ftplib"
    ],
    "code": [
      "ftp",
      ".",
      "retrbinary",
      "(",
      "'RETR %s'",
      "%",
      "filename",
      ",",
      "file",
      ".",
      "write",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      77,
      8,
      414,
      3,
      126,
      465,
      465,
      79,
      50,
      465
    ],
    "code_indx_copy": [
      534,
      22,
      524,
      1,
      524,
      117,
      402,
      8,
      403,
      22,
      131,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      524,
      1,
      524,
      117,
      402,
      8,
      403,
      22,
      131,
      17
    ]
  },
  {
    "intent": [
      "handle",
      "the",
      "str_0",
      "exception",
      "for",
      "imaplib",
      "request",
      "to",
      "url",
      "var_0"
    ],
    "code": [
      "urlfetch",
      ".",
      "fetch",
      "(",
      "var_0",
      ",",
      "deadline",
      "=",
      "10",
      "*",
      "60",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "urlfetch_errors",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "url",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      18,
      5,
      389,
      21,
      465,
      101,
      8,
      102,
      26
    ],
    "code_indx_copy": [
      524,
      22,
      524,
      1,
      34,
      8,
      524,
      19,
      4,
      3,
      313,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      524,
      1,
      34,
      8,
      524,
      19,
      4,
      3,
      313,
      17
    ]
  },
  {
    "intent": [
      "output",
      "first",
      "100",
      "characters",
      "in",
      "a",
      "string",
      "var_0"
    ],
    "code": [
      "print",
      "(",
      "var_0",
      "[",
      "0",
      ":",
      "100",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "my_string",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      257,
      151,
      373,
      98,
      24,
      3,
      14,
      26
    ],
    "code_indx_copy": [
      49,
      1,
      34,
      12,
      43,
      13,
      267,
      16,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      34,
      12,
      43,
      13,
      267,
      16,
      17
    ]
  },
  {
    "intent": [
      "make",
      "matplotlib",
      "plot",
      "legend",
      "put",
      "marker",
      "in",
      "legend",
      "only",
      "once"
    ],
    "code": [
      "legend",
      "(",
      "numpoints",
      "=",
      "1",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      191,
      350,
      244,
      415,
      465,
      465,
      24,
      415,
      352,
      465
    ],
    "code_indx_copy": [
      404,
      1,
      524,
      19,
      15,
      17
    ],
    "code_indx_nocopy": [
      404,
      1,
      524,
      19,
      15,
      17
    ]
  },
  {
    "intent": [
      "get",
      "set",
      "intersection",
      "between",
      "dictionaries",
      "var_0",
      "and",
      "var_1"
    ],
    "code": [
      "dict",
      "(",
      "(",
      "x",
      ",",
      "set",
      "(",
      "y",
      ")",
      "&",
      "set",
      "(",
      "var_0",
      ".",
      "get",
      "(",
      "x",
      ",",
      "(",
      ")",
      ")",
      ")",
      ")",
      "for",
      "x",
      ",",
      "y",
      "in",
      "var_1",
      ".",
      "items",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "d1",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "d2",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      59,
      465,
      278,
      188,
      26,
      31,
      63
    ],
    "code_indx_copy": [
      70,
      1,
      1,
      26,
      8,
      189,
      1,
      103,
      17,
      226,
      189,
      1,
      34,
      22,
      86,
      1,
      26,
      8,
      1,
      17,
      17,
      17,
      17,
      7,
      26,
      8,
      103,
      9,
      91,
      22,
      35,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      70,
      1,
      1,
      26,
      8,
      189,
      1,
      103,
      17,
      226,
      189,
      1,
      34,
      22,
      86,
      1,
      26,
      8,
      1,
      17,
      17,
      17,
      17,
      7,
      26,
      8,
      103,
      9,
      91,
      22,
      35,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "csv",
      "file",
      "str_0",
      "into",
      "two-dimensional",
      "matrix"
    ],
    "code": [
      "numpy",
      ".",
      "loadtxt",
      "(",
      "open",
      "(",
      "'str_0'",
      ",",
      "'rb'",
      ")",
      ",",
      "delimiter",
      "=",
      "','",
      ",",
      "skiprows",
      "=",
      "1",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "test.csv",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      287,
      126,
      5,
      12,
      465,
      189
    ],
    "code_indx_copy": [
      147,
      22,
      524,
      1,
      105,
      1,
      29,
      8,
      155,
      17,
      8,
      263,
      19,
      73,
      8,
      524,
      19,
      15,
      17
    ],
    "code_indx_nocopy": [
      147,
      22,
      524,
      1,
      105,
      1,
      29,
      8,
      155,
      17,
      8,
      263,
      19,
      73,
      8,
      524,
      19,
      15,
      17
    ]
  },
  {
    "intent": [
      "filter",
      "the",
      "objects",
      "in",
      "django",
      "model",
      "str_0",
      "between",
      "date",
      "range",
      "str_1",
      "and",
      "str_2"
    ],
    "code": [
      "str_0",
      ".",
      "objects",
      ".",
      "filter",
      "(",
      "date__range",
      "=",
      "[",
      "'str_1'",
      ",",
      "'str_2'",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "Sample",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "2011-01-01",
        "quote": "`",
        "type": "str"
      },
      "str_2": {
        "value": "2011-01-31",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      217,
      18,
      178,
      24,
      87,
      313,
      5,
      278,
      133,
      123,
      32,
      31,
      194
    ],
    "code_indx_copy": [
      11,
      22,
      78,
      22,
      79,
      1,
      524,
      19,
      12,
      63,
      8,
      150,
      16,
      17
    ],
    "code_indx_nocopy": [
      11,
      22,
      78,
      22,
      79,
      1,
      524,
      19,
      12,
      63,
      8,
      150,
      16,
      17
    ]
  },
  {
    "intent": [
      "filter",
      "objects",
      "month",
      "wise",
      "in",
      "django",
      "model",
      "var_0",
      "for",
      "year",
      "str_0"
    ],
    "code": [
      "var_0",
      ".",
      "objects",
      ".",
      "filter",
      "(",
      "date__year",
      "=",
      "'str_0'",
      ",",
      "date__month",
      "=",
      "'01'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "Sample",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "2011",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      217,
      178,
      394,
      465,
      24,
      87,
      313,
      26,
      21,
      416,
      5
    ],
    "code_indx_copy": [
      34,
      22,
      78,
      22,
      79,
      1,
      524,
      19,
      29,
      8,
      524,
      19,
      524,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      78,
      22,
      79,
      1,
      524,
      19,
      29,
      8,
      524,
      19,
      524,
      17
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "dictionary",
      "str_0",
      "into",
      "another",
      "dictionary",
      "var_0",
      "field",
      "str_1"
    ],
    "code": [
      "var_0",
      "[",
      "'str_1'",
      "]",
      "=",
      "{",
      "str_0",
      "}"
    ],
    "slot_map": {
      "str_0": {
        "value": "{'spam': 5, 'ham': 6}",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "d",
        "quote": "`",
        "type": "var"
      },
      "str_1": {
        "value": "dict3",
        "quote": "'",
        "type": "str"
      },
      "{str_0}": {
        "value": "{'spam': 5, 'ham': 6}",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      148,
      3,
      25,
      5,
      12,
      176,
      25,
      26,
      312,
      32
    ],
    "code_indx_copy": [
      34,
      12,
      63,
      16,
      19,
      52,
      11,
      53
    ],
    "code_indx_nocopy": [
      34,
      12,
      63,
      16,
      19,
      52,
      11,
      53
    ]
  },
  {
    "intent": [
      "apply",
      "str_0",
      "to",
      "each",
      "row",
      "of",
      "a",
      "matrix",
      "var_0"
    ],
    "code": [
      "numpy",
      ".",
      "apply_along_axis",
      "(",
      "numpy",
      ".",
      "linalg",
      ".",
      "norm",
      ",",
      "1",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "numpy.linalg.norm",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      401,
      5,
      8,
      22,
      45,
      2,
      3,
      189,
      26
    ],
    "code_indx_copy": [
      147,
      22,
      524,
      1,
      147,
      22,
      524,
      22,
      524,
      8,
      15,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      147,
      22,
      524,
      1,
      147,
      22,
      524,
      22,
      524,
      8,
      15,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "merge",
      "dictionaries",
      "form",
      "array",
      "var_0",
      "in",
      "a",
      "single",
      "expression"
    ],
    "code": [
      "dict",
      "(",
      "(",
      "k",
      ",",
      "v",
      ")",
      "for",
      "d",
      "in",
      "var_0",
      "for",
      "k",
      ",",
      "v",
      "in",
      "list",
      "(",
      "d",
      ".",
      "items",
      "(",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "dicts",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      247,
      188,
      149,
      85,
      26,
      24,
      3,
      9,
      226
    ],
    "code_indx_copy": [
      70,
      1,
      1,
      89,
      8,
      90,
      17,
      7,
      2,
      9,
      34,
      7,
      89,
      8,
      90,
      9,
      33,
      1,
      2,
      22,
      35,
      1,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      70,
      1,
      1,
      89,
      8,
      90,
      17,
      7,
      2,
      9,
      34,
      7,
      89,
      8,
      90,
      9,
      33,
      1,
      2,
      22,
      35,
      1,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "escaped",
      "utf",
      "string",
      "to",
      "utf",
      "string",
      "in",
      "str_0"
    ],
    "code": [
      "print",
      "(",
      "'str_0'",
      ".",
      "decode",
      "(",
      "'string_escape'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "your string",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      465,
      465,
      14,
      8,
      465,
      14,
      24,
      5
    ],
    "code_indx_copy": [
      49,
      1,
      29,
      22,
      99,
      1,
      256,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      29,
      22,
      99,
      1,
      256,
      17,
      17
    ]
  },
  {
    "intent": [
      "counting",
      "the",
      "number",
      "of",
      "true",
      "booleans",
      "in",
      "a",
      "python",
      "list",
      "str_0"
    ],
    "code": [
      "sum",
      "(",
      "[",
      "str_0",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "[True, True, False, False, False, True]",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "[True, True, False, False, False, True]",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      18,
      76,
      2,
      367,
      465,
      24,
      3,
      50,
      4,
      5
    ],
    "code_indx_copy": [
      0,
      1,
      12,
      11,
      16,
      17
    ],
    "code_indx_nocopy": [
      0,
      1,
      12,
      11,
      16,
      17
    ]
  },
  {
    "intent": [
      "set",
      "the",
      "size",
      "of",
      "figure",
      "var_0",
      "in",
      "inches",
      "to",
      "width",
      "height",
      "of",
      "var_1",
      ",",
      "var_2"
    ],
    "code": [
      "var_0",
      ".",
      "set_size_inches",
      "(",
      "var_1",
      ",",
      "var_2",
      ",",
      "forward",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "fig",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "w",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "h",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      59,
      18,
      334,
      2,
      465,
      26,
      24,
      465,
      8,
      465,
      465,
      2,
      63,
      62,
      64
    ],
    "code_indx_copy": [
      34,
      22,
      524,
      1,
      91,
      8,
      94,
      8,
      524,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      524,
      1,
      91,
      8,
      94,
      8,
      524,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "format",
      "string",
      "with",
      "dict",
      "str_0",
      "with",
      "integer",
      "keys"
    ],
    "code": [
      "'hello there %(5)s'",
      "%",
      "{",
      "str_0",
      "}"
    ],
    "slot_map": {
      "str_0": {
        "value": "{'5': 'you'}",
        "quote": "`",
        "type": "str"
      },
      "{str_0}": {
        "value": "{'5': 'you'}",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      16,
      14,
      79,
      186,
      5,
      79,
      10,
      206
    ],
    "code_indx_copy": [
      524,
      117,
      52,
      11,
      53
    ],
    "code_indx_nocopy": [
      524,
      117,
      52,
      11,
      53
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "string",
      "of",
      "numbers",
      "var_0",
      "separated",
      "by",
      "str_0",
      "into",
      "a",
      "list",
      "of",
      "integers"
    ],
    "code": [
      "map",
      "(",
      "int",
      ",",
      "var_0",
      ".",
      "split",
      "(",
      "'str_0'",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "example_string",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": ",",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      3,
      14,
      2,
      97,
      26,
      338,
      44,
      5,
      12,
      3,
      4,
      2,
      7
    ],
    "code_indx_copy": [
      24,
      1,
      20,
      8,
      34,
      22,
      71,
      1,
      29,
      17,
      17
    ],
    "code_indx_nocopy": [
      24,
      1,
      20,
      8,
      34,
      22,
      71,
      1,
      29,
      17,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "string",
      "of",
      "numbers",
      "str_0",
      "separated",
      "by",
      "comma",
      "into",
      "a",
      "list",
      "of",
      "numbers"
    ],
    "code": [
      "[",
      "int",
      "(",
      "s",
      ")",
      "for",
      "s",
      "in",
      "str_0",
      ".",
      "split",
      "(",
      "','",
      ")",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "example_string",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      3,
      14,
      2,
      97,
      5,
      338,
      44,
      417,
      12,
      3,
      4,
      2,
      97
    ],
    "code_indx_copy": [
      12,
      20,
      1,
      181,
      17,
      7,
      181,
      9,
      11,
      22,
      71,
      1,
      73,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      20,
      1,
      181,
      17,
      7,
      181,
      9,
      11,
      22,
      71,
      1,
      73,
      17,
      16
    ]
  },
  {
    "intent": [
      "flatten",
      "list",
      "var_0"
    ],
    "code": [
      "var_0",
      "=",
      "[",
      "i",
      "[",
      "0",
      "]",
      "for",
      "i",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "x",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      4,
      26
    ],
    "code_indx_copy": [
      34,
      19,
      12,
      6,
      12,
      43,
      16,
      7,
      6,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      12,
      6,
      12,
      43,
      16,
      7,
      6,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "convert",
      "list",
      "var_0",
      "into",
      "a",
      "flat",
      "list"
    ],
    "code": [
      "y",
      "=",
      "map",
      "(",
      "operator",
      ".",
      "itemgetter",
      "(",
      "0",
      ")",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "x",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      4,
      26,
      12,
      3,
      380,
      4
    ],
    "code_indx_copy": [
      103,
      19,
      24,
      1,
      127,
      22,
      128,
      1,
      43,
      17,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      103,
      19,
      24,
      1,
      127,
      22,
      128,
      1,
      43,
      17,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "list",
      "var_0",
      "of",
      "the",
      "first",
      "element",
      "of",
      "every",
      "tuple",
      "in",
      "list",
      "var_1"
    ],
    "code": [
      "var_0",
      "=",
      "[",
      "i",
      "[",
      "0",
      "]",
      "for",
      "i",
      "in",
      "var_1",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "y",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "x",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      3,
      4,
      26,
      2,
      18,
      151,
      49,
      2,
      279,
      113,
      24,
      4,
      63
    ],
    "code_indx_copy": [
      34,
      19,
      12,
      6,
      12,
      43,
      16,
      7,
      6,
      9,
      91,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      12,
      6,
      12,
      43,
      16,
      7,
      6,
      9,
      91,
      16
    ]
  },
  {
    "intent": [
      "extract",
      "all",
      "the",
      "values",
      "of",
      "a",
      "specific",
      "key",
      "named",
      "str_0",
      "from",
      "a",
      "list",
      "of",
      "dictionaries"
    ],
    "code": [
      "results",
      "=",
      "[",
      "item",
      "[",
      "'value'",
      "]",
      "for",
      "item",
      "in",
      "test_data",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "values",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      104,
      38,
      18,
      20,
      2,
      3,
      390,
      23,
      320,
      5,
      58,
      3,
      4,
      2,
      188
    ],
    "code_indx_copy": [
      524,
      19,
      12,
      387,
      12,
      405,
      16,
      7,
      387,
      9,
      524,
      16
    ],
    "code_indx_nocopy": [
      524,
      19,
      12,
      387,
      12,
      405,
      16,
      7,
      387,
      9,
      524,
      16
    ]
  },
  {
    "intent": [
      "get",
      "current",
      "datetime",
      "in",
      "iso",
      "format"
    ],
    "code": [
      "datetime",
      ".",
      "datetime",
      ".",
      "now",
      "(",
      ")",
      ".",
      "isoformat",
      "(",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      17,
      179,
      13,
      24,
      465,
      16
    ],
    "code_indx_copy": [
      27,
      22,
      27,
      22,
      294,
      1,
      17,
      22,
      349,
      1,
      17
    ],
    "code_indx_nocopy": [
      27,
      22,
      27,
      22,
      294,
      1,
      17,
      22,
      349,
      1,
      17
    ]
  },
  {
    "intent": [
      "get",
      "utc",
      "datetime",
      "in",
      "iso",
      "format"
    ],
    "code": [
      "datetime",
      ".",
      "datetime",
      ".",
      "utcnow",
      "(",
      ")",
      ".",
      "isoformat",
      "(",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      17,
      180,
      13,
      24,
      465,
      16
    ],
    "code_indx_copy": [
      27,
      22,
      27,
      22,
      138,
      1,
      17,
      22,
      349,
      1,
      17
    ],
    "code_indx_nocopy": [
      27,
      22,
      27,
      22,
      138,
      1,
      17,
      22,
      349,
      1,
      17
    ]
  },
  {
    "intent": [
      "merge",
      "all",
      "columns",
      "in",
      "dataframe",
      "var_0",
      "into",
      "one",
      "column"
    ],
    "code": [
      "var_0",
      ".",
      "apply",
      "(",
      "' '",
      ".",
      "join",
      ",",
      "axis",
      "=",
      "0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      247,
      38,
      61,
      24,
      43,
      26,
      12,
      303,
      147
    ],
    "code_indx_copy": [
      34,
      22,
      59,
      1,
      108,
      22,
      23,
      8,
      42,
      19,
      43,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      59,
      1,
      108,
      22,
      23,
      8,
      42,
      19,
      43,
      17
    ]
  },
  {
    "intent": [
      "pandas",
      "subtract",
      "a",
      "row",
      "from",
      "dataframe",
      "var_0",
      "from",
      "dataframe",
      "var_1"
    ],
    "code": [
      "pd",
      ".",
      "DataFrame",
      "(",
      "var_1",
      ".",
      "values",
      "-",
      "var_0",
      ".",
      "values",
      ",",
      "columns",
      "=",
      "var_1",
      ".",
      "columns",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df2",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      42,
      418,
      3,
      45,
      58,
      43,
      26,
      58,
      43,
      63
    ],
    "code_indx_copy": [
      162,
      22,
      164,
      1,
      91,
      22,
      166,
      14,
      34,
      22,
      166,
      8,
      192,
      19,
      91,
      22,
      192,
      17
    ],
    "code_indx_nocopy": [
      162,
      22,
      164,
      1,
      91,
      22,
      166,
      14,
      34,
      22,
      166,
      8,
      192,
      19,
      91,
      22,
      192,
      17
    ]
  },
  {
    "intent": [
      "read",
      "file",
      "str_0",
      "using",
      "universal",
      "newline",
      "mode",
      "str_1"
    ],
    "code": [
      "print",
      "(",
      "open",
      "(",
      "'str_0'",
      ",",
      "'str_1'",
      ")",
      ".",
      "read",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "myfile.txt",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "U",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      124,
      126,
      5,
      109,
      465,
      397,
      285,
      32
    ],
    "code_indx_copy": [
      49,
      1,
      105,
      1,
      29,
      8,
      63,
      17,
      22,
      106,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      105,
      1,
      29,
      8,
      63,
      17,
      22,
      106,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "print",
      "line",
      "var_0",
      "from",
      "text",
      "file",
      "with",
      "str_0",
      "format"
    ],
    "code": [
      "print",
      "(",
      "var_0",
      ".",
      "decode",
      "(",
      "'str_0'",
      ")",
      ".",
      "split",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "line",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "utf-16-le",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      166,
      172,
      26,
      58,
      267,
      126,
      79,
      5,
      16
    ],
    "code_indx_copy": [
      49,
      1,
      34,
      22,
      99,
      1,
      29,
      17,
      22,
      71,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      34,
      22,
      99,
      1,
      29,
      17,
      22,
      71,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "open",
      "a",
      "text",
      "file",
      "str_0",
      "in",
      "io",
      "module",
      "with",
      "encoding",
      "str_1"
    ],
    "code": [
      "file",
      "=",
      "io",
      ".",
      "open",
      "(",
      "'str_0'",
      ",",
      "'r'",
      ",",
      "encoding",
      "=",
      "'str_1'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "data.txt",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": "utf-16-le",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      284,
      3,
      267,
      126,
      5,
      24,
      465,
      342,
      79,
      298,
      32
    ],
    "code_indx_copy": [
      403,
      19,
      534,
      22,
      105,
      1,
      29,
      8,
      365,
      8,
      537,
      19,
      63,
      17
    ],
    "code_indx_nocopy": [
      403,
      19,
      524,
      22,
      105,
      1,
      29,
      8,
      365,
      8,
      524,
      19,
      63,
      17
    ]
  },
  {
    "intent": [
      "join",
      "data",
      "of",
      "dataframe",
      "var_0",
      "with",
      "data",
      "in",
      "dataframe",
      "var_1",
      "based",
      "on",
      "similar",
      "values",
      "of",
      "column",
      "str_0",
      "in",
      "both",
      "dataframes"
    ],
    "code": [
      "s1",
      "=",
      "pd",
      ".",
      "merge",
      "(",
      "var_0",
      ",",
      "var_1",
      ",",
      "how",
      "=",
      "'inner'",
      ",",
      "on",
      "=",
      "[",
      "'str_0'",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df1",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "df2",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "user_id",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      281,
      65,
      2,
      43,
      26,
      79,
      65,
      24,
      43,
      63,
      208,
      139,
      465,
      20,
      2,
      147,
      5,
      24,
      465,
      248
    ],
    "code_indx_copy": [
      524,
      19,
      162,
      22,
      220,
      1,
      34,
      8,
      91,
      8,
      243,
      19,
      524,
      8,
      244,
      19,
      12,
      29,
      16,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      162,
      22,
      220,
      1,
      34,
      8,
      91,
      8,
      243,
      19,
      524,
      8,
      244,
      19,
      12,
      29,
      16,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "string",
      "var_0",
      "is",
      "utf-8",
      "encoded"
    ],
    "code": [
      "var_0",
      ".",
      "decode",
      "(",
      "'utf8'",
      ")",
      ".",
      "encode",
      "(",
      "'utf8'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "foo",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      234,
      150,
      14,
      26,
      152,
      183,
      296
    ],
    "code_indx_copy": [
      34,
      22,
      99,
      1,
      200,
      17,
      22,
      239,
      1,
      200,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      99,
      1,
      200,
      17,
      22,
      239,
      1,
      200,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "dimensions",
      "of",
      "numpy",
      "array",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "shape"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      18,
      419,
      2,
      84,
      85,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      223
    ],
    "code_indx_nocopy": [
      34,
      22,
      223
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "dimensions",
      "of",
      "numpy",
      "array",
      "var_0"
    ],
    "code": [
      "N",
      ".",
      "shape",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      18,
      419,
      2,
      84,
      85,
      26
    ],
    "code_indx_copy": [
      524,
      22,
      223,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      223,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "dimensions",
      "of",
      "array",
      "var_0"
    ],
    "code": [
      "N",
      ".",
      "shape",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      18,
      419,
      2,
      85,
      26
    ],
    "code_indx_copy": [
      524,
      22,
      223,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      223,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "dimensions",
      "of",
      "numpy",
      "array",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "shape"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      18,
      419,
      2,
      84,
      85,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      223
    ],
    "code_indx_nocopy": [
      34,
      22,
      223
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "indices",
      "of",
      "tuples",
      "in",
      "list",
      "of",
      "tuples",
      "var_0",
      "where",
      "the",
      "first",
      "value",
      "is",
      "53"
    ],
    "code": [
      "[",
      "i",
      "for",
      "i",
      ",",
      "v",
      "in",
      "enumerate",
      "(",
      "var_0",
      ")",
      "if",
      "v",
      "[",
      "0",
      "]",
      "==",
      "53",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "L",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      18,
      326,
      2,
      33,
      24,
      4,
      2,
      33,
      26,
      155,
      18,
      151,
      143,
      152,
      465
    ],
    "code_indx_copy": [
      12,
      6,
      7,
      6,
      8,
      90,
      9,
      10,
      1,
      34,
      17,
      67,
      90,
      12,
      43,
      16,
      76,
      543,
      16
    ],
    "code_indx_nocopy": [
      12,
      6,
      7,
      6,
      8,
      90,
      9,
      10,
      1,
      34,
      17,
      67,
      90,
      12,
      43,
      16,
      76,
      524,
      16
    ]
  },
  {
    "intent": [
      "convert",
      "string",
      "of",
      "bytes",
      "str_0",
      "into",
      "an",
      "int"
    ],
    "code": [
      "struct",
      ".",
      "unpack",
      "(",
      "'<L'",
      ",",
      "'str_0'",
      ")",
      "[",
      "0",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "y\u00cc\u00a6\u00bb",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      14,
      2,
      420,
      5,
      12,
      225,
      74
    ],
    "code_indx_copy": [
      317,
      22,
      406,
      1,
      524,
      8,
      29,
      17,
      12,
      43,
      16
    ],
    "code_indx_nocopy": [
      317,
      22,
      406,
      1,
      524,
      8,
      29,
      17,
      12,
      43,
      16
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "first",
      "row",
      ",",
      "second",
      "column",
      ";",
      "second",
      "row",
      ",",
      "first",
      "column",
      ",",
      "and",
      "first",
      "row",
      "third",
      "column",
      "values",
      "of",
      "numpy",
      "array",
      "var_0"
    ],
    "code": [
      "var_0",
      "[",
      "[",
      "0",
      ",",
      "1",
      ",",
      "1",
      "]",
      ",",
      "[",
      "1",
      ",",
      "0",
      ",",
      "2",
      "]",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "arr",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      18,
      151,
      45,
      62,
      118,
      147,
      465,
      118,
      45,
      62,
      151,
      147,
      62,
      31,
      151,
      45,
      120,
      147,
      20,
      2,
      84,
      85,
      26
    ],
    "code_indx_copy": [
      34,
      12,
      12,
      43,
      8,
      15,
      8,
      15,
      16,
      8,
      12,
      15,
      8,
      43,
      8,
      82,
      16,
      16
    ],
    "code_indx_nocopy": [
      34,
      12,
      12,
      43,
      8,
      15,
      8,
      15,
      16,
      8,
      12,
      15,
      8,
      43,
      8,
      82,
      16,
      16
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "list",
      "with",
      "permutations",
      "of",
      "string",
      "str_0"
    ],
    "code": [
      "list",
      "(",
      "powerset",
      "(",
      "'str_0'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "abcd",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      148,
      3,
      4,
      79,
      153,
      2,
      14,
      5
    ],
    "code_indx_copy": [
      33,
      1,
      524,
      1,
      29,
      17,
      17
    ],
    "code_indx_nocopy": [
      33,
      1,
      524,
      1,
      29,
      17,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "string",
      "to",
      "boolean",
      "from",
      "defined",
      "set",
      "of",
      "strings"
    ],
    "code": [
      "s",
      "in",
      "[",
      "'true'",
      ",",
      "'1'",
      ",",
      "'t'",
      ",",
      "'y'",
      ",",
      "'yes'",
      ",",
      "'yeah'",
      ",",
      "'yup'",
      ",",
      "'certainly'",
      ",",
      "'uh-huh'",
      "]"
    ],
    "slot_map": {},
    "intent_indx": [
      11,
      14,
      8,
      366,
      58,
      465,
      59,
      2,
      259
    ],
    "code_indx_copy": [
      181,
      9,
      12,
      524,
      8,
      195,
      8,
      524,
      8,
      524,
      8,
      524,
      8,
      524,
      8,
      524,
      8,
      524,
      8,
      524,
      16
    ],
    "code_indx_nocopy": [
      181,
      9,
      12,
      524,
      8,
      195,
      8,
      524,
      8,
      524,
      8,
      524,
      8,
      524,
      8,
      524,
      8,
      524,
      8,
      524,
      16
    ]
  },
  {
    "intent": [
      "replace",
      "special",
      "characters",
      "in",
      "url",
      "str_0",
      "using",
      "the",
      "str_1",
      "escape"
    ],
    "code": [
      "urllib",
      ".",
      "parse",
      ".",
      "quote",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "http://spam.com/go/",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "%xx",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      130,
      465,
      98,
      24,
      102,
      5,
      109,
      18,
      32,
      297
    ],
    "code_indx_copy": [
      232,
      22,
      236,
      22,
      524,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      232,
      22,
      236,
      22,
      524,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "save",
      "plot",
      "var_0",
      "as",
      "svg",
      "file",
      "str_0"
    ],
    "code": [
      "var_0",
      ".",
      "savefig",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "plt",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "test.svg",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      333,
      244,
      26,
      90,
      465,
      126,
      5
    ],
    "code_indx_copy": [
      34,
      22,
      407,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      407,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "count",
      "the",
      "number",
      "of",
      "elements",
      "in",
      "array",
      "var_0"
    ],
    "code": [
      "len",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "myArray",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      203,
      18,
      76,
      2,
      1,
      24,
      85,
      26
    ],
    "code_indx_copy": [
      32,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      32,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "insert",
      "directory",
      "str_0",
      "to",
      "current",
      "directory"
    ],
    "code": [
      "sys",
      ".",
      "path",
      ".",
      "insert",
      "(",
      "0",
      ",",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "./path/to/your/modules/",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      277,
      175,
      5,
      8,
      179,
      175
    ],
    "code_indx_copy": [
      153,
      22,
      114,
      22,
      319,
      1,
      43,
      8,
      29,
      17
    ],
    "code_indx_nocopy": [
      153,
      22,
      114,
      22,
      319,
      1,
      43,
      8,
      29,
      17
    ]
  },
  {
    "intent": [
      "how",
      "to",
      "plot",
      "with",
      "x-axis",
      "at",
      "the",
      "top",
      "of",
      "the",
      "figure",
      "?"
    ],
    "code": [
      "ax",
      ".",
      "xaxis",
      ".",
      "set_ticks_position",
      "(",
      "'top'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      77,
      8,
      244,
      79,
      317,
      35,
      18,
      421,
      2,
      18,
      465,
      52
    ],
    "code_indx_copy": [
      408,
      22,
      409,
      22,
      524,
      1,
      410,
      17
    ],
    "code_indx_nocopy": [
      408,
      22,
      409,
      22,
      524,
      1,
      410,
      17
    ]
  },
  {
    "intent": [
      "insert",
      "records",
      "in",
      "bulk",
      "from",
      "str_0",
      "of",
      "str_1",
      "db",
      "to",
      "str_0",
      "of",
      "sqlite3",
      "var_0",
      "object"
    ],
    "code": [
      "var_0",
      ".",
      "execute",
      "(",
      "'INSERT OR REPLACE INTO master.table1 SELECT * FROM table1'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "table1",
        "quote": "\"",
        "type": "str"
      },
      "str_1": {
        "value": "master",
        "quote": "\"",
        "type": "str"
      },
      "str_2": {
        "value": "table1",
        "quote": "\"",
        "type": "str"
      },
      "var_0": {
        "value": "cursor",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      277,
      374,
      24,
      465,
      58,
      5,
      2,
      32,
      465,
      8,
      5,
      2,
      465,
      26,
      15
    ],
    "code_indx_copy": [
      34,
      22,
      411,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      411,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "match",
      "regex",
      "str_0",
      "on",
      "string",
      "str_1"
    ],
    "code": [
      "re",
      ".",
      "match",
      "(",
      "'str_0'",
      ",",
      "'str_1'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "[a-zA-Z][\\w-]*\\Z",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "A\n",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      144,
      40,
      5,
      139,
      14,
      32
    ],
    "code_indx_copy": [
      39,
      22,
      123,
      1,
      29,
      8,
      63,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      123,
      1,
      29,
      8,
      63,
      17
    ]
  },
  {
    "intent": [
      "match",
      "regex",
      "str_0",
      "on",
      "string",
      "str_1"
    ],
    "code": [
      "re",
      ".",
      "match",
      "(",
      "'str_0'",
      ",",
      "'str_1'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "[a-zA-Z][\\w-]*$",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "!A_B",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      144,
      40,
      5,
      139,
      14,
      32
    ],
    "code_indx_copy": [
      39,
      22,
      123,
      1,
      29,
      8,
      63,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      123,
      1,
      29,
      8,
      63,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "hex",
      "string",
      "str_0",
      "to",
      "integer"
    ],
    "code": [
      "int",
      "(",
      "'str_0'",
      ",",
      "16",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "deadbeef",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      116,
      14,
      5,
      8,
      10
    ],
    "code_indx_copy": [
      20,
      1,
      29,
      8,
      271,
      17
    ],
    "code_indx_nocopy": [
      20,
      1,
      29,
      8,
      271,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "hex",
      "string",
      "str_0",
      "to",
      "integer"
    ],
    "code": [
      "int",
      "(",
      "'str_0'",
      ",",
      "16",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "a",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      116,
      14,
      5,
      8,
      10
    ],
    "code_indx_copy": [
      20,
      1,
      29,
      8,
      271,
      17
    ],
    "code_indx_nocopy": [
      20,
      1,
      29,
      8,
      271,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "hex",
      "string",
      "str_0",
      "to",
      "integer"
    ],
    "code": [
      "int",
      "(",
      "'str_0'",
      ",",
      "16",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "0xa",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      116,
      14,
      5,
      8,
      10
    ],
    "code_indx_copy": [
      20,
      1,
      29,
      8,
      271,
      17
    ],
    "code_indx_nocopy": [
      20,
      1,
      29,
      8,
      271,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "hex",
      "string",
      "var_0",
      "to",
      "integer"
    ],
    "code": [
      "int",
      "(",
      "var_0",
      ",",
      "16",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      116,
      14,
      26,
      8,
      10
    ],
    "code_indx_copy": [
      20,
      1,
      34,
      8,
      271,
      17
    ],
    "code_indx_nocopy": [
      20,
      1,
      34,
      8,
      271,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "hex",
      "string",
      "var_0",
      "to",
      "int"
    ],
    "code": [
      "int",
      "(",
      "var_0",
      ",",
      "16",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "hexString",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      116,
      14,
      26,
      8,
      74
    ],
    "code_indx_copy": [
      20,
      1,
      34,
      8,
      271,
      17
    ],
    "code_indx_nocopy": [
      20,
      1,
      34,
      8,
      271,
      17
    ]
  },
  {
    "intent": [
      "print",
      "variable",
      "str_0",
      "without",
      "spaces"
    ],
    "code": [
      "print",
      "(",
      "'Value is \"'",
      "+",
      "str",
      "(",
      "str_0",
      ")",
      "+",
      "'\"'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "value",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      166,
      95,
      5,
      103,
      132
    ],
    "code_indx_copy": [
      49,
      1,
      524,
      96,
      25,
      1,
      11,
      17,
      96,
      524,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      524,
      96,
      25,
      1,
      11,
      17,
      96,
      524,
      17
    ]
  },
  {
    "intent": [
      "print",
      "a",
      "string",
      "var_0",
      "with",
      "string",
      "formatting"
    ],
    "code": [
      "print",
      "(",
      "'Value is \"{}\"'",
      ".",
      "format",
      "(",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "value",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      166,
      3,
      14,
      26,
      79,
      14,
      167
    ],
    "code_indx_copy": [
      49,
      1,
      524,
      22,
      38,
      1,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      524,
      22,
      38,
      1,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "jinja",
      "join",
      "elements",
      "of",
      "array",
      "var_0",
      "with",
      "space",
      "string",
      "str_0"
    ],
    "code": [
      "{",
      "{",
      "var_0",
      "|",
      "join",
      "(",
      "' '",
      ")",
      "}",
      "}"
    ],
    "slot_map": {
      "var_0": {
        "value": "tags",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      281,
      1,
      2,
      85,
      26,
      79,
      400,
      14,
      5
    ],
    "code_indx_copy": [
      52,
      52,
      34,
      412,
      23,
      1,
      108,
      17,
      53,
      53
    ],
    "code_indx_nocopy": [
      52,
      52,
      34,
      412,
      23,
      1,
      108,
      17,
      53,
      53
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "list",
      "of",
      "locally",
      "installed",
      "python",
      "modules"
    ],
    "code": [
      "help",
      "(",
      "'modules'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      17,
      3,
      4,
      2,
      465,
      465,
      50,
      465
    ],
    "code_indx_copy": [
      524,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      524,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "get",
      "only",
      "first",
      "element",
      "in",
      "each",
      "of",
      "the",
      "innermost",
      "of",
      "the",
      "multidimensional",
      "list",
      "var_0"
    ],
    "code": [
      "[",
      "[",
      "[",
      "x",
      "[",
      "0",
      "]",
      "]",
      "for",
      "x",
      "in",
      "var_0",
      "[",
      "i",
      "]",
      "]",
      "for",
      "i",
      "in",
      "range",
      "(",
      "len",
      "(",
      "var_0",
      ")",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "listD",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      352,
      151,
      49,
      24,
      22,
      2,
      18,
      465,
      2,
      18,
      465,
      4,
      26
    ],
    "code_indx_copy": [
      12,
      12,
      12,
      26,
      12,
      43,
      16,
      16,
      7,
      26,
      9,
      34,
      12,
      6,
      16,
      16,
      7,
      6,
      9,
      104,
      1,
      32,
      1,
      34,
      17,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      12,
      12,
      26,
      12,
      43,
      16,
      16,
      7,
      26,
      9,
      34,
      12,
      6,
      16,
      16,
      7,
      6,
      9,
      104,
      1,
      32,
      1,
      34,
      17,
      17,
      16
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "string",
      "var_0",
      "in",
      "lexicographic",
      "order"
    ],
    "code": [
      "sorted",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "str",
      ".",
      "upper",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      3,
      14,
      26,
      24,
      465,
      162
    ],
    "code_indx_copy": [
      101,
      1,
      34,
      8,
      102,
      19,
      25,
      22,
      298,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      34,
      8,
      102,
      19,
      25,
      22,
      298,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "string",
      "var_0",
      "in",
      "lexicographic",
      "order"
    ],
    "code": [
      "sorted",
      "(",
      "sorted",
      "(",
      "var_0",
      ")",
      ",",
      "key",
      "=",
      "str",
      ".",
      "upper",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      14,
      26,
      24,
      465,
      162
    ],
    "code_indx_copy": [
      101,
      1,
      101,
      1,
      34,
      17,
      8,
      102,
      19,
      25,
      22,
      298,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      101,
      1,
      34,
      17,
      8,
      102,
      19,
      25,
      22,
      298,
      17
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "sorted",
      "list",
      "of",
      "the",
      "characters",
      "of",
      "string",
      "var_0",
      "in",
      "lexicographic",
      "order",
      ",",
      "with",
      "lowercase",
      "letters",
      "first"
    ],
    "code": [
      "sorted",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "str",
      ".",
      "lower",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      3,
      224,
      4,
      2,
      18,
      98,
      2,
      14,
      26,
      24,
      465,
      162,
      62,
      79,
      207,
      360,
      151
    ],
    "code_indx_copy": [
      101,
      1,
      34,
      8,
      102,
      19,
      25,
      22,
      152,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      34,
      8,
      102,
      19,
      25,
      22,
      152,
      17
    ]
  },
  {
    "intent": [
      "find",
      "all",
      "the",
      "rows",
      "in",
      "dataframe",
      "str_0",
      "that",
      "are",
      "also",
      "present",
      "in",
      "dataframe",
      "str_1",
      ",",
      "for",
      "the",
      "columns",
      "str_2",
      ",",
      "str_3",
      ",",
      "str_4",
      "and",
      "str_5",
      "."
    ],
    "code": [
      "pd",
      ".",
      "merge",
      "(",
      "str_1",
      ",",
      "str_0",
      ",",
      "on",
      "=",
      "[",
      "'str_2'",
      ",",
      "'str_3'",
      ",",
      "'str_4'",
      ",",
      "'str_5'",
      "]",
      ",",
      "how",
      "=",
      "'inner'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "df2",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "df1",
        "quote": "'",
        "type": "str"
      },
      "str_2": {
        "value": "A",
        "quote": "'",
        "type": "str"
      },
      "str_3": {
        "value": "B",
        "quote": "'",
        "type": "str"
      },
      "str_4": {
        "value": "C",
        "quote": "'",
        "type": "str"
      },
      "str_5": {
        "value": "D",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      47,
      38,
      18,
      80,
      24,
      43,
      5,
      195,
      243,
      465,
      357,
      24,
      43,
      32,
      62,
      21,
      18,
      61,
      194,
      62,
      219,
      62,
      465,
      31,
      465,
      159
    ],
    "code_indx_copy": [
      162,
      22,
      220,
      1,
      37,
      8,
      11,
      8,
      244,
      19,
      12,
      150,
      8,
      173,
      8,
      322,
      8,
      323,
      16,
      8,
      243,
      19,
      524,
      17
    ],
    "code_indx_nocopy": [
      162,
      22,
      220,
      1,
      37,
      8,
      11,
      8,
      244,
      19,
      12,
      150,
      8,
      173,
      8,
      322,
      8,
      323,
      16,
      8,
      243,
      19,
      524,
      17
    ]
  },
  {
    "intent": [
      "reverse",
      "key-value",
      "pairs",
      "in",
      "a",
      "dictionary",
      "var_0"
    ],
    "code": [
      "dict",
      "(",
      "(",
      "v",
      ",",
      "k",
      ")",
      "for",
      "k",
      ",",
      "v",
      "in",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "map",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      282,
      422,
      187,
      24,
      3,
      25,
      26
    ],
    "code_indx_copy": [
      70,
      1,
      1,
      90,
      8,
      89,
      17,
      7,
      89,
      8,
      90,
      9,
      34,
      22,
      35,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      70,
      1,
      1,
      90,
      8,
      89,
      17,
      7,
      89,
      8,
      90,
      9,
      34,
      22,
      35,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "decode",
      "unicode",
      "string",
      "var_0",
      "into",
      "a",
      "readable",
      "unicode",
      "literal"
    ],
    "code": [
      "var_0",
      ".",
      "decode",
      "(",
      "'unicode_escape'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      182,
      230,
      14,
      26,
      12,
      3,
      465,
      230,
      314
    ],
    "code_indx_copy": [
      34,
      22,
      99,
      1,
      182,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      99,
      1,
      182,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "list",
      "of",
      "strings",
      "var_0",
      "into",
      "list",
      "of",
      "integers"
    ],
    "code": [
      "[",
      "int",
      "(",
      "i",
      ")",
      "for",
      "i",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "str_list",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      4,
      2,
      259,
      26,
      12,
      4,
      2,
      7
    ],
    "code_indx_copy": [
      12,
      20,
      1,
      6,
      17,
      7,
      6,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      12,
      20,
      1,
      6,
      17,
      7,
      6,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "list",
      "with",
      "string",
      "str_0",
      "into",
      "list",
      "with",
      "integers"
    ],
    "code": [
      "map",
      "(",
      "int",
      ",",
      "[",
      "str_0",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "['1', '2', '3']",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "['1', '2', '3']",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      3,
      4,
      79,
      14,
      5,
      12,
      4,
      79,
      7
    ],
    "code_indx_copy": [
      24,
      1,
      20,
      8,
      12,
      11,
      16,
      17
    ],
    "code_indx_nocopy": [
      24,
      1,
      20,
      8,
      12,
      11,
      16,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "list",
      "with",
      "str",
      "into",
      "list",
      "with",
      "int"
    ],
    "code": [
      "list",
      "(",
      "map",
      "(",
      "int",
      ",",
      "[",
      "'1'",
      ",",
      "'2'",
      ",",
      "'3'",
      "]",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      11,
      4,
      79,
      465,
      12,
      4,
      79,
      74
    ],
    "code_indx_copy": [
      33,
      1,
      24,
      1,
      20,
      8,
      12,
      195,
      8,
      524,
      8,
      524,
      16,
      17,
      17
    ],
    "code_indx_nocopy": [
      33,
      1,
      24,
      1,
      20,
      8,
      12,
      195,
      8,
      524,
      8,
      524,
      16,
      17,
      17
    ]
  },
  {
    "intent": [
      "find",
      "all",
      "anchor",
      "tags",
      "in",
      "html",
      "var_0",
      "whose",
      "url",
      "begins",
      "with",
      "str_0"
    ],
    "code": [
      "var_0",
      ".",
      "find_all",
      "(",
      "'a'",
      ",",
      "href",
      "=",
      "re",
      ".",
      "compile",
      "(",
      "'http://www\\\\.iwashere\\\\.com/'",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "soup",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "http://www.iwashere.com",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      47,
      38,
      465,
      392,
      24,
      307,
      26,
      228,
      102,
      465,
      79,
      5
    ],
    "code_indx_copy": [
      34,
      22,
      62,
      1,
      413,
      8,
      414,
      19,
      39,
      22,
      83,
      1,
      524,
      17,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      62,
      1,
      413,
      8,
      414,
      19,
      39,
      22,
      83,
      1,
      524,
      17,
      17
    ]
  },
  {
    "intent": [
      "find",
      "all",
      "anchors",
      "with",
      "a",
      "hyperlink",
      "that",
      "matches",
      "the",
      "pattern",
      "str_0"
    ],
    "code": [
      "soup",
      ".",
      "find_all",
      "(",
      "'a'",
      ",",
      "href",
      "=",
      "re",
      ".",
      "compile",
      "(",
      "'str_0'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "^(?!(?:[a-zA-Z][a-zA-Z0-9+.-]*:|//))",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      47,
      38,
      465,
      79,
      3,
      465,
      195,
      108,
      18,
      54,
      5
    ],
    "code_indx_copy": [
      61,
      22,
      62,
      1,
      413,
      8,
      414,
      19,
      39,
      22,
      83,
      1,
      29,
      17,
      17
    ],
    "code_indx_nocopy": [
      61,
      22,
      62,
      1,
      413,
      8,
      414,
      19,
      39,
      22,
      83,
      1,
      29,
      17,
      17
    ]
  },
  {
    "intent": [
      "execute",
      "a",
      "jar",
      "file",
      "str_0",
      "using",
      "subprocess"
    ],
    "code": [
      "subprocess",
      ".",
      "call",
      "(",
      "[",
      "'java'",
      ",",
      "'-jar'",
      ",",
      "'str_0'",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "Blender.jar",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      135,
      3,
      465,
      126,
      5,
      109,
      290
    ],
    "code_indx_copy": [
      229,
      22,
      230,
      1,
      12,
      524,
      8,
      524,
      8,
      29,
      16,
      17
    ],
    "code_indx_nocopy": [
      229,
      22,
      230,
      1,
      12,
      524,
      8,
      524,
      8,
      29,
      16,
      17
    ]
  },
  {
    "intent": [
      "insert",
      "row",
      "into",
      "mysql",
      "database",
      "with",
      "column",
      "str_0",
      "set",
      "to",
      "the",
      "value",
      "var_0"
    ],
    "code": [
      "cursor",
      ".",
      "execute",
      "(",
      "'INSERT INTO table (`column1`) VALUES (%s)'",
      ",",
      "(",
      "var_0",
      ",",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "column1",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "value",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      277,
      45,
      12,
      465,
      465,
      79,
      147,
      5,
      59,
      8,
      18,
      143,
      26
    ],
    "code_indx_copy": [
      415,
      22,
      411,
      1,
      524,
      8,
      1,
      34,
      8,
      17,
      17
    ],
    "code_indx_nocopy": [
      415,
      22,
      411,
      1,
      524,
      8,
      1,
      34,
      8,
      17,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "a",
      "substring",
      "str_0",
      "from",
      "the",
      "end",
      "of",
      "string",
      "var_0"
    ],
    "code": [
      "if",
      "var_0",
      ".",
      "endswith",
      "(",
      "'str_0'",
      ")",
      ":",
      "\n",
      "    ",
      "var_0",
      "=",
      "var_0",
      "[",
      ":",
      "-",
      "4",
      "]",
      ""
    ],
    "slot_map": {
      "str_0": {
        "value": ".com",
        "quote": "\"",
        "type": "str"
      },
      "var_0": {
        "value": "url",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      3,
      354,
      5,
      58,
      18,
      295,
      2,
      14,
      26
    ],
    "code_indx_copy": [
      67,
      34,
      22,
      199,
      1,
      29,
      17,
      13,
      161,
      216,
      34,
      19,
      34,
      12,
      13,
      14,
      184,
      16,
      218
    ],
    "code_indx_nocopy": [
      67,
      34,
      22,
      199,
      1,
      29,
      17,
      13,
      161,
      216,
      34,
      19,
      34,
      12,
      13,
      14,
      184,
      16,
      218
    ]
  },
  {
    "intent": [
      "remove",
      "a",
      "substring",
      "str_0",
      "from",
      "the",
      "end",
      "of",
      "string",
      "var_0"
    ],
    "code": [
      "var_0",
      "=",
      "re",
      ".",
      "sub",
      "(",
      "'\\\\.com$'",
      ",",
      "''",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": ".com",
        "quote": "\"",
        "type": "str"
      },
      "var_0": {
        "value": "url",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      3,
      354,
      5,
      58,
      18,
      295,
      2,
      14,
      26
    ],
    "code_indx_copy": [
      34,
      19,
      39,
      22,
      40,
      1,
      524,
      8,
      21,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      39,
      22,
      40,
      1,
      524,
      8,
      21,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "a",
      "substring",
      "str_0",
      "from",
      "the",
      "end",
      "of",
      "string",
      "var_0"
    ],
    "code": [
      "print",
      "(",
      "var_0",
      ".",
      "replace",
      "(",
      "'str_0'",
      ",",
      "''",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": ".com",
        "quote": "\"",
        "type": "str"
      },
      "var_0": {
        "value": "url",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      3,
      354,
      5,
      58,
      18,
      295,
      2,
      14,
      26
    ],
    "code_indx_copy": [
      49,
      1,
      34,
      22,
      107,
      1,
      29,
      8,
      21,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      34,
      22,
      107,
      1,
      29,
      8,
      21,
      17,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "a",
      "substring",
      "var_0",
      "from",
      "the",
      "end",
      "of",
      "string",
      "var_1"
    ],
    "code": [
      "if",
      "not",
      "var_1",
      ".",
      "endswith",
      "(",
      "var_0",
      ")",
      ":",
      "\n",
      "    ",
      "return",
      "var_1",
      "\n",
      "",
      "return",
      "var_1",
      "[",
      ":",
      "len",
      "(",
      "var_1",
      ")",
      "-",
      "len",
      "(",
      "var_0",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "suffix",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "text",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      3,
      354,
      26,
      58,
      18,
      295,
      2,
      14,
      63
    ],
    "code_indx_copy": [
      67,
      281,
      91,
      22,
      199,
      1,
      34,
      17,
      13,
      161,
      216,
      118,
      91,
      161,
      218,
      118,
      91,
      12,
      13,
      32,
      1,
      91,
      17,
      14,
      32,
      1,
      34,
      17,
      16
    ],
    "code_indx_nocopy": [
      67,
      281,
      91,
      22,
      199,
      1,
      34,
      17,
      13,
      161,
      216,
      118,
      91,
      161,
      218,
      118,
      91,
      12,
      13,
      32,
      1,
      91,
      17,
      14,
      32,
      1,
      34,
      17,
      16
    ]
  },
  {
    "intent": [
      "print",
      "each",
      "first",
      "value",
      "from",
      "a",
      "list",
      "of",
      "tuples",
      "var_0",
      "with",
      "string",
      "formatting"
    ],
    "code": [
      "print",
      "(",
      "', ,'",
      ".",
      "join",
      "(",
      "[",
      "str",
      "(",
      "i",
      "[",
      "0",
      "]",
      ")",
      "for",
      "i",
      "in",
      "var_0",
      "]",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "mytuple",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      166,
      22,
      151,
      143,
      58,
      3,
      4,
      2,
      33,
      26,
      79,
      14,
      167
    ],
    "code_indx_copy": [
      49,
      1,
      524,
      22,
      23,
      1,
      12,
      25,
      1,
      6,
      12,
      43,
      16,
      17,
      7,
      6,
      9,
      34,
      16,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      524,
      22,
      23,
      1,
      12,
      25,
      1,
      6,
      12,
      43,
      16,
      17,
      7,
      6,
      9,
      34,
      16,
      17,
      17
    ]
  },
  {
    "intent": [
      "clamping",
      "floating",
      "number",
      "var_0",
      "to",
      "be",
      "between",
      "var_1",
      "and",
      "var_2"
    ],
    "code": [
      "max",
      "(",
      "min",
      "(",
      "var_0",
      ",",
      "var_2",
      ")",
      ",",
      "var_1",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "my_value",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "min_value",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "max_value",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      270,
      76,
      26,
      8,
      362,
      278,
      63,
      31,
      64
    ],
    "code_indx_copy": [
      179,
      1,
      111,
      1,
      34,
      8,
      94,
      17,
      8,
      91,
      17
    ],
    "code_indx_nocopy": [
      179,
      1,
      111,
      1,
      34,
      8,
      94,
      17,
      8,
      91,
      17
    ]
  },
  {
    "intent": [
      "split",
      "a",
      "unicode",
      "string",
      "var_0",
      "into",
      "a",
      "list",
      "of",
      "words",
      "and",
      "punctuation",
      "characters",
      "with",
      "a",
      "regex"
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'\\\\w+|[^\\\\w\\\\s]'",
      ",",
      "var_0",
      ",",
      "re",
      ".",
      "UNICODE",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "text",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      138,
      3,
      230,
      14,
      26,
      12,
      3,
      4,
      2,
      41,
      31,
      100,
      98,
      79,
      3,
      40
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      524,
      8,
      34,
      8,
      39,
      22,
      304,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      524,
      8,
      34,
      8,
      39,
      22,
      304,
      17
    ]
  },
  {
    "intent": [
      "execute",
      "raw",
      "sql",
      "queue",
      "str_0",
      "in",
      "database",
      "var_0",
      "in",
      "sqlalchemy-flask",
      "app"
    ],
    "code": [
      "result",
      "=",
      "var_0",
      ".",
      "engine",
      ".",
      "execute",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "<sql here>",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "db",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      135,
      465,
      423,
      465,
      5,
      24,
      465,
      26,
      24,
      465,
      465
    ],
    "code_indx_copy": [
      524,
      19,
      34,
      22,
      524,
      22,
      411,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      34,
      22,
      524,
      22,
      411,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "quit",
      "program"
    ],
    "code": [
      "sys",
      ".",
      "exit",
      "(",
      "0",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      465,
      424
    ],
    "code_indx_copy": [
      153,
      22,
      416,
      1,
      43,
      17
    ],
    "code_indx_nocopy": [
      153,
      22,
      416,
      1,
      43,
      17
    ]
  },
  {
    "intent": [
      "get",
      "digits",
      "in",
      "string",
      "var_0"
    ],
    "code": [
      "\"\"\"\"\"\"",
      ".",
      "join",
      "(",
      "c",
      "for",
      "c",
      "in",
      "var_0",
      "if",
      "c",
      ".",
      "isdigit",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "my_string",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      200,
      24,
      14,
      26
    ],
    "code_indx_copy": [
      287,
      22,
      23,
      1,
      66,
      7,
      66,
      9,
      34,
      67,
      66,
      22,
      68,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      287,
      22,
      23,
      1,
      66,
      7,
      66,
      9,
      34,
      67,
      66,
      22,
      68,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "split",
      "string",
      "var_0",
      "on",
      "one",
      "or",
      "more",
      "spaces",
      "with",
      "a",
      "regular",
      "expression"
    ],
    "code": [
      "re",
      ".",
      "split",
      "(",
      "' +'",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "str1",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      138,
      14,
      26,
      139,
      303,
      344,
      425,
      132,
      79,
      3,
      250,
      226
    ],
    "code_indx_copy": [
      39,
      22,
      71,
      1,
      524,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      71,
      1,
      524,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "python",
      "split",
      "string",
      "based",
      "on",
      "regular",
      "expression"
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'\\\\S+'",
      ",",
      "str1",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      50,
      138,
      14,
      208,
      139,
      250,
      226
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      524,
      8,
      417,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      524,
      8,
      417,
      17
    ]
  },
  {
    "intent": [
      "evaluate",
      "a",
      "nested",
      "dictionary",
      "str_0",
      "to",
      "get",
      "var_0",
      "if",
      "var_1",
      "is",
      "present",
      "with",
      "getattr"
    ],
    "code": [
      "getattr",
      "(",
      "getattr",
      "(",
      "var_1",
      ",",
      "'id'",
      ",",
      "None",
      ")",
      ",",
      "'var_0'",
      ",",
      "None",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "myobject.id.number",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "number",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "myobject",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      3,
      154,
      25,
      5,
      8,
      17,
      26,
      150,
      63,
      152,
      357,
      79,
      465
    ],
    "code_indx_copy": [
      300,
      1,
      300,
      1,
      91,
      8,
      524,
      8,
      209,
      17,
      8,
      56,
      8,
      209,
      17
    ],
    "code_indx_nocopy": [
      300,
      1,
      300,
      1,
      91,
      8,
      524,
      8,
      209,
      17,
      8,
      56,
      8,
      209,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "generator",
      "object",
      "to",
      "a",
      "dictionary"
    ],
    "code": [
      "{",
      "i",
      ":",
      "(",
      "i",
      "*",
      "2",
      ")",
      "for",
      "i",
      "in",
      "range",
      "(",
      "10",
      ")",
      "}"
    ],
    "slot_map": {},
    "intent_indx": [
      11,
      141,
      15,
      8,
      3,
      25
    ],
    "code_indx_copy": [
      52,
      6,
      13,
      1,
      6,
      3,
      82,
      17,
      7,
      6,
      9,
      104,
      1,
      4,
      17,
      53
    ],
    "code_indx_nocopy": [
      52,
      6,
      13,
      1,
      6,
      3,
      82,
      17,
      7,
      6,
      9,
      104,
      1,
      4,
      17,
      53
    ]
  },
  {
    "intent": [
      "convert",
      "generator",
      "object",
      "to",
      "a",
      "dictionary"
    ],
    "code": [
      "dict",
      "(",
      "(",
      "i",
      ",",
      "i",
      "*",
      "2",
      ")",
      "for",
      "i",
      "in",
      "range",
      "(",
      "10",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      11,
      141,
      15,
      8,
      3,
      25
    ],
    "code_indx_copy": [
      70,
      1,
      1,
      6,
      8,
      6,
      3,
      82,
      17,
      7,
      6,
      9,
      104,
      1,
      4,
      17,
      17
    ],
    "code_indx_nocopy": [
      70,
      1,
      1,
      6,
      8,
      6,
      3,
      82,
      17,
      7,
      6,
      9,
      104,
      1,
      4,
      17,
      17
    ]
  },
  {
    "intent": [
      "matplotlib",
      "clear",
      "the",
      "current",
      "axes",
      "."
    ],
    "code": [
      "plt",
      ".",
      "cla",
      "(",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      350,
      426,
      18,
      179,
      161,
      159
    ],
    "code_indx_copy": [
      196,
      22,
      524,
      1,
      17
    ],
    "code_indx_nocopy": [
      196,
      22,
      524,
      1,
      17
    ]
  },
  {
    "intent": [
      "split",
      "string",
      "var_0",
      "into",
      "float",
      "values",
      "and",
      "write",
      "sum",
      "to",
      "var_1"
    ],
    "code": [
      "var_1",
      "=",
      "sum",
      "(",
      "float",
      "(",
      "item",
      ")",
      "for",
      "item",
      "in",
      "var_0",
      ".",
      "split",
      "(",
      "','",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "total",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      138,
      14,
      26,
      12,
      94,
      20,
      31,
      168,
      112,
      8,
      63
    ],
    "code_indx_copy": [
      91,
      19,
      0,
      1,
      225,
      1,
      387,
      17,
      7,
      387,
      9,
      34,
      22,
      71,
      1,
      73,
      17,
      17
    ],
    "code_indx_nocopy": [
      91,
      19,
      0,
      1,
      225,
      1,
      387,
      17,
      7,
      387,
      9,
      34,
      22,
      71,
      1,
      73,
      17,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "ascii",
      "value",
      "str_0",
      "to",
      "binary"
    ],
    "code": [
      "bin",
      "(",
      "ord",
      "(",
      "'str_0'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "P",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      384,
      143,
      5,
      8,
      276
    ],
    "code_indx_copy": [
      418,
      1,
      98,
      1,
      29,
      17,
      17
    ],
    "code_indx_nocopy": [
      418,
      1,
      98,
      1,
      29,
      17,
      17
    ]
  },
  {
    "intent": [
      "print",
      "a",
      "string",
      "after",
      "a",
      "specific",
      "substring",
      "str_0",
      "in",
      "string",
      "str_1"
    ],
    "code": [
      "print",
      "(",
      "str_1",
      ".",
      "split",
      "(",
      "', '",
      ",",
      "1",
      ")",
      "[",
      "1",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": ",",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "my_string",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      166,
      3,
      14,
      201,
      3,
      390,
      354,
      5,
      24,
      14,
      32
    ],
    "code_indx_copy": [
      49,
      1,
      37,
      22,
      71,
      1,
      419,
      8,
      15,
      17,
      12,
      15,
      16,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      37,
      22,
      71,
      1,
      419,
      8,
      15,
      17,
      12,
      15,
      16,
      17
    ]
  },
  {
    "intent": [
      "get",
      "value",
      "of",
      "key",
      "str_0",
      "associated",
      "with",
      "first",
      "index",
      "of",
      "key",
      "var_0",
      "of",
      "dictionary",
      "var_1"
    ],
    "code": [
      "print",
      "(",
      "var_1",
      "[",
      "'var_0'",
      "]",
      "[",
      "0",
      "]",
      "[",
      "'str_0'",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "post code",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "places",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "data",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      143,
      2,
      23,
      5,
      286,
      79,
      151,
      37,
      2,
      23,
      26,
      2,
      25,
      63
    ],
    "code_indx_copy": [
      49,
      1,
      91,
      12,
      56,
      16,
      12,
      43,
      16,
      12,
      29,
      16,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      91,
      12,
      56,
      16,
      12,
      43,
      16,
      12,
      29,
      16,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "colon",
      "character",
      "surrounded",
      "by",
      "vowels",
      "letters",
      "in",
      "string",
      "var_0"
    ],
    "code": [
      "var_0",
      "=",
      "re",
      ".",
      "sub",
      "(",
      "'([aeiou]):(([aeiou][^aeiou]*){3})$'",
      ",",
      "'\\\\1\\\\2'",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "word",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      465,
      202,
      465,
      44,
      465,
      360,
      24,
      14,
      26
    ],
    "code_indx_copy": [
      34,
      19,
      39,
      22,
      40,
      1,
      524,
      8,
      524,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      39,
      22,
      40,
      1,
      524,
      8,
      524,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "extract",
      "data",
      "field",
      "str_0",
      "from",
      "json",
      "object"
    ],
    "code": [
      "json",
      ".",
      "loads",
      "(",
      "'{\"foo\": 42, \"bar\": \"baz\"}'",
      ")",
      "[",
      "'str_0'",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "bar",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      104,
      65,
      312,
      5,
      58,
      181,
      15
    ],
    "code_indx_copy": [
      140,
      22,
      204,
      1,
      524,
      17,
      12,
      29,
      16
    ],
    "code_indx_nocopy": [
      140,
      22,
      204,
      1,
      524,
      17,
      12,
      29,
      16
    ]
  },
  {
    "intent": [
      "convert",
      "json",
      "array",
      "var_0",
      "to",
      "python",
      "object"
    ],
    "code": [
      "data",
      "=",
      "json",
      ".",
      "loads",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "array",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      181,
      85,
      26,
      8,
      50,
      15
    ],
    "code_indx_copy": [
      135,
      19,
      140,
      22,
      204,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      135,
      19,
      140,
      22,
      204,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "json",
      "array",
      "var_0",
      "to",
      "python",
      "object"
    ],
    "code": [
      "data",
      "=",
      "json",
      ".",
      "loads",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "array",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      181,
      85,
      26,
      8,
      50,
      15
    ],
    "code_indx_copy": [
      135,
      19,
      140,
      22,
      204,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      135,
      19,
      140,
      22,
      204,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "pars",
      "a",
      "string",
      "str_0",
      "to",
      "extract",
      "hashtags",
      "into",
      "an",
      "array"
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'#(\\\\w+)'",
      ",",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "http://example.org/#comments",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      3,
      14,
      5,
      8,
      104,
      465,
      12,
      225,
      85
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      524,
      8,
      29,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      524,
      8,
      29,
      17
    ]
  },
  {
    "intent": [
      "do",
      "a",
      "boolean",
      "check",
      "if",
      "a",
      "string",
      "var_0",
      "contains",
      "any",
      "of",
      "the",
      "items",
      "in",
      "list",
      "var_1"
    ],
    "code": [
      "any",
      "(",
      "e",
      "in",
      "var_0",
      "for",
      "e",
      "in",
      "var_1",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "lestring",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "lelist",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      327,
      3,
      366,
      234,
      150,
      3,
      14,
      26,
      75,
      272,
      2,
      18,
      39,
      24,
      4,
      63
    ],
    "code_indx_copy": [
      269,
      1,
      420,
      9,
      34,
      7,
      420,
      9,
      91,
      17
    ],
    "code_indx_nocopy": [
      269,
      1,
      420,
      9,
      34,
      7,
      420,
      9,
      91,
      17
    ]
  },
  {
    "intent": [
      "how",
      "to",
      "plot",
      "two",
      "columns",
      "of",
      "a",
      "pandas",
      "data",
      "frame",
      "using",
      "points",
      "?"
    ],
    "code": [
      "df",
      ".",
      "plot",
      "(",
      "x",
      "=",
      "'col_name_1'",
      ",",
      "y",
      "=",
      "'col_name_2'",
      ",",
      "style",
      "=",
      "'o'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      77,
      8,
      244,
      29,
      61,
      2,
      3,
      42,
      65,
      66,
      109,
      318,
      52
    ],
    "code_indx_copy": [
      149,
      22,
      290,
      1,
      26,
      19,
      524,
      8,
      103,
      19,
      524,
      8,
      524,
      19,
      524,
      17
    ],
    "code_indx_nocopy": [
      149,
      22,
      290,
      1,
      26,
      19,
      524,
      8,
      103,
      19,
      524,
      8,
      524,
      19,
      524,
      17
    ]
  },
  {
    "intent": [
      "parsing",
      "html",
      "string",
      "var_0",
      "using",
      "beautifulsoup"
    ],
    "code": [
      "parsed_html",
      "=",
      "BeautifulSoup",
      "(",
      "var_0",
      ")",
      "\n",
      "print",
      "(",
      "parsed_html",
      ".",
      "body",
      ".",
      "find",
      "(",
      "'div'",
      ",",
      "attrs",
      "=",
      "{",
      "'class'",
      ":",
      "'container'",
      "}",
      ")",
      ".",
      "text",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "html",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      307,
      14,
      26,
      109,
      70
    ],
    "code_indx_copy": [
      524,
      19,
      342,
      1,
      34,
      17,
      161,
      49,
      1,
      524,
      22,
      524,
      22,
      282,
      1,
      524,
      8,
      524,
      19,
      52,
      524,
      13,
      524,
      53,
      17,
      22,
      355,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      342,
      1,
      34,
      17,
      161,
      49,
      1,
      524,
      22,
      524,
      22,
      282,
      1,
      524,
      8,
      524,
      19,
      52,
      524,
      13,
      524,
      53,
      17,
      22,
      355,
      17
    ]
  },
  {
    "intent": [
      "parsing",
      "webpage",
      "str_0",
      "using",
      "beautifulsoup"
    ],
    "code": [
      "page",
      "=",
      "urllib",
      ".",
      "request",
      ".",
      "urlopen",
      "(",
      "'str_0'",
      ")",
      "\n",
      "soup",
      "=",
      "BeautifulSoup",
      "(",
      "page",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "http://www.google.com/",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      465,
      5,
      109,
      70
    ],
    "code_indx_copy": [
      524,
      19,
      232,
      22,
      233,
      22,
      234,
      1,
      29,
      17,
      161,
      61,
      19,
      342,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      232,
      22,
      233,
      22,
      234,
      1,
      29,
      17,
      161,
      61,
      19,
      342,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "change",
      "figure",
      "size",
      "to",
      "3",
      "by",
      "4",
      "in",
      "matplotlib"
    ],
    "code": [
      "plt",
      ".",
      "figure",
      "(",
      "figsize",
      "=",
      "(",
      "3",
      ",",
      "4",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      221,
      465,
      334,
      8,
      57,
      44,
      231,
      24,
      350
    ],
    "code_indx_copy": [
      196,
      22,
      529,
      1,
      524,
      19,
      1,
      54,
      8,
      184,
      17,
      17
    ],
    "code_indx_nocopy": [
      196,
      22,
      524,
      1,
      524,
      19,
      1,
      54,
      8,
      184,
      17,
      17
    ]
  },
  {
    "intent": [
      "strip",
      "punctuation",
      "from",
      "string",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "translate",
      "(",
      "None",
      ",",
      "string",
      ".",
      "punctuation",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      331,
      100,
      58,
      14,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      421,
      1,
      209,
      8,
      64,
      22,
      529,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      421,
      1,
      209,
      8,
      64,
      22,
      524,
      17
    ]
  },
  {
    "intent": [
      "django",
      "urlsafe",
      "base64",
      "decode",
      "string",
      "var_0",
      "with",
      "decryption"
    ],
    "code": [
      "base64",
      ".",
      "urlsafe_b64decode",
      "(",
      "var_0",
      ".",
      "encode",
      "(",
      "'ascii'",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "uenc",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      87,
      465,
      465,
      182,
      14,
      26,
      79,
      465
    ],
    "code_indx_copy": [
      530,
      22,
      524,
      1,
      34,
      22,
      239,
      1,
      524,
      17,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      524,
      1,
      34,
      22,
      239,
      1,
      524,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "number",
      "of",
      "all",
      "keys",
      "in",
      "the",
      "nested",
      "dictionary",
      "var_0"
    ],
    "code": [
      "len",
      "(",
      "dict_test",
      ")",
      "+",
      "sum",
      "(",
      "len",
      "(",
      "v",
      ")",
      "for",
      "v",
      "in",
      "dict_test",
      ".",
      "values",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "dict_list",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      18,
      76,
      2,
      38,
      206,
      24,
      18,
      154,
      25,
      26
    ],
    "code_indx_copy": [
      32,
      1,
      524,
      17,
      96,
      0,
      1,
      32,
      1,
      90,
      17,
      7,
      90,
      9,
      524,
      22,
      166,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      32,
      1,
      524,
      17,
      96,
      0,
      1,
      32,
      1,
      90,
      17,
      7,
      90,
      9,
      524,
      22,
      166,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "return",
      "the",
      "conversion",
      "of",
      "decimal",
      "var_0",
      "to",
      "hex",
      "without",
      "the",
      "str_0",
      "prefix"
    ],
    "code": [
      "hex",
      "(",
      "var_0",
      ")",
      ".",
      "split",
      "(",
      "'x'",
      ")",
      "[",
      "1",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "d",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "0x",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      160,
      18,
      465,
      2,
      255,
      26,
      8,
      116,
      103,
      18,
      5,
      465
    ],
    "code_indx_copy": [
      245,
      1,
      34,
      17,
      22,
      71,
      1,
      524,
      17,
      12,
      15,
      16
    ],
    "code_indx_nocopy": [
      245,
      1,
      34,
      17,
      22,
      71,
      1,
      524,
      17,
      12,
      15,
      16
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "list",
      "containing",
      "digits",
      "of",
      "number",
      "123",
      "as",
      "its",
      "elements"
    ],
    "code": [
      "list",
      "(",
      "str",
      "(",
      "123",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      148,
      3,
      4,
      34,
      200,
      2,
      76,
      465,
      90,
      91,
      1
    ],
    "code_indx_copy": [
      33,
      1,
      25,
      1,
      422,
      17,
      17
    ],
    "code_indx_nocopy": [
      33,
      1,
      25,
      1,
      422,
      17,
      17
    ]
  },
  {
    "intent": [
      "converting",
      "integer",
      "var_0",
      "to",
      "list"
    ],
    "code": [
      "[",
      "int",
      "(",
      "x",
      ")",
      "for",
      "x",
      "in",
      "str",
      "(",
      "var_0",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "num",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      115,
      10,
      26,
      8,
      4
    ],
    "code_indx_copy": [
      12,
      20,
      1,
      26,
      17,
      7,
      26,
      9,
      25,
      1,
      34,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      20,
      1,
      26,
      17,
      7,
      26,
      9,
      25,
      1,
      34,
      17,
      16
    ]
  },
  {
    "intent": [
      "select",
      "a",
      "first",
      "form",
      "with",
      "no",
      "name",
      "in",
      "mechanize"
    ],
    "code": [
      "br",
      ".",
      "select_form",
      "(",
      "nr",
      "=",
      "0",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      78,
      3,
      151,
      149,
      79,
      465,
      129,
      24,
      465
    ],
    "code_indx_copy": [
      524,
      22,
      524,
      1,
      524,
      19,
      43,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      524,
      1,
      524,
      19,
      43,
      17
    ]
  },
  {
    "intent": [
      "open",
      "file",
      "str_0",
      "in",
      "read",
      "mode",
      "with",
      "encoding",
      "of",
      "str_1"
    ],
    "code": [
      "json",
      ".",
      "load",
      "(",
      "codecs",
      ".",
      "open",
      "(",
      "'str_0'",
      ",",
      "'r'",
      ",",
      "'str_1'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "sample.json",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "utf-8-sig",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      284,
      126,
      5,
      24,
      124,
      285,
      79,
      298,
      2,
      32
    ],
    "code_indx_copy": [
      140,
      22,
      154,
      1,
      524,
      22,
      105,
      1,
      29,
      8,
      365,
      8,
      63,
      17,
      17
    ],
    "code_indx_nocopy": [
      140,
      22,
      154,
      1,
      524,
      22,
      105,
      1,
      29,
      8,
      365,
      8,
      63,
      17,
      17
    ]
  },
  {
    "intent": [
      "load",
      "json",
      "file",
      "str_0",
      "with",
      "utf-8",
      "bom",
      "header"
    ],
    "code": [
      "json",
      ".",
      "loads",
      "(",
      "open",
      "(",
      "'str_0'",
      ")",
      ".",
      "read",
      "(",
      ")",
      ".",
      "decode",
      "(",
      "'utf-8-sig'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "sample.json",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      249,
      181,
      126,
      5,
      79,
      183,
      465,
      427
    ],
    "code_indx_copy": [
      140,
      22,
      204,
      1,
      105,
      1,
      29,
      17,
      22,
      106,
      1,
      17,
      22,
      99,
      1,
      524,
      17,
      17
    ],
    "code_indx_nocopy": [
      140,
      22,
      204,
      1,
      105,
      1,
      29,
      17,
      22,
      106,
      1,
      17,
      22,
      99,
      1,
      524,
      17,
      17
    ]
  },
  {
    "intent": [
      "setup",
      "a",
      "smtp",
      "mail",
      "server",
      "to",
      "str_0",
      "with",
      "port",
      "str_1"
    ],
    "code": [
      "server",
      "=",
      "smtplib",
      ".",
      "SMTP",
      "(",
      "'str_0'",
      ",",
      "587",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "smtp.gmail.com",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": "587",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      3,
      465,
      465,
      465,
      8,
      5,
      79,
      465,
      32
    ],
    "code_indx_copy": [
      532,
      19,
      524,
      22,
      524,
      1,
      29,
      8,
      524,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      524,
      22,
      524,
      1,
      29,
      8,
      524,
      17
    ]
  },
  {
    "intent": [
      "revers",
      "correlating",
      "bits",
      "of",
      "integer",
      "var_0"
    ],
    "code": [
      "int",
      "(",
      "'{:08b}'",
      ".",
      "format",
      "(",
      "var_0",
      ")",
      "[",
      ":",
      ":",
      "-",
      "1",
      "]",
      ",",
      "2",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "n",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      465,
      465,
      2,
      10,
      26
    ],
    "code_indx_copy": [
      20,
      1,
      524,
      22,
      38,
      1,
      34,
      17,
      12,
      13,
      13,
      14,
      15,
      16,
      8,
      82,
      17
    ],
    "code_indx_nocopy": [
      20,
      1,
      524,
      22,
      38,
      1,
      34,
      17,
      12,
      13,
      13,
      14,
      15,
      16,
      8,
      82,
      17
    ]
  },
  {
    "intent": [
      "add",
      "column",
      "var_0",
      "to",
      "index",
      "of",
      "dataframe",
      "var_1"
    ],
    "code": [
      "var_1",
      ".",
      "set_index",
      "(",
      "[",
      "'var_0'",
      "]",
      ",",
      "append",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "d",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      60,
      147,
      26,
      8,
      37,
      2,
      43,
      63
    ],
    "code_indx_copy": [
      91,
      22,
      203,
      1,
      12,
      56,
      16,
      8,
      146,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      91,
      22,
      203,
      1,
      12,
      56,
      16,
      8,
      146,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "iterating",
      "over",
      "a",
      "dictionary",
      "var_0",
      "using",
      "for",
      "loops"
    ],
    "code": [
      "for",
      "key",
      ",",
      "value",
      "in",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ":",
      "\n",
      "    ",
      "pass",
      ""
    ],
    "slot_map": {
      "var_0": {
        "value": "d",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      428,
      408,
      3,
      25,
      26,
      109,
      21,
      465
    ],
    "code_indx_copy": [
      7,
      102,
      8,
      151,
      9,
      34,
      22,
      35,
      1,
      17,
      13,
      161,
      216,
      217,
      218
    ],
    "code_indx_nocopy": [
      7,
      102,
      8,
      151,
      9,
      34,
      22,
      35,
      1,
      17,
      13,
      161,
      216,
      217,
      218
    ]
  },
  {
    "intent": [
      "iterating",
      "over",
      "a",
      "dictionary",
      "var_0",
      "using",
      "for",
      "loops"
    ],
    "code": [
      "for",
      "key",
      ",",
      "value",
      "in",
      "list",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      ":",
      "\n",
      "    ",
      "pass",
      ""
    ],
    "slot_map": {
      "var_0": {
        "value": "d",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      428,
      408,
      3,
      25,
      26,
      109,
      21,
      465
    ],
    "code_indx_copy": [
      7,
      102,
      8,
      151,
      9,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      13,
      161,
      216,
      217,
      218
    ],
    "code_indx_nocopy": [
      7,
      102,
      8,
      151,
      9,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      13,
      161,
      216,
      217,
      218
    ]
  },
  {
    "intent": [
      "iterating",
      "key",
      "and",
      "items",
      "over",
      "dictionary",
      "var_0"
    ],
    "code": [
      "for",
      "letter",
      ",",
      "number",
      "in",
      "list",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      ":",
      "\n",
      "    ",
      "pass",
      ""
    ],
    "slot_map": {
      "var_0": {
        "value": "d",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      428,
      23,
      31,
      39,
      408,
      25,
      26
    ],
    "code_indx_copy": [
      7,
      423,
      8,
      424,
      9,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      13,
      161,
      216,
      217,
      218
    ],
    "code_indx_nocopy": [
      7,
      423,
      8,
      424,
      9,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      13,
      161,
      216,
      217,
      218
    ]
  },
  {
    "intent": [
      "iterating",
      "key",
      "and",
      "items",
      "over",
      "dictionary",
      "var_0"
    ],
    "code": [
      "for",
      "k",
      ",",
      "v",
      "in",
      "list",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      ":",
      "\n",
      "    ",
      "pass",
      ""
    ],
    "slot_map": {
      "var_0": {
        "value": "d",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      428,
      23,
      31,
      39,
      408,
      25,
      26
    ],
    "code_indx_copy": [
      7,
      89,
      8,
      90,
      9,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      13,
      161,
      216,
      217,
      218
    ],
    "code_indx_nocopy": [
      7,
      89,
      8,
      90,
      9,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      13,
      161,
      216,
      217,
      218
    ]
  },
  {
    "intent": [
      "get",
      "keys",
      "and",
      "items",
      "of",
      "dictionary",
      "var_0"
    ],
    "code": [
      "list",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "d",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      206,
      31,
      39,
      2,
      25,
      26
    ],
    "code_indx_copy": [
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "keys",
      "and",
      "items",
      "of",
      "dictionary",
      "var_0",
      "as",
      "a",
      "list"
    ],
    "code": [
      "list",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "d",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      206,
      31,
      39,
      2,
      25,
      26,
      90,
      3,
      4
    ],
    "code_indx_copy": [
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "iterating",
      "key",
      "and",
      "items",
      "over",
      "dictionary",
      "var_0"
    ],
    "code": [
      "for",
      "k",
      ",",
      "v",
      "in",
      "list",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      ":",
      "\n",
      "    ",
      "pass",
      ""
    ],
    "slot_map": {
      "var_0": {
        "value": "d",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      428,
      23,
      31,
      39,
      408,
      25,
      26
    ],
    "code_indx_copy": [
      7,
      89,
      8,
      90,
      9,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      13,
      161,
      216,
      217,
      218
    ],
    "code_indx_nocopy": [
      7,
      89,
      8,
      90,
      9,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      13,
      161,
      216,
      217,
      218
    ]
  },
  {
    "intent": [
      "iterating",
      "key",
      "and",
      "items",
      "over",
      "dictionary",
      "var_0"
    ],
    "code": [
      "for",
      "letter",
      ",",
      "number",
      "in",
      "list",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      ":",
      "\n",
      "    ",
      "pass",
      ""
    ],
    "slot_map": {
      "var_0": {
        "value": "d",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      428,
      23,
      31,
      39,
      408,
      25,
      26
    ],
    "code_indx_copy": [
      7,
      423,
      8,
      424,
      9,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      13,
      161,
      216,
      217,
      218
    ],
    "code_indx_nocopy": [
      7,
      423,
      8,
      424,
      9,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      13,
      161,
      216,
      217,
      218
    ]
  },
  {
    "intent": [
      "iterating",
      "key",
      "and",
      "items",
      "over",
      "dictionary",
      "var_0"
    ],
    "code": [
      "for",
      "letter",
      ",",
      "number",
      "in",
      "list",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      ":",
      "\n",
      "    ",
      "pass",
      ""
    ],
    "slot_map": {
      "var_0": {
        "value": "d",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      428,
      23,
      31,
      39,
      408,
      25,
      26
    ],
    "code_indx_copy": [
      7,
      423,
      8,
      424,
      9,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      13,
      161,
      216,
      217,
      218
    ],
    "code_indx_nocopy": [
      7,
      423,
      8,
      424,
      9,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      13,
      161,
      216,
      217,
      218
    ]
  },
  {
    "intent": [
      "query",
      "all",
      "data",
      "from",
      "table",
      "var_0",
      "where",
      "the",
      "value",
      "of",
      "column",
      "var_1",
      "is",
      "bigger",
      "than",
      "3",
      "hours"
    ],
    "code": [
      "session",
      ".",
      "query",
      "(",
      "var_0",
      ")",
      ".",
      "filter",
      "(",
      "var_0",
      ".",
      "var_1",
      ">",
      "timedelta",
      "(",
      "hours",
      "=",
      "3",
      ")",
      ")",
      ".",
      "all",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "Task",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "time_spent",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      275,
      38,
      65,
      58,
      388,
      26,
      155,
      18,
      143,
      2,
      147,
      63,
      152,
      263,
      264,
      57,
      465
    ],
    "code_indx_copy": [
      425,
      22,
      426,
      1,
      34,
      17,
      22,
      79,
      1,
      34,
      22,
      91,
      214,
      295,
      1,
      297,
      19,
      54,
      17,
      17,
      22,
      77,
      1,
      17
    ],
    "code_indx_nocopy": [
      425,
      22,
      426,
      1,
      34,
      17,
      22,
      79,
      1,
      34,
      22,
      91,
      214,
      295,
      1,
      297,
      19,
      54,
      17,
      17,
      22,
      77,
      1,
      17
    ]
  },
  {
    "intent": [
      "compile",
      "visual",
      "studio",
      "project",
      "str_0",
      "from",
      "the",
      "command",
      "line",
      "through",
      "python"
    ],
    "code": [
      "os",
      ".",
      "system",
      "(",
      "'msbuild project.sln /p:Configuration=Debug'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "project.sln",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      465,
      465,
      465,
      5,
      58,
      18,
      137,
      172,
      291,
      50
    ],
    "code_indx_copy": [
      113,
      22,
      119,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      119,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "get",
      "max",
      "key",
      "in",
      "dictionary",
      "var_0"
    ],
    "code": [
      "max",
      "(",
      "list",
      "(",
      "var_0",
      ".",
      "keys",
      "(",
      ")",
      ")",
      ",",
      "key",
      "=",
      "int",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "MyCount",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      258,
      23,
      24,
      25,
      26
    ],
    "code_indx_copy": [
      179,
      1,
      33,
      1,
      34,
      22,
      167,
      1,
      17,
      17,
      8,
      102,
      19,
      20,
      17
    ],
    "code_indx_nocopy": [
      179,
      1,
      33,
      1,
      34,
      22,
      167,
      1,
      17,
      17,
      8,
      102,
      19,
      20,
      17
    ]
  },
  {
    "intent": [
      "execute",
      "command",
      "str_0",
      "from",
      "python",
      "script"
    ],
    "code": [
      "os",
      ".",
      "system",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "source .bashrc; shopt -s expand_aliases; nuke -x scriptPath",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      135,
      137,
      5,
      58,
      50,
      246
    ],
    "code_indx_copy": [
      113,
      22,
      119,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      119,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "name",
      "of",
      "function",
      "var_0",
      "as",
      "a",
      "string"
    ],
    "code": [
      "var_0",
      ".",
      "__name__"
    ],
    "slot_map": {
      "var_0": {
        "value": "my_function",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      3,
      129,
      2,
      69,
      26,
      90,
      3,
      14
    ],
    "code_indx_copy": [
      34,
      22,
      250
    ],
    "code_indx_nocopy": [
      34,
      22,
      250
    ]
  },
  {
    "intent": [
      "how",
      "to",
      "get",
      "a",
      "function",
      "name",
      "as",
      "a",
      "string",
      "in",
      "python",
      "?"
    ],
    "code": [
      "my_function",
      ".",
      "__name__"
    ],
    "slot_map": {},
    "intent_indx": [
      77,
      8,
      17,
      3,
      69,
      129,
      90,
      3,
      14,
      24,
      50,
      52
    ],
    "code_indx_copy": [
      524,
      22,
      250
    ],
    "code_indx_nocopy": [
      524,
      22,
      250
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "all",
      "values",
      "in",
      "the",
      "columns",
      "of",
      "a",
      "numpy",
      "matrix",
      "var_0",
      "are",
      "same"
    ],
    "code": [
      "np",
      ".",
      "all",
      "(",
      "var_0",
      "==",
      "var_0",
      "[",
      "(",
      "0",
      ")",
      ",",
      ":",
      "]",
      ",",
      "axis",
      "=",
      "0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      234,
      150,
      38,
      20,
      24,
      18,
      61,
      2,
      3,
      84,
      189,
      26,
      243,
      36
    ],
    "code_indx_copy": [
      74,
      22,
      77,
      1,
      34,
      76,
      34,
      12,
      1,
      43,
      17,
      8,
      13,
      16,
      8,
      42,
      19,
      43,
      17
    ],
    "code_indx_nocopy": [
      74,
      22,
      77,
      1,
      34,
      76,
      34,
      12,
      1,
      43,
      17,
      8,
      13,
      16,
      8,
      42,
      19,
      43,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "list",
      "var_0",
      "in",
      "ascending",
      "order",
      "based",
      "on",
      "the",
      "addition",
      "of",
      "the",
      "second",
      "and",
      "third",
      "elements",
      "of",
      "each",
      "tuple",
      "in",
      "it"
    ],
    "code": [
      "sorted",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "(",
      "sum",
      "(",
      "x",
      "[",
      "1",
      ":",
      "3",
      "]",
      ")",
      ",",
      "x",
      "[",
      "0",
      "]",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      4,
      26,
      24,
      119,
      162,
      208,
      139,
      18,
      465,
      2,
      18,
      118,
      31,
      120,
      1,
      2,
      22,
      113,
      24,
      145
    ],
    "code_indx_copy": [
      101,
      1,
      34,
      8,
      102,
      19,
      44,
      26,
      13,
      1,
      0,
      1,
      26,
      12,
      15,
      13,
      54,
      16,
      17,
      8,
      26,
      12,
      43,
      16,
      17,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      34,
      8,
      102,
      19,
      44,
      26,
      13,
      1,
      0,
      1,
      26,
      12,
      15,
      13,
      54,
      16,
      17,
      8,
      26,
      12,
      43,
      16,
      17,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "list",
      "of",
      "tuples",
      "var_0",
      "by",
      "the",
      "sum",
      "of",
      "second",
      "and",
      "third",
      "element",
      "of",
      "each",
      "tuple"
    ],
    "code": [
      "sorted",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "(",
      "sum",
      "(",
      "x",
      "[",
      "1",
      ":",
      "3",
      "]",
      ")",
      ",",
      "x",
      "[",
      "0",
      "]",
      ")",
      ",",
      "reverse",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      3,
      4,
      2,
      33,
      26,
      44,
      18,
      112,
      2,
      118,
      31,
      120,
      49,
      2,
      22,
      113
    ],
    "code_indx_copy": [
      101,
      1,
      34,
      8,
      102,
      19,
      44,
      26,
      13,
      1,
      0,
      1,
      26,
      12,
      15,
      13,
      54,
      16,
      17,
      8,
      26,
      12,
      43,
      16,
      17,
      8,
      129,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      34,
      8,
      102,
      19,
      44,
      26,
      13,
      1,
      0,
      1,
      26,
      12,
      15,
      13,
      54,
      16,
      17,
      8,
      26,
      12,
      43,
      16,
      17,
      8,
      129,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "sorting",
      "a",
      "list",
      "of",
      "tuples",
      "var_0",
      "by",
      "the",
      "sum",
      "of",
      "the",
      "second",
      "elements",
      "onwards",
      ",",
      "and",
      "third",
      "element",
      "of",
      "the",
      "tuple"
    ],
    "code": [
      "sorted",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "(",
      "sum",
      "(",
      "x",
      "[",
      "1",
      ":",
      "]",
      ")",
      ",",
      "x",
      "[",
      "0",
      "]",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "lst",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      283,
      3,
      4,
      2,
      33,
      26,
      44,
      18,
      112,
      2,
      18,
      118,
      1,
      465,
      62,
      31,
      120,
      49,
      2,
      18,
      113
    ],
    "code_indx_copy": [
      101,
      1,
      34,
      8,
      102,
      19,
      44,
      26,
      13,
      1,
      0,
      1,
      26,
      12,
      15,
      13,
      16,
      17,
      8,
      26,
      12,
      43,
      16,
      17,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      34,
      8,
      102,
      19,
      44,
      26,
      13,
      1,
      0,
      1,
      26,
      12,
      15,
      13,
      16,
      17,
      8,
      26,
      12,
      43,
      16,
      17,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "the",
      "list",
      "of",
      "tuples",
      "var_0",
      "by",
      "the",
      "sum",
      "of",
      "every",
      "value",
      "except",
      "the",
      "first",
      "and",
      "by",
      "the",
      "first",
      "value",
      "in",
      "reverse",
      "order"
    ],
    "code": [
      "sorted",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "(",
      "sum",
      "(",
      "x",
      "[",
      "1",
      ":",
      "]",
      ")",
      ",",
      "x",
      "[",
      "0",
      "]",
      ")",
      ",",
      "reverse",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "lst",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      18,
      4,
      2,
      33,
      26,
      44,
      18,
      112,
      2,
      279,
      143,
      465,
      18,
      151,
      31,
      44,
      18,
      151,
      143,
      24,
      282,
      162
    ],
    "code_indx_copy": [
      101,
      1,
      34,
      8,
      102,
      19,
      44,
      26,
      13,
      1,
      0,
      1,
      26,
      12,
      15,
      13,
      16,
      17,
      8,
      26,
      12,
      43,
      16,
      17,
      8,
      129,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      34,
      8,
      102,
      19,
      44,
      26,
      13,
      1,
      0,
      1,
      26,
      12,
      15,
      13,
      16,
      17,
      8,
      26,
      12,
      43,
      16,
      17,
      8,
      129,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "add",
      "header",
      "str_0",
      "in",
      "a",
      "flask",
      "app",
      "with",
      "value",
      "str_1"
    ],
    "code": [
      "response",
      ".",
      "headers",
      "[",
      "'WWW-Authenticate'",
      "]",
      "=",
      "'str_1'"
    ],
    "slot_map": {
      "str_0": {
        "value": "WWWAuthenticate",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "Basic realm=\"test\"",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      60,
      427,
      5,
      24,
      3,
      405,
      465,
      79,
      143,
      32
    ],
    "code_indx_copy": [
      524,
      22,
      289,
      12,
      524,
      16,
      19,
      63
    ],
    "code_indx_nocopy": [
      524,
      22,
      289,
      12,
      524,
      16,
      19,
      63
    ]
  },
  {
    "intent": [
      "clear",
      "session",
      "key",
      "str_0"
    ],
    "code": [
      "del",
      "request",
      ".",
      "session",
      "[",
      "'str_0'",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "mykey",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      426,
      465,
      23,
      5
    ],
    "code_indx_copy": [
      283,
      233,
      22,
      425,
      12,
      29,
      16
    ],
    "code_indx_nocopy": [
      283,
      233,
      22,
      425,
      12,
      29,
      16
    ]
  },
  {
    "intent": [
      "convert",
      "date",
      "string",
      "str_0",
      "to",
      "date",
      "object",
      "in",
      "format",
      "str_1"
    ],
    "code": [
      "datetime",
      ".",
      "datetime",
      ".",
      "strptime",
      "(",
      "'str_0'",
      ",",
      "'str_1'",
      ")",
      ".",
      "date",
      "(",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "24052010",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "%d%m%Y",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      133,
      14,
      5,
      8,
      133,
      15,
      24,
      16,
      32
    ],
    "code_indx_copy": [
      27,
      22,
      27,
      22,
      28,
      1,
      29,
      8,
      63,
      17,
      22,
      139,
      1,
      17
    ],
    "code_indx_nocopy": [
      27,
      22,
      27,
      22,
      28,
      1,
      29,
      8,
      63,
      17,
      22,
      139,
      1,
      17
    ]
  },
  {
    "intent": [
      "replace",
      "non-ascii",
      "characters",
      "in",
      "string",
      "var_0",
      "with",
      "a",
      "single",
      "space"
    ],
    "code": [
      "re",
      ".",
      "sub",
      "(",
      "'[^\\\\x00-\\\\x7F]+'",
      ",",
      "' '",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "text",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      130,
      335,
      98,
      24,
      14,
      26,
      79,
      3,
      9,
      400
    ],
    "code_indx_copy": [
      39,
      22,
      40,
      1,
      524,
      8,
      108,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      40,
      1,
      524,
      8,
      108,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "list",
      "of",
      "lists",
      "into",
      "numpy",
      "array"
    ],
    "code": [
      "numpy",
      ".",
      "array",
      "(",
      "[",
      "[",
      "1",
      ",",
      "2",
      "]",
      ",",
      "[",
      "3",
      ",",
      "4",
      "]",
      "]",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      4,
      2,
      30,
      12,
      84,
      85
    ],
    "code_indx_copy": [
      147,
      22,
      175,
      1,
      12,
      12,
      15,
      8,
      82,
      16,
      8,
      12,
      54,
      8,
      184,
      16,
      16,
      17
    ],
    "code_indx_nocopy": [
      147,
      22,
      175,
      1,
      12,
      12,
      15,
      8,
      82,
      16,
      8,
      12,
      54,
      8,
      184,
      16,
      16,
      17
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "list",
      "var_0",
      "from",
      "1",
      "to",
      "10"
    ],
    "code": [
      "var_0",
      "=",
      "[",
      "i",
      "for",
      "i",
      "in",
      "range",
      "(",
      "10",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "myList",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      3,
      4,
      26,
      58,
      237,
      8,
      351
    ],
    "code_indx_copy": [
      34,
      19,
      12,
      6,
      7,
      6,
      9,
      104,
      1,
      4,
      17,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      12,
      6,
      7,
      6,
      9,
      104,
      1,
      4,
      17,
      16
    ]
  },
  {
    "intent": [
      "use",
      "regex",
      "pattern",
      "str_0",
      "to",
      "split",
      "string",
      "str_1"
    ],
    "code": [
      "[",
      "m",
      "[",
      "0",
      "]",
      "for",
      "m",
      "in",
      "re",
      ".",
      "compile",
      "(",
      "'str_0'",
      ")",
      ".",
      "findall",
      "(",
      "'str_1'",
      ")",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "((.+?)\\2+)",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "44442(2)2(2)44",
        "quote": "'",
        "type": "str"
      },
      "(str_0)": {
        "value": "((.+?)\\2+)",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      309,
      40,
      54,
      5,
      8,
      138,
      14,
      32
    ],
    "code_indx_copy": [
      12,
      92,
      12,
      43,
      16,
      7,
      92,
      9,
      39,
      22,
      83,
      1,
      29,
      17,
      22,
      48,
      1,
      63,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      92,
      12,
      43,
      16,
      7,
      92,
      9,
      39,
      22,
      83,
      1,
      29,
      17,
      22,
      48,
      1,
      63,
      17,
      16
    ]
  },
  {
    "intent": [
      "use",
      "regular",
      "expression",
      "str_0",
      "to",
      "split",
      "string",
      "var_0"
    ],
    "code": [
      "[",
      "i",
      "[",
      "0",
      "]",
      "for",
      "i",
      "in",
      "re",
      ".",
      "findall",
      "(",
      "'str_0'",
      ",",
      "var_0",
      ")",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "((\\d)(?:[()]*\\2*[()]*)*)",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      },
      "(str_0)": {
        "value": "((\\d)(?:[()]*\\2*[()]*)*)",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      309,
      250,
      226,
      5,
      8,
      138,
      14,
      26
    ],
    "code_indx_copy": [
      12,
      6,
      12,
      43,
      16,
      7,
      6,
      9,
      39,
      22,
      48,
      1,
      29,
      8,
      34,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      6,
      12,
      43,
      16,
      7,
      6,
      9,
      39,
      22,
      48,
      1,
      29,
      8,
      34,
      17,
      16
    ]
  },
  {
    "intent": [
      "remove",
      "the",
      "space",
      "between",
      "subplots",
      "in",
      "matplotlib.pyplot"
    ],
    "code": [
      "fig",
      ".",
      "subplots_adjust",
      "(",
      "wspace",
      "=",
      "0",
      ",",
      "hspace",
      "=",
      "0",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      268,
      18,
      400,
      278,
      465,
      24,
      465
    ],
    "code_indx_copy": [
      524,
      22,
      524,
      1,
      524,
      19,
      43,
      8,
      524,
      19,
      43,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      524,
      1,
      524,
      19,
      43,
      8,
      524,
      19,
      43,
      17
    ]
  },
  {
    "intent": [
      "reverse",
      "list",
      "var_0"
    ],
    "code": [
      "var_0",
      "[",
      ":",
      ":",
      "-",
      "1",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "x",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      282,
      4,
      26
    ],
    "code_indx_copy": [
      34,
      12,
      13,
      13,
      14,
      15,
      16
    ],
    "code_indx_nocopy": [
      34,
      12,
      13,
      13,
      14,
      15,
      16
    ]
  },
  {
    "intent": [
      "python",
      "json",
      "encoding"
    ],
    "code": [
      "json",
      ".",
      "dumps",
      "(",
      "{",
      "'apple'",
      ":",
      "'cat'",
      ",",
      "'banana'",
      ":",
      "'dog'",
      ",",
      "'pear'",
      ":",
      "'fish'",
      "}",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      50,
      181,
      298
    ],
    "code_indx_copy": [
      140,
      22,
      141,
      1,
      52,
      524,
      13,
      524,
      8,
      524,
      13,
      524,
      8,
      524,
      13,
      524,
      53,
      17
    ],
    "code_indx_nocopy": [
      140,
      22,
      141,
      1,
      52,
      524,
      13,
      524,
      8,
      524,
      13,
      524,
      8,
      524,
      13,
      524,
      53,
      17
    ]
  },
  {
    "intent": [
      "write",
      "a",
      "list",
      "of",
      "strings",
      "var_0",
      "to",
      "csv",
      "object",
      "var_1"
    ],
    "code": [
      "var_1",
      ".",
      "writerow",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "row",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "csvwriter",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      168,
      3,
      4,
      2,
      259,
      26,
      8,
      287,
      15,
      63
    ],
    "code_indx_copy": [
      91,
      22,
      427,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      91,
      22,
      427,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "jinja2",
      "formate",
      "date",
      "str_0",
      "accorto",
      "pattern",
      "str_1"
    ],
    "code": [
      "{",
      "{",
      "(",
      "item",
      ".",
      "date",
      "|",
      "date",
      ")",
      ":",
      "'str_1'",
      "}",
      "}"
    ],
    "slot_map": {
      "str_0": {
        "value": "item.date",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": "Y M d",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      465,
      133,
      5,
      465,
      54,
      32
    ],
    "code_indx_copy": [
      52,
      52,
      1,
      387,
      22,
      139,
      412,
      139,
      17,
      13,
      63,
      53,
      53
    ],
    "code_indx_nocopy": [
      52,
      52,
      1,
      387,
      22,
      139,
      412,
      139,
      17,
      13,
      63,
      53,
      53
    ]
  },
  {
    "intent": [
      "split",
      "a",
      "string",
      "var_0",
      "with",
      "comma",
      ",",
      "question",
      "mark",
      "or",
      "exclamation",
      "by",
      "non-consuming",
      "regex",
      "using",
      "look-behind"
    ],
    "code": [
      "re",
      ".",
      "split",
      "(",
      "'(?<=[\\\\.\\\\?!]) '",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "text",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      138,
      3,
      14,
      26,
      79,
      417,
      62,
      465,
      465,
      344,
      465,
      44,
      465,
      40,
      109,
      465
    ],
    "code_indx_copy": [
      39,
      22,
      71,
      1,
      524,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      71,
      1,
      524,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "regular",
      "expression",
      "object",
      "with",
      "the",
      "pattern",
      "str_0"
    ],
    "code": [
      "re",
      ".",
      "compile",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "\u00e2\u0080\u0093",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      148,
      3,
      250,
      226,
      15,
      79,
      18,
      54,
      5
    ],
    "code_indx_copy": [
      39,
      22,
      83,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      83,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "declare",
      "an",
      "array",
      "var_0"
    ],
    "code": [
      "var_0",
      "=",
      "[",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "variable",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      225,
      85,
      26
    ],
    "code_indx_copy": [
      34,
      19,
      12,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      12,
      16
    ]
  },
  {
    "intent": [
      "declare",
      "an",
      "array",
      "with",
      "element",
      "str_0"
    ],
    "code": [
      "intarray",
      "=",
      "array",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "i",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      225,
      85,
      79,
      49,
      5
    ],
    "code_indx_copy": [
      524,
      19,
      175,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      175,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "given",
      "list",
      "var_0",
      ",",
      "reverse",
      "the",
      "all",
      "sublists",
      "and",
      "the",
      "list",
      "itself"
    ],
    "code": [
      "[",
      "sublist",
      "[",
      ":",
      ":",
      "-",
      "1",
      "]",
      "for",
      "sublist",
      "in",
      "var_0",
      "[",
      ":",
      ":",
      "-",
      "1",
      "]",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "to_reverse",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      273,
      4,
      26,
      62,
      282,
      18,
      38,
      465,
      31,
      18,
      4,
      465
    ],
    "code_indx_copy": [
      12,
      428,
      12,
      13,
      13,
      14,
      15,
      16,
      7,
      428,
      9,
      34,
      12,
      13,
      13,
      14,
      15,
      16,
      16
    ],
    "code_indx_nocopy": [
      12,
      428,
      12,
      13,
      13,
      14,
      15,
      16,
      7,
      428,
      9,
      34,
      12,
      13,
      13,
      14,
      15,
      16,
      16
    ]
  },
  {
    "intent": [
      "replace",
      "all",
      "non-alphanumeric",
      "characters",
      "in",
      "a",
      "string"
    ],
    "code": [
      "re",
      ".",
      "sub",
      "(",
      "'[^0-9a-zA-Z]+'",
      ",",
      "'*'",
      ",",
      "'h^&ell`.,|o w]{+orld'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      130,
      38,
      465,
      98,
      24,
      3,
      14
    ],
    "code_indx_copy": [
      39,
      22,
      40,
      1,
      524,
      8,
      429,
      8,
      524,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      40,
      1,
      524,
      8,
      429,
      8,
      524,
      17
    ]
  },
  {
    "intent": [
      "unescape",
      "special",
      "characters",
      "without",
      "splitting",
      "data",
      "in",
      "array",
      "of",
      "strings",
      "str_0"
    ],
    "code": [
      "\"\"\"\"\"\"",
      ".",
      "join",
      "(",
      "[",
      "'I '",
      ",",
      "'<'",
      ",",
      "'3s U '",
      ",",
      "'&'",
      ",",
      "' you luvz me'",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "['I ', u'<', '3s U ', u'&', ' you luvz me']",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "['I ', u'<', '3s U ', u'&', ' you luvz me']",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      465,
      98,
      103,
      429,
      65,
      24,
      85,
      2,
      259,
      5
    ],
    "code_indx_copy": [
      287,
      22,
      23,
      1,
      12,
      524,
      8,
      524,
      8,
      524,
      8,
      524,
      8,
      524,
      16,
      17
    ],
    "code_indx_nocopy": [
      287,
      22,
      23,
      1,
      12,
      524,
      8,
      524,
      8,
      524,
      8,
      524,
      8,
      524,
      16,
      17
    ]
  },
  {
    "intent": [
      "disable",
      "logging",
      "while",
      "running",
      "unit",
      "tests",
      "in",
      "python",
      "django"
    ],
    "code": [
      "logging",
      ".",
      "disable",
      "(",
      "logging",
      ".",
      "CRITICAL",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      465,
      465,
      430,
      465,
      465,
      465,
      24,
      50,
      87
    ],
    "code_indx_copy": [
      125,
      22,
      528,
      1,
      125,
      22,
      524,
      17
    ],
    "code_indx_nocopy": [
      125,
      22,
      524,
      1,
      125,
      22,
      524,
      17
    ]
  },
  {
    "intent": [
      "adding",
      "url",
      "var_0",
      "to",
      "mysql",
      "row"
    ],
    "code": [
      "cursor",
      ".",
      "execute",
      "(",
      "'INSERT INTO index(url) VALUES(%s)'",
      ",",
      "(",
      "var_0",
      ",",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "url",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      102,
      26,
      8,
      465,
      45
    ],
    "code_indx_copy": [
      415,
      22,
      411,
      1,
      524,
      8,
      1,
      34,
      8,
      17,
      17
    ],
    "code_indx_nocopy": [
      415,
      22,
      411,
      1,
      524,
      8,
      1,
      34,
      8,
      17,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "column",
      "of",
      "date",
      "objects",
      "str_0",
      "in",
      "pandas",
      "dataframe",
      "var_0",
      "to",
      "strings",
      "in",
      "new",
      "column",
      "str_1"
    ],
    "code": [
      "var_0",
      "[",
      "'str_1'",
      "]",
      "=",
      "var_0",
      "[",
      "'str_0'",
      "]",
      ".",
      "dt",
      ".",
      "strftime",
      "(",
      "'%d%m%Y'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "DateObj",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "str_1": {
        "value": "DateStr",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      147,
      2,
      133,
      178,
      5,
      24,
      42,
      43,
      26,
      8,
      259,
      24,
      192,
      147,
      32
    ],
    "code_indx_copy": [
      34,
      12,
      63,
      16,
      19,
      34,
      12,
      29,
      16,
      22,
      391,
      22,
      65,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      34,
      12,
      63,
      16,
      19,
      34,
      12,
      29,
      16,
      22,
      391,
      22,
      65,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "split",
      "string",
      "var_0",
      "by",
      "str_0",
      "and",
      "get",
      "the",
      "first",
      "element"
    ],
    "code": [
      "var_0",
      ".",
      "split",
      "(",
      "'str_0'",
      ")",
      "[",
      "0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "@",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      138,
      14,
      26,
      44,
      5,
      31,
      17,
      18,
      151,
      49
    ],
    "code_indx_copy": [
      34,
      22,
      71,
      1,
      29,
      17,
      12,
      43,
      16
    ],
    "code_indx_nocopy": [
      34,
      22,
      71,
      1,
      29,
      17,
      12,
      43,
      16
    ]
  },
  {
    "intent": [
      "drop",
      "rows",
      "of",
      "dataframe",
      "var_0",
      "whose",
      "index",
      "is",
      "smaller",
      "than",
      "the",
      "value",
      "of",
      "var_1",
      "or",
      "bigger",
      "than",
      "the",
      "value",
      "ofvar_2"
    ],
    "code": [
      "var_0",
      ".",
      "query",
      "(",
      "'index < @start_remove or index > @end_remove'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "start_remove",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "end_remove",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      262,
      80,
      2,
      43,
      26,
      228,
      37,
      152,
      465,
      264,
      18,
      143,
      2,
      63,
      344,
      263,
      264,
      18,
      143,
      465
    ],
    "code_indx_copy": [
      34,
      22,
      426,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      426,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "drop",
      "the",
      "rows",
      "in",
      "pandas",
      "timeseries",
      "var_0",
      "from",
      "the",
      "row",
      "containing",
      "index",
      "var_1",
      "to",
      "the",
      "row",
      "containing",
      "index",
      "var_2"
    ],
    "code": [
      "var_0",
      ".",
      "loc",
      "[",
      "(",
      "var_0",
      ".",
      "index",
      "<",
      "var_1",
      ")",
      "|",
      "(",
      "var_0",
      ".",
      "index",
      ">",
      "var_2",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "start_remove",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "end_remove",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      262,
      18,
      80,
      24,
      42,
      465,
      26,
      58,
      18,
      45,
      34,
      37,
      63,
      8,
      18,
      45,
      34,
      37,
      64
    ],
    "code_indx_copy": [
      34,
      22,
      202,
      12,
      1,
      34,
      22,
      160,
      344,
      91,
      17,
      412,
      1,
      34,
      22,
      160,
      214,
      94,
      17,
      16
    ],
    "code_indx_nocopy": [
      34,
      22,
      202,
      12,
      1,
      34,
      22,
      160,
      344,
      91,
      17,
      412,
      1,
      34,
      22,
      160,
      214,
      94,
      17,
      16
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "number",
      "of",
      "nan",
      "values",
      "in",
      "each",
      "column",
      "of",
      "dataframe",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "isnull",
      "(",
      ")",
      ".",
      "sum",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      18,
      76,
      2,
      289,
      20,
      24,
      22,
      147,
      2,
      43,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      430,
      1,
      17,
      22,
      0,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      430,
      1,
      17,
      22,
      0,
      1,
      17
    ]
  },
  {
    "intent": [
      "reset",
      "index",
      "of",
      "dataframe",
      "var_0so",
      "that",
      "existing",
      "index",
      "values",
      "are",
      "transferred",
      "into",
      "var_0as",
      "columns"
    ],
    "code": [
      "var_1",
      ".",
      "reset_index",
      "(",
      "inplace",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      37,
      2,
      43,
      465,
      195,
      465,
      37,
      20,
      243,
      465,
      12,
      465,
      61
    ],
    "code_indx_copy": [
      91,
      22,
      186,
      1,
      279,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      91,
      22,
      186,
      1,
      279,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "generate",
      "a",
      "list",
      "containing",
      "values",
      "associated",
      "with",
      "the",
      "key",
      "str_0",
      "of",
      "each",
      "dictionary",
      "inside",
      "list",
      "var_0"
    ],
    "code": [
      "[",
      "x",
      "[",
      "'str_0'",
      "]",
      "for",
      "x",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "value",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "list_of_dicts",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      56,
      3,
      4,
      34,
      20,
      286,
      79,
      18,
      23,
      5,
      2,
      22,
      25,
      46,
      4,
      26
    ],
    "code_indx_copy": [
      12,
      26,
      12,
      29,
      16,
      7,
      26,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      12,
      26,
      12,
      29,
      16,
      7,
      26,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "python",
      "getting",
      "a",
      "list",
      "of",
      "value",
      "from",
      "list",
      "of",
      "dict"
    ],
    "code": [
      "[",
      "d",
      "[",
      "'value'",
      "]",
      "for",
      "d",
      "in",
      "l",
      "]"
    ],
    "slot_map": {},
    "intent_indx": [
      50,
      402,
      3,
      4,
      2,
      143,
      58,
      4,
      2,
      186
    ],
    "code_indx_copy": [
      12,
      2,
      12,
      405,
      16,
      7,
      2,
      9,
      431,
      16
    ],
    "code_indx_nocopy": [
      12,
      2,
      12,
      405,
      16,
      7,
      2,
      9,
      431,
      16
    ]
  },
  {
    "intent": [
      "python",
      "getting",
      "a",
      "list",
      "of",
      "value",
      "from",
      "list",
      "of",
      "dict"
    ],
    "code": [
      "[",
      "d",
      "[",
      "'value'",
      "]",
      "for",
      "d",
      "in",
      "l",
      "if",
      "'value'",
      "in",
      "d",
      "]"
    ],
    "slot_map": {},
    "intent_indx": [
      50,
      402,
      3,
      4,
      2,
      143,
      58,
      4,
      2,
      186
    ],
    "code_indx_copy": [
      12,
      2,
      12,
      405,
      16,
      7,
      2,
      9,
      431,
      67,
      405,
      9,
      2,
      16
    ],
    "code_indx_nocopy": [
      12,
      2,
      12,
      405,
      16,
      7,
      2,
      9,
      431,
      67,
      405,
      9,
      2,
      16
    ]
  },
  {
    "intent": [
      "convert",
      "numpy",
      "array",
      "into",
      "python",
      "list",
      "structure"
    ],
    "code": [
      "np",
      ".",
      "array",
      "(",
      "[",
      "[",
      "1",
      ",",
      "2",
      ",",
      "3",
      "]",
      ",",
      "[",
      "4",
      ",",
      "5",
      ",",
      "6",
      "]",
      "]",
      ")",
      ".",
      "tolist",
      "(",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      11,
      84,
      85,
      12,
      50,
      4,
      465
    ],
    "code_indx_copy": [
      74,
      22,
      175,
      1,
      12,
      12,
      15,
      8,
      82,
      8,
      54,
      16,
      8,
      12,
      184,
      8,
      185,
      8,
      249,
      16,
      16,
      17,
      22,
      306,
      1,
      17
    ],
    "code_indx_nocopy": [
      74,
      22,
      175,
      1,
      12,
      12,
      15,
      8,
      82,
      8,
      54,
      16,
      8,
      12,
      184,
      8,
      185,
      8,
      249,
      16,
      16,
      17,
      22,
      306,
      1,
      17
    ]
  },
  {
    "intent": [
      "converting",
      "string",
      "str_0",
      "to",
      "a",
      "tuple"
    ],
    "code": [
      "ast",
      ".",
      "literal_eval",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "(1,2,3,4)",
        "quote": "'",
        "type": "str"
      },
      "(str_0)": {
        "value": "(1,2,3,4)",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      115,
      14,
      5,
      8,
      3,
      113
    ],
    "code_indx_copy": [
      272,
      22,
      273,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      272,
      22,
      273,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "keep",
      "a",
      "list",
      "var_0",
      "of",
      "lists",
      "sorted",
      "as",
      "it",
      "is",
      "created",
      "by",
      "second",
      "element"
    ],
    "code": [
      "var_0",
      ".",
      "sort",
      "(",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "x",
      "[",
      "1",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "dataList",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      3,
      4,
      26,
      2,
      30,
      224,
      90,
      145,
      152,
      465,
      44,
      118,
      49
    ],
    "code_indx_copy": [
      34,
      22,
      124,
      1,
      102,
      19,
      44,
      26,
      13,
      26,
      12,
      15,
      16,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      124,
      1,
      102,
      19,
      44,
      26,
      13,
      26,
      12,
      15,
      16,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "duplicated",
      "items",
      "from",
      "list",
      "of",
      "lists",
      "var_0"
    ],
    "code": [
      "list",
      "(",
      "map",
      "(",
      "list",
      ",",
      "set",
      "(",
      "map",
      "(",
      "lambda",
      "i",
      ":",
      "tuple",
      "(",
      "i",
      ")",
      ",",
      "var_0",
      ")",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "testdata",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      122,
      39,
      58,
      4,
      2,
      30,
      26
    ],
    "code_indx_copy": [
      33,
      1,
      24,
      1,
      33,
      8,
      189,
      1,
      24,
      1,
      44,
      6,
      13,
      432,
      1,
      6,
      17,
      8,
      34,
      17,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      33,
      1,
      24,
      1,
      33,
      8,
      189,
      1,
      24,
      1,
      44,
      6,
      13,
      432,
      1,
      6,
      17,
      8,
      34,
      17,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "uniqueness",
      "for",
      "list",
      "of",
      "lists",
      "var_0"
    ],
    "code": [
      "[",
      "list",
      "(",
      "i",
      ")",
      "for",
      "i",
      "in",
      "set",
      "(",
      "tuple",
      "(",
      "i",
      ")",
      "for",
      "i",
      "in",
      "var_0",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "testdata",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      21,
      4,
      2,
      30,
      26
    ],
    "code_indx_copy": [
      12,
      33,
      1,
      6,
      17,
      7,
      6,
      9,
      189,
      1,
      432,
      1,
      6,
      17,
      7,
      6,
      9,
      34,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      33,
      1,
      6,
      17,
      7,
      6,
      9,
      189,
      1,
      432,
      1,
      6,
      17,
      7,
      6,
      9,
      34,
      17,
      16
    ]
  },
  {
    "intent": [
      "in",
      "django",
      ",",
      "check",
      "if",
      "a",
      "user",
      "is",
      "in",
      "a",
      "group",
      "str_0"
    ],
    "code": [
      "return",
      "user",
      ".",
      "groups",
      ".",
      "filter",
      "(",
      "name",
      "=",
      "'str_0'",
      ")",
      ".",
      "exists",
      "(",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "Member",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      24,
      87,
      62,
      234,
      150,
      3,
      174,
      152,
      24,
      3,
      383,
      5
    ],
    "code_indx_copy": [
      118,
      534,
      22,
      433,
      22,
      79,
      1,
      316,
      19,
      29,
      17,
      22,
      434,
      1,
      17
    ],
    "code_indx_nocopy": [
      118,
      524,
      22,
      433,
      22,
      79,
      1,
      316,
      19,
      29,
      17,
      22,
      434,
      1,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "a",
      "user",
      "var_0",
      "is",
      "in",
      "a",
      "group",
      "from",
      "list",
      "of",
      "groups",
      "str_0"
    ],
    "code": [
      "return",
      "var_0",
      ".",
      "groups",
      ".",
      "filter",
      "(",
      "name__in",
      "=",
      "[",
      "str_0",
      "]",
      ")",
      ".",
      "exists",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "user",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "['group1', 'group2']",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "['group1', 'group2']",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      234,
      150,
      3,
      174,
      26,
      152,
      24,
      3,
      383,
      58,
      4,
      2,
      465,
      5
    ],
    "code_indx_copy": [
      118,
      34,
      22,
      433,
      22,
      79,
      1,
      524,
      19,
      12,
      11,
      16,
      17,
      22,
      434,
      1,
      17
    ],
    "code_indx_nocopy": [
      118,
      34,
      22,
      433,
      22,
      79,
      1,
      524,
      19,
      12,
      11,
      16,
      17,
      22,
      434,
      1,
      17
    ]
  },
  {
    "intent": [
      "change",
      "log",
      "level",
      "dynamically",
      "to",
      "str_0",
      "without",
      "restarting",
      "the",
      "application"
    ],
    "code": [
      "logging",
      ".",
      "getLogger",
      "(",
      ")",
      ".",
      "setLevel",
      "(",
      "logging",
      ".",
      "str_0",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "DEBUG",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      221,
      465,
      238,
      465,
      8,
      5,
      103,
      465,
      18,
      465
    ],
    "code_indx_copy": [
      125,
      22,
      524,
      1,
      17,
      22,
      524,
      1,
      125,
      22,
      11,
      17
    ],
    "code_indx_nocopy": [
      125,
      22,
      524,
      1,
      17,
      22,
      524,
      1,
      125,
      22,
      11,
      17
    ]
  },
  {
    "intent": [
      "concat",
      "each",
      "values",
      "in",
      "a",
      "tuple",
      "str_0",
      "to",
      "get",
      "a",
      "string"
    ],
    "code": [
      "\"\"\"\"\"\"",
      ".",
      "join",
      "(",
      "str",
      "(",
      "i",
      ")",
      "for",
      "i",
      "in",
      "(",
      "str_0",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "(34.2424, -64.2344, 76.3534, 45.2344)",
        "quote": "`",
        "type": "str"
      },
      "(str_0)": {
        "value": "(34.2424, -64.2344, 76.3534, 45.2344)",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      22,
      20,
      24,
      3,
      113,
      5,
      8,
      17,
      3,
      14
    ],
    "code_indx_copy": [
      287,
      22,
      23,
      1,
      25,
      1,
      6,
      17,
      7,
      6,
      9,
      1,
      11,
      17,
      17
    ],
    "code_indx_nocopy": [
      287,
      22,
      23,
      1,
      25,
      1,
      6,
      17,
      7,
      6,
      9,
      1,
      11,
      17,
      17
    ]
  },
  {
    "intent": [
      "swap",
      "each",
      "pair",
      "of",
      "characters",
      "in",
      "string",
      "var_0"
    ],
    "code": [
      "\"\"\"\"\"\"",
      ".",
      "join",
      "(",
      "[",
      "var_0",
      "[",
      "x",
      ":",
      "x",
      "+",
      "2",
      "]",
      "[",
      ":",
      ":",
      "-",
      "1",
      "]",
      "for",
      "x",
      "in",
      "range",
      "(",
      "0",
      ",",
      "len",
      "(",
      "var_0",
      ")",
      ",",
      "2",
      ")",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      22,
      89,
      2,
      98,
      24,
      14,
      26
    ],
    "code_indx_copy": [
      287,
      22,
      23,
      1,
      12,
      34,
      12,
      26,
      13,
      26,
      96,
      82,
      16,
      12,
      13,
      13,
      14,
      15,
      16,
      7,
      26,
      9,
      104,
      1,
      43,
      8,
      32,
      1,
      34,
      17,
      8,
      82,
      17,
      16,
      17
    ],
    "code_indx_nocopy": [
      287,
      22,
      23,
      1,
      12,
      34,
      12,
      26,
      13,
      26,
      96,
      82,
      16,
      12,
      13,
      13,
      14,
      15,
      16,
      7,
      26,
      9,
      104,
      1,
      43,
      8,
      32,
      1,
      34,
      17,
      8,
      82,
      17,
      16,
      17
    ]
  },
  {
    "intent": [
      "save",
      "current",
      "figure",
      "to",
      "file",
      "str_0",
      "with",
      "resolution",
      "of",
      "1000",
      "dpi"
    ],
    "code": [
      "plt",
      ".",
      "savefig",
      "(",
      "'str_0'",
      ",",
      "dpi",
      "=",
      "1000",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "graph.png",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      333,
      179,
      465,
      8,
      126,
      5,
      79,
      465,
      2,
      465,
      465
    ],
    "code_indx_copy": [
      196,
      22,
      407,
      1,
      29,
      8,
      538,
      19,
      274,
      17
    ],
    "code_indx_nocopy": [
      196,
      22,
      407,
      1,
      29,
      8,
      524,
      19,
      274,
      17
    ]
  },
  {
    "intent": [
      "delete",
      "items",
      "from",
      "list",
      "var_0",
      "if",
      "the",
      "item",
      "exist",
      "in",
      "list",
      "var_1"
    ],
    "code": [
      "var_0",
      "=",
      "[",
      "[",
      "x",
      "for",
      "x",
      "in",
      "sublist",
      "if",
      "x",
      "not",
      "in",
      "to_del",
      "]",
      "for",
      "sublist",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "my_list",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "to_dell",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      86,
      39,
      58,
      4,
      26,
      150,
      18,
      156,
      185,
      24,
      4,
      63
    ],
    "code_indx_copy": [
      34,
      19,
      12,
      12,
      26,
      7,
      26,
      9,
      428,
      67,
      26,
      281,
      9,
      524,
      16,
      7,
      428,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      12,
      12,
      26,
      7,
      26,
      9,
      428,
      67,
      26,
      281,
      9,
      524,
      16,
      7,
      428,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "find",
      "all",
      "the",
      "elements",
      "that",
      "consists",
      "value",
      "str_0",
      "in",
      "a",
      "list",
      "of",
      "tuples",
      "str_1"
    ],
    "code": [
      "[",
      "item",
      "for",
      "item",
      "in",
      "str_1",
      "if",
      "1",
      "in",
      "item",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "1",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "a",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      47,
      38,
      18,
      1,
      195,
      465,
      143,
      5,
      24,
      3,
      4,
      2,
      33,
      32
    ],
    "code_indx_copy": [
      12,
      387,
      7,
      387,
      9,
      37,
      67,
      15,
      9,
      387,
      16
    ],
    "code_indx_nocopy": [
      12,
      387,
      7,
      387,
      9,
      37,
      67,
      15,
      9,
      387,
      16
    ]
  },
  {
    "intent": [
      "find",
      "all",
      "elements",
      "in",
      "a",
      "list",
      "of",
      "tuples",
      "var_0",
      "where",
      "the",
      "first",
      "element",
      "of",
      "each",
      "tuple",
      "equals",
      "1"
    ],
    "code": [
      "[",
      "item",
      "for",
      "item",
      "in",
      "var_0",
      "if",
      "item",
      "[",
      "0",
      "]",
      "==",
      "1",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      47,
      38,
      1,
      24,
      3,
      4,
      2,
      33,
      26,
      155,
      18,
      151,
      49,
      2,
      22,
      113,
      465,
      237
    ],
    "code_indx_copy": [
      12,
      387,
      7,
      387,
      9,
      34,
      67,
      387,
      12,
      43,
      16,
      76,
      15,
      16
    ],
    "code_indx_nocopy": [
      12,
      387,
      7,
      387,
      9,
      34,
      67,
      387,
      12,
      43,
      16,
      76,
      15,
      16
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "index",
      "value",
      "in",
      "list",
      "var_0",
      "using",
      "enumerate",
      "in",
      "list",
      "comprehension"
    ],
    "code": [
      "{",
      "p",
      ".",
      "id",
      ":",
      "{",
      "'id'",
      ":",
      "p",
      ".",
      "id",
      ",",
      "'position'",
      ":",
      "ind",
      "}",
      "for",
      "ind",
      ",",
      "p",
      "in",
      "enumerate",
      "(",
      "var_0",
      ")",
      "}"
    ],
    "slot_map": {
      "var_0": {
        "value": "p_list",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      18,
      37,
      143,
      24,
      4,
      26,
      109,
      465,
      24,
      4,
      346
    ],
    "code_indx_copy": [
      52,
      435,
      22,
      80,
      13,
      52,
      524,
      13,
      435,
      22,
      80,
      8,
      524,
      13,
      524,
      53,
      7,
      524,
      8,
      435,
      9,
      10,
      1,
      34,
      17,
      53
    ],
    "code_indx_nocopy": [
      52,
      435,
      22,
      80,
      13,
      52,
      524,
      13,
      435,
      22,
      80,
      8,
      524,
      13,
      524,
      53,
      7,
      524,
      8,
      435,
      9,
      10,
      1,
      34,
      17,
      53
    ]
  },
  {
    "intent": [
      "how",
      "to",
      "uniqify",
      "a",
      "list",
      "of",
      "dict",
      "in",
      "python"
    ],
    "code": [
      "[",
      "dict",
      "(",
      "y",
      ")",
      "for",
      "y",
      "in",
      "set",
      "(",
      "tuple",
      "(",
      "x",
      ".",
      "items",
      "(",
      ")",
      ")",
      "for",
      "x",
      "in",
      "d",
      ")",
      "]"
    ],
    "slot_map": {},
    "intent_indx": [
      77,
      8,
      465,
      3,
      4,
      2,
      186,
      24,
      50
    ],
    "code_indx_copy": [
      12,
      70,
      1,
      103,
      17,
      7,
      103,
      9,
      189,
      1,
      432,
      1,
      26,
      22,
      35,
      1,
      17,
      17,
      7,
      26,
      9,
      2,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      70,
      1,
      103,
      17,
      7,
      103,
      9,
      189,
      1,
      432,
      1,
      26,
      22,
      35,
      1,
      17,
      17,
      7,
      26,
      9,
      2,
      17,
      16
    ]
  },
  {
    "intent": [
      "load",
      "a",
      "file",
      "str_0",
      "into",
      "the",
      "python",
      "console"
    ],
    "code": [
      "exec",
      "(",
      "compile",
      "(",
      "open",
      "(",
      "'str_0'",
      ")",
      ".",
      "read",
      "(",
      ")",
      ",",
      "'str_0'",
      ",",
      "'exec'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "file.py",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      249,
      3,
      126,
      5,
      12,
      18,
      50,
      465
    ],
    "code_indx_copy": [
      436,
      1,
      83,
      1,
      105,
      1,
      29,
      17,
      22,
      106,
      1,
      17,
      8,
      29,
      8,
      437,
      17,
      17
    ],
    "code_indx_nocopy": [
      436,
      1,
      83,
      1,
      105,
      1,
      29,
      17,
      22,
      106,
      1,
      17,
      8,
      29,
      8,
      437,
      17,
      17
    ]
  },
  {
    "intent": [
      "sqlalchemy",
      "count",
      "the",
      "number",
      "of",
      "rows",
      "in",
      "table",
      "var_0"
    ],
    "code": [
      "rows",
      "=",
      "session",
      ".",
      "query",
      "(",
      "var_0",
      ")",
      ".",
      "count",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "Congress",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      369,
      203,
      18,
      76,
      2,
      80,
      24,
      388,
      26
    ],
    "code_indx_copy": [
      253,
      19,
      425,
      22,
      426,
      1,
      34,
      17,
      22,
      386,
      1,
      17
    ],
    "code_indx_nocopy": [
      253,
      19,
      425,
      22,
      426,
      1,
      34,
      17,
      22,
      386,
      1,
      17
    ]
  },
  {
    "intent": [
      "execute",
      "shell",
      "script",
      "from",
      "python",
      "with",
      "variable"
    ],
    "code": [
      "subprocess",
      ".",
      "call",
      "(",
      "[",
      "'test.sh'",
      ",",
      "str",
      "(",
      "domid",
      ")",
      "]",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      135,
      292,
      246,
      58,
      50,
      79,
      95
    ],
    "code_indx_copy": [
      229,
      22,
      230,
      1,
      12,
      524,
      8,
      25,
      1,
      524,
      17,
      16,
      17
    ],
    "code_indx_nocopy": [
      229,
      22,
      230,
      1,
      12,
      524,
      8,
      25,
      1,
      524,
      17,
      16,
      17
    ]
  },
  {
    "intent": [
      "read",
      "excel",
      "file",
      "var_0",
      "using",
      "pandas"
    ],
    "code": [
      "dfs",
      "=",
      "pd",
      ".",
      "read_excel",
      "(",
      "var_0",
      ",",
      "sheetname",
      "=",
      "None",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "file_name",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      124,
      465,
      126,
      26,
      109,
      42
    ],
    "code_indx_copy": [
      524,
      19,
      162,
      22,
      524,
      1,
      34,
      8,
      524,
      19,
      209,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      162,
      22,
      524,
      1,
      34,
      8,
      524,
      19,
      209,
      17
    ]
  },
  {
    "intent": [
      "unpack",
      "the",
      "binary",
      "data",
      "represented",
      "by",
      "the",
      "hexadecimal",
      "string",
      "str_0",
      "to",
      "a",
      "float"
    ],
    "code": [
      "struct",
      ".",
      "unpack",
      "(",
      "'d'",
      ",",
      "binascii",
      ".",
      "unhexlify",
      "(",
      "'str_0'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "4081637ef7d0424a",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      142,
      18,
      276,
      65,
      465,
      44,
      18,
      465,
      14,
      5,
      8,
      3,
      94
    ],
    "code_indx_copy": [
      317,
      22,
      406,
      1,
      438,
      8,
      524,
      22,
      524,
      1,
      29,
      17,
      17
    ],
    "code_indx_nocopy": [
      317,
      22,
      406,
      1,
      438,
      8,
      524,
      22,
      524,
      1,
      29,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "index",
      "of",
      "numpy",
      "array",
      "var_0",
      "with",
      "another",
      "numpy",
      "array",
      "var_1"
    ],
    "code": [
      "var_0",
      "[",
      "tuple",
      "(",
      "var_1",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "b",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      37,
      2,
      84,
      85,
      26,
      79,
      176,
      84,
      85,
      63
    ],
    "code_indx_copy": [
      34,
      12,
      432,
      1,
      91,
      17,
      16
    ],
    "code_indx_nocopy": [
      34,
      12,
      432,
      1,
      91,
      17,
      16
    ]
  },
  {
    "intent": [
      "find",
      "all",
      "possible",
      "sequences",
      "of",
      "elements",
      "in",
      "a",
      "list",
      "str_0"
    ],
    "code": [
      "map",
      "(",
      "list",
      ",",
      "permutations",
      "(",
      "[",
      "str_0",
      "]",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "[2, 3, 4]",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "[2, 3, 4]",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      47,
      38,
      465,
      465,
      2,
      1,
      24,
      3,
      4,
      5
    ],
    "code_indx_copy": [
      24,
      1,
      33,
      8,
      381,
      1,
      12,
      11,
      16,
      17,
      17
    ],
    "code_indx_nocopy": [
      24,
      1,
      33,
      8,
      381,
      1,
      12,
      11,
      16,
      17,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "list",
      "var_0",
      "based",
      "on",
      "another",
      "sorted",
      "list",
      "var_1"
    ],
    "code": [
      "sorted",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "var_1",
      ".",
      "index",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "unsorted_list",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "presorted_list",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      3,
      4,
      26,
      208,
      139,
      176,
      224,
      4,
      63
    ],
    "code_indx_copy": [
      101,
      1,
      34,
      8,
      102,
      19,
      91,
      22,
      160,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      34,
      8,
      102,
      19,
      91,
      22,
      160,
      17
    ]
  },
  {
    "intent": [
      "how",
      "to",
      "get",
      "yesterday",
      "in",
      "python"
    ],
    "code": [
      "datetime",
      ".",
      "datetime",
      ".",
      "now",
      "(",
      ")",
      "-",
      "datetime",
      ".",
      "timedelta",
      "(",
      "days",
      "=",
      "1",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      77,
      8,
      17,
      465,
      24,
      50
    ],
    "code_indx_copy": [
      27,
      22,
      27,
      22,
      294,
      1,
      17,
      14,
      27,
      22,
      295,
      1,
      296,
      19,
      15,
      17
    ],
    "code_indx_nocopy": [
      27,
      22,
      27,
      22,
      294,
      1,
      17,
      14,
      27,
      22,
      295,
      1,
      296,
      19,
      15,
      17
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "dataframe",
      "var_0",
      "filled",
      "with",
      "zeros",
      "with",
      "indices",
      "from",
      "0",
      "to",
      "length",
      "of",
      "var_1",
      "and",
      "column",
      "names",
      "from",
      "var_2"
    ],
    "code": [
      "var_0",
      "=",
      "pd",
      ".",
      "DataFrame",
      "(",
      "0",
      ",",
      "index",
      "=",
      "np",
      ".",
      "arange",
      "(",
      "len",
      "(",
      "var_1",
      ")",
      ")",
      ",",
      "columns",
      "=",
      "var_2",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "d",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "data",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "feature_list",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      148,
      3,
      43,
      26,
      465,
      79,
      465,
      79,
      326,
      58,
      107,
      8,
      209,
      2,
      63,
      31,
      147,
      321,
      58,
      64
    ],
    "code_indx_copy": [
      34,
      19,
      162,
      22,
      164,
      1,
      43,
      8,
      160,
      19,
      74,
      22,
      193,
      1,
      32,
      1,
      91,
      17,
      17,
      8,
      192,
      19,
      94,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      162,
      22,
      164,
      1,
      43,
      8,
      160,
      19,
      74,
      22,
      193,
      1,
      32,
      1,
      91,
      17,
      17,
      8,
      192,
      19,
      94,
      17
    ]
  },
  {
    "intent": [
      "find",
      "the",
      "index",
      "of",
      "sub",
      "string",
      "str_0",
      "in",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "find",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "World",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "x",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      47,
      18,
      37,
      2,
      431,
      14,
      5,
      24,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      282,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      282,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "find",
      "the",
      "index",
      "of",
      "sub",
      "string",
      "str_0",
      "in",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "find",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "Aloha",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "x",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      47,
      18,
      37,
      2,
      431,
      14,
      5,
      24,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      282,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      282,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "find",
      "the",
      "index",
      "of",
      "sub",
      "string",
      "str_0",
      "in",
      "string",
      "str_1"
    ],
    "code": [
      "\"\"\"str_1\"\"\"",
      ".",
      "index",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "cc",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "sdfasdf",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      47,
      18,
      37,
      2,
      431,
      14,
      5,
      24,
      14,
      32
    ],
    "code_indx_copy": [
      439,
      22,
      160,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      439,
      22,
      160,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "find",
      "the",
      "index",
      "of",
      "sub",
      "string",
      "str_0",
      "in",
      "string",
      "str_1"
    ],
    "code": [
      "\"\"\"str_1\"\"\"",
      ".",
      "index",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "df",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "sdfasdf",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      47,
      18,
      37,
      2,
      431,
      14,
      5,
      24,
      14,
      32
    ],
    "code_indx_copy": [
      439,
      22,
      160,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      439,
      22,
      160,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "find",
      "the",
      "index",
      "of",
      "sub",
      "string",
      "str_0",
      "in",
      "string",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "find",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "a",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "str",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      47,
      18,
      37,
      2,
      431,
      14,
      5,
      24,
      14,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      282,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      282,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "find",
      "the",
      "index",
      "of",
      "sub",
      "string",
      "str_0",
      "in",
      "string",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "find",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "g",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "str",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      47,
      18,
      37,
      2,
      431,
      14,
      5,
      24,
      14,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      282,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      282,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "find",
      "the",
      "index",
      "of",
      "sub",
      "string",
      "str_0",
      "in",
      "string",
      "var_0",
      "starting",
      "from",
      "index",
      "11"
    ],
    "code": [
      "var_0",
      ".",
      "find",
      "(",
      "'str_0'",
      ",",
      "11",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "s",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "str",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      47,
      18,
      37,
      2,
      431,
      14,
      5,
      24,
      14,
      26,
      316,
      58,
      37,
      465
    ],
    "code_indx_copy": [
      34,
      22,
      282,
      1,
      29,
      8,
      380,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      282,
      1,
      29,
      8,
      380,
      17
    ]
  },
  {
    "intent": [
      "find",
      "the",
      "index",
      "of",
      "sub",
      "string",
      "str_0",
      "in",
      "string",
      "var_0",
      "starting",
      "from",
      "index",
      "15"
    ],
    "code": [
      "var_0",
      ".",
      "find",
      "(",
      "'str_0'",
      ",",
      "15",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "s",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "str",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      47,
      18,
      37,
      2,
      431,
      14,
      5,
      24,
      14,
      26,
      316,
      58,
      37,
      465
    ],
    "code_indx_copy": [
      34,
      22,
      282,
      1,
      29,
      8,
      400,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      282,
      1,
      29,
      8,
      400,
      17
    ]
  },
  {
    "intent": [
      "find",
      "the",
      "index",
      "of",
      "sub",
      "string",
      "str_0",
      "in",
      "string",
      "var_0",
      "starting",
      "from",
      "index",
      "16"
    ],
    "code": [
      "var_0",
      ".",
      "find",
      "(",
      "'str_0'",
      ",",
      "16",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "s",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "str",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      47,
      18,
      37,
      2,
      431,
      14,
      5,
      24,
      14,
      26,
      316,
      58,
      37,
      465
    ],
    "code_indx_copy": [
      34,
      22,
      282,
      1,
      29,
      8,
      271,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      282,
      1,
      29,
      8,
      271,
      17
    ]
  },
  {
    "intent": [
      "find",
      "the",
      "index",
      "of",
      "sub",
      "string",
      "str_0",
      "in",
      "string",
      "var_0",
      "starting",
      "from",
      "index",
      "11",
      "and",
      "ending",
      "at",
      "index",
      "14"
    ],
    "code": [
      "var_0",
      ".",
      "find",
      "(",
      "'str_0'",
      ",",
      "11",
      ",",
      "14",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "s",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "str",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      47,
      18,
      37,
      2,
      431,
      14,
      5,
      24,
      14,
      26,
      316,
      58,
      37,
      465,
      31,
      432,
      35,
      37,
      465
    ],
    "code_indx_copy": [
      34,
      22,
      282,
      1,
      29,
      8,
      380,
      8,
      546,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      282,
      1,
      29,
      8,
      380,
      8,
      524,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "list",
      "of",
      "date",
      "strings",
      "str_0"
    ],
    "code": [
      "sorted",
      "(",
      "str_0",
      ",",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "datetime",
      ".",
      "datetime",
      ".",
      "strptime",
      "(",
      "x",
      ",",
      "'%m-%Y'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "d",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      117,
      4,
      2,
      133,
      259,
      5
    ],
    "code_indx_copy": [
      101,
      1,
      11,
      8,
      102,
      19,
      44,
      26,
      13,
      27,
      22,
      27,
      22,
      28,
      1,
      26,
      8,
      524,
      17,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      11,
      8,
      102,
      19,
      44,
      26,
      13,
      27,
      22,
      27,
      22,
      28,
      1,
      26,
      8,
      524,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "all",
      "the",
      "sentences",
      "from",
      "a",
      "string",
      "var_0",
      "using",
      "regex"
    ],
    "code": [
      "re",
      ".",
      "split",
      "(",
      "'\\\\.\\\\s'",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "text",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      38,
      18,
      465,
      58,
      3,
      14,
      26,
      109,
      40
    ],
    "code_indx_copy": [
      39,
      22,
      71,
      1,
      524,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      71,
      1,
      524,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "regular",
      "expression",
      "in",
      "python",
      "sentence",
      "extractor"
    ],
    "code": [
      "re",
      ".",
      "split",
      "(",
      "'\\\\.\\\\s'",
      ",",
      "re",
      ".",
      "sub",
      "(",
      "'\\\\.\\\\s*$'",
      ",",
      "''",
      ",",
      "text",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      250,
      226,
      24,
      50,
      465,
      465
    ],
    "code_indx_copy": [
      39,
      22,
      71,
      1,
      524,
      8,
      39,
      22,
      40,
      1,
      524,
      8,
      21,
      8,
      355,
      17,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      71,
      1,
      524,
      8,
      39,
      22,
      40,
      1,
      524,
      8,
      21,
      8,
      355,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "all",
      "characters",
      "in",
      "string",
      "str_0",
      "up",
      "to",
      "the",
      "fourth",
      "index"
    ],
    "code": [
      "\"\"\"str_0\"\"\"",
      "[",
      ":",
      "4",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "foobar",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      38,
      98,
      24,
      14,
      5,
      379,
      8,
      18,
      465,
      37
    ],
    "code_indx_copy": [
      212,
      12,
      13,
      184,
      16
    ],
    "code_indx_nocopy": [
      212,
      12,
      13,
      184,
      16
    ]
  },
  {
    "intent": [
      "cut",
      "a",
      "string",
      "by",
      "delimiter",
      "str_0"
    ],
    "code": [
      "s",
      ".",
      "rfind",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "&",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      3,
      14,
      44,
      329,
      5
    ],
    "code_indx_copy": [
      181,
      22,
      440,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      181,
      22,
      440,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "cut",
      "a",
      "string",
      "using",
      "delimiter",
      "str_0"
    ],
    "code": [
      "s",
      "[",
      ":",
      "s",
      ".",
      "rfind",
      "(",
      "'str_0'",
      ")",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "&",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      3,
      14,
      109,
      329,
      5
    ],
    "code_indx_copy": [
      181,
      12,
      13,
      181,
      22,
      440,
      1,
      29,
      17,
      16
    ],
    "code_indx_nocopy": [
      181,
      12,
      13,
      181,
      22,
      440,
      1,
      29,
      17,
      16
    ]
  },
  {
    "intent": [
      "find",
      "a",
      "tag",
      "var_0",
      "whose",
      "var_1",
      "attribute",
      "is",
      "var_2",
      "in",
      "selenium"
    ],
    "code": [
      "driver",
      ".",
      "find_element_by_xpath",
      "(",
      "\"//option[@value='\"",
      "+",
      "var_2",
      "+",
      "\"']\"",
      ")",
      ".",
      "click",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "option",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "value",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "state",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      47,
      3,
      72,
      26,
      228,
      63,
      341,
      152,
      64,
      24,
      51
    ],
    "code_indx_copy": [
      46,
      22,
      47,
      1,
      524,
      96,
      94,
      96,
      524,
      17,
      22,
      156,
      1,
      17
    ],
    "code_indx_nocopy": [
      46,
      22,
      47,
      1,
      524,
      96,
      94,
      96,
      524,
      17,
      22,
      156,
      1,
      17
    ]
  },
  {
    "intent": [
      "append",
      "line",
      "str_0",
      "to",
      "file",
      "str_1"
    ],
    "code": [
      "with",
      "open",
      "(",
      "'str_1'",
      ",",
      "'a'",
      ")",
      "as",
      "myfile",
      ":",
      "\n",
      "    ",
      "myfile",
      ".",
      "write",
      "(",
      "'str_0'",
      ")",
      ""
    ],
    "slot_map": {
      "str_0": {
        "value": "appended text",
        "quote": "\"",
        "type": "str"
      },
      "str_1": {
        "value": "test.txt",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      111,
      172,
      5,
      8,
      126,
      32
    ],
    "code_indx_copy": [
      364,
      105,
      1,
      63,
      8,
      413,
      17,
      366,
      524,
      13,
      161,
      216,
      524,
      22,
      131,
      1,
      29,
      17,
      218
    ],
    "code_indx_nocopy": [
      364,
      105,
      1,
      63,
      8,
      413,
      17,
      366,
      524,
      13,
      161,
      216,
      524,
      22,
      131,
      1,
      29,
      17,
      218
    ]
  },
  {
    "intent": [
      "append",
      "line",
      "str_0",
      "to",
      "file",
      "str_1"
    ],
    "code": [
      "with",
      "open",
      "(",
      "'str_1'",
      ",",
      "'a'",
      ")",
      "as",
      "f",
      ":",
      "\n",
      "    ",
      "f",
      ".",
      "write",
      "(",
      "'str_0'",
      ")",
      ""
    ],
    "slot_map": {
      "str_0": {
        "value": "cool beans...",
        "quote": "\"",
        "type": "str"
      },
      "str_1": {
        "value": "foo",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      111,
      172,
      5,
      8,
      126,
      32
    ],
    "code_indx_copy": [
      364,
      105,
      1,
      63,
      8,
      413,
      17,
      366,
      190,
      13,
      161,
      216,
      190,
      22,
      131,
      1,
      29,
      17,
      218
    ],
    "code_indx_nocopy": [
      364,
      105,
      1,
      63,
      8,
      413,
      17,
      366,
      190,
      13,
      161,
      216,
      190,
      22,
      131,
      1,
      29,
      17,
      218
    ]
  },
  {
    "intent": [
      "append",
      "to",
      "file",
      "str_0",
      "content",
      "str_1"
    ],
    "code": [
      "with",
      "open",
      "(",
      "'str_0'",
      ",",
      "'ab'",
      ")",
      "as",
      "f",
      ":",
      "\n",
      "    ",
      "pass",
      ""
    ],
    "slot_map": {
      "str_0": {
        "value": "test1",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "koko",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      111,
      8,
      126,
      5,
      348,
      32
    ],
    "code_indx_copy": [
      364,
      105,
      1,
      29,
      8,
      524,
      17,
      366,
      190,
      13,
      161,
      216,
      217,
      218
    ],
    "code_indx_nocopy": [
      364,
      105,
      1,
      29,
      8,
      524,
      17,
      366,
      190,
      13,
      161,
      216,
      217,
      218
    ]
  },
  {
    "intent": [
      "append",
      "to",
      "file",
      "str_0",
      "content",
      "str_1"
    ],
    "code": [
      "open",
      "(",
      "'str_0'",
      ",",
      "'a+b'",
      ")",
      ".",
      "write",
      "(",
      "'str_1'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "test",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "koko",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      111,
      8,
      126,
      5,
      348,
      32
    ],
    "code_indx_copy": [
      105,
      1,
      29,
      8,
      524,
      17,
      22,
      131,
      1,
      63,
      17
    ],
    "code_indx_nocopy": [
      105,
      1,
      29,
      8,
      524,
      17,
      22,
      131,
      1,
      63,
      17
    ]
  },
  {
    "intent": [
      "split",
      "string",
      "str_0",
      "into",
      "tokens"
    ],
    "code": [
      "print",
      "(",
      "[",
      "i",
      "for",
      "i",
      "in",
      "re",
      ".",
      "split",
      "(",
      "'([\\\\d.]+|\\\\W+)'",
      ",",
      "'str_0'",
      ")",
      "if",
      "i",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "x+13.5*10x-4e1",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      138,
      14,
      5,
      12,
      465
    ],
    "code_indx_copy": [
      49,
      1,
      12,
      6,
      7,
      6,
      9,
      39,
      22,
      71,
      1,
      524,
      8,
      29,
      17,
      67,
      6,
      16,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      12,
      6,
      7,
      6,
      9,
      39,
      22,
      71,
      1,
      524,
      8,
      29,
      17,
      67,
      6,
      16,
      17
    ]
  },
  {
    "intent": [
      "find",
      "all",
      "chinese",
      "characters",
      "in",
      "string",
      "var_0"
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'[\u4e00-\\u9fff]+'",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "ipath",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      47,
      38,
      465,
      98,
      24,
      14,
      26
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      524,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      524,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "split",
      "string",
      "var_0",
      "by",
      "letter",
      "str_0"
    ],
    "code": [
      "str_0",
      ".",
      "split",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "s",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      138,
      14,
      26,
      44,
      433,
      5
    ],
    "code_indx_copy": [
      11,
      22,
      71,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      11,
      22,
      71,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "run",
      "shell",
      "command",
      "str_0",
      "in",
      "the",
      "background"
    ],
    "code": [
      "subprocess",
      ".",
      "Popen",
      "(",
      "[",
      "'rm'",
      ",",
      "'-r'",
      ",",
      "'some.file'",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "rm -r some.file",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      251,
      292,
      137,
      5,
      24,
      18,
      465
    ],
    "code_indx_copy": [
      229,
      22,
      441,
      1,
      12,
      524,
      8,
      524,
      8,
      524,
      16,
      17
    ],
    "code_indx_nocopy": [
      229,
      22,
      441,
      1,
      12,
      524,
      8,
      524,
      8,
      524,
      16,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "list",
      "of",
      "dictionaries",
      "`",
      "listofdict",
      "into",
      "a",
      "dictionary",
      "of",
      "dictionaries"
    ],
    "code": [
      "dict",
      "(",
      "(",
      "d",
      "[",
      "'name'",
      "]",
      ",",
      "d",
      ")",
      "for",
      "d",
      "in",
      "listofdict",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      11,
      3,
      4,
      2,
      188,
      345,
      465,
      12,
      3,
      25,
      2,
      188
    ],
    "code_indx_copy": [
      70,
      1,
      1,
      2,
      12,
      442,
      16,
      8,
      2,
      17,
      7,
      2,
      9,
      534,
      17
    ],
    "code_indx_nocopy": [
      70,
      1,
      1,
      2,
      12,
      442,
      16,
      8,
      2,
      17,
      7,
      2,
      9,
      524,
      17
    ]
  },
  {
    "intent": [
      "print",
      "current",
      "date",
      "and",
      "time",
      "in",
      "a",
      "regular",
      "format"
    ],
    "code": [
      "datetime",
      ".",
      "datetime",
      ".",
      "now",
      "(",
      ")",
      ".",
      "strftime",
      "(",
      "'%Y-%m-%d %H:%M'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      166,
      179,
      133,
      31,
      134,
      24,
      3,
      250,
      16
    ],
    "code_indx_copy": [
      27,
      22,
      27,
      22,
      294,
      1,
      17,
      22,
      65,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      27,
      22,
      27,
      22,
      294,
      1,
      17,
      22,
      65,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "print",
      "current",
      "date",
      "and",
      "time",
      "in",
      "a",
      "regular",
      "format"
    ],
    "code": [
      "time",
      ".",
      "strftime",
      "(",
      "'%Y-%m-%d %H:%M'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      166,
      179,
      133,
      31,
      134,
      24,
      3,
      250,
      16
    ],
    "code_indx_copy": [
      84,
      22,
      65,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      84,
      22,
      65,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "find",
      "consecutive",
      "consonants",
      "in",
      "a",
      "word",
      "var_0",
      "using",
      "regex"
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'[bcdfghjklmnpqrstvwxyz]+'",
      ",",
      "'CONCERTATION'",
      ",",
      "re",
      ".",
      "IGNORECASE",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "CONCENTRATION",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      47,
      434,
      465,
      24,
      3,
      239,
      26,
      109,
      40
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      524,
      8,
      524,
      8,
      39,
      22,
      180,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      524,
      8,
      524,
      8,
      39,
      22,
      180,
      17
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "list",
      "of",
      "indices",
      "of",
      "non",
      "zero",
      "elements",
      "in",
      "a",
      "list",
      "var_0"
    ],
    "code": [
      "[",
      "i",
      "for",
      "i",
      ",",
      "e",
      "in",
      "enumerate",
      "(",
      "var_0",
      ")",
      "if",
      "e",
      "!=",
      "0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      3,
      4,
      2,
      326,
      2,
      465,
      261,
      1,
      24,
      3,
      4,
      26
    ],
    "code_indx_copy": [
      12,
      6,
      7,
      6,
      8,
      420,
      9,
      10,
      1,
      34,
      17,
      67,
      420,
      88,
      43,
      16
    ],
    "code_indx_nocopy": [
      12,
      6,
      7,
      6,
      8,
      420,
      9,
      10,
      1,
      34,
      17,
      67,
      420,
      88,
      43,
      16
    ]
  },
  {
    "intent": [
      "get",
      "multiple",
      "integer",
      "values",
      "from",
      "a",
      "string",
      "str_0"
    ],
    "code": [
      "map",
      "(",
      "int",
      ",",
      "re",
      ".",
      "findall",
      "(",
      "'\\\\d+'",
      ",",
      "str_0",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "string1",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      6,
      10,
      20,
      58,
      3,
      14,
      5
    ],
    "code_indx_copy": [
      24,
      1,
      20,
      8,
      39,
      22,
      48,
      1,
      443,
      8,
      11,
      17,
      17
    ],
    "code_indx_nocopy": [
      24,
      1,
      20,
      8,
      39,
      22,
      48,
      1,
      443,
      8,
      11,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "path",
      "of",
      "python",
      "executable",
      "under",
      "windows"
    ],
    "code": [
      "os",
      ".",
      "path",
      ".",
      "dirname",
      "(",
      "sys",
      ".",
      "executable",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      17,
      18,
      199,
      2,
      50,
      465,
      465,
      435
    ],
    "code_indx_copy": [
      113,
      22,
      114,
      22,
      378,
      1,
      153,
      22,
      533,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      114,
      22,
      378,
      1,
      153,
      22,
      524,
      17
    ]
  },
  {
    "intent": [
      "move",
      "an",
      "x-axis",
      "label",
      "to",
      "the",
      "top",
      "of",
      "a",
      "plot",
      "var_0",
      "in",
      "matplotlib"
    ],
    "code": [
      "var_0",
      ".",
      "xaxis",
      ".",
      "set_label_position",
      "(",
      "'top'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "ax",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      169,
      225,
      317,
      465,
      8,
      18,
      421,
      2,
      3,
      244,
      26,
      24,
      350
    ],
    "code_indx_copy": [
      34,
      22,
      409,
      22,
      524,
      1,
      410,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      409,
      22,
      524,
      1,
      410,
      17
    ]
  },
  {
    "intent": [
      "move",
      "x-axis",
      "to",
      "the",
      "top",
      "of",
      "a",
      "plot",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "xaxis",
      ".",
      "tick_top",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "ax",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      169,
      317,
      8,
      18,
      421,
      2,
      3,
      244,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      409,
      22,
      524,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      409,
      22,
      524,
      1,
      17
    ]
  },
  {
    "intent": [
      "move",
      "x-axis",
      "of",
      "the",
      "pyplot",
      "object",
      "var_0",
      "to",
      "the",
      "top",
      "of",
      "a",
      "plot",
      "in",
      "matplotlib"
    ],
    "code": [
      "var_0",
      ".",
      "xaxis",
      ".",
      "set_ticks_position",
      "(",
      "'top'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "ax",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      169,
      317,
      2,
      18,
      319,
      15,
      26,
      8,
      18,
      421,
      2,
      3,
      244,
      24,
      350
    ],
    "code_indx_copy": [
      34,
      22,
      409,
      22,
      524,
      1,
      410,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      409,
      22,
      524,
      1,
      410,
      17
    ]
  },
  {
    "intent": [
      "parse",
      "string",
      "str_0",
      "to",
      "datetime",
      "object",
      "using",
      "format",
      "str_1"
    ],
    "code": [
      "datetime",
      ".",
      "strptime",
      "(",
      "'str_0'",
      ",",
      "'str_1'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "2015/01/01 12:12am",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "%Y/%m/%d %I:%M%p",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      73,
      14,
      5,
      8,
      13,
      15,
      109,
      16,
      32
    ],
    "code_indx_copy": [
      27,
      22,
      28,
      1,
      29,
      8,
      63,
      17
    ],
    "code_indx_nocopy": [
      27,
      22,
      28,
      1,
      29,
      8,
      63,
      17
    ]
  },
  {
    "intent": [
      "open",
      "image",
      "str_0"
    ],
    "code": [
      "img",
      "=",
      "Image",
      ".",
      "open",
      "(",
      "'str_0'",
      ")",
      "\n",
      "img",
      ".",
      "show",
      "(",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "picture.jpg",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      284,
      299,
      5
    ],
    "code_indx_copy": [
      444,
      19,
      301,
      22,
      105,
      1,
      29,
      17,
      161,
      444,
      22,
      302,
      1,
      17
    ],
    "code_indx_nocopy": [
      444,
      19,
      301,
      22,
      105,
      1,
      29,
      17,
      161,
      444,
      22,
      302,
      1,
      17
    ]
  },
  {
    "intent": [
      "open",
      "image",
      "str_0"
    ],
    "code": [
      "img",
      "=",
      "Image",
      ".",
      "open",
      "(",
      "'str_0'",
      ")",
      "\n",
      "Img",
      ".",
      "show"
    ],
    "slot_map": {
      "str_0": {
        "value": "picture.jpg",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      284,
      299,
      5
    ],
    "code_indx_copy": [
      444,
      19,
      301,
      22,
      105,
      1,
      29,
      17,
      161,
      524,
      22,
      302
    ],
    "code_indx_nocopy": [
      444,
      19,
      301,
      22,
      105,
      1,
      29,
      17,
      161,
      524,
      22,
      302
    ]
  },
  {
    "intent": [
      "terminate",
      "the",
      "script",
      "using",
      "status",
      "value",
      "0"
    ],
    "code": [
      "sys",
      ".",
      "exit",
      "(",
      "0",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      465,
      18,
      246,
      109,
      436,
      143,
      107
    ],
    "code_indx_copy": [
      153,
      22,
      416,
      1,
      43,
      17
    ],
    "code_indx_nocopy": [
      153,
      22,
      416,
      1,
      43,
      17
    ]
  },
  {
    "intent": [
      "abort",
      "the",
      "execution",
      "of",
      "the",
      "script",
      "using",
      "message",
      "str_0"
    ],
    "code": [
      "sys",
      ".",
      "exit",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "aa! errors!",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      18,
      465,
      2,
      18,
      246,
      109,
      157,
      5
    ],
    "code_indx_copy": [
      153,
      22,
      416,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      153,
      22,
      416,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "abort",
      "the",
      "execution",
      "of",
      "a",
      "python",
      "script"
    ],
    "code": [
      "sys",
      ".",
      "exit",
      "(",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      465,
      18,
      465,
      2,
      3,
      50,
      246
    ],
    "code_indx_copy": [
      153,
      22,
      416,
      1,
      17
    ],
    "code_indx_nocopy": [
      153,
      22,
      416,
      1,
      17
    ]
  },
  {
    "intent": [
      "find",
      "maximum",
      "with",
      "lookahead",
      "=",
      "4",
      "in",
      "a",
      "list",
      "var_0"
    ],
    "code": [
      "[",
      "max",
      "(",
      "abs",
      "(",
      "x",
      ")",
      "for",
      "x",
      "in",
      "var_0",
      "[",
      "i",
      ":",
      "i",
      "+",
      "4",
      "]",
      ")",
      "for",
      "i",
      "in",
      "range",
      "(",
      "0",
      ",",
      "len",
      "(",
      "var_0",
      ")",
      ",",
      "4",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "arr",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      47,
      227,
      79,
      465,
      465,
      231,
      24,
      3,
      4,
      26
    ],
    "code_indx_copy": [
      12,
      179,
      1,
      359,
      1,
      26,
      17,
      7,
      26,
      9,
      34,
      12,
      6,
      13,
      6,
      96,
      184,
      16,
      17,
      7,
      6,
      9,
      104,
      1,
      43,
      8,
      32,
      1,
      34,
      17,
      8,
      184,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      179,
      1,
      359,
      1,
      26,
      17,
      7,
      26,
      9,
      34,
      12,
      6,
      13,
      6,
      96,
      184,
      16,
      17,
      7,
      6,
      9,
      104,
      1,
      43,
      8,
      32,
      1,
      34,
      17,
      8,
      184,
      17,
      16
    ]
  },
  {
    "intent": [
      "set",
      "the",
      "current",
      "working",
      "directory",
      "to",
      "str_0"
    ],
    "code": [
      "os",
      ".",
      "chdir",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "c:\\Users\\uname\\desktop\\python",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      59,
      18,
      179,
      437,
      175,
      8,
      5
    ],
    "code_indx_copy": [
      113,
      22,
      445,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      445,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "set",
      "the",
      "current",
      "working",
      "directory",
      "to",
      "path",
      "var_0"
    ],
    "code": [
      "os",
      ".",
      "chdir",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "path",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      59,
      18,
      179,
      437,
      175,
      8,
      199,
      26
    ],
    "code_indx_copy": [
      113,
      22,
      445,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      445,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "list",
      "var_0",
      "of",
      "all",
      "the",
      "items",
      "in",
      "list",
      "var_1",
      "that",
      "are",
      "not",
      "of",
      "type",
      "var_2"
    ],
    "code": [
      "var_0",
      "=",
      "[",
      "x",
      "for",
      "x",
      "in",
      "var_1",
      "if",
      "not",
      "isinstance",
      "(",
      "x",
      ",",
      "var_2",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "no_integers",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "mylist",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "int",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      3,
      4,
      26,
      2,
      38,
      18,
      39,
      24,
      4,
      63,
      195,
      243,
      105,
      2,
      330,
      64
    ],
    "code_indx_copy": [
      34,
      19,
      12,
      26,
      7,
      26,
      9,
      91,
      67,
      281,
      206,
      1,
      26,
      8,
      94,
      17,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      12,
      26,
      7,
      26,
      9,
      91,
      67,
      281,
      206,
      1,
      26,
      8,
      94,
      17,
      16
    ]
  },
  {
    "intent": [
      "match",
      "contents",
      "of",
      "an",
      "element",
      "to",
      "str_0",
      "in",
      "xpath",
      "(",
      "lxml",
      ")"
    ],
    "code": [
      "tree",
      ".",
      "xpath",
      "(",
      "\".//a[text()='Example']\"",
      ")",
      "[",
      "0",
      "]",
      ".",
      "tag"
    ],
    "slot_map": {
      "str_0": {
        "value": "Example",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      144,
      125,
      2,
      225,
      49,
      8,
      5,
      24,
      465,
      212,
      465,
      27
    ],
    "code_indx_copy": [
      524,
      22,
      446,
      1,
      524,
      17,
      12,
      43,
      16,
      22,
      334
    ],
    "code_indx_nocopy": [
      524,
      22,
      446,
      1,
      524,
      17,
      12,
      43,
      16,
      22,
      334
    ]
  },
  {
    "intent": [
      "concatenate",
      "key/value",
      "pairs",
      "in",
      "dictionary",
      "var_0",
      "with",
      "string",
      "str_0",
      "into",
      "a",
      "single",
      "string"
    ],
    "code": [
      "\"\"\", \"\"\"",
      ".",
      "join",
      "(",
      "[",
      "(",
      "str",
      "(",
      "k",
      ")",
      "+",
      "' '",
      "+",
      "str",
      "(",
      "v",
      ")",
      ")",
      "for",
      "k",
      ",",
      "v",
      "in",
      "list",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": ",",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      0,
      88,
      187,
      24,
      25,
      26,
      79,
      14,
      5,
      12,
      3,
      9,
      14
    ],
    "code_indx_copy": [
      122,
      22,
      23,
      1,
      12,
      1,
      25,
      1,
      89,
      17,
      96,
      108,
      96,
      25,
      1,
      90,
      17,
      17,
      7,
      89,
      8,
      90,
      9,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      16,
      17
    ],
    "code_indx_nocopy": [
      122,
      22,
      23,
      1,
      12,
      1,
      25,
      1,
      89,
      17,
      96,
      108,
      96,
      25,
      1,
      90,
      17,
      17,
      7,
      89,
      8,
      90,
      9,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      16,
      17
    ]
  },
  {
    "intent": [
      "strip",
      "all",
      "non-ascii",
      "characters",
      "from",
      "a",
      "unicode",
      "string",
      ",",
      "str_0"
    ],
    "code": [
      "print",
      "(",
      "set",
      "(",
      "re",
      ".",
      "sub",
      "(",
      "'[\\x00-\\x7f]'",
      ",",
      "''",
      ",",
      "'str_0'",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "\u00a3\u20ac\u00a3\u20ac",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      331,
      38,
      335,
      98,
      58,
      3,
      230,
      14,
      62,
      5
    ],
    "code_indx_copy": [
      49,
      1,
      189,
      1,
      39,
      22,
      40,
      1,
      524,
      8,
      21,
      8,
      29,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      189,
      1,
      39,
      22,
      40,
      1,
      524,
      8,
      21,
      8,
      29,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "all",
      "non-ascii",
      "characters",
      "in",
      "a",
      "unicode",
      "string",
      "str_0"
    ],
    "code": [
      "print",
      "(",
      "re",
      ".",
      "sub",
      "(",
      "'[\\x00-\\x7f]'",
      ",",
      "''",
      ",",
      "'str_0'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "\u00a3100 is worth more than \u20ac100",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      38,
      335,
      98,
      24,
      3,
      230,
      14,
      5
    ],
    "code_indx_copy": [
      49,
      1,
      39,
      22,
      40,
      1,
      524,
      8,
      21,
      8,
      29,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      39,
      22,
      40,
      1,
      524,
      8,
      21,
      8,
      29,
      17,
      17
    ]
  },
  {
    "intent": [
      "build",
      "a",
      "dict",
      "of",
      "key",
      ":",
      "value",
      "pairs",
      "from",
      "a",
      "string",
      "representation",
      "of",
      "a",
      "dict",
      ",",
      "str_0"
    ],
    "code": [
      "ast",
      ".",
      "literal_eval",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "{'muffin' : 'lolz', 'foo' : 'kitty'}",
        "quote": "`",
        "type": "str"
      },
      "{str_0}": {
        "value": "{'muffin' : 'lolz', 'foo' : 'kitty'}",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      3,
      186,
      2,
      23,
      128,
      143,
      187,
      58,
      3,
      14,
      465,
      2,
      3,
      186,
      62,
      5
    ],
    "code_indx_copy": [
      272,
      22,
      273,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      272,
      22,
      273,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "print",
      "string",
      "var_0",
      "with",
      "proper",
      "unicode",
      "representations"
    ],
    "code": [
      "print",
      "(",
      "var_0",
      ".",
      "decode",
      "(",
      "'unicode_escape'",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "t",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      166,
      14,
      26,
      79,
      465,
      230,
      465
    ],
    "code_indx_copy": [
      49,
      1,
      34,
      22,
      99,
      1,
      182,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      34,
      22,
      99,
      1,
      182,
      17,
      17
    ]
  },
  {
    "intent": [
      "normalize",
      "string",
      "var_0",
      "from",
      "str_0",
      "code",
      "to",
      "str_1",
      "code"
    ],
    "code": [
      "print",
      "(",
      "var_0",
      ".",
      "encode",
      "(",
      "'str_0'",
      ")",
      ".",
      "decode",
      "(",
      "'str_1'",
      ")",
      ".",
      "encode",
      "(",
      "'str_0'",
      ")",
      ".",
      "decode",
      "(",
      "'str_1'",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "str",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "cp1252",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "utf-8",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      14,
      26,
      58,
      5,
      293,
      8,
      32,
      293
    ],
    "code_indx_copy": [
      49,
      1,
      34,
      22,
      239,
      1,
      29,
      17,
      22,
      99,
      1,
      63,
      17,
      22,
      239,
      1,
      29,
      17,
      22,
      99,
      1,
      63,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      34,
      22,
      239,
      1,
      29,
      17,
      22,
      99,
      1,
      63,
      17,
      22,
      239,
      1,
      29,
      17,
      22,
      99,
      1,
      63,
      17,
      17
    ]
  },
  {
    "intent": [
      "merge",
      "lists",
      "var_0",
      "and",
      "var_1",
      "into",
      "a",
      "list",
      "of",
      "tuples"
    ],
    "code": [
      "zip",
      "(",
      "var_0",
      ",",
      "var_1",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "list_a",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "list_b",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      247,
      30,
      26,
      31,
      63,
      12,
      3,
      4,
      2,
      33
    ],
    "code_indx_copy": [
      36,
      1,
      34,
      8,
      91,
      17
    ],
    "code_indx_nocopy": [
      36,
      1,
      34,
      8,
      91,
      17
    ]
  },
  {
    "intent": [
      "merge",
      "lists",
      "var_0",
      "and",
      "var_0",
      "into",
      "a",
      "list",
      "of",
      "tuples"
    ],
    "code": [
      "list",
      "(",
      "zip",
      "(",
      "var_1",
      ",",
      "b",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      247,
      30,
      26,
      31,
      26,
      12,
      3,
      4,
      2,
      33
    ],
    "code_indx_copy": [
      33,
      1,
      36,
      1,
      91,
      8,
      97,
      17,
      17
    ],
    "code_indx_nocopy": [
      33,
      1,
      36,
      1,
      91,
      8,
      97,
      17,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "pandas",
      "dataframe",
      "var_0",
      "to",
      "a",
      "dictionary",
      "using",
      "var_1",
      "field",
      "as",
      "the",
      "key"
    ],
    "code": [
      "var_0",
      ".",
      "set_index",
      "(",
      "'var_1'",
      ")",
      ".",
      "to_dict",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "id",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      42,
      43,
      26,
      8,
      3,
      25,
      109,
      63,
      312,
      90,
      18,
      23
    ],
    "code_indx_copy": [
      34,
      22,
      203,
      1,
      57,
      17,
      22,
      447,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      203,
      1,
      57,
      17,
      22,
      447,
      1,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "pandas",
      "dataframe",
      "var_0",
      "with",
      "fields",
      "str_0",
      ",",
      "str_1",
      "to",
      "dictionary"
    ],
    "code": [
      "var_0",
      ".",
      "set_index",
      "(",
      "'str_0'",
      ")",
      "[",
      "'str_1'",
      "]",
      ".",
      "to_dict",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "id",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "value",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      42,
      43,
      26,
      79,
      385,
      5,
      62,
      32,
      8,
      25
    ],
    "code_indx_copy": [
      34,
      22,
      203,
      1,
      29,
      17,
      12,
      63,
      16,
      22,
      447,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      203,
      1,
      29,
      17,
      12,
      63,
      16,
      22,
      447,
      1,
      17
    ]
  },
  {
    "intent": [
      "can",
      "i",
      "sort",
      "text",
      "by",
      "its",
      "numeric",
      "value",
      "in",
      "python",
      "?"
    ],
    "code": [
      "sorted",
      "(",
      "list",
      "(",
      "mydict",
      ".",
      "items",
      "(",
      ")",
      ")",
      ",",
      "key",
      "=",
      "lambda",
      "a",
      ":",
      "map",
      "(",
      "int",
      ",",
      "a",
      "[",
      "0",
      "]",
      ".",
      "split",
      "(",
      "'.'",
      ")",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      386,
      328,
      117,
      267,
      44,
      91,
      465,
      143,
      24,
      50,
      52
    ],
    "code_indx_copy": [
      101,
      1,
      33,
      1,
      524,
      22,
      35,
      1,
      17,
      17,
      8,
      102,
      19,
      44,
      95,
      13,
      24,
      1,
      20,
      8,
      95,
      12,
      43,
      16,
      22,
      71,
      1,
      260,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      33,
      1,
      524,
      22,
      35,
      1,
      17,
      17,
      8,
      102,
      19,
      44,
      95,
      13,
      24,
      1,
      20,
      8,
      95,
      12,
      43,
      16,
      22,
      71,
      1,
      260,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "parentheses",
      "and",
      "text",
      "within",
      "it",
      "in",
      "string",
      "var_0"
    ],
    "code": [
      "re",
      ".",
      "sub",
      "(",
      "'\\\\([^)]*\\\\)'",
      ",",
      "''",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "filename",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      465,
      31,
      267,
      55,
      145,
      24,
      14,
      26
    ],
    "code_indx_copy": [
      39,
      22,
      40,
      1,
      524,
      8,
      21,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      40,
      1,
      524,
      8,
      21,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "string",
      "str_0",
      "only",
      "contains",
      "letters",
      "and",
      "spaces"
    ],
    "code": [
      "\"\"\"str_0\"\"\"",
      ".",
      "replace",
      "(",
      "' '",
      ",",
      "''",
      ")",
      ".",
      "isalpha",
      "(",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "a b",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      234,
      150,
      14,
      5,
      352,
      75,
      360,
      31,
      132
    ],
    "code_indx_copy": [
      212,
      22,
      107,
      1,
      108,
      8,
      21,
      17,
      22,
      524,
      1,
      17
    ],
    "code_indx_nocopy": [
      212,
      22,
      107,
      1,
      108,
      8,
      21,
      17,
      22,
      524,
      1,
      17
    ]
  },
  {
    "intent": [
      "sum",
      "each",
      "element",
      "var_0",
      "in",
      "list",
      "var_1",
      "with",
      "element",
      "var_2",
      "at",
      "the",
      "same",
      "index",
      "in",
      "list",
      "var_3",
      "."
    ],
    "code": [
      "[",
      "(",
      "var_0",
      "+",
      "var_2",
      ")",
      "for",
      "var_0",
      ",",
      "var_2",
      "in",
      "zip",
      "(",
      "var_1",
      ",",
      "var_3",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "x",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "first",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "y",
        "quote": "`",
        "type": "var"
      },
      "var_3": {
        "value": "second",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      112,
      22,
      49,
      26,
      24,
      4,
      63,
      79,
      49,
      64,
      35,
      18,
      36,
      37,
      24,
      4,
      67,
      159
    ],
    "code_indx_copy": [
      12,
      1,
      34,
      96,
      94,
      17,
      7,
      34,
      8,
      94,
      9,
      36,
      1,
      91,
      8,
      55,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      1,
      34,
      96,
      94,
      17,
      7,
      34,
      8,
      94,
      9,
      36,
      1,
      91,
      8,
      55,
      17,
      16
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "python",
      "dictionary",
      "var_0",
      "by",
      "element",
      "str_0",
      "of",
      "the",
      "value"
    ],
    "code": [
      "sorted",
      "(",
      "list",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      ",",
      "key",
      "=",
      "lambda",
      "item",
      ":",
      "item",
      "[",
      "1",
      "]",
      "[",
      "1",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a_dict",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "1",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      117,
      3,
      50,
      25,
      26,
      44,
      49,
      5,
      2,
      18,
      143
    ],
    "code_indx_copy": [
      101,
      1,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      8,
      102,
      19,
      44,
      387,
      13,
      387,
      12,
      15,
      16,
      12,
      15,
      16,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      8,
      102,
      19,
      44,
      387,
      13,
      387,
      12,
      15,
      16,
      12,
      15,
      16,
      17
    ]
  },
  {
    "intent": [
      "how",
      "to",
      "exclude",
      "a",
      "character",
      "from",
      "a",
      "regex",
      "group",
      "?"
    ],
    "code": [
      "re",
      ".",
      "compile",
      "(",
      "'[^a-zA-Z0-9-]+'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      77,
      8,
      465,
      3,
      202,
      58,
      3,
      40,
      383,
      52
    ],
    "code_indx_copy": [
      39,
      22,
      83,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      83,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "get",
      "index",
      "of",
      "the",
      "biggest",
      "2",
      "values",
      "of",
      "a",
      "list",
      "var_0"
    ],
    "code": [
      "sorted",
      "(",
      "list",
      "(",
      "range",
      "(",
      "len",
      "(",
      "var_0",
      ")",
      ")",
      ")",
      ",",
      "key",
      "=",
      "lambda",
      "i",
      ":",
      "var_0",
      "[",
      "i",
      "]",
      ")",
      "[",
      "-",
      "2",
      ":",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      37,
      2,
      18,
      465,
      82,
      20,
      2,
      3,
      4,
      26
    ],
    "code_indx_copy": [
      101,
      1,
      33,
      1,
      104,
      1,
      32,
      1,
      34,
      17,
      17,
      17,
      8,
      102,
      19,
      44,
      6,
      13,
      34,
      12,
      6,
      16,
      17,
      12,
      14,
      82,
      13,
      16
    ],
    "code_indx_nocopy": [
      101,
      1,
      33,
      1,
      104,
      1,
      32,
      1,
      34,
      17,
      17,
      17,
      8,
      102,
      19,
      44,
      6,
      13,
      34,
      12,
      6,
      16,
      17,
      12,
      14,
      82,
      13,
      16
    ]
  },
  {
    "intent": [
      "get",
      "indexes",
      "of",
      "the",
      "largest",
      "str_0",
      "values",
      "from",
      "a",
      "list",
      "var_0",
      "using",
      "itemgetter"
    ],
    "code": [
      "zip",
      "(",
      "*",
      "sorted",
      "(",
      "enumerate",
      "(",
      "var_0",
      ")",
      ",",
      "key",
      "=",
      "operator",
      ".",
      "itemgetter",
      "(",
      "1",
      ")",
      ")",
      ")",
      "[",
      "0",
      "]",
      "[",
      "-",
      "2",
      ":",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "2",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      235,
      2,
      18,
      438,
      5,
      20,
      58,
      3,
      4,
      26,
      109,
      465
    ],
    "code_indx_copy": [
      36,
      1,
      3,
      101,
      1,
      10,
      1,
      34,
      17,
      8,
      102,
      19,
      127,
      22,
      128,
      1,
      15,
      17,
      17,
      17,
      12,
      43,
      16,
      12,
      14,
      82,
      13,
      16
    ],
    "code_indx_nocopy": [
      36,
      1,
      3,
      101,
      1,
      10,
      1,
      34,
      17,
      8,
      102,
      19,
      127,
      22,
      128,
      1,
      15,
      17,
      17,
      17,
      12,
      43,
      16,
      12,
      14,
      82,
      13,
      16
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "indexes",
      "of",
      "the",
      "largest",
      "str_0",
      "values",
      "from",
      "a",
      "list",
      "of",
      "integers",
      "var_0"
    ],
    "code": [
      "sorted",
      "(",
      "list",
      "(",
      "range",
      "(",
      "len",
      "(",
      "var_0",
      ")",
      ")",
      ")",
      ",",
      "key",
      "=",
      "lambda",
      "i",
      ":",
      "var_0",
      "[",
      "i",
      "]",
      ",",
      "reverse",
      "=",
      "True",
      ")",
      "[",
      ":",
      "2",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "2",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      18,
      235,
      2,
      18,
      438,
      5,
      20,
      58,
      3,
      4,
      2,
      7,
      26
    ],
    "code_indx_copy": [
      101,
      1,
      33,
      1,
      104,
      1,
      32,
      1,
      34,
      17,
      17,
      17,
      8,
      102,
      19,
      44,
      6,
      13,
      34,
      12,
      6,
      16,
      8,
      129,
      19,
      109,
      17,
      12,
      13,
      82,
      16
    ],
    "code_indx_nocopy": [
      101,
      1,
      33,
      1,
      104,
      1,
      32,
      1,
      34,
      17,
      17,
      17,
      8,
      102,
      19,
      44,
      6,
      13,
      34,
      12,
      6,
      16,
      8,
      129,
      19,
      109,
      17,
      12,
      13,
      82,
      16
    ]
  },
  {
    "intent": [
      "get",
      "index",
      "of",
      "key",
      "str_0",
      "in",
      "dictionary",
      "var_0"
    ],
    "code": [
      "list",
      "(",
      "var_0",
      ".",
      "keys",
      "(",
      ")",
      ")",
      ".",
      "index",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "c",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "x",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      37,
      2,
      23,
      5,
      24,
      25,
      26
    ],
    "code_indx_copy": [
      33,
      1,
      34,
      22,
      167,
      1,
      17,
      17,
      22,
      160,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      33,
      1,
      34,
      22,
      167,
      1,
      17,
      17,
      22,
      160,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "print",
      "+1",
      "using",
      "format",
      "str_0"
    ],
    "code": [
      "print",
      "(",
      "'str_0'",
      ".",
      "format",
      "(",
      "score",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "{0:+d}",
        "quote": "'",
        "type": "str"
      },
      "{str_0}": {
        "value": "{0:+d}",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      166,
      465,
      109,
      16,
      5
    ],
    "code_indx_copy": [
      49,
      1,
      29,
      22,
      38,
      1,
      524,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      29,
      22,
      38,
      1,
      524,
      17,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "adjacent",
      "duplicate",
      "elements",
      "from",
      "a",
      "list",
      "str_0"
    ],
    "code": [
      "[",
      "k",
      "for",
      "k",
      ",",
      "g",
      "in",
      "itertools",
      ".",
      "groupby",
      "(",
      "[",
      "str_0",
      "]",
      ")",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "[1, 2, 2, 3, 2, 2, 4]",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "[1, 2, 2, 3, 2, 2, 4]",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      268,
      465,
      411,
      1,
      58,
      3,
      4,
      5
    ],
    "code_indx_copy": [
      12,
      89,
      7,
      89,
      8,
      448,
      9,
      50,
      22,
      157,
      1,
      12,
      11,
      16,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      89,
      7,
      89,
      8,
      448,
      9,
      50,
      22,
      157,
      1,
      12,
      11,
      16,
      17,
      16
    ]
  },
  {
    "intent": [
      "split",
      "string",
      "str_0",
      "based",
      "on",
      "delimiter",
      "str_1"
    ],
    "code": [
      "\"\"\"str_0\"\"\"",
      ".",
      "split",
      "(",
      "'str_1'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "0,1,2",
        "quote": "\"",
        "type": "str"
      },
      "str_1": {
        "value": ",",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      138,
      14,
      5,
      208,
      139,
      329,
      32
    ],
    "code_indx_copy": [
      212,
      22,
      71,
      1,
      63,
      17
    ],
    "code_indx_nocopy": [
      212,
      22,
      71,
      1,
      63,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "the",
      "string",
      "str_0",
      "to",
      "a",
      "list",
      "of",
      "integers"
    ],
    "code": [
      "[",
      "int",
      "(",
      "x",
      ")",
      "for",
      "x",
      "in",
      "'str_0'",
      ".",
      "split",
      "(",
      "','",
      ")",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "0,1,2",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      18,
      14,
      5,
      8,
      3,
      4,
      2,
      7
    ],
    "code_indx_copy": [
      12,
      20,
      1,
      26,
      17,
      7,
      26,
      9,
      29,
      22,
      71,
      1,
      73,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      20,
      1,
      26,
      17,
      7,
      26,
      9,
      29,
      22,
      71,
      1,
      73,
      17,
      16
    ]
  },
  {
    "intent": [
      "convert",
      "list",
      "of",
      "key-value",
      "tuples",
      "str_0",
      "into",
      "dictionary"
    ],
    "code": [
      "dict",
      "(",
      "[",
      "str_0",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "[('A', 1), ('B', 2), ('C', 3)]",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "[('A', 1), ('B', 2), ('C', 3)]",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      4,
      2,
      422,
      33,
      5,
      12,
      25
    ],
    "code_indx_copy": [
      70,
      1,
      12,
      11,
      16,
      17
    ],
    "code_indx_nocopy": [
      70,
      1,
      12,
      11,
      16,
      17
    ]
  },
  {
    "intent": [
      "save",
      "numpy",
      "array",
      "var_0",
      "into",
      "text",
      "file",
      "str_0"
    ],
    "code": [
      "np",
      ".",
      "savetxt",
      "(",
      "'str_0'",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "x",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "test.txt",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      333,
      84,
      85,
      26,
      12,
      267,
      126,
      5
    ],
    "code_indx_copy": [
      74,
      22,
      524,
      1,
      29,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      74,
      22,
      524,
      1,
      29,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "store",
      "the",
      "output",
      "of",
      "command",
      "str_0",
      "in",
      "variable",
      "var_0"
    ],
    "code": [
      "var_0",
      "=",
      "subprocess",
      ".",
      "check_output",
      "(",
      "'str_0'",
      ",",
      "shell",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "ls",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "direct_output",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      377,
      18,
      257,
      2,
      137,
      5,
      24,
      95,
      26
    ],
    "code_indx_copy": [
      34,
      19,
      229,
      22,
      449,
      1,
      29,
      8,
      231,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      229,
      22,
      449,
      1,
      29,
      8,
      231,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "get",
      "all",
      "column",
      "name",
      "of",
      "dataframe",
      "var_0",
      "except",
      "for",
      "column",
      "str_0"
    ],
    "code": [
      "var_0",
      "[",
      "var_0",
      ".",
      "columns",
      "-",
      "[",
      "'str_0'",
      "]",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "T1_V6",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      38,
      147,
      129,
      2,
      43,
      26,
      465,
      21,
      147,
      5
    ],
    "code_indx_copy": [
      34,
      12,
      34,
      22,
      192,
      14,
      12,
      29,
      16,
      16
    ],
    "code_indx_nocopy": [
      34,
      12,
      34,
      22,
      192,
      14,
      12,
      29,
      16,
      16
    ]
  },
  {
    "intent": [
      "get",
      "count",
      "of",
      "values",
      "in",
      "numpy",
      "array",
      "var_0",
      "that",
      "are",
      "between",
      "values",
      "str_0",
      "and",
      "str_1"
    ],
    "code": [
      "(",
      "(",
      "25",
      "<",
      "var_0",
      ")",
      "&",
      "(",
      "var_0",
      "<",
      "100",
      ")",
      ")",
      ".",
      "sum",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "25",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": "100",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      203,
      2,
      20,
      24,
      84,
      85,
      26,
      195,
      243,
      278,
      20,
      5,
      31,
      32
    ],
    "code_indx_copy": [
      1,
      1,
      524,
      344,
      34,
      17,
      226,
      1,
      34,
      344,
      267,
      17,
      17,
      22,
      0,
      1,
      17
    ],
    "code_indx_nocopy": [
      1,
      1,
      524,
      344,
      34,
      17,
      226,
      1,
      34,
      344,
      267,
      17,
      17,
      22,
      0,
      1,
      17
    ]
  },
  {
    "intent": [
      "get",
      "day",
      "name",
      "from",
      "a",
      "datetime",
      "object"
    ],
    "code": [
      "date",
      ".",
      "today",
      "(",
      ")",
      ".",
      "strftime",
      "(",
      "'%A'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      17,
      356,
      129,
      58,
      3,
      13,
      15
    ],
    "code_indx_copy": [
      139,
      22,
      137,
      1,
      17,
      22,
      65,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      139,
      22,
      137,
      1,
      17,
      22,
      65,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "python",
      "regular",
      "expression",
      "match",
      "whole",
      "word"
    ],
    "code": [
      "re",
      ".",
      "search",
      "(",
      "'\\\\bis\\\\b'",
      ",",
      "your_string",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      50,
      250,
      226,
      144,
      465,
      239
    ],
    "code_indx_copy": [
      39,
      22,
      93,
      1,
      524,
      8,
      524,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      93,
      1,
      524,
      8,
      524,
      17
    ]
  },
  {
    "intent": [
      "jinja",
      "parse",
      "datetime",
      "object",
      "str_0",
      "to",
      "use",
      "format",
      "pattern",
      "var_0"
    ],
    "code": [
      "{",
      "{",
      "car",
      ".",
      "date_of_manufacture",
      "|",
      "var_0",
      "}",
      "}"
    ],
    "slot_map": {
      "str_0": {
        "value": "car.date_of_manufacture",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "datetime",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      73,
      13,
      15,
      5,
      8,
      309,
      16,
      54,
      26
    ],
    "code_indx_copy": [
      52,
      52,
      524,
      22,
      524,
      412,
      34,
      53,
      53
    ],
    "code_indx_nocopy": [
      52,
      52,
      524,
      22,
      524,
      412,
      34,
      53,
      53
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "date",
      "object",
      "var_0",
      "of",
      "object",
      "var_1",
      "in",
      "string",
      "format",
      "str_0"
    ],
    "code": [
      "{",
      "{",
      "var_1",
      ".",
      "var_0",
      ".",
      "strftime",
      "(",
      "'str_0'",
      ")",
      "}",
      "}"
    ],
    "slot_map": {
      "var_0": {
        "value": "date_of_manufacture",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "car",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "%Y-%m-%d",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      18,
      133,
      15,
      26,
      2,
      15,
      63,
      24,
      14,
      16,
      5
    ],
    "code_indx_copy": [
      52,
      52,
      91,
      22,
      34,
      22,
      65,
      1,
      29,
      17,
      53,
      53
    ],
    "code_indx_nocopy": [
      52,
      52,
      91,
      22,
      34,
      22,
      65,
      1,
      29,
      17,
      53,
      53
    ]
  },
  {
    "intent": [
      "make",
      "a",
      "flat",
      "list",
      "from",
      "list",
      "of",
      "lists",
      "var_0"
    ],
    "code": [
      "[",
      "item",
      "for",
      "var_0",
      "in",
      "l",
      "for",
      "item",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "sublist",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      191,
      3,
      380,
      4,
      58,
      4,
      2,
      30,
      26
    ],
    "code_indx_copy": [
      12,
      387,
      7,
      34,
      9,
      431,
      7,
      387,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      12,
      387,
      7,
      34,
      9,
      431,
      7,
      387,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "make",
      "a",
      "flat",
      "list",
      "from",
      "list",
      "of",
      "lists",
      "var_0"
    ],
    "code": [
      "list",
      "(",
      "itertools",
      ".",
      "chain",
      "(",
      "*",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "list2d",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      191,
      3,
      380,
      4,
      58,
      4,
      2,
      30,
      26
    ],
    "code_indx_copy": [
      33,
      1,
      50,
      22,
      450,
      1,
      3,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      33,
      1,
      50,
      22,
      450,
      1,
      3,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "make",
      "a",
      "flat",
      "list",
      "from",
      "list",
      "of",
      "lists",
      "var_0"
    ],
    "code": [
      "list",
      "(",
      "itertools",
      ".",
      "chain",
      ".",
      "from_iterable",
      "(",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "list2d",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      191,
      3,
      380,
      4,
      58,
      4,
      2,
      30,
      26
    ],
    "code_indx_copy": [
      33,
      1,
      50,
      22,
      450,
      22,
      451,
      1,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      33,
      1,
      50,
      22,
      450,
      22,
      451,
      1,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "ascii",
      "value",
      "str_0",
      "to",
      "int"
    ],
    "code": [
      "ord",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "a",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      384,
      143,
      5,
      8,
      74
    ],
    "code_indx_copy": [
      98,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      98,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "replace",
      "white",
      "spaces",
      "in",
      "string",
      "str_0",
      "with",
      "empty",
      "string",
      "str_1"
    ],
    "code": [
      "re",
      ".",
      "sub",
      "(",
      "'(?m)^[^\\\\S\\\\n]+'",
      ",",
      "'str_1'",
      ",",
      "'  a\\n b\\n c\\nd  e'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "a\n b\n c\nd  e",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      130,
      131,
      132,
      24,
      14,
      5,
      79,
      146,
      14,
      32
    ],
    "code_indx_copy": [
      39,
      22,
      40,
      1,
      524,
      8,
      63,
      8,
      524,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      40,
      1,
      524,
      8,
      63,
      8,
      524,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "white",
      "spaces",
      "from",
      "all",
      "the",
      "lines",
      "using",
      "a",
      "regular",
      "expression",
      "in",
      "string",
      "str_0"
    ],
    "code": [
      "re",
      ".",
      "sub",
      "(",
      "'(?m)^\\\\s+'",
      ",",
      "''",
      ",",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "a\n b\n c",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      268,
      131,
      132,
      58,
      38,
      18,
      395,
      109,
      3,
      250,
      226,
      24,
      14,
      5
    ],
    "code_indx_copy": [
      39,
      22,
      40,
      1,
      524,
      8,
      21,
      8,
      29,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      40,
      1,
      524,
      8,
      21,
      8,
      29,
      17
    ]
  },
  {
    "intent": [
      "destruct",
      "elements",
      "of",
      "list",
      "str_0",
      "to",
      "variables",
      "var_0",
      ",",
      "var_1",
      "and",
      "var_2"
    ],
    "code": [
      "var_0",
      ",",
      "var_1",
      ",",
      "var_2",
      "=",
      "[",
      "str_0",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "[1, 2, 3]",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "b",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "c",
        "quote": "`",
        "type": "var"
      },
      "[str_0]": {
        "value": "[1, 2, 3]",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      1,
      2,
      4,
      5,
      8,
      306,
      26,
      62,
      63,
      31,
      64
    ],
    "code_indx_copy": [
      34,
      8,
      91,
      8,
      94,
      19,
      12,
      11,
      16
    ],
    "code_indx_nocopy": [
      34,
      8,
      91,
      8,
      94,
      19,
      12,
      11,
      16
    ]
  },
  {
    "intent": [
      "split",
      "list",
      "var_0",
      "into",
      "a",
      "list",
      "of",
      "lists",
      "whose",
      "elements",
      "have",
      "the",
      "same",
      "first",
      "five",
      "characters"
    ],
    "code": [
      "[",
      "list",
      "(",
      "v",
      ")",
      "for",
      "k",
      ",",
      "v",
      "in",
      "itertools",
      ".",
      "groupby",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "x",
      "[",
      ":",
      "5",
      "]",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "mylist",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      138,
      4,
      26,
      12,
      3,
      4,
      2,
      30,
      228,
      1,
      196,
      18,
      36,
      151,
      465,
      98
    ],
    "code_indx_copy": [
      12,
      33,
      1,
      90,
      17,
      7,
      89,
      8,
      90,
      9,
      50,
      22,
      157,
      1,
      34,
      8,
      102,
      19,
      44,
      26,
      13,
      26,
      12,
      13,
      185,
      16,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      33,
      1,
      90,
      17,
      7,
      89,
      8,
      90,
      9,
      50,
      22,
      157,
      1,
      34,
      8,
      102,
      19,
      44,
      26,
      13,
      26,
      12,
      13,
      185,
      16,
      17,
      16
    ]
  },
  {
    "intent": [
      "remove",
      "all",
      "instances",
      "of",
      "parenthesesis",
      "containing",
      "text",
      "beginning",
      "with",
      "str_0",
      "from",
      "string",
      "var_0"
    ],
    "code": [
      "var_0",
      "=",
      "re",
      ".",
      "sub",
      "(",
      "'\\\\(+as .*?\\\\) '",
      ",",
      "''",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "as",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "line",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      38,
      358,
      2,
      465,
      34,
      267,
      171,
      79,
      5,
      58,
      14,
      26
    ],
    "code_indx_copy": [
      34,
      19,
      39,
      22,
      40,
      1,
      524,
      8,
      21,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      39,
      22,
      40,
      1,
      524,
      8,
      21,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "skip",
      "the",
      "newline",
      "while",
      "printing",
      "var_0"
    ],
    "code": [
      "print",
      "(",
      "var_0",
      ".",
      "rstrip",
      "(",
      "'\\n'",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "line",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      18,
      397,
      430,
      465,
      26
    ],
    "code_indx_copy": [
      49,
      1,
      34,
      22,
      172,
      1,
      133,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      34,
      22,
      172,
      1,
      133,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "index",
      "values",
      "of",
      "pandas",
      "dataframe",
      "var_0",
      "as",
      "list"
    ],
    "code": [
      "var_0",
      ".",
      "index",
      ".",
      "values",
      ".",
      "tolist",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      37,
      20,
      2,
      42,
      43,
      26,
      90,
      4
    ],
    "code_indx_copy": [
      34,
      22,
      160,
      22,
      166,
      22,
      306,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      160,
      22,
      166,
      22,
      306,
      1,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "list",
      "var_0",
      "is",
      "empty"
    ],
    "code": [
      "if",
      "not",
      "var_0",
      ":",
      "\n",
      "    ",
      "pass",
      ""
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      234,
      150,
      4,
      26,
      152,
      146
    ],
    "code_indx_copy": [
      67,
      281,
      34,
      13,
      161,
      216,
      217,
      218
    ],
    "code_indx_nocopy": [
      67,
      281,
      34,
      13,
      161,
      216,
      217,
      218
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "list",
      "var_0",
      "is",
      "empty"
    ],
    "code": [
      "if",
      "not",
      "var_0",
      ":",
      "\n",
      "    ",
      "pass",
      ""
    ],
    "slot_map": {
      "var_0": {
        "value": "seq",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      234,
      150,
      4,
      26,
      152,
      146
    ],
    "code_indx_copy": [
      67,
      281,
      34,
      13,
      161,
      216,
      217,
      218
    ],
    "code_indx_nocopy": [
      67,
      281,
      34,
      13,
      161,
      216,
      217,
      218
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "list",
      "var_0",
      "is",
      "empty"
    ],
    "code": [
      "if",
      "len",
      "(",
      "var_0",
      ")",
      "==",
      "0",
      ":",
      "\n",
      "    ",
      "pass",
      ""
    ],
    "slot_map": {
      "var_0": {
        "value": "li",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      234,
      150,
      4,
      26,
      152,
      146
    ],
    "code_indx_copy": [
      67,
      32,
      1,
      34,
      17,
      76,
      43,
      13,
      161,
      216,
      217,
      218
    ],
    "code_indx_nocopy": [
      67,
      32,
      1,
      34,
      17,
      76,
      43,
      13,
      161,
      216,
      217,
      218
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "list",
      "containing",
      "the",
      "indices",
      "of",
      "elements",
      "greater",
      "than",
      "4",
      "in",
      "list",
      "var_0"
    ],
    "code": [
      "[",
      "i",
      "for",
      "i",
      ",",
      "v",
      "in",
      "enumerate",
      "(",
      "var_0",
      ")",
      "if",
      "v",
      ">",
      "4",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      148,
      3,
      4,
      34,
      18,
      326,
      2,
      1,
      349,
      264,
      231,
      24,
      4,
      26
    ],
    "code_indx_copy": [
      12,
      6,
      7,
      6,
      8,
      90,
      9,
      10,
      1,
      34,
      17,
      67,
      90,
      214,
      184,
      16
    ],
    "code_indx_nocopy": [
      12,
      6,
      7,
      6,
      8,
      90,
      9,
      10,
      1,
      34,
      17,
      67,
      90,
      214,
      184,
      16
    ]
  },
  {
    "intent": [
      "reverse",
      "list",
      "var_0"
    ],
    "code": [
      "sorted",
      "(",
      "var_0",
      ",",
      "reverse",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "yourdata",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      282,
      4,
      26
    ],
    "code_indx_copy": [
      101,
      1,
      34,
      8,
      129,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      34,
      8,
      129,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "list",
      "of",
      "nested",
      "dictionaries",
      "var_0",
      "in",
      "reverse",
      "based",
      "on",
      "values",
      "associated",
      "with",
      "each",
      "dictionarystr_0subkey",
      "'"
    ],
    "code": [
      "sorted",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "lambda",
      "d",
      ":",
      "d",
      ".",
      "get",
      "(",
      "'key'",
      ",",
      "{",
      "}",
      ")",
      ".",
      "get",
      "(",
      "'subkey'",
      ")",
      ",",
      "reverse",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "yourdata",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "s key",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      117,
      4,
      2,
      154,
      188,
      26,
      24,
      282,
      208,
      139,
      20,
      286,
      79,
      22,
      465,
      310
    ],
    "code_indx_copy": [
      101,
      1,
      34,
      8,
      102,
      19,
      44,
      2,
      13,
      2,
      22,
      86,
      1,
      524,
      8,
      52,
      53,
      17,
      22,
      86,
      1,
      524,
      17,
      8,
      129,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      34,
      8,
      102,
      19,
      44,
      2,
      13,
      2,
      22,
      86,
      1,
      524,
      8,
      52,
      53,
      17,
      22,
      86,
      1,
      524,
      17,
      8,
      129,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "list",
      "of",
      "nested",
      "dictionaries",
      "var_0",
      "in",
      "reverse",
      "order",
      "of",
      "str_0",
      "and",
      "str_1"
    ],
    "code": [
      "var_0",
      ".",
      "sort",
      "(",
      "str_0",
      "=",
      "lambda",
      "e",
      ":",
      "e",
      "[",
      "'str_0'",
      "]",
      "[",
      "'str_1'",
      "]",
      ",",
      "reverse",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "yourdata",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "key",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "subkey",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      117,
      4,
      2,
      154,
      188,
      26,
      24,
      282,
      162,
      2,
      5,
      31,
      32
    ],
    "code_indx_copy": [
      34,
      22,
      124,
      1,
      11,
      19,
      44,
      420,
      13,
      420,
      12,
      29,
      16,
      12,
      63,
      16,
      8,
      129,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      124,
      1,
      11,
      19,
      44,
      420,
      13,
      420,
      12,
      29,
      16,
      12,
      63,
      16,
      8,
      129,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "decimal",
      "points",
      "in",
      "pandas",
      "data",
      "frame",
      "using",
      "round"
    ],
    "code": [
      "df",
      ".",
      "round",
      "(",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      268,
      255,
      318,
      24,
      42,
      65,
      66,
      109,
      253
    ],
    "code_indx_copy": [
      149,
      22,
      208,
      1,
      17
    ],
    "code_indx_nocopy": [
      149,
      22,
      208,
      1,
      17
    ]
  },
  {
    "intent": [
      "get",
      "data",
      "from",
      "matplotlib",
      "plot"
    ],
    "code": [
      "gca",
      "(",
      ")",
      ".",
      "get_lines",
      "(",
      ")",
      "[",
      "n",
      "]",
      ".",
      "get_xydata",
      "(",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      17,
      65,
      58,
      350,
      244
    ],
    "code_indx_copy": [
      255,
      1,
      17,
      22,
      524,
      1,
      17,
      12,
      307,
      16,
      22,
      524,
      1,
      17
    ],
    "code_indx_nocopy": [
      255,
      1,
      17,
      22,
      524,
      1,
      17,
      12,
      307,
      16,
      22,
      524,
      1,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "maximum",
      "2",
      "values",
      "per",
      "row",
      "in",
      "array",
      "var_0"
    ],
    "code": [
      "var_0",
      "[",
      ":",
      ",",
      "-",
      "2",
      ":",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "A",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      18,
      227,
      82,
      20,
      465,
      45,
      24,
      85,
      26
    ],
    "code_indx_copy": [
      34,
      12,
      13,
      8,
      14,
      82,
      13,
      16
    ],
    "code_indx_nocopy": [
      34,
      12,
      13,
      8,
      14,
      82,
      13,
      16
    ]
  },
  {
    "intent": [
      "get",
      "value",
      "for",
      "str_0",
      "parameter",
      "in",
      "get",
      "request",
      "in",
      "django"
    ],
    "code": [
      "request",
      ".",
      "GET",
      ".",
      "get",
      "(",
      "'str_0'",
      ",",
      "''",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "username",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      143,
      21,
      5,
      372,
      24,
      17,
      101,
      24,
      87
    ],
    "code_indx_copy": [
      233,
      22,
      524,
      22,
      86,
      1,
      29,
      8,
      21,
      17
    ],
    "code_indx_nocopy": [
      233,
      22,
      524,
      22,
      86,
      1,
      29,
      8,
      21,
      17
    ]
  },
  {
    "intent": [
      "pretty-print",
      "ordered",
      "dictionary",
      "var_0"
    ],
    "code": [
      "pprint",
      "(",
      "dict",
      "(",
      "list",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "o",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      465,
      25,
      26
    ],
    "code_indx_copy": [
      524,
      1,
      70,
      1,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      524,
      1,
      70,
      1,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "confirm",
      "urls",
      "in",
      "django",
      "properly"
    ],
    "code": [
      "url",
      "(",
      "'^$'",
      ",",
      "include",
      "(",
      "'sms.urls'",
      ")",
      ")",
      ","
    ],
    "slot_map": {},
    "intent_indx": [
      465,
      465,
      24,
      87,
      465
    ],
    "code_indx_copy": [
      235,
      1,
      524,
      8,
      524,
      1,
      524,
      17,
      17,
      8
    ],
    "code_indx_nocopy": [
      235,
      1,
      524,
      8,
      524,
      1,
      524,
      17,
      17,
      8
    ]
  },
  {
    "intent": [
      "configure",
      "url",
      "in",
      "django",
      "properly"
    ],
    "code": [
      "url",
      "(",
      "'^'",
      ",",
      "include",
      "(",
      "'sms.urls'",
      ")",
      ")",
      ","
    ],
    "slot_map": {},
    "intent_indx": [
      465,
      102,
      24,
      87,
      465
    ],
    "code_indx_copy": [
      235,
      1,
      524,
      8,
      524,
      1,
      524,
      17,
      17,
      8
    ],
    "code_indx_nocopy": [
      235,
      1,
      524,
      8,
      524,
      1,
      524,
      17,
      17,
      8
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "tuple",
      "in",
      "list",
      "var_0",
      "that",
      "has",
      "the",
      "largest",
      "item",
      "in",
      "the",
      "second",
      "index"
    ],
    "code": [
      "max_item",
      "=",
      "max",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "operator",
      ".",
      "itemgetter",
      "(",
      "1",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a_list",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      18,
      113,
      24,
      4,
      26,
      195,
      337,
      18,
      438,
      156,
      24,
      18,
      118,
      37
    ],
    "code_indx_copy": [
      524,
      19,
      179,
      1,
      34,
      8,
      102,
      19,
      127,
      22,
      128,
      1,
      15,
      17,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      179,
      1,
      34,
      8,
      102,
      19,
      127,
      22,
      128,
      1,
      15,
      17,
      17
    ]
  },
  {
    "intent": [
      "find",
      "tuple",
      "in",
      "list",
      "of",
      "tuples",
      "var_0",
      "with",
      "the",
      "largest",
      "second",
      "element"
    ],
    "code": [
      "max",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "operator",
      ".",
      "itemgetter",
      "(",
      "1",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a_list",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      47,
      113,
      24,
      4,
      2,
      33,
      26,
      79,
      18,
      438,
      118,
      49
    ],
    "code_indx_copy": [
      179,
      1,
      34,
      8,
      102,
      19,
      127,
      22,
      128,
      1,
      15,
      17,
      17
    ],
    "code_indx_nocopy": [
      179,
      1,
      34,
      8,
      102,
      19,
      127,
      22,
      128,
      1,
      15,
      17,
      17
    ]
  },
  {
    "intent": [
      "resample",
      "series",
      "var_0",
      "into",
      "3",
      "months",
      "bins",
      "and",
      "sum",
      "each",
      "bin"
    ],
    "code": [
      "var_0",
      ".",
      "resample",
      "(",
      "'3M'",
      ",",
      "how",
      "=",
      "'sum'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      339,
      26,
      12,
      57,
      465,
      465,
      31,
      112,
      22,
      465
    ],
    "code_indx_copy": [
      34,
      22,
      528,
      1,
      524,
      8,
      243,
      19,
      524,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      524,
      1,
      524,
      8,
      243,
      19,
      524,
      17
    ]
  },
  {
    "intent": [
      "extract",
      "elements",
      "at",
      "indices",
      "(",
      "1",
      ",",
      "2",
      ",",
      "5",
      ")",
      "from",
      "a",
      "list",
      "var_0"
    ],
    "code": [
      "[",
      "var_0",
      "[",
      "i",
      "]",
      "for",
      "i",
      "in",
      "(",
      "1",
      ",",
      "2",
      ",",
      "5",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      104,
      1,
      35,
      326,
      212,
      237,
      62,
      82,
      62,
      232,
      27,
      58,
      3,
      4,
      26
    ],
    "code_indx_copy": [
      12,
      34,
      12,
      6,
      16,
      7,
      6,
      9,
      1,
      15,
      8,
      82,
      8,
      185,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      34,
      12,
      6,
      16,
      7,
      6,
      9,
      1,
      15,
      8,
      82,
      8,
      185,
      17,
      16
    ]
  },
  {
    "intent": [
      "filter",
      "lines",
      "from",
      "a",
      "text",
      "file",
      "str_0",
      "which",
      "contain",
      "a",
      "word",
      "str_1"
    ],
    "code": [
      "[",
      "line",
      "for",
      "line",
      "in",
      "open",
      "(",
      "'str_0'",
      ")",
      "if",
      "'str_1'",
      "in",
      "line",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "textfile",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "apple",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      217,
      395,
      58,
      3,
      267,
      126,
      5,
      205,
      325,
      3,
      239,
      32
    ],
    "code_indx_copy": [
      12,
      315,
      7,
      315,
      9,
      105,
      1,
      29,
      17,
      67,
      63,
      9,
      315,
      16
    ],
    "code_indx_nocopy": [
      12,
      315,
      7,
      315,
      9,
      105,
      1,
      29,
      17,
      67,
      63,
      9,
      315,
      16
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "date",
      "string",
      "var_0",
      "to",
      "a",
      "datetime",
      "object"
    ],
    "code": [
      "datetime",
      ".",
      "datetime",
      ".",
      "strptime",
      "(",
      "var_0",
      ",",
      "'%Y-%m-%dT%H:%M:%SZ'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      3,
      133,
      14,
      26,
      8,
      3,
      13,
      15
    ],
    "code_indx_copy": [
      27,
      22,
      27,
      22,
      28,
      1,
      34,
      8,
      524,
      17
    ],
    "code_indx_nocopy": [
      27,
      22,
      27,
      22,
      28,
      1,
      34,
      8,
      524,
      17
    ]
  },
  {
    "intent": [
      "reading",
      "tab-delimited",
      "csv",
      "file",
      "var_0",
      "with",
      "pandas",
      "on",
      "mac"
    ],
    "code": [
      "pandas",
      ".",
      "read_csv",
      "(",
      "var_0",
      ",",
      "sep",
      "=",
      "'\\t'",
      ",",
      "lineterminator",
      "=",
      "'\\r'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "filename",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      465,
      287,
      126,
      26,
      79,
      42,
      139,
      465
    ],
    "code_indx_copy": [
      276,
      22,
      452,
      1,
      34,
      8,
      264,
      19,
      265,
      8,
      524,
      19,
      524,
      17
    ],
    "code_indx_nocopy": [
      276,
      22,
      452,
      1,
      34,
      8,
      264,
      19,
      265,
      8,
      524,
      19,
      524,
      17
    ]
  },
  {
    "intent": [
      "replace",
      "only",
      "first",
      "occurence",
      "of",
      "string",
      "var_0",
      "from",
      "a",
      "string",
      "var_1"
    ],
    "code": [
      "\"\"\"var_1\"\"\"",
      ".",
      "replace",
      "(",
      "'var_0'",
      ",",
      "'?'",
      ",",
      "1",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "TEST",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "longlongTESTstringTEST",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      130,
      352,
      151,
      465,
      2,
      14,
      26,
      58,
      3,
      14,
      63
    ],
    "code_indx_copy": [
      524,
      22,
      107,
      1,
      56,
      8,
      241,
      8,
      15,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      107,
      1,
      56,
      8,
      241,
      8,
      15,
      17
    ]
  },
  {
    "intent": [
      "zip",
      "file",
      "var_0",
      "using",
      "its",
      "basename",
      "as",
      "directory",
      "name"
    ],
    "code": [
      "archive",
      ".",
      "write",
      "(",
      "var_0",
      ",",
      "os",
      ".",
      "path",
      ".",
      "basename",
      "(",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "pdffile",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      28,
      126,
      26,
      109,
      91,
      465,
      90,
      175,
      129
    ],
    "code_indx_copy": [
      524,
      22,
      131,
      1,
      34,
      8,
      113,
      22,
      114,
      22,
      533,
      1,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      131,
      1,
      34,
      8,
      113,
      22,
      114,
      22,
      524,
      1,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "dictionary",
      "of",
      "pairs",
      "from",
      "a",
      "list",
      "of",
      "tuples",
      "var_0"
    ],
    "code": [
      "dict",
      "(",
      "x",
      "[",
      "1",
      ":",
      "]",
      "for",
      "x",
      "in",
      "reversed",
      "(",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "myListOfTuples",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      148,
      3,
      25,
      2,
      187,
      58,
      3,
      4,
      2,
      33,
      26
    ],
    "code_indx_copy": [
      70,
      1,
      26,
      12,
      15,
      13,
      16,
      7,
      26,
      9,
      246,
      1,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      70,
      1,
      26,
      12,
      15,
      13,
      16,
      7,
      26,
      9,
      246,
      1,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "subtract",
      "elements",
      "of",
      "list",
      "var_0",
      "from",
      "elements",
      "of",
      "list",
      "var_1"
    ],
    "code": [
      "[",
      "(",
      "x1",
      "-",
      "x2",
      ")",
      "for",
      "x1",
      ",",
      "x2",
      "in",
      "zip",
      "(",
      "var_0",
      ",",
      "var_1",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "List1",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "List2",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      418,
      1,
      2,
      4,
      26,
      58,
      1,
      2,
      4,
      63
    ],
    "code_indx_copy": [
      12,
      1,
      524,
      14,
      524,
      17,
      7,
      524,
      8,
      524,
      9,
      36,
      1,
      34,
      8,
      91,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      1,
      524,
      14,
      524,
      17,
      7,
      524,
      8,
      524,
      9,
      36,
      1,
      34,
      8,
      91,
      17,
      16
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "string",
      "var_0",
      "starts",
      "with",
      "a",
      "number"
    ],
    "code": [
      "var_0",
      "[",
      "0",
      "]",
      ".",
      "isdigit",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "string",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      234,
      150,
      14,
      26,
      439,
      79,
      3,
      76
    ],
    "code_indx_copy": [
      34,
      12,
      43,
      16,
      22,
      68,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      12,
      43,
      16,
      22,
      68,
      1,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "string",
      "var_0",
      "starts",
      "with",
      "any",
      "of",
      "the",
      "elements",
      "in",
      "list",
      "(",
      "str_0",
      ",",
      "str_1",
      ",",
      "str_2",
      ",",
      "str_3",
      ",",
      "str_4",
      ",",
      "str_5",
      ",",
      "str_6",
      ",",
      "str_7",
      ",",
      "str_8",
      ",",
      "str_9",
      ")"
    ],
    "code": [
      "var_0",
      ".",
      "startswith",
      "(",
      "(",
      "'str_0'",
      ",",
      "'str_1'",
      ",",
      "'str_2'",
      ",",
      "'str_3'",
      ",",
      "'str_4'",
      ",",
      "'str_5'",
      ",",
      "\n",
      "'str_6'",
      ",",
      "'str_7'",
      ",",
      "'str_8'",
      ",",
      "'str_9'",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "strg",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "0",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "1",
        "quote": "'",
        "type": "str"
      },
      "str_2": {
        "value": "2",
        "quote": "'",
        "type": "str"
      },
      "str_3": {
        "value": "3",
        "quote": "'",
        "type": "str"
      },
      "str_4": {
        "value": "4",
        "quote": "'",
        "type": "str"
      },
      "str_5": {
        "value": "5",
        "quote": "'",
        "type": "str"
      },
      "str_6": {
        "value": "6",
        "quote": "'",
        "type": "str"
      },
      "str_7": {
        "value": "7",
        "quote": "'",
        "type": "str"
      },
      "str_8": {
        "value": "8",
        "quote": "'",
        "type": "str"
      },
      "str_9": {
        "value": "9",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      234,
      150,
      14,
      26,
      439,
      79,
      272,
      2,
      18,
      1,
      24,
      4,
      212,
      5,
      62,
      32,
      62,
      194,
      62,
      219,
      62,
      465,
      62,
      465,
      62,
      465,
      62,
      465,
      62,
      465,
      62,
      465,
      27
    ],
    "code_indx_copy": [
      34,
      22,
      453,
      1,
      1,
      29,
      8,
      63,
      8,
      150,
      8,
      173,
      8,
      322,
      8,
      323,
      8,
      161,
      324,
      8,
      325,
      8,
      524,
      8,
      524,
      17,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      453,
      1,
      1,
      29,
      8,
      63,
      8,
      150,
      8,
      173,
      8,
      322,
      8,
      323,
      8,
      161,
      324,
      8,
      325,
      8,
      524,
      8,
      524,
      17,
      17
    ]
  },
  {
    "intent": [
      "print",
      "script",
      "'s",
      "directory"
    ],
    "code": [
      "print",
      "(",
      "os",
      ".",
      "path",
      ".",
      "dirname",
      "(",
      "os",
      ".",
      "path",
      ".",
      "realpath",
      "(",
      "__file__",
      ")",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      166,
      246,
      266,
      175
    ],
    "code_indx_copy": [
      49,
      1,
      113,
      22,
      114,
      22,
      378,
      1,
      113,
      22,
      114,
      22,
      188,
      1,
      383,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      113,
      22,
      114,
      22,
      378,
      1,
      113,
      22,
      114,
      22,
      188,
      1,
      383,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "split",
      "string",
      "var_0",
      "by",
      "the",
      "occurrences",
      "of",
      "regex",
      "pattern",
      "str_0"
    ],
    "code": [
      "re",
      ".",
      "split",
      "(",
      "'str_0'",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "text",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "(?<=\\?|!|\\.)\\s{0,2}(?=[A-Z]|$)",
        "quote": "'",
        "type": "str"
      },
      "(str_0)": {
        "value": "(?<=\\?|!|\\.)\\s{0,2}(?=[A-Z]|$)",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      138,
      14,
      26,
      44,
      18,
      53,
      2,
      40,
      54,
      5
    ],
    "code_indx_copy": [
      39,
      22,
      71,
      1,
      29,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      71,
      1,
      29,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "make",
      "a",
      "scatter",
      "plot",
      "using",
      "unpacked",
      "values",
      "of",
      "list",
      "var_0"
    ],
    "code": [
      "plt",
      ".",
      "scatter",
      "(",
      "*",
      "zip",
      "(",
      "*",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "li",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      191,
      3,
      465,
      244,
      109,
      465,
      20,
      2,
      4,
      26
    ],
    "code_indx_copy": [
      196,
      22,
      530,
      1,
      3,
      36,
      1,
      3,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      196,
      22,
      524,
      1,
      3,
      36,
      1,
      3,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "rearrange",
      "tuple",
      "of",
      "tuples",
      "var_0"
    ],
    "code": [
      "tuple",
      "(",
      "zip",
      "(",
      "*",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "t",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      113,
      2,
      33,
      26
    ],
    "code_indx_copy": [
      432,
      1,
      36,
      1,
      3,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      432,
      1,
      36,
      1,
      3,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "average",
      "for",
      "every",
      "three",
      "columns",
      "in",
      "var_0",
      "dataframe"
    ],
    "code": [
      "var_0",
      ".",
      "groupby",
      "(",
      "np",
      ".",
      "arange",
      "(",
      "len",
      "(",
      "var_0",
      ".",
      "columns",
      ")",
      ")",
      "//",
      "3",
      ",",
      "axis",
      "=",
      "1",
      ")",
      ".",
      "mean",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      19,
      21,
      279,
      240,
      61,
      24,
      26,
      43
    ],
    "code_indx_copy": [
      34,
      22,
      157,
      1,
      74,
      22,
      193,
      1,
      32,
      1,
      34,
      22,
      192,
      17,
      17,
      454,
      54,
      8,
      42,
      19,
      15,
      17,
      22,
      390,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      157,
      1,
      74,
      22,
      193,
      1,
      32,
      1,
      34,
      22,
      192,
      17,
      17,
      454,
      54,
      8,
      42,
      19,
      15,
      17,
      22,
      390,
      1,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "list",
      "var_0",
      "of",
      "ascii",
      "values",
      "to",
      "a",
      "string"
    ],
    "code": [
      "\"\"\"\"\"\"",
      ".",
      "join",
      "(",
      "chr",
      "(",
      "i",
      ")",
      "for",
      "i",
      "in",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "L",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      3,
      4,
      26,
      2,
      384,
      20,
      8,
      3,
      14
    ],
    "code_indx_copy": [
      287,
      22,
      23,
      1,
      455,
      1,
      6,
      17,
      7,
      6,
      9,
      34,
      17
    ],
    "code_indx_nocopy": [
      287,
      22,
      23,
      1,
      455,
      1,
      6,
      17,
      7,
      6,
      9,
      34,
      17
    ]
  },
  {
    "intent": [
      "count",
      "the",
      "number",
      "of",
      "pairs",
      "in",
      "dictionary",
      "var_0",
      "whose",
      "value",
      "equal",
      "to",
      "var_1"
    ],
    "code": [
      "sum",
      "(",
      "x",
      "==",
      "var_1",
      "for",
      "x",
      "in",
      "list",
      "(",
      "var_0",
      ".",
      "values",
      "(",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "d",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "chosen_value",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      203,
      18,
      76,
      2,
      187,
      24,
      25,
      26,
      228,
      143,
      106,
      8,
      63
    ],
    "code_indx_copy": [
      0,
      1,
      26,
      76,
      91,
      7,
      26,
      9,
      33,
      1,
      34,
      22,
      166,
      1,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      0,
      1,
      26,
      76,
      91,
      7,
      26,
      9,
      33,
      1,
      34,
      22,
      166,
      1,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "count",
      "the",
      "number",
      "of",
      "values",
      "in",
      "var_0",
      "dictionary",
      "that",
      "are",
      "predicate",
      "to",
      "function",
      "var_1"
    ],
    "code": [
      "sum",
      "(",
      "1",
      "for",
      "x",
      "in",
      "list",
      "(",
      "var_0",
      ".",
      "values",
      "(",
      ")",
      ")",
      "if",
      "var_1",
      "(",
      "x",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "d",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "some_condition",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      203,
      18,
      76,
      2,
      20,
      24,
      26,
      25,
      195,
      243,
      465,
      8,
      69,
      63
    ],
    "code_indx_copy": [
      0,
      1,
      15,
      7,
      26,
      9,
      33,
      1,
      34,
      22,
      166,
      1,
      17,
      17,
      67,
      91,
      1,
      26,
      17,
      17
    ],
    "code_indx_nocopy": [
      0,
      1,
      15,
      7,
      26,
      9,
      33,
      1,
      34,
      22,
      166,
      1,
      17,
      17,
      67,
      91,
      1,
      26,
      17,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "double",
      "0.00582811585976",
      "to",
      "float"
    ],
    "code": [
      "struct",
      ".",
      "unpack",
      "(",
      "'f'",
      ",",
      "struct",
      ".",
      "pack",
      "(",
      "'f'",
      ",",
      "0.00582811585976",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      11,
      465,
      465,
      8,
      94
    ],
    "code_indx_copy": [
      317,
      22,
      406,
      1,
      456,
      8,
      317,
      22,
      318,
      1,
      456,
      8,
      530,
      17,
      17
    ],
    "code_indx_nocopy": [
      317,
      22,
      406,
      1,
      456,
      8,
      317,
      22,
      318,
      1,
      456,
      8,
      524,
      17,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "datetime.date",
      "var_0",
      "to",
      "utc",
      "timestamp"
    ],
    "code": [
      "timestamp",
      "=",
      "(",
      "var_0",
      "-",
      "datetime",
      "(",
      "1970",
      ",",
      "1",
      ",",
      "1",
      ")",
      ")",
      ".",
      "total_seconds",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "dt",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      465,
      26,
      8,
      180,
      465
    ],
    "code_indx_copy": [
      533,
      19,
      1,
      34,
      14,
      27,
      1,
      524,
      8,
      15,
      8,
      15,
      17,
      17,
      22,
      524,
      1,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      1,
      34,
      14,
      27,
      1,
      524,
      8,
      15,
      8,
      15,
      17,
      17,
      22,
      524,
      1,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "column",
      "var_0",
      "in",
      "panda",
      "dataframe",
      "var_1"
    ],
    "code": [
      "var_1",
      ".",
      "sort",
      "(",
      "'var_0'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "m",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      147,
      26,
      24,
      465,
      43,
      63
    ],
    "code_indx_copy": [
      91,
      22,
      124,
      1,
      56,
      17
    ],
    "code_indx_nocopy": [
      91,
      22,
      124,
      1,
      56,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "data",
      "var_0",
      "in",
      "descending",
      "order",
      "based",
      "on",
      "the",
      "var_1",
      "attribute",
      "of",
      "elements",
      "using",
      "lambda",
      "function"
    ],
    "code": [
      "var_0",
      "=",
      "sorted",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "x",
      ".",
      "var_1",
      ",",
      "reverse",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "modified",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      3,
      65,
      26,
      24,
      121,
      162,
      208,
      139,
      18,
      63,
      341,
      2,
      1,
      109,
      68,
      69
    ],
    "code_indx_copy": [
      34,
      19,
      101,
      1,
      34,
      8,
      102,
      19,
      44,
      26,
      13,
      26,
      22,
      91,
      8,
      129,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      101,
      1,
      34,
      8,
      102,
      19,
      44,
      26,
      13,
      26,
      22,
      91,
      8,
      129,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "print",
      "the",
      "truth",
      "value",
      "of",
      "var_0"
    ],
    "code": [
      "print",
      "(",
      "bool",
      "(",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      166,
      18,
      465,
      143,
      2,
      26
    ],
    "code_indx_copy": [
      49,
      1,
      457,
      1,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      457,
      1,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "rename",
      "var_0",
      "row",
      "index",
      "label",
      "in",
      "dataframe",
      "var_1",
      "to",
      "var_2"
    ],
    "code": [
      "var_1",
      "=",
      "var_1",
      ".",
      "rename",
      "(",
      "index",
      "=",
      "{",
      "var_0",
      ":",
      "'var_2'",
      "}",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "last",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      391,
      26,
      45,
      37,
      465,
      24,
      43,
      63,
      8,
      64
    ],
    "code_indx_copy": [
      91,
      19,
      91,
      22,
      341,
      1,
      160,
      19,
      52,
      34,
      13,
      58,
      53,
      17
    ],
    "code_indx_nocopy": [
      91,
      19,
      91,
      22,
      341,
      1,
      160,
      19,
      52,
      34,
      13,
      58,
      53,
      17
    ]
  },
  {
    "intent": [
      "fit",
      "kmeans",
      "function",
      "to",
      "a",
      "one-dimensional",
      "array",
      "var_0",
      "by",
      "reshaping",
      "it",
      "to",
      "be",
      "a",
      "multidimensional",
      "array",
      "of",
      "single",
      "values"
    ],
    "code": [
      "km",
      ".",
      "fit",
      "(",
      "var_0",
      ".",
      "reshape",
      "(",
      "-",
      "1",
      ",",
      "1",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "x",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      465,
      69,
      8,
      3,
      465,
      85,
      26,
      44,
      465,
      145,
      8,
      362,
      3,
      465,
      85,
      2,
      9,
      20
    ],
    "code_indx_copy": [
      524,
      22,
      528,
      1,
      34,
      22,
      361,
      1,
      14,
      15,
      8,
      15,
      17,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      524,
      1,
      34,
      22,
      361,
      1,
      14,
      15,
      8,
      15,
      17,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "list",
      "of",
      "strings",
      "str_0",
      "such",
      "that",
      "items",
      "starting",
      "with",
      "str_1",
      "come",
      "first",
      "."
    ],
    "code": [
      "sorted",
      "(",
      "str_0",
      ",",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "'a'",
      "+",
      "x",
      "if",
      "x",
      ".",
      "startswith",
      "(",
      "'str_1'",
      ")",
      "else",
      "'b'",
      "+",
      "x",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "words",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "s",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      117,
      3,
      4,
      2,
      259,
      5,
      465,
      195,
      39,
      316,
      79,
      32,
      465,
      151,
      159
    ],
    "code_indx_copy": [
      101,
      1,
      11,
      8,
      102,
      19,
      44,
      26,
      13,
      413,
      96,
      26,
      67,
      26,
      22,
      453,
      1,
      63,
      17,
      211,
      293,
      96,
      26,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      11,
      8,
      102,
      19,
      44,
      26,
      13,
      413,
      96,
      26,
      67,
      26,
      22,
      453,
      1,
      63,
      17,
      211,
      293,
      96,
      26,
      17
    ]
  },
  {
    "intent": [
      "open",
      "the",
      "login",
      "site",
      "str_0",
      "in",
      "the",
      "browser"
    ],
    "code": [
      "webbrowser",
      ".",
      "open",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "http://somesite.com/adminpanel/index.php",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      284,
      18,
      465,
      465,
      5,
      24,
      18,
      465
    ],
    "code_indx_copy": [
      331,
      22,
      105,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      331,
      22,
      105,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "fetch",
      "all",
      "elements",
      "in",
      "a",
      "dictionary",
      "var_0",
      ",",
      "falling",
      "between",
      "two",
      "keys",
      "2",
      "and",
      "4"
    ],
    "code": [
      "dict",
      "(",
      "(",
      "k",
      ",",
      "v",
      ")",
      "for",
      "k",
      ",",
      "v",
      "in",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      "if",
      "2",
      "<",
      "k",
      "<",
      "4",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "parent_dict",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      38,
      1,
      24,
      3,
      25,
      26,
      62,
      465,
      278,
      29,
      206,
      82,
      31,
      231
    ],
    "code_indx_copy": [
      70,
      1,
      1,
      89,
      8,
      90,
      17,
      7,
      89,
      8,
      90,
      9,
      34,
      22,
      35,
      1,
      17,
      67,
      82,
      344,
      89,
      344,
      184,
      17
    ],
    "code_indx_nocopy": [
      70,
      1,
      1,
      89,
      8,
      90,
      17,
      7,
      89,
      8,
      90,
      9,
      34,
      22,
      35,
      1,
      17,
      67,
      82,
      344,
      89,
      344,
      184,
      17
    ]
  },
  {
    "intent": [
      "fetch",
      "all",
      "elements",
      "in",
      "a",
      "dictionary",
      "str_0",
      "where",
      "the",
      "key",
      "is",
      "between",
      "the",
      "range",
      "of",
      "2",
      "to",
      "4"
    ],
    "code": [
      "dict",
      "(",
      "(",
      "k",
      ",",
      "v",
      ")",
      "for",
      "k",
      ",",
      "v",
      "in",
      "str_0",
      ".",
      "items",
      "(",
      ")",
      "if",
      "k",
      ">",
      "2",
      "and",
      "k",
      "<",
      "4",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "parent_dict",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      38,
      1,
      24,
      3,
      25,
      5,
      155,
      18,
      23,
      152,
      278,
      18,
      123,
      2,
      82,
      8,
      231
    ],
    "code_indx_copy": [
      70,
      1,
      1,
      89,
      8,
      90,
      17,
      7,
      89,
      8,
      90,
      9,
      11,
      22,
      35,
      1,
      17,
      67,
      89,
      214,
      82,
      458,
      89,
      344,
      184,
      17
    ],
    "code_indx_nocopy": [
      70,
      1,
      1,
      89,
      8,
      90,
      17,
      7,
      89,
      8,
      90,
      9,
      11,
      22,
      35,
      1,
      17,
      67,
      89,
      214,
      82,
      458,
      89,
      344,
      184,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "two",
      "lists",
      "var_0",
      "and",
      "var_1",
      "together",
      "using",
      "lambda",
      "function"
    ],
    "code": [
      "[",
      "list",
      "(",
      "x",
      ")",
      "for",
      "x",
      "in",
      "zip",
      "(",
      "*",
      "sorted",
      "(",
      "zip",
      "(",
      "var_0",
      ",",
      "var_1",
      ")",
      ",",
      "key",
      "=",
      "lambda",
      "pair",
      ":",
      "pair",
      "[",
      "0",
      "]",
      ")",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "list1",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "list2",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      29,
      30,
      26,
      31,
      63,
      465,
      109,
      68,
      69
    ],
    "code_indx_copy": [
      12,
      33,
      1,
      26,
      17,
      7,
      26,
      9,
      36,
      1,
      3,
      101,
      1,
      36,
      1,
      34,
      8,
      91,
      17,
      8,
      102,
      19,
      44,
      320,
      13,
      320,
      12,
      43,
      16,
      17,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      33,
      1,
      26,
      17,
      7,
      26,
      9,
      36,
      1,
      3,
      101,
      1,
      36,
      1,
      34,
      8,
      91,
      17,
      8,
      102,
      19,
      44,
      320,
      13,
      320,
      12,
      43,
      16,
      17,
      17,
      16
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "number",
      "of",
      "values",
      "in",
      "list",
      "var_0",
      "that",
      "is",
      "greater",
      "than",
      "5"
    ],
    "code": [
      "sum",
      "(",
      "i",
      ">",
      "5",
      "for",
      "i",
      "in",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "j",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      18,
      76,
      2,
      20,
      24,
      4,
      26,
      195,
      152,
      349,
      264,
      232
    ],
    "code_indx_copy": [
      0,
      1,
      6,
      214,
      185,
      7,
      6,
      9,
      34,
      17
    ],
    "code_indx_nocopy": [
      0,
      1,
      6,
      214,
      185,
      7,
      6,
      9,
      34,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "number",
      "of",
      "values",
      "in",
      "list",
      "var_0",
      "that",
      "is",
      "greater",
      "than",
      "5"
    ],
    "code": [
      "len",
      "(",
      "[",
      "(",
      "1",
      ")",
      "for",
      "i",
      "in",
      "var_0",
      "if",
      "i",
      ">",
      "5",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "j",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      18,
      76,
      2,
      20,
      24,
      4,
      26,
      195,
      152,
      349,
      264,
      232
    ],
    "code_indx_copy": [
      32,
      1,
      12,
      1,
      15,
      17,
      7,
      6,
      9,
      34,
      67,
      6,
      214,
      185,
      16,
      17
    ],
    "code_indx_nocopy": [
      32,
      1,
      12,
      1,
      15,
      17,
      7,
      6,
      9,
      34,
      67,
      6,
      214,
      185,
      16,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "number",
      "of",
      "values",
      "in",
      "list",
      "var_0",
      "that",
      "is",
      "greater",
      "than",
      "var_1"
    ],
    "code": [
      "var_0",
      "=",
      "np",
      ".",
      "array",
      "(",
      "var_0",
      ")",
      "\n",
      "sum",
      "(",
      "var_0",
      ">",
      "var_1",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "j",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "i",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      18,
      76,
      2,
      20,
      24,
      4,
      26,
      195,
      152,
      349,
      264,
      63
    ],
    "code_indx_copy": [
      34,
      19,
      74,
      22,
      175,
      1,
      34,
      17,
      161,
      0,
      1,
      34,
      214,
      91,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      74,
      22,
      175,
      1,
      34,
      17,
      161,
      0,
      1,
      34,
      214,
      91,
      17
    ]
  },
  {
    "intent": [
      "zip",
      "list",
      "var_0",
      ",",
      "var_1",
      ",",
      "var_2",
      "into",
      "a",
      "list",
      "of",
      "tuples"
    ],
    "code": [
      "[",
      "(",
      "x",
      "+",
      "tuple",
      "(",
      "y",
      ")",
      ")",
      "for",
      "x",
      ",",
      "y",
      "in",
      "zip",
      "(",
      "zip",
      "(",
      "var_0",
      ",",
      "var_1",
      ")",
      ",",
      "var_2",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "b",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "c",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      28,
      4,
      26,
      62,
      63,
      62,
      64,
      12,
      3,
      4,
      2,
      33
    ],
    "code_indx_copy": [
      12,
      1,
      26,
      96,
      432,
      1,
      103,
      17,
      17,
      7,
      26,
      8,
      103,
      9,
      36,
      1,
      36,
      1,
      34,
      8,
      91,
      17,
      8,
      94,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      1,
      26,
      96,
      432,
      1,
      103,
      17,
      17,
      7,
      26,
      8,
      103,
      9,
      36,
      1,
      36,
      1,
      34,
      8,
      91,
      17,
      8,
      94,
      17,
      16
    ]
  },
  {
    "intent": [
      "changing",
      "permission",
      "of",
      "file",
      "var_0",
      "to",
      "str_0"
    ],
    "code": [
      "os",
      ".",
      "chmod",
      "(",
      "var_0",
      ",",
      "stat",
      ".",
      "S_IRUSR",
      "|",
      "stat",
      ".",
      "S_IRGRP",
      "|",
      "stat",
      ".",
      "S_IROTH",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "path",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "stat.S_IRUSR | stat.S_IRGRP | stat.S_IROTH",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      465,
      2,
      126,
      26,
      8,
      5
    ],
    "code_indx_copy": [
      113,
      22,
      524,
      1,
      34,
      8,
      459,
      22,
      524,
      412,
      459,
      22,
      524,
      412,
      459,
      22,
      524,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      524,
      1,
      34,
      8,
      459,
      22,
      524,
      412,
      459,
      22,
      524,
      412,
      459,
      22,
      524,
      17
    ]
  },
  {
    "intent": [
      "argparse",
      "associate",
      "zero",
      "or",
      "more",
      "arguments",
      "with",
      "flag",
      "str_0"
    ],
    "code": [
      "parser",
      ".",
      "add_argument",
      "(",
      "'str_0'",
      ",",
      "nargs",
      "=",
      "'*'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "file",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      465,
      261,
      344,
      425,
      305,
      79,
      465,
      5
    ],
    "code_indx_copy": [
      376,
      22,
      460,
      1,
      29,
      8,
      461,
      19,
      429,
      17
    ],
    "code_indx_nocopy": [
      376,
      22,
      460,
      1,
      29,
      8,
      461,
      19,
      429,
      17
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "list",
      "of",
      "booleans",
      "var_0",
      "that",
      "shows",
      "wether",
      "the",
      "corresponding",
      "items",
      "in",
      "list",
      "var_1",
      "and",
      "var_2",
      "are",
      "equal"
    ],
    "code": [
      "var_0",
      "=",
      "[",
      "(",
      "i",
      "==",
      "j",
      ")",
      "for",
      "i",
      ",",
      "j",
      "in",
      "zip",
      "(",
      "var_1",
      ",",
      "var_2",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "z",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "x",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "y",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      3,
      4,
      2,
      465,
      26,
      195,
      465,
      465,
      18,
      347,
      39,
      24,
      4,
      63,
      31,
      64,
      243,
      106
    ],
    "code_indx_copy": [
      34,
      19,
      12,
      1,
      6,
      76,
      30,
      17,
      7,
      6,
      8,
      30,
      9,
      36,
      1,
      91,
      8,
      94,
      17,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      12,
      1,
      6,
      76,
      30,
      17,
      7,
      6,
      8,
      30,
      9,
      36,
      1,
      91,
      8,
      94,
      17,
      16
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "list",
      "which",
      "indicates",
      "whether",
      "each",
      "element",
      "in",
      "var_0",
      "and",
      "var_1",
      "is",
      "identical"
    ],
    "code": [
      "[",
      "(",
      "var_0",
      "[",
      "i",
      "]",
      "==",
      "var_1",
      "[",
      "i",
      "]",
      ")",
      "for",
      "i",
      "in",
      "range",
      "(",
      "len",
      "(",
      "var_0",
      ")",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "x",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "y",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      148,
      3,
      4,
      205,
      465,
      359,
      22,
      49,
      24,
      26,
      31,
      63,
      152,
      465
    ],
    "code_indx_copy": [
      12,
      1,
      34,
      12,
      6,
      16,
      76,
      91,
      12,
      6,
      16,
      17,
      7,
      6,
      9,
      104,
      1,
      32,
      1,
      34,
      17,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      1,
      34,
      12,
      6,
      16,
      76,
      91,
      12,
      6,
      16,
      17,
      7,
      6,
      9,
      104,
      1,
      32,
      1,
      34,
      17,
      17,
      16
    ]
  },
  {
    "intent": [
      "python",
      ":",
      "extract",
      "numbers",
      "from",
      "a",
      "string"
    ],
    "code": [
      "[",
      "int",
      "(",
      "s",
      ")",
      "for",
      "s",
      "in",
      "re",
      ".",
      "findall",
      "(",
      "'\\\\b\\\\d+\\\\b'",
      ",",
      "\"he33llo 42 I'm a 32 string 30\"",
      ")",
      "]"
    ],
    "slot_map": {},
    "intent_indx": [
      50,
      128,
      104,
      97,
      58,
      3,
      14
    ],
    "code_indx_copy": [
      12,
      20,
      1,
      181,
      17,
      7,
      181,
      9,
      39,
      22,
      48,
      1,
      524,
      8,
      524,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      20,
      1,
      181,
      17,
      7,
      181,
      9,
      39,
      22,
      48,
      1,
      524,
      8,
      524,
      17,
      16
    ]
  },
  {
    "intent": [
      "create",
      "an",
      "empty",
      "data",
      "frame",
      "var_0",
      "with",
      "index",
      "from",
      "another",
      "data",
      "frame",
      "var_1"
    ],
    "code": [
      "var_0",
      "=",
      "pd",
      ".",
      "DataFrame",
      "(",
      "index",
      "=",
      "var_1",
      ".",
      "index",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df2",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "df1",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      148,
      225,
      146,
      65,
      66,
      26,
      79,
      37,
      58,
      176,
      65,
      66,
      63
    ],
    "code_indx_copy": [
      34,
      19,
      162,
      22,
      164,
      1,
      160,
      19,
      91,
      22,
      160,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      162,
      22,
      164,
      1,
      160,
      19,
      91,
      22,
      160,
      17
    ]
  },
  {
    "intent": [
      "unpack",
      "first",
      "and",
      "second",
      "bytes",
      "of",
      "byte",
      "string",
      "var_0",
      "into",
      "integer"
    ],
    "code": [
      "struct",
      ".",
      "unpack",
      "(",
      "'h'",
      ",",
      "var_0",
      "[",
      "0",
      ":",
      "2",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "pS",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      142,
      151,
      31,
      118,
      420,
      2,
      229,
      14,
      26,
      12,
      10
    ],
    "code_indx_copy": [
      317,
      22,
      406,
      1,
      524,
      8,
      34,
      12,
      43,
      13,
      82,
      16,
      17
    ],
    "code_indx_nocopy": [
      317,
      22,
      406,
      1,
      524,
      8,
      34,
      12,
      43,
      13,
      82,
      16,
      17
    ]
  },
  {
    "intent": [
      "print",
      "list",
      "var_0",
      "into",
      "a",
      "table-like",
      "shape"
    ],
    "code": [
      "print",
      "(",
      "'\\n'",
      ".",
      "join",
      "(",
      "'  '",
      ".",
      "join",
      "(",
      "map",
      "(",
      "str",
      ",",
      "row",
      ")",
      ")",
      "for",
      "row",
      "in",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "t",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      166,
      4,
      26,
      12,
      3,
      465,
      465
    ],
    "code_indx_copy": [
      49,
      1,
      133,
      22,
      23,
      1,
      524,
      22,
      23,
      1,
      24,
      1,
      25,
      8,
      262,
      17,
      17,
      7,
      262,
      9,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      133,
      22,
      23,
      1,
      524,
      22,
      23,
      1,
      24,
      1,
      25,
      8,
      262,
      17,
      17,
      7,
      262,
      9,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "pandas",
      "dataframe",
      "by",
      "date"
    ],
    "code": [
      "df",
      ".",
      "sort_values",
      "(",
      "by",
      "=",
      "'Date'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      117,
      42,
      43,
      44,
      133
    ],
    "code_indx_copy": [
      149,
      22,
      178,
      1,
      531,
      19,
      524,
      17
    ],
    "code_indx_nocopy": [
      149,
      22,
      178,
      1,
      524,
      19,
      524,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "a",
      "checkbox",
      "is",
      "checked",
      "in",
      "selenium",
      "python",
      "webdriver"
    ],
    "code": [
      "driver",
      ".",
      "find_element_by_name",
      "(",
      "'<check_box_name>'",
      ")",
      ".",
      "is_selected",
      "(",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      234,
      150,
      3,
      465,
      152,
      465,
      24,
      51,
      50,
      332
    ],
    "code_indx_copy": [
      46,
      22,
      524,
      1,
      524,
      17,
      22,
      524,
      1,
      17
    ],
    "code_indx_nocopy": [
      46,
      22,
      524,
      1,
      524,
      17,
      22,
      524,
      1,
      17
    ]
  },
  {
    "intent": [
      "determine",
      "if",
      "checkbox",
      "with",
      "id",
      "str_0",
      "is",
      "checked",
      "in",
      "selenium",
      "python",
      "webdriver"
    ],
    "code": [
      "driver",
      ".",
      "find_element_by_id",
      "(",
      "'str_0'",
      ")",
      ".",
      "is_selected",
      "(",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "<check_box_id>",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      150,
      465,
      79,
      440,
      5,
      152,
      465,
      24,
      51,
      50,
      332
    ],
    "code_indx_copy": [
      46,
      22,
      462,
      1,
      29,
      17,
      22,
      524,
      1,
      17
    ],
    "code_indx_nocopy": [
      46,
      22,
      462,
      1,
      29,
      17,
      22,
      524,
      1,
      17
    ]
  },
  {
    "intent": [
      "replace",
      "str_0",
      "with",
      "str_1",
      "in",
      "the",
      "list",
      "str_2"
    ],
    "code": [
      "[",
      "(",
      "a",
      "if",
      "a",
      "else",
      "2",
      ")",
      "for",
      "a",
      "in",
      "[",
      "str_2",
      "]",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "0",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": "2",
        "quote": "`",
        "type": "str"
      },
      "str_2": {
        "value": "[0, 1, 0, 3]",
        "quote": "`",
        "type": "str"
      },
      "[str_2]": {
        "value": "[0, 1, 0, 3]",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      130,
      5,
      79,
      32,
      24,
      18,
      4,
      194
    ],
    "code_indx_copy": [
      12,
      1,
      95,
      67,
      95,
      211,
      82,
      17,
      7,
      95,
      9,
      12,
      183,
      16,
      16
    ],
    "code_indx_nocopy": [
      12,
      1,
      95,
      67,
      95,
      211,
      82,
      17,
      7,
      95,
      9,
      12,
      183,
      16,
      16
    ]
  },
  {
    "intent": [
      "produce",
      "a",
      "string",
      "that",
      "is",
      "suitable",
      "as",
      "unicode",
      "literal",
      "from",
      "string",
      "str_0"
    ],
    "code": [
      "\"\"\"str_0\"\"\"",
      ".",
      "encode",
      "(",
      ")",
      ".",
      "decode",
      "(",
      "'unicode-escape'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "M\\N{AMPERSAND}M\\N{APOSTROPHE}s",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      3,
      14,
      195,
      152,
      465,
      90,
      230,
      314,
      58,
      14,
      5
    ],
    "code_indx_copy": [
      212,
      22,
      239,
      1,
      17,
      22,
      99,
      1,
      463,
      17
    ],
    "code_indx_nocopy": [
      212,
      22,
      239,
      1,
      17,
      22,
      99,
      1,
      463,
      17
    ]
  },
  {
    "intent": [
      "parse",
      "a",
      "unicode",
      "string",
      "str_0"
    ],
    "code": [
      "\"\"\"str_0\"\"\"",
      ".",
      "decode",
      "(",
      "'unicode-escape'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "M\\N{AMPERSAND}M\\N{APOSTROPHE}s",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      73,
      3,
      230,
      14,
      5
    ],
    "code_indx_copy": [
      212,
      22,
      99,
      1,
      463,
      17
    ],
    "code_indx_nocopy": [
      212,
      22,
      99,
      1,
      463,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "unicode",
      "codepoint",
      "to",
      "utf8",
      "hex"
    ],
    "code": [
      "chr",
      "(",
      "int",
      "(",
      "'fd9b'",
      ",",
      "16",
      ")",
      ")",
      ".",
      "encode",
      "(",
      "'utf-8'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      11,
      230,
      465,
      8,
      465,
      116
    ],
    "code_indx_copy": [
      455,
      1,
      20,
      1,
      524,
      8,
      271,
      17,
      17,
      22,
      239,
      1,
      143,
      17
    ],
    "code_indx_nocopy": [
      455,
      1,
      20,
      1,
      524,
      8,
      271,
      17,
      17,
      22,
      239,
      1,
      143,
      17
    ]
  },
  {
    "intent": [
      "use",
      "upper",
      "case",
      "letters",
      "to",
      "print",
      "hex",
      "value",
      "var_0"
    ],
    "code": [
      "print",
      "(",
      "'0x%X'",
      "%",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "value",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      309,
      465,
      197,
      360,
      8,
      166,
      116,
      143,
      26
    ],
    "code_indx_copy": [
      49,
      1,
      524,
      117,
      34,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      524,
      117,
      34,
      17
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "list",
      "var_0",
      "that",
      "contains",
      "all",
      "non-empty",
      "elements",
      "in",
      "list",
      "var_1"
    ],
    "code": [
      "var_0",
      "=",
      "[",
      "x",
      "for",
      "x",
      "in",
      "var_1",
      "if",
      "x",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "cleaned",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "your_list",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      3,
      4,
      26,
      195,
      75,
      38,
      465,
      1,
      24,
      4,
      63
    ],
    "code_indx_copy": [
      34,
      19,
      12,
      26,
      7,
      26,
      9,
      91,
      67,
      26,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      12,
      26,
      7,
      26,
      9,
      91,
      67,
      26,
      16
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "slice",
      "object",
      "using",
      "string",
      "var_0"
    ],
    "code": [
      "slice",
      "(",
      "*",
      "[",
      "(",
      "int",
      "(",
      "i",
      ".",
      "strip",
      "(",
      ")",
      ")",
      "if",
      "i",
      "else",
      "None",
      ")",
      "for",
      "i",
      "in",
      "var_0",
      ".",
      "split",
      "(",
      "':'",
      ")",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "string_slice",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      148,
      3,
      465,
      15,
      109,
      14,
      26
    ],
    "code_indx_copy": [
      530,
      1,
      3,
      12,
      1,
      20,
      1,
      6,
      22,
      170,
      1,
      17,
      17,
      67,
      6,
      211,
      209,
      17,
      7,
      6,
      9,
      34,
      22,
      71,
      1,
      72,
      17,
      16,
      17
    ],
    "code_indx_nocopy": [
      524,
      1,
      3,
      12,
      1,
      20,
      1,
      6,
      22,
      170,
      1,
      17,
      17,
      67,
      6,
      211,
      209,
      17,
      7,
      6,
      9,
      34,
      22,
      71,
      1,
      72,
      17,
      16,
      17
    ]
  },
  {
    "intent": [
      "find",
      "all",
      "the",
      "tags",
      "var_0",
      "and",
      "var_1",
      "from",
      "beautiful",
      "soup",
      "object",
      "var_2"
    ],
    "code": [
      "var_2",
      ".",
      "find_all",
      "(",
      "[",
      "'var_0'",
      ",",
      "'var_1'",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "div",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "soup",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      47,
      38,
      18,
      392,
      26,
      31,
      63,
      58,
      465,
      465,
      15,
      64
    ],
    "code_indx_copy": [
      94,
      22,
      62,
      1,
      12,
      56,
      8,
      57,
      16,
      17
    ],
    "code_indx_nocopy": [
      94,
      22,
      62,
      1,
      12,
      56,
      8,
      57,
      16,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "name",
      "of",
      "function",
      "var_0",
      "as",
      "a",
      "string"
    ],
    "code": [
      "print",
      "(",
      "var_0",
      ".",
      "__name__",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "func",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      18,
      129,
      2,
      69,
      26,
      90,
      3,
      14
    ],
    "code_indx_copy": [
      49,
      1,
      34,
      22,
      250,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      34,
      22,
      250,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "dictionary",
      "var_0",
      "into",
      "string"
    ],
    "code": [
      "\"\"\"\"\"\"",
      ".",
      "join",
      "(",
      "'{}{}'",
      ".",
      "format",
      "(",
      "key",
      ",",
      "val",
      ")",
      "for",
      "key",
      ",",
      "val",
      "in",
      "sorted",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "adict",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      25,
      26,
      12,
      14
    ],
    "code_indx_copy": [
      287,
      22,
      23,
      1,
      524,
      22,
      38,
      1,
      102,
      8,
      176,
      17,
      7,
      102,
      8,
      176,
      9,
      101,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      287,
      22,
      23,
      1,
      524,
      22,
      38,
      1,
      102,
      8,
      176,
      17,
      7,
      102,
      8,
      176,
      9,
      101,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "dictionary",
      "var_0",
      "into",
      "string"
    ],
    "code": [
      "\"\"\"\"\"\"",
      ".",
      "join",
      "(",
      "'{}{}'",
      ".",
      "format",
      "(",
      "key",
      ",",
      "val",
      ")",
      "for",
      "key",
      ",",
      "val",
      "in",
      "list",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "adict",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      25,
      26,
      12,
      14
    ],
    "code_indx_copy": [
      287,
      22,
      23,
      1,
      524,
      22,
      38,
      1,
      102,
      8,
      176,
      17,
      7,
      102,
      8,
      176,
      9,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      287,
      22,
      23,
      1,
      524,
      22,
      38,
      1,
      102,
      8,
      176,
      17,
      7,
      102,
      8,
      176,
      9,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "copy",
      "list",
      "var_0",
      "as",
      "var_1"
    ],
    "code": [
      "var_1",
      "=",
      "var_0",
      "[",
      ":",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "old_list",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "new_list",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      324,
      4,
      26,
      90,
      63
    ],
    "code_indx_copy": [
      91,
      19,
      34,
      12,
      13,
      16
    ],
    "code_indx_nocopy": [
      91,
      19,
      34,
      12,
      13,
      16
    ]
  },
  {
    "intent": [
      "copy",
      "list",
      "var_0",
      "as",
      "var_1"
    ],
    "code": [
      "var_1",
      "=",
      "list",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "old_list",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "new_list",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      324,
      4,
      26,
      90,
      63
    ],
    "code_indx_copy": [
      91,
      19,
      33,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      91,
      19,
      33,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "copy",
      "list",
      "var_0",
      "as",
      "var_1"
    ],
    "code": [
      "var_1",
      "=",
      "copy",
      ".",
      "copy",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "old_list",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "new_list",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      324,
      4,
      26,
      90,
      63
    ],
    "code_indx_copy": [
      91,
      19,
      385,
      22,
      385,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      91,
      19,
      385,
      22,
      385,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "deep",
      "copy",
      "list",
      "var_0",
      "as",
      "var_1"
    ],
    "code": [
      "var_1",
      "=",
      "copy",
      ".",
      "deepcopy",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "old_list",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "new_list",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      324,
      4,
      26,
      90,
      63
    ],
    "code_indx_copy": [
      91,
      19,
      385,
      22,
      524,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      91,
      19,
      385,
      22,
      524,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "make",
      "a",
      "copy",
      "of",
      "list",
      "var_0"
    ],
    "code": [
      "[",
      "i",
      "for",
      "i",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "old_list",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      191,
      3,
      324,
      2,
      4,
      26
    ],
    "code_indx_copy": [
      12,
      6,
      7,
      6,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      12,
      6,
      7,
      6,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "remove",
      "frame",
      "of",
      "legend",
      "in",
      "plot",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "legend",
      "(",
      "frameon",
      "=",
      "False",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "plt",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      66,
      2,
      415,
      24,
      244,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      404,
      1,
      524,
      19,
      87,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      404,
      1,
      524,
      19,
      87,
      17
    ]
  },
  {
    "intent": [
      "print",
      "a",
      "emoji",
      "from",
      "a",
      "string",
      "str_0",
      "having",
      "surrogate",
      "pairs"
    ],
    "code": [
      "\"\"\"str_0\"\"\"",
      ".",
      "encode",
      "(",
      "'utf-16'",
      ",",
      "'surrogatepass'",
      ")",
      ".",
      "decode",
      "(",
      "'utf-16'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "\\ud83d\\ude4f",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      166,
      3,
      465,
      58,
      3,
      14,
      5,
      92,
      465,
      187
    ],
    "code_indx_copy": [
      212,
      22,
      239,
      1,
      524,
      8,
      524,
      17,
      22,
      99,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      212,
      22,
      239,
      1,
      524,
      8,
      524,
      17,
      22,
      99,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "calling",
      "a",
      "function",
      "named",
      "str_0",
      "in",
      "the",
      "module"
    ],
    "code": [
      "globals",
      "(",
      ")",
      "[",
      "'str_0'",
      "]",
      "(",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "myfunction",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      441,
      3,
      69,
      320,
      5,
      24,
      18,
      342
    ],
    "code_indx_copy": [
      284,
      1,
      17,
      12,
      29,
      16,
      1,
      17
    ],
    "code_indx_nocopy": [
      284,
      1,
      17,
      12,
      29,
      16,
      1,
      17
    ]
  },
  {
    "intent": [
      "check",
      "the",
      "status",
      "code",
      "of",
      "url",
      "str_0"
    ],
    "code": [
      "urllib",
      ".",
      "request",
      ".",
      "urlopen",
      "(",
      "'str_0'",
      ")",
      ".",
      "getcode",
      "(",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "http://www.stackoverflow.com",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      234,
      18,
      436,
      293,
      2,
      102,
      5
    ],
    "code_indx_copy": [
      232,
      22,
      233,
      22,
      234,
      1,
      29,
      17,
      22,
      524,
      1,
      17
    ],
    "code_indx_nocopy": [
      232,
      22,
      233,
      22,
      234,
      1,
      29,
      17,
      22,
      524,
      1,
      17
    ]
  },
  {
    "intent": [
      "check",
      "the",
      "status",
      "code",
      "of",
      "url",
      "str_0"
    ],
    "code": [
      "conn",
      "=",
      "httplib",
      ".",
      "HTTPConnection",
      "(",
      "'str_0'",
      ")",
      "\n",
      "conn",
      ".",
      "request",
      "(",
      "'HEAD'",
      ",",
      "'/'",
      ")",
      "\n",
      "r1",
      "=",
      "conn",
      ".",
      "getresponse",
      "(",
      ")",
      "\n",
      "print",
      "(",
      "r1",
      ".",
      "status",
      ",",
      "r1",
      ".",
      "reason",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "www.python.org",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      234,
      18,
      436,
      293,
      2,
      102,
      5
    ],
    "code_indx_copy": [
      464,
      19,
      524,
      22,
      524,
      1,
      29,
      17,
      161,
      464,
      22,
      233,
      1,
      524,
      8,
      524,
      17,
      161,
      465,
      19,
      464,
      22,
      524,
      1,
      17,
      161,
      49,
      1,
      465,
      22,
      530,
      8,
      465,
      22,
      524,
      17
    ],
    "code_indx_nocopy": [
      464,
      19,
      524,
      22,
      524,
      1,
      29,
      17,
      161,
      464,
      22,
      233,
      1,
      524,
      8,
      524,
      17,
      161,
      465,
      19,
      464,
      22,
      524,
      1,
      17,
      161,
      49,
      1,
      465,
      22,
      524,
      8,
      465,
      22,
      524,
      17
    ]
  },
  {
    "intent": [
      "check",
      "the",
      "status",
      "code",
      "of",
      "url",
      "var_0"
    ],
    "code": [
      "r",
      "=",
      "requests",
      ".",
      "head",
      "(",
      "var_0",
      ")",
      "\n",
      "return",
      "r",
      ".",
      "status_code",
      "==",
      "200"
    ],
    "slot_map": {
      "var_0": {
        "value": "url",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      234,
      18,
      436,
      293,
      2,
      102,
      26
    ],
    "code_indx_copy": [
      18,
      19,
      85,
      22,
      375,
      1,
      34,
      17,
      161,
      118,
      18,
      22,
      524,
      76,
      524
    ],
    "code_indx_nocopy": [
      18,
      19,
      85,
      22,
      375,
      1,
      34,
      17,
      161,
      118,
      18,
      22,
      524,
      76,
      524
    ]
  },
  {
    "intent": [
      "checking",
      "if",
      "website",
      "str_0",
      "is",
      "up"
    ],
    "code": [
      "print",
      "(",
      "urllib",
      ".",
      "request",
      ".",
      "urlopen",
      "(",
      "'str_0'",
      ")",
      ".",
      "getcode",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "http://www.stackoverflow.com",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      150,
      465,
      5,
      152,
      379
    ],
    "code_indx_copy": [
      49,
      1,
      232,
      22,
      233,
      22,
      234,
      1,
      29,
      17,
      22,
      524,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      232,
      22,
      233,
      22,
      234,
      1,
      29,
      17,
      22,
      524,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "selenium",
      "var_0",
      "click",
      "a",
      "hyperlink",
      "with",
      "the",
      "pattern",
      "str_0"
    ],
    "code": [
      "var_0",
      ".",
      "find_element_by_css_selector",
      "(",
      "'str_0'",
      ")",
      ".",
      "click",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "driver",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "a[href^='javascript']",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      51,
      26,
      465,
      3,
      465,
      79,
      18,
      54,
      5
    ],
    "code_indx_copy": [
      34,
      22,
      330,
      1,
      29,
      17,
      22,
      156,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      330,
      1,
      29,
      17,
      22,
      156,
      1,
      17
    ]
  },
  {
    "intent": [
      "store",
      "data",
      "frame",
      "var_0",
      "to",
      "file",
      "var_1",
      "using",
      "pandas",
      ",",
      "python"
    ],
    "code": [
      "var_0",
      ".",
      "to_pickle",
      "(",
      "var_1",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "file_name",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      377,
      65,
      66,
      26,
      8,
      126,
      63,
      109,
      42,
      62,
      50
    ],
    "code_indx_copy": [
      34,
      22,
      524,
      1,
      91,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      524,
      1,
      91,
      17
    ]
  },
  {
    "intent": [
      "calculate",
      "the",
      "mean",
      "of",
      "columns",
      "with",
      "same",
      "name",
      "in",
      "dataframe",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "groupby",
      "(",
      "by",
      "=",
      "var_0",
      ".",
      "columns",
      ",",
      "axis",
      "=",
      "1",
      ")",
      ".",
      "mean",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      252,
      18,
      412,
      2,
      61,
      79,
      36,
      129,
      24,
      43,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      157,
      1,
      524,
      19,
      34,
      22,
      192,
      8,
      42,
      19,
      15,
      17,
      22,
      390,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      157,
      1,
      524,
      19,
      34,
      22,
      192,
      8,
      42,
      19,
      15,
      17,
      22,
      390,
      1,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "list",
      "var_0",
      "by",
      "each",
      "element",
      "'s",
      "attribute",
      "var_1",
      "and",
      "attribute",
      "var_2",
      "in",
      "reverse",
      "order"
    ],
    "code": [
      "var_0",
      ".",
      "sort",
      "(",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "(",
      "x",
      ".",
      "var_1",
      ",",
      "x",
      ".",
      "var_2",
      ")",
      ",",
      "reverse",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "bar",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "attrb1",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "attrb2",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      4,
      26,
      44,
      22,
      49,
      266,
      341,
      63,
      31,
      341,
      64,
      24,
      282,
      162
    ],
    "code_indx_copy": [
      34,
      22,
      124,
      1,
      102,
      19,
      44,
      26,
      13,
      1,
      26,
      22,
      91,
      8,
      26,
      22,
      94,
      17,
      8,
      129,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      124,
      1,
      102,
      19,
      44,
      26,
      13,
      1,
      26,
      22,
      91,
      8,
      26,
      22,
      94,
      17,
      8,
      129,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "get",
      "alpha",
      "value",
      "var_0",
      "of",
      "a",
      "png",
      "image",
      "var_1"
    ],
    "code": [
      "var_0",
      "=",
      "var_1",
      ".",
      "split",
      "(",
      ")",
      "[",
      "-",
      "1",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "alpha",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "img",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      465,
      143,
      26,
      2,
      3,
      465,
      299,
      63
    ],
    "code_indx_copy": [
      34,
      19,
      91,
      22,
      71,
      1,
      17,
      12,
      14,
      15,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      91,
      22,
      71,
      1,
      17,
      12,
      14,
      15,
      16
    ]
  },
  {
    "intent": [
      "how",
      "to",
      "get",
      "the",
      "length",
      "of",
      "words",
      "in",
      "a",
      "sentence",
      "?"
    ],
    "code": [
      "[",
      "len",
      "(",
      "x",
      ")",
      "for",
      "x",
      "in",
      "s",
      ".",
      "split",
      "(",
      ")",
      "]"
    ],
    "slot_map": {},
    "intent_indx": [
      77,
      8,
      17,
      18,
      209,
      2,
      41,
      24,
      3,
      465,
      52
    ],
    "code_indx_copy": [
      12,
      32,
      1,
      26,
      17,
      7,
      26,
      9,
      181,
      22,
      71,
      1,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      32,
      1,
      26,
      17,
      7,
      26,
      9,
      181,
      22,
      71,
      1,
      17,
      16
    ]
  },
  {
    "intent": [
      "beautifulsoup",
      "find",
      "tag",
      "str_0",
      "with",
      "styling",
      "str_1",
      "in",
      "html",
      "string",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "findAll",
      "(",
      "'str_0'",
      ",",
      "style",
      "=",
      "'str_1'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "div",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "width=300px;",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "soup",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      70,
      47,
      72,
      5,
      79,
      465,
      32,
      24,
      307,
      14,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      254,
      1,
      29,
      8,
      524,
      19,
      63,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      254,
      1,
      29,
      8,
      524,
      19,
      63,
      17
    ]
  },
  {
    "intent": [
      "execute",
      "sql",
      "statement",
      "var_0",
      "with",
      "values",
      "of",
      "dictionary",
      "var_1",
      "as",
      "parameters"
    ],
    "code": [
      "cursor",
      ".",
      "execute",
      "(",
      "var_0",
      ",",
      "list",
      "(",
      "var_1",
      ".",
      "values",
      "(",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "sql",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "myDict",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      135,
      423,
      315,
      26,
      79,
      20,
      2,
      25,
      63,
      90,
      370
    ],
    "code_indx_copy": [
      415,
      22,
      411,
      1,
      34,
      8,
      33,
      1,
      91,
      22,
      166,
      1,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      415,
      22,
      411,
      1,
      34,
      8,
      33,
      1,
      91,
      22,
      166,
      1,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "csv",
      "file",
      "str_0",
      "to",
      "pandas",
      "dataframe",
      "using",
      "separator",
      "str_1"
    ],
    "code": [
      "df",
      ".",
      "to_csv",
      "(",
      "'str_0'",
      ",",
      "index",
      "=",
      "False",
      ",",
      "sep",
      "=",
      "' '",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "Result.csv",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": "",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      287,
      126,
      5,
      8,
      42,
      43,
      109,
      465,
      32
    ],
    "code_indx_copy": [
      149,
      22,
      227,
      1,
      29,
      8,
      160,
      19,
      87,
      8,
      264,
      19,
      108,
      17
    ],
    "code_indx_nocopy": [
      149,
      22,
      227,
      1,
      29,
      8,
      160,
      19,
      87,
      8,
      264,
      19,
      108,
      17
    ]
  },
  {
    "intent": [
      "update",
      "the",
      "str_0",
      "dictionary",
      "with",
      "the",
      "contents",
      "of",
      "the",
      "str_1",
      "dictionary"
    ],
    "code": [
      "globals",
      "(",
      ")",
      ".",
      "update",
      "(",
      "vars",
      "(",
      "args",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "globals()",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": "vars(args)",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      242,
      18,
      5,
      25,
      79,
      18,
      125,
      2,
      18,
      32,
      25
    ],
    "code_indx_copy": [
      284,
      1,
      17,
      22,
      69,
      1,
      524,
      1,
      311,
      17,
      17
    ],
    "code_indx_nocopy": [
      284,
      1,
      17,
      22,
      69,
      1,
      524,
      1,
      311,
      17,
      17
    ]
  },
  {
    "intent": [
      "find",
      "all",
      "substrings",
      "in",
      "var_0",
      "beginning",
      "and",
      "ending",
      "with",
      "square",
      "brackets"
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'\\\\[(.*?)\\\\]'",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "mystring",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      47,
      38,
      410,
      24,
      26,
      171,
      31,
      432,
      79,
      465,
      465
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      524,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      524,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "format",
      "all",
      "floating",
      "variables",
      "var_0",
      ",",
      "var_1",
      ",",
      "var_2",
      ",",
      "var_0",
      "to",
      "print",
      "to",
      "two",
      "decimal",
      "places",
      "."
    ],
    "code": [
      "print",
      "(",
      "'%.2f kg = %.2f lb = %.2f gal = %.2f l'",
      "%",
      "(",
      "var_3",
      ",",
      "var_1",
      ",",
      "var_2",
      ",",
      "var4",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "var1",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "var2",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "var3",
        "quote": "`",
        "type": "var"
      },
      "var_3": {
        "value": "var1",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      16,
      38,
      270,
      306,
      26,
      62,
      63,
      62,
      64,
      62,
      26,
      8,
      166,
      8,
      29,
      255,
      256,
      159
    ],
    "code_indx_copy": [
      49,
      1,
      524,
      117,
      1,
      55,
      8,
      91,
      8,
      94,
      8,
      524,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      524,
      117,
      1,
      55,
      8,
      91,
      8,
      94,
      8,
      524,
      17,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "all",
      "items",
      "from",
      "a",
      "dictionary",
      "var_0",
      "where",
      "the",
      "values",
      "are",
      "less",
      "than",
      "str_0"
    ],
    "code": [
      "var_0",
      "=",
      "dict",
      "(",
      "(",
      "k",
      ",",
      "v",
      ")",
      "for",
      "k",
      ",",
      "v",
      "in",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      "if",
      "v",
      ">",
      "0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "d",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "1",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      268,
      38,
      39,
      58,
      3,
      25,
      26,
      155,
      18,
      20,
      243,
      465,
      264,
      5
    ],
    "code_indx_copy": [
      34,
      19,
      70,
      1,
      1,
      89,
      8,
      90,
      17,
      7,
      89,
      8,
      90,
      9,
      34,
      22,
      35,
      1,
      17,
      67,
      90,
      214,
      43,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      70,
      1,
      1,
      89,
      8,
      90,
      17,
      7,
      89,
      8,
      90,
      9,
      34,
      22,
      35,
      1,
      17,
      67,
      90,
      214,
      43,
      17
    ]
  },
  {
    "intent": [
      "filter",
      "dictionary",
      "var_0",
      "to",
      "have",
      "items",
      "with",
      "value",
      "greater",
      "than",
      "0"
    ],
    "code": [
      "var_0",
      "=",
      "{",
      "k",
      ":",
      "v",
      "for",
      "k",
      ",",
      "v",
      "in",
      "list",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      "if",
      "v",
      ">",
      "0",
      "}"
    ],
    "slot_map": {
      "var_0": {
        "value": "d",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      217,
      25,
      26,
      8,
      196,
      39,
      79,
      143,
      349,
      264,
      107
    ],
    "code_indx_copy": [
      34,
      19,
      52,
      89,
      13,
      90,
      7,
      89,
      8,
      90,
      9,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      67,
      90,
      214,
      43,
      53
    ],
    "code_indx_nocopy": [
      34,
      19,
      52,
      89,
      13,
      90,
      7,
      89,
      8,
      90,
      9,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      67,
      90,
      214,
      43,
      53
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "string",
      "of",
      "date",
      "strings",
      "str_0",
      "to",
      "datetime",
      "objects",
      "and",
      "put",
      "them",
      "in",
      "a",
      "dataframe"
    ],
    "code": [
      "pd",
      ".",
      "to_datetime",
      "(",
      "pd",
      ".",
      "Series",
      "(",
      "str_0",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "date_stngs",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      3,
      14,
      2,
      133,
      259,
      5,
      8,
      13,
      178,
      31,
      465,
      465,
      24,
      3,
      43
    ],
    "code_indx_copy": [
      162,
      22,
      466,
      1,
      162,
      22,
      467,
      1,
      11,
      17,
      17
    ],
    "code_indx_nocopy": [
      162,
      22,
      466,
      1,
      162,
      22,
      467,
      1,
      11,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "value",
      "at",
      "index",
      "str_0",
      "in",
      "dataframe",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "iloc",
      "[",
      "str_0",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "[2, 0]",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "[str_0]": {
        "value": "[2, 0]",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      143,
      35,
      37,
      5,
      24,
      43,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      399,
      12,
      11,
      16
    ],
    "code_indx_nocopy": [
      34,
      22,
      399,
      12,
      11,
      16
    ]
  },
  {
    "intent": [
      "change",
      "the",
      "font",
      "size",
      "on",
      "plot",
      "var_0",
      "to",
      "22"
    ],
    "code": [
      "var_0",
      ".",
      "rcParams",
      ".",
      "update",
      "(",
      "{",
      "'font.size'",
      ":",
      "22",
      "}",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "matplotlib",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      221,
      18,
      465,
      334,
      139,
      244,
      26,
      8,
      465
    ],
    "code_indx_copy": [
      34,
      22,
      524,
      22,
      69,
      1,
      52,
      524,
      13,
      536,
      53,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      524,
      22,
      69,
      1,
      52,
      524,
      13,
      524,
      53,
      17
    ]
  },
  {
    "intent": [
      "converting",
      "dictionary",
      "var_0",
      "into",
      "a",
      "dataframe",
      "var_1",
      "with",
      "keys",
      "as",
      "data",
      "for",
      "column",
      "str_0",
      "and",
      "the",
      "corresponding",
      "values",
      "as",
      "data",
      "for",
      "column",
      "str_1"
    ],
    "code": [
      "var_1",
      ".",
      "DataFrame",
      "(",
      "list",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      ",",
      "columns",
      "=",
      "[",
      "'str_0'",
      ",",
      "'str_1'",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "d",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "pd",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "Date",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "DateValue",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      115,
      25,
      26,
      12,
      3,
      43,
      63,
      79,
      206,
      90,
      65,
      21,
      147,
      5,
      31,
      18,
      347,
      20,
      90,
      65,
      21,
      147,
      32
    ],
    "code_indx_copy": [
      91,
      22,
      164,
      1,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      8,
      192,
      19,
      12,
      29,
      8,
      63,
      16,
      17
    ],
    "code_indx_nocopy": [
      91,
      22,
      164,
      1,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      8,
      192,
      19,
      12,
      29,
      8,
      63,
      16,
      17
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "dataframe",
      "containing",
      "the",
      "multiplication",
      "of",
      "element-wise",
      "in",
      "dataframe",
      "var_0",
      "and",
      "dataframe",
      "var_1",
      "using",
      "index",
      "name",
      "and",
      "column",
      "labels",
      "of",
      "dataframe",
      "var_0"
    ],
    "code": [
      "pd",
      ".",
      "DataFrame",
      "(",
      "var_2",
      ".",
      "values",
      "*",
      "var_1",
      ".",
      "values",
      ",",
      "columns",
      "=",
      "var_2",
      ".",
      "columns",
      ",",
      "index",
      "=",
      "\n",
      "var_2",
      ".",
      "index",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "df2",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      148,
      3,
      43,
      34,
      18,
      465,
      2,
      465,
      24,
      43,
      26,
      31,
      43,
      63,
      109,
      37,
      129,
      31,
      147,
      322,
      2,
      43,
      26
    ],
    "code_indx_copy": [
      162,
      22,
      164,
      1,
      94,
      22,
      166,
      3,
      91,
      22,
      166,
      8,
      192,
      19,
      94,
      22,
      192,
      8,
      160,
      19,
      161,
      94,
      22,
      160,
      17
    ],
    "code_indx_nocopy": [
      162,
      22,
      164,
      1,
      94,
      22,
      166,
      3,
      91,
      22,
      166,
      8,
      192,
      19,
      94,
      22,
      192,
      8,
      160,
      19,
      161,
      94,
      22,
      160,
      17
    ]
  },
  {
    "intent": [
      "extract",
      "floating",
      "number",
      "from",
      "string",
      "str_0"
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'\\\\d+\\\\.\\\\d+'",
      ",",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "Current Level: 13.4 db.",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      104,
      270,
      76,
      58,
      14,
      5
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      524,
      8,
      29,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      524,
      8,
      29,
      17
    ]
  },
  {
    "intent": [
      "extract",
      "floating",
      "point",
      "numbers",
      "from",
      "a",
      "string",
      "str_0"
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'[-+]?\\\\d*\\\\.\\\\d+|\\\\d+'",
      ",",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "Current Level: -13.2 db or 14.2 or 3",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      104,
      270,
      271,
      97,
      58,
      3,
      14,
      5
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      524,
      8,
      29,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      524,
      8,
      29,
      17
    ]
  },
  {
    "intent": [
      "pair",
      "each",
      "element",
      "in",
      "list",
      "var_0",
      "3",
      "times",
      "into",
      "a",
      "tuple"
    ],
    "code": [
      "zip",
      "(",
      "var_0",
      ",",
      "var_0",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "it",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      89,
      22,
      49,
      24,
      4,
      26,
      57,
      442,
      12,
      3,
      113
    ],
    "code_indx_copy": [
      36,
      1,
      34,
      8,
      34,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      36,
      1,
      34,
      8,
      34,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "lowercase",
      "a",
      "python",
      "dataframe",
      "string",
      "in",
      "column",
      "str_0",
      "if",
      "it",
      "has",
      "missing",
      "values",
      "in",
      "dataframe",
      "var_0"
    ],
    "code": [
      "var_0",
      "[",
      "'str_0'",
      "]",
      ".",
      "str",
      ".",
      "lower",
      "(",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "x",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      207,
      3,
      50,
      43,
      14,
      24,
      147,
      5,
      150,
      145,
      337,
      465,
      20,
      24,
      43,
      26
    ],
    "code_indx_copy": [
      34,
      12,
      29,
      16,
      22,
      25,
      22,
      152,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      12,
      29,
      16,
      22,
      25,
      22,
      152,
      1,
      17
    ]
  },
  {
    "intent": [
      "append",
      "dict",
      "str_0",
      "to",
      "value",
      "of",
      "key",
      "var_0",
      "in",
      "dict",
      "str_1"
    ],
    "code": [
      "jsobj",
      "[",
      "'a'",
      "]",
      "[",
      "'b'",
      "]",
      "[",
      "'var_0'",
      "]",
      ".",
      "append",
      "(",
      "{",
      "str_0",
      "}",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "{'f': var6, 'g': var7, 'h': var8}",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "e",
        "quote": "`",
        "type": "var"
      },
      "str_1": {
        "value": "jsobj['a']['b']",
        "quote": "`",
        "type": "str"
      },
      "{str_0}": {
        "value": "{'f': var6, 'g': var7, 'h': var8}",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      111,
      186,
      5,
      8,
      143,
      2,
      23,
      26,
      24,
      186,
      32
    ],
    "code_indx_copy": [
      524,
      12,
      413,
      16,
      12,
      293,
      16,
      12,
      56,
      16,
      22,
      146,
      1,
      52,
      11,
      53,
      17
    ],
    "code_indx_nocopy": [
      524,
      12,
      413,
      16,
      12,
      293,
      16,
      12,
      56,
      16,
      22,
      146,
      1,
      52,
      11,
      53,
      17
    ]
  },
  {
    "intent": [
      "concat",
      "a",
      "list",
      "of",
      "strings",
      "var_0",
      "using",
      "string",
      "formatting"
    ],
    "code": [
      "\"\"\"\"\"\"",
      ".",
      "join",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "lst",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      3,
      4,
      2,
      259,
      26,
      109,
      14,
      167
    ],
    "code_indx_copy": [
      287,
      22,
      23,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      287,
      22,
      23,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "sum",
      "values",
      "greater",
      "than",
      "0",
      "in",
      "dictionary",
      "var_0"
    ],
    "code": [
      "sum",
      "(",
      "v",
      "for",
      "v",
      "in",
      "list",
      "(",
      "var_0",
      ".",
      "values",
      "(",
      ")",
      ")",
      "if",
      "v",
      ">",
      "0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "d",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      112,
      20,
      349,
      264,
      107,
      24,
      25,
      26
    ],
    "code_indx_copy": [
      0,
      1,
      90,
      7,
      90,
      9,
      33,
      1,
      34,
      22,
      166,
      1,
      17,
      17,
      67,
      90,
      214,
      43,
      17
    ],
    "code_indx_nocopy": [
      0,
      1,
      90,
      7,
      90,
      9,
      33,
      1,
      34,
      22,
      166,
      1,
      17,
      17,
      67,
      90,
      214,
      43,
      17
    ]
  },
  {
    "intent": [
      "run",
      "flask",
      "application",
      "var_0",
      "in",
      "debug",
      "mode",
      "."
    ],
    "code": [
      "var_0",
      ".",
      "run",
      "(",
      "debug",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "app",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      251,
      405,
      465,
      26,
      24,
      465,
      285,
      159
    ],
    "code_indx_copy": [
      34,
      22,
      468,
      1,
      533,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      468,
      1,
      524,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "drop",
      "rows",
      "whose",
      "index",
      "value",
      "in",
      "list",
      "str_0",
      "in",
      "dataframe",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "drop",
      "(",
      "var_0",
      ".",
      "index",
      "[",
      "[",
      "str_0",
      "]",
      "]",
      ",",
      "inplace",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "[1, 3]",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "[str_0]": {
        "value": "[1, 3]",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      262,
      80,
      228,
      37,
      143,
      24,
      4,
      5,
      24,
      43,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      187,
      1,
      34,
      22,
      160,
      12,
      12,
      11,
      16,
      16,
      8,
      279,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      187,
      1,
      34,
      22,
      160,
      12,
      12,
      11,
      16,
      16,
      8,
      279,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "replace",
      "nan",
      "values",
      "in",
      "a",
      "pandas",
      "data",
      "frame",
      "with",
      "the",
      "average",
      "of",
      "columns"
    ],
    "code": [
      "df",
      ".",
      "apply",
      "(",
      "lambda",
      "x",
      ":",
      "x",
      ".",
      "fillna",
      "(",
      "x",
      ".",
      "mean",
      "(",
      ")",
      ")",
      ",",
      "axis",
      "=",
      "0",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      130,
      289,
      20,
      24,
      3,
      42,
      65,
      66,
      79,
      18,
      19,
      2,
      61
    ],
    "code_indx_copy": [
      149,
      22,
      59,
      1,
      44,
      26,
      13,
      26,
      22,
      352,
      1,
      26,
      22,
      390,
      1,
      17,
      17,
      8,
      42,
      19,
      43,
      17
    ],
    "code_indx_nocopy": [
      149,
      22,
      59,
      1,
      44,
      26,
      13,
      26,
      22,
      352,
      1,
      26,
      22,
      390,
      1,
      17,
      17,
      8,
      42,
      19,
      43,
      17
    ]
  },
  {
    "intent": [
      "extract",
      "attribute",
      "var_0",
      "from",
      "each",
      "object",
      "in",
      "list",
      "var_1"
    ],
    "code": [
      "[",
      "o",
      ".",
      "var_0",
      "for",
      "o",
      "in",
      "var_1",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "my_attr",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "my_list",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      104,
      341,
      26,
      58,
      22,
      15,
      24,
      4,
      63
    ],
    "code_indx_copy": [
      12,
      524,
      22,
      34,
      7,
      524,
      9,
      91,
      16
    ],
    "code_indx_nocopy": [
      12,
      524,
      22,
      34,
      7,
      524,
      9,
      91,
      16
    ]
  },
  {
    "intent": [
      "python",
      "get",
      "time",
      "stamp",
      "on",
      "file",
      "var_0",
      "in",
      "str_0",
      "format"
    ],
    "code": [
      "time",
      ".",
      "strftime",
      "(",
      "'str_0'",
      ",",
      "time",
      ".",
      "gmtime",
      "(",
      "os",
      ".",
      "path",
      ".",
      "getmtime",
      "(",
      "var_0",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "file",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "%m/%d/%Y",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      50,
      17,
      134,
      465,
      139,
      126,
      26,
      24,
      5,
      16
    ],
    "code_indx_copy": [
      84,
      22,
      65,
      1,
      29,
      8,
      84,
      22,
      524,
      1,
      113,
      22,
      114,
      22,
      115,
      1,
      34,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      84,
      22,
      65,
      1,
      29,
      8,
      84,
      22,
      524,
      1,
      113,
      22,
      114,
      22,
      115,
      1,
      34,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "dictionary",
      "var_0",
      "is",
      "a",
      "subset",
      "of",
      "dictionary",
      "var_1"
    ],
    "code": [
      "all",
      "(",
      "item",
      "in",
      "list",
      "(",
      "var_1",
      ".",
      "items",
      "(",
      ")",
      ")",
      "for",
      "item",
      "in",
      "list",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "subset",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "superset",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      234,
      150,
      25,
      26,
      152,
      3,
      443,
      2,
      25,
      63
    ],
    "code_indx_copy": [
      77,
      1,
      387,
      9,
      33,
      1,
      91,
      22,
      35,
      1,
      17,
      17,
      7,
      387,
      9,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      77,
      1,
      387,
      9,
      33,
      1,
      91,
      22,
      35,
      1,
      17,
      17,
      7,
      387,
      9,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "integer",
      "elements",
      "in",
      "list",
      "var_0",
      "to",
      "strings"
    ],
    "code": [
      "[",
      "str",
      "(",
      "wi",
      ")",
      "for",
      "wi",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "wordids",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      10,
      1,
      24,
      4,
      26,
      8,
      259
    ],
    "code_indx_copy": [
      12,
      25,
      1,
      524,
      17,
      7,
      524,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      12,
      25,
      1,
      524,
      17,
      7,
      524,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "reset",
      "the",
      "indexes",
      "of",
      "a",
      "pandas",
      "data",
      "frame"
    ],
    "code": [
      "df2",
      "=",
      "df",
      ".",
      "reset_index",
      "(",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      465,
      18,
      235,
      2,
      3,
      42,
      65,
      66
    ],
    "code_indx_copy": [
      308,
      19,
      149,
      22,
      186,
      1,
      17
    ],
    "code_indx_nocopy": [
      308,
      19,
      149,
      22,
      186,
      1,
      17
    ]
  },
  {
    "intent": [
      "format",
      "datetime",
      "in",
      "var_0",
      "as",
      "string",
      "in",
      "format",
      "str_0"
    ],
    "code": [
      "var_0",
      ".",
      "strftime",
      "(",
      "'%m/%d/%Y'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "dt",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "'%m/%d/%Y",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      16,
      13,
      24,
      26,
      90,
      14,
      24,
      16,
      5
    ],
    "code_indx_copy": [
      34,
      22,
      65,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      65,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "format",
      "floating",
      "point",
      "number",
      "var_0",
      "to",
      "be",
      "rounded",
      "off",
      "to",
      "two",
      "decimal",
      "places",
      "and",
      "have",
      "a",
      "comma",
      "thousands",
      "'",
      "seperator"
    ],
    "code": [
      "print",
      "(",
      "'Total cost is: ${:,.2f}'",
      ".",
      "format",
      "(",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "TotalAmount",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      16,
      270,
      271,
      76,
      26,
      8,
      362,
      465,
      465,
      8,
      29,
      255,
      256,
      31,
      196,
      3,
      417,
      465,
      310,
      465
    ],
    "code_indx_copy": [
      49,
      1,
      524,
      22,
      38,
      1,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      524,
      22,
      38,
      1,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "sum",
      "the",
      "values",
      "in",
      "each",
      "row",
      "of",
      "every",
      "two",
      "adjacent",
      "columns",
      "in",
      "dataframe",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "groupby",
      "(",
      "np",
      ".",
      "arange",
      "(",
      "len",
      "(",
      "var_0",
      ".",
      "columns",
      ")",
      ")",
      "//",
      "2",
      "+",
      "1",
      ",",
      "axis",
      "=",
      "1",
      ")",
      ".",
      "sum",
      "(",
      ")",
      ".",
      "add_prefix",
      "(",
      "\n",
      "'s'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      112,
      18,
      20,
      24,
      22,
      45,
      2,
      279,
      29,
      465,
      61,
      24,
      43,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      157,
      1,
      74,
      22,
      193,
      1,
      32,
      1,
      34,
      22,
      192,
      17,
      17,
      454,
      82,
      96,
      15,
      8,
      42,
      19,
      15,
      17,
      22,
      0,
      1,
      17,
      22,
      524,
      1,
      161,
      469,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      157,
      1,
      74,
      22,
      193,
      1,
      32,
      1,
      34,
      22,
      192,
      17,
      17,
      454,
      82,
      96,
      15,
      8,
      42,
      19,
      15,
      17,
      22,
      0,
      1,
      17,
      22,
      524,
      1,
      161,
      469,
      17
    ]
  },
  {
    "intent": [
      "create",
      "list",
      "var_0",
      "with",
      "10",
      "random",
      "floating",
      "point",
      "numbers",
      "between",
      "0.0",
      "and",
      "1.0"
    ],
    "code": [
      "var_0",
      "=",
      "[",
      "random",
      ".",
      "random",
      "(",
      ")",
      "for",
      "_",
      "in",
      "range",
      "(",
      "10",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "randomList",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      148,
      4,
      26,
      79,
      351,
      190,
      270,
      271,
      97,
      278,
      465,
      31,
      465
    ],
    "code_indx_copy": [
      34,
      19,
      12,
      148,
      22,
      148,
      1,
      17,
      7,
      470,
      9,
      104,
      1,
      4,
      17,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      12,
      148,
      22,
      148,
      1,
      17,
      7,
      470,
      9,
      104,
      1,
      4,
      17,
      16
    ]
  },
  {
    "intent": [
      "find",
      "href",
      "value",
      "that",
      "has",
      "string",
      "str_0",
      "inside",
      "it"
    ],
    "code": [
      "print",
      "(",
      "soup",
      ".",
      "find",
      "(",
      "'a'",
      ",",
      "href",
      "=",
      "re",
      ".",
      "compile",
      "(",
      "'.*follow\\\\?page.*'",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "follow?page",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      47,
      465,
      143,
      195,
      337,
      14,
      5,
      46,
      145
    ],
    "code_indx_copy": [
      49,
      1,
      61,
      22,
      282,
      1,
      413,
      8,
      414,
      19,
      39,
      22,
      83,
      1,
      524,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      61,
      22,
      282,
      1,
      413,
      8,
      414,
      19,
      39,
      22,
      83,
      1,
      524,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "immediately",
      "see",
      "output",
      "of",
      "print",
      "statement",
      "that",
      "does",
      "n't",
      "end",
      "in",
      "a",
      "newline"
    ],
    "code": [
      "sys",
      ".",
      "stdout",
      ".",
      "flush",
      "(",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      465,
      465,
      257,
      2,
      166,
      315,
      195,
      184,
      465,
      295,
      24,
      3,
      397
    ],
    "code_indx_copy": [
      153,
      22,
      354,
      22,
      524,
      1,
      17
    ],
    "code_indx_nocopy": [
      153,
      22,
      354,
      22,
      524,
      1,
      17
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "random",
      "key",
      "var_0",
      "and",
      "value",
      "var_1",
      "form",
      "a",
      "dictionary",
      "var_2"
    ],
    "code": [
      "var_0",
      ",",
      "var_1",
      "=",
      "random",
      ".",
      "choice",
      "(",
      "list",
      "(",
      "var_2",
      ".",
      "items",
      "(",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "country",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "capital",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "d",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      3,
      190,
      23,
      26,
      31,
      143,
      63,
      149,
      3,
      25,
      64
    ],
    "code_indx_copy": [
      34,
      8,
      91,
      19,
      148,
      22,
      210,
      1,
      33,
      1,
      94,
      22,
      35,
      1,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      34,
      8,
      91,
      19,
      148,
      22,
      210,
      1,
      33,
      1,
      94,
      22,
      35,
      1,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "split",
      "string",
      "str_0",
      "into",
      "a",
      "list",
      "of",
      "characters"
    ],
    "code": [
      "list",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "Word to Split",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      138,
      14,
      5,
      12,
      3,
      4,
      2,
      98
    ],
    "code_indx_copy": [
      33,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      33,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "list",
      "containing",
      "words",
      "that",
      "contain",
      "vowel",
      "letter",
      "followed",
      "by",
      "the",
      "same",
      "vowel",
      "in",
      "file",
      "str_0"
    ],
    "code": [
      "[",
      "w",
      "for",
      "w",
      "in",
      "open",
      "(",
      "'file.txt'",
      ")",
      "if",
      "not",
      "re",
      ".",
      "search",
      "(",
      "'[aeiou]{2}'",
      ",",
      "w",
      ")",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "file.text",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      148,
      3,
      4,
      34,
      41,
      195,
      325,
      465,
      433,
      368,
      44,
      18,
      36,
      465,
      24,
      126,
      5
    ],
    "code_indx_copy": [
      12,
      471,
      7,
      471,
      9,
      105,
      1,
      524,
      17,
      67,
      281,
      39,
      22,
      93,
      1,
      524,
      8,
      471,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      471,
      7,
      471,
      9,
      105,
      1,
      524,
      17,
      67,
      281,
      39,
      22,
      93,
      1,
      524,
      8,
      471,
      17,
      16
    ]
  },
  {
    "intent": [
      "validate",
      "ip",
      "address",
      "using",
      "regex"
    ],
    "code": [
      "pat",
      "=",
      "re",
      ".",
      "compile",
      "(",
      "'^\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}$'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      465,
      465,
      465,
      109,
      40
    ],
    "code_indx_copy": [
      524,
      19,
      39,
      22,
      83,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      39,
      22,
      83,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "execute",
      "file",
      "str_0"
    ],
    "code": [
      "exec",
      "(",
      "compile",
      "(",
      "open",
      "(",
      "'str_0'",
      ")",
      ".",
      "read",
      "(",
      ")",
      ",",
      "'str_0'",
      ",",
      "'exec'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "filename.py",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      135,
      126,
      5
    ],
    "code_indx_copy": [
      436,
      1,
      83,
      1,
      105,
      1,
      29,
      17,
      22,
      106,
      1,
      17,
      8,
      29,
      8,
      437,
      17,
      17
    ],
    "code_indx_nocopy": [
      436,
      1,
      83,
      1,
      105,
      1,
      29,
      17,
      22,
      106,
      1,
      17,
      8,
      29,
      8,
      437,
      17,
      17
    ]
  },
  {
    "intent": [
      "sqlalchemy",
      "count",
      "the",
      "number",
      "of",
      "rows",
      "with",
      "distinct",
      "values",
      "in",
      "column",
      "var_0",
      "of",
      "table",
      "var_1"
    ],
    "code": [
      "session",
      ".",
      "query",
      "(",
      "var_1",
      ")",
      ".",
      "distinct",
      "(",
      "var_1",
      ".",
      "var_0",
      ")",
      ".",
      "group_by",
      "(",
      "var_1",
      ".",
      "var_0",
      ")",
      ".",
      "count",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "name",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "Tag",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      369,
      203,
      18,
      76,
      2,
      80,
      79,
      465,
      20,
      24,
      147,
      26,
      2,
      388,
      63
    ],
    "code_indx_copy": [
      425,
      22,
      426,
      1,
      91,
      17,
      22,
      535,
      1,
      91,
      22,
      34,
      17,
      22,
      524,
      1,
      91,
      22,
      34,
      17,
      22,
      386,
      1,
      17
    ],
    "code_indx_nocopy": [
      425,
      22,
      426,
      1,
      91,
      17,
      22,
      524,
      1,
      91,
      22,
      34,
      17,
      22,
      524,
      1,
      91,
      22,
      34,
      17,
      22,
      386,
      1,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "null",
      "columns",
      "in",
      "a",
      "dataframe",
      "var_0"
    ],
    "code": [
      "var_0",
      "=",
      "var_0",
      ".",
      "dropna",
      "(",
      "axis",
      "=",
      "1",
      ",",
      "how",
      "=",
      "'all'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      465,
      61,
      24,
      3,
      43,
      26
    ],
    "code_indx_copy": [
      34,
      19,
      34,
      22,
      388,
      1,
      42,
      19,
      15,
      8,
      243,
      19,
      389,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      34,
      22,
      388,
      1,
      42,
      19,
      15,
      8,
      243,
      19,
      389,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "all",
      "lists",
      "in",
      "list",
      "var_0",
      "have",
      "three",
      "elements",
      "of",
      "integer",
      "1"
    ],
    "code": [
      "all",
      "(",
      "x",
      ".",
      "count",
      "(",
      "1",
      ")",
      "==",
      "3",
      "for",
      "x",
      "in",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "L",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      234,
      150,
      38,
      30,
      24,
      4,
      26,
      196,
      240,
      1,
      2,
      10,
      237
    ],
    "code_indx_copy": [
      77,
      1,
      26,
      22,
      386,
      1,
      15,
      17,
      76,
      54,
      7,
      26,
      9,
      34,
      17
    ],
    "code_indx_nocopy": [
      77,
      1,
      26,
      22,
      386,
      1,
      15,
      17,
      76,
      54,
      7,
      26,
      9,
      34,
      17
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "list",
      "comparing",
      "two",
      "lists",
      "of",
      "tuples",
      "var_0",
      "and",
      "var_1",
      "if",
      "any",
      "first",
      "value",
      "in",
      "var_0",
      "matches",
      "with",
      "first",
      "value",
      "in",
      "var_1"
    ],
    "code": [
      "[",
      "x",
      "[",
      "0",
      "]",
      "for",
      "x",
      "in",
      "var_2",
      "if",
      "any",
      "(",
      "x",
      "[",
      "0",
      "]",
      "==",
      "y",
      "[",
      "0",
      "]",
      "for",
      "y",
      "in",
      "var_3",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "l1",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "l2",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "l1",
        "quote": "`",
        "type": "var"
      },
      "var_3": {
        "value": "l2",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      3,
      4,
      465,
      29,
      30,
      2,
      33,
      26,
      31,
      63,
      150,
      272,
      151,
      143,
      24,
      26,
      108,
      79,
      151,
      143,
      24,
      63
    ],
    "code_indx_copy": [
      12,
      26,
      12,
      43,
      16,
      7,
      26,
      9,
      94,
      67,
      269,
      1,
      26,
      12,
      43,
      16,
      76,
      103,
      12,
      43,
      16,
      7,
      103,
      9,
      55,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      26,
      12,
      43,
      16,
      7,
      26,
      9,
      94,
      67,
      269,
      1,
      26,
      12,
      43,
      16,
      76,
      103,
      12,
      43,
      16,
      7,
      103,
      9,
      55,
      17,
      16
    ]
  },
  {
    "intent": [
      "clear",
      "the",
      "textbox",
      "var_0",
      "in",
      "tkinter"
    ],
    "code": [
      "tex",
      ".",
      "delete",
      "(",
      "'1.0'",
      ",",
      "END",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "text",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      426,
      18,
      465,
      26,
      24,
      223
    ],
    "code_indx_copy": [
      524,
      22,
      81,
      1,
      524,
      8,
      524,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      81,
      1,
      524,
      8,
      524,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "long",
      "int",
      "var_0",
      "into",
      "date",
      "and",
      "time",
      "represented",
      "in",
      "the",
      "the",
      "string",
      "format",
      "str_0"
    ],
    "code": [
      "datetime",
      ".",
      "datetime",
      ".",
      "fromtimestamp",
      "(",
      "var_0",
      ")",
      ".",
      "strftime",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "myNumber",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "%Y-%m-%d %H:%M:%S",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      465,
      74,
      26,
      12,
      133,
      31,
      134,
      465,
      24,
      18,
      18,
      14,
      16,
      5
    ],
    "code_indx_copy": [
      27,
      22,
      27,
      22,
      524,
      1,
      34,
      17,
      22,
      65,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      27,
      22,
      27,
      22,
      524,
      1,
      34,
      17,
      22,
      65,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "spawn",
      "a",
      "process",
      "to",
      "run",
      "python",
      "script",
      "str_0",
      "in",
      "c++"
    ],
    "code": [
      "system",
      "(",
      "'python myscript.py'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "myscript.py",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      3,
      444,
      8,
      251,
      50,
      246,
      5,
      24,
      465
    ],
    "code_indx_copy": [
      119,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      119,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "list",
      "var_0",
      "of",
      "class",
      "objects",
      "by",
      "their",
      "values",
      "for",
      "the",
      "attribute",
      "var_1"
    ],
    "code": [
      "var_0",
      ".",
      "sort",
      "(",
      "key",
      "=",
      "operator",
      ".",
      "attrgetter",
      "(",
      "'var_1'",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "your_list",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "anniversary_score",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      3,
      4,
      26,
      2,
      311,
      178,
      44,
      294,
      20,
      21,
      18,
      341,
      63
    ],
    "code_indx_copy": [
      34,
      22,
      124,
      1,
      102,
      19,
      127,
      22,
      524,
      1,
      57,
      17,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      124,
      1,
      102,
      19,
      127,
      22,
      524,
      1,
      57,
      17,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "list",
      "var_0",
      "by",
      "the",
      "var_1",
      "attribute",
      "of",
      "each",
      "object"
    ],
    "code": [
      "var_0",
      ".",
      "sort",
      "(",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "x",
      ".",
      "var_1",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "your_list",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "anniversary_score",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      4,
      26,
      44,
      18,
      63,
      341,
      2,
      22,
      15
    ],
    "code_indx_copy": [
      34,
      22,
      124,
      1,
      102,
      19,
      44,
      26,
      13,
      26,
      22,
      91,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      124,
      1,
      102,
      19,
      44,
      26,
      13,
      26,
      22,
      91,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "tensor",
      "with",
      "list",
      "of",
      "constants",
      "str_0",
      "into",
      "a",
      "numpy",
      "array",
      "in",
      "tensorflow"
    ],
    "code": [
      "print",
      "(",
      "type",
      "(",
      "tf",
      ".",
      "Session",
      "(",
      ")",
      ".",
      "run",
      "(",
      "tf",
      ".",
      "constant",
      "(",
      "[",
      "str_0",
      "]",
      ")",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "[1, 2, 3]",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "[1, 2, 3]",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      3,
      465,
      79,
      4,
      2,
      465,
      5,
      12,
      3,
      84,
      85,
      24,
      465
    ],
    "code_indx_copy": [
      49,
      1,
      524,
      1,
      524,
      22,
      524,
      1,
      17,
      22,
      468,
      1,
      524,
      22,
      524,
      1,
      12,
      11,
      16,
      17,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      524,
      1,
      524,
      22,
      524,
      1,
      17,
      22,
      468,
      1,
      524,
      22,
      524,
      1,
      12,
      11,
      16,
      17,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "list",
      "var_0",
      "from",
      "being",
      "consecutive",
      "sequences",
      "of",
      "tuples",
      "into",
      "a",
      "single",
      "sequence",
      "of",
      "elements"
    ],
    "code": [
      "list",
      "(",
      "itertools",
      ".",
      "chain",
      "(",
      "*",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      4,
      26,
      58,
      465,
      434,
      465,
      2,
      33,
      12,
      3,
      9,
      445,
      2,
      1
    ],
    "code_indx_copy": [
      33,
      1,
      50,
      22,
      450,
      1,
      3,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      33,
      1,
      50,
      22,
      450,
      1,
      3,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "set",
      "value",
      "for",
      "key",
      "var_0",
      "in",
      "dict",
      "var_1",
      "to",
      "str_0",
      "if",
      "key",
      "var_0",
      "does",
      "not",
      "exist",
      "or",
      "if",
      "value",
      "is",
      "var_3"
    ],
    "code": [
      "var_1",
      ".",
      "setdefault",
      "(",
      "'var_2'",
      ",",
      "0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "count",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "0",
        "quote": "`",
        "type": "str"
      },
      "var_2": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "var_3": {
        "value": "none",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      59,
      143,
      21,
      23,
      26,
      24,
      186,
      63,
      8,
      5,
      150,
      23,
      26,
      184,
      105,
      185,
      344,
      150,
      143,
      152,
      67
    ],
    "code_indx_copy": [
      91,
      22,
      145,
      1,
      58,
      8,
      43,
      17
    ],
    "code_indx_nocopy": [
      91,
      22,
      145,
      1,
      58,
      8,
      43,
      17
    ]
  },
  {
    "intent": [
      "do",
      "group",
      "by",
      "on",
      "var_0",
      "column",
      "in",
      "var_1",
      "and",
      "get",
      "its",
      "mean"
    ],
    "code": [
      "var_1",
      ".",
      "groupby",
      "(",
      "[",
      "'var_0'",
      "]",
      ")",
      ".",
      "mean",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "cluster",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      327,
      383,
      44,
      139,
      26,
      147,
      24,
      63,
      31,
      17,
      91,
      412
    ],
    "code_indx_copy": [
      91,
      22,
      157,
      1,
      12,
      56,
      16,
      17,
      22,
      390,
      1,
      17
    ],
    "code_indx_nocopy": [
      91,
      22,
      157,
      1,
      12,
      56,
      16,
      17,
      22,
      390,
      1,
      17
    ]
  },
  {
    "intent": [
      "get",
      "number",
      "in",
      "list",
      "var_0",
      "closest",
      "in",
      "value",
      "to",
      "number",
      "var_1"
    ],
    "code": [
      "min",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "abs",
      "(",
      "x",
      "-",
      "var_1",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "myList",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "myNumber",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      76,
      24,
      4,
      26,
      465,
      24,
      143,
      8,
      76,
      63
    ],
    "code_indx_copy": [
      111,
      1,
      34,
      8,
      102,
      19,
      44,
      26,
      13,
      359,
      1,
      26,
      14,
      91,
      17,
      17
    ],
    "code_indx_nocopy": [
      111,
      1,
      34,
      8,
      102,
      19,
      44,
      26,
      13,
      359,
      1,
      26,
      14,
      91,
      17,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "any",
      "of",
      "the",
      "items",
      "in",
      "var_0",
      "appear",
      "in",
      "var_1"
    ],
    "code": [
      "any",
      "(",
      "x",
      "in",
      "var_1",
      "for",
      "x",
      "in",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "search",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "string",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      234,
      150,
      272,
      2,
      18,
      39,
      24,
      26,
      465,
      24,
      63
    ],
    "code_indx_copy": [
      269,
      1,
      26,
      9,
      91,
      7,
      26,
      9,
      34,
      17
    ],
    "code_indx_nocopy": [
      269,
      1,
      26,
      9,
      91,
      7,
      26,
      9,
      34,
      17
    ]
  },
  {
    "intent": [
      "search",
      "for",
      "occurrences",
      "of",
      "regex",
      "pattern",
      "var_0",
      "in",
      "string",
      "var_1"
    ],
    "code": [
      "print",
      "(",
      "var_0",
      ".",
      "search",
      "(",
      "var_1",
      ")",
      ".",
      "group",
      "(",
      "1",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "pattern",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "url",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      71,
      21,
      53,
      2,
      40,
      54,
      26,
      24,
      14,
      63
    ],
    "code_indx_copy": [
      49,
      1,
      34,
      22,
      93,
      1,
      91,
      17,
      22,
      120,
      1,
      15,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      34,
      22,
      93,
      1,
      91,
      17,
      22,
      120,
      1,
      15,
      17,
      17
    ]
  },
  {
    "intent": [
      "factorize",
      "all",
      "string",
      "values",
      "in",
      "dataframe",
      "var_0",
      "into",
      "floats"
    ],
    "code": [
      "(",
      "var_0",
      ".",
      "factorize",
      "(",
      ")",
      "[",
      "0",
      "]",
      "+",
      "1",
      ")",
      ".",
      "astype",
      "(",
      "'float'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      38,
      14,
      20,
      24,
      43,
      26,
      12,
      301
    ],
    "code_indx_copy": [
      1,
      34,
      22,
      528,
      1,
      17,
      12,
      43,
      16,
      96,
      15,
      17,
      22,
      242,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      1,
      34,
      22,
      524,
      1,
      17,
      12,
      43,
      16,
      96,
      15,
      17,
      22,
      242,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "list",
      "var_0",
      "by",
      "subtracting",
      "values",
      "in",
      "one",
      "list",
      "var_1",
      "from",
      "corresponding",
      "values",
      "in",
      "another",
      "list",
      "var_2"
    ],
    "code": [
      "var_0",
      "=",
      "[",
      "(",
      "a",
      "-",
      "b",
      ")",
      "for",
      "a",
      ",",
      "b",
      "in",
      "zip",
      "(",
      "var_2",
      ",",
      "var_1",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "C",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "B",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "A",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      3,
      4,
      26,
      44,
      465,
      20,
      24,
      303,
      4,
      63,
      58,
      347,
      20,
      24,
      176,
      4,
      64
    ],
    "code_indx_copy": [
      34,
      19,
      12,
      1,
      95,
      14,
      97,
      17,
      7,
      95,
      8,
      97,
      9,
      36,
      1,
      94,
      8,
      91,
      17,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      12,
      1,
      95,
      14,
      97,
      17,
      7,
      95,
      8,
      97,
      9,
      36,
      1,
      94,
      8,
      91,
      17,
      16
    ]
  },
  {
    "intent": [
      "derive",
      "the",
      "week",
      "start",
      "for",
      "the",
      "given",
      "week",
      "number",
      "and",
      "year",
      "\u2018",
      "2011",
      ",",
      "4",
      ",",
      "0",
      "\u2019"
    ],
    "code": [
      "datetime",
      ".",
      "datetime",
      ".",
      "strptime",
      "(",
      "'2011, 4, 0'",
      ",",
      "'%Y, %U, %w'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      465,
      18,
      413,
      465,
      21,
      18,
      273,
      413,
      76,
      31,
      416,
      398,
      465,
      62,
      231,
      62,
      107,
      399
    ],
    "code_indx_copy": [
      27,
      22,
      27,
      22,
      28,
      1,
      524,
      8,
      524,
      17
    ],
    "code_indx_nocopy": [
      27,
      22,
      27,
      22,
      28,
      1,
      524,
      8,
      524,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "list",
      "of",
      "strings",
      "str_0",
      "to",
      "a",
      "list",
      "of",
      "numbers"
    ],
    "code": [
      "map",
      "(",
      "int",
      ",",
      "[",
      "str_0",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "['1', '-1', '1']",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "['1', '-1', '1']",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      3,
      4,
      2,
      259,
      5,
      8,
      3,
      4,
      2,
      97
    ],
    "code_indx_copy": [
      24,
      1,
      20,
      8,
      12,
      11,
      16,
      17
    ],
    "code_indx_nocopy": [
      24,
      1,
      20,
      8,
      12,
      11,
      16,
      17
    ]
  },
  {
    "intent": [
      "create",
      "datetime",
      "object",
      "from",
      "str_0"
    ],
    "code": [
      "datetime",
      ".",
      "datetime",
      ".",
      "strptime",
      "(",
      "'16Sep2012'",
      ",",
      "'%d%b%Y'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "16sep2012",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      148,
      13,
      15,
      58,
      5
    ],
    "code_indx_copy": [
      27,
      22,
      27,
      22,
      28,
      1,
      524,
      8,
      524,
      17
    ],
    "code_indx_nocopy": [
      27,
      22,
      27,
      22,
      28,
      1,
      524,
      8,
      524,
      17
    ]
  },
  {
    "intent": [
      "update",
      "fields",
      "in",
      "django",
      "model",
      "var_0",
      "with",
      "arguments",
      "in",
      "dictionary",
      "var_1",
      "where",
      "primary",
      "key",
      "is",
      "equal",
      "to",
      "var_2"
    ],
    "code": [
      "var_0",
      ".",
      "objects",
      ".",
      "filter",
      "(",
      "var_2",
      "=",
      "var_2",
      ")",
      ".",
      "update",
      "(",
      "**",
      "var_1",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "Book",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "d",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "pk",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      242,
      385,
      24,
      87,
      313,
      26,
      79,
      305,
      24,
      25,
      63,
      155,
      465,
      23,
      152,
      106,
      8,
      64
    ],
    "code_indx_copy": [
      34,
      22,
      78,
      22,
      79,
      1,
      94,
      19,
      94,
      17,
      22,
      69,
      1,
      5,
      91,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      78,
      22,
      79,
      1,
      94,
      19,
      94,
      17,
      22,
      69,
      1,
      5,
      91,
      17
    ]
  },
  {
    "intent": [
      "update",
      "the",
      "fields",
      "in",
      "django",
      "model",
      "var_0",
      "using",
      "dictionary",
      "var_1"
    ],
    "code": [
      "var_0",
      ".",
      "objects",
      ".",
      "create",
      "(",
      "**",
      "var_1",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "Book",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "d",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      242,
      18,
      385,
      24,
      87,
      313,
      26,
      109,
      25,
      63
    ],
    "code_indx_copy": [
      34,
      22,
      78,
      22,
      524,
      1,
      5,
      91,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      78,
      22,
      524,
      1,
      5,
      91,
      17
    ]
  },
  {
    "intent": [
      "print",
      "a",
      "digit",
      "var_0",
      "with",
      "exactly",
      "2",
      "digits",
      "after",
      "decimal"
    ],
    "code": [
      "print",
      "(",
      "'{0:.2f}'",
      ".",
      "format",
      "(",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "your_number",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      166,
      3,
      465,
      26,
      79,
      465,
      82,
      200,
      201,
      255
    ],
    "code_indx_copy": [
      49,
      1,
      472,
      22,
      38,
      1,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      472,
      22,
      38,
      1,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "generate",
      "a",
      "12-digit",
      "random",
      "number"
    ],
    "code": [
      "random",
      ".",
      "randint",
      "(",
      "100000000000",
      ",",
      "999999999999",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      56,
      3,
      465,
      190,
      76
    ],
    "code_indx_copy": [
      148,
      22,
      299,
      1,
      524,
      8,
      524,
      17
    ],
    "code_indx_nocopy": [
      148,
      22,
      299,
      1,
      524,
      8,
      524,
      17
    ]
  },
  {
    "intent": [
      "generate",
      "a",
      "random",
      "12-digit",
      "number"
    ],
    "code": [
      "int",
      "(",
      "''",
      ".",
      "join",
      "(",
      "str",
      "(",
      "random",
      ".",
      "randint",
      "(",
      "0",
      ",",
      "9",
      ")",
      ")",
      "for",
      "_",
      "in",
      "range",
      "(",
      "12",
      ")",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      56,
      3,
      190,
      465,
      76
    ],
    "code_indx_copy": [
      20,
      1,
      21,
      22,
      23,
      1,
      25,
      1,
      148,
      22,
      299,
      1,
      43,
      8,
      371,
      17,
      17,
      7,
      470,
      9,
      104,
      1,
      348,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      20,
      1,
      21,
      22,
      23,
      1,
      25,
      1,
      148,
      22,
      299,
      1,
      43,
      8,
      371,
      17,
      17,
      7,
      470,
      9,
      104,
      1,
      348,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "generate",
      "a",
      "random",
      "12-digit",
      "number"
    ],
    "code": [
      "\"\"\"\"\"\"",
      ".",
      "join",
      "(",
      "str",
      "(",
      "random",
      ".",
      "randint",
      "(",
      "0",
      ",",
      "9",
      ")",
      ")",
      "for",
      "_",
      "in",
      "range",
      "(",
      "12",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      56,
      3,
      190,
      465,
      76
    ],
    "code_indx_copy": [
      287,
      22,
      23,
      1,
      25,
      1,
      148,
      22,
      299,
      1,
      43,
      8,
      371,
      17,
      17,
      7,
      470,
      9,
      104,
      1,
      348,
      17,
      17
    ],
    "code_indx_nocopy": [
      287,
      22,
      23,
      1,
      25,
      1,
      148,
      22,
      299,
      1,
      43,
      8,
      371,
      17,
      17,
      7,
      470,
      9,
      104,
      1,
      348,
      17,
      17
    ]
  },
  {
    "intent": [
      "generate",
      "a",
      "12-digit",
      "random",
      "number"
    ],
    "code": [
      "'%0.12d'",
      "%",
      "random",
      ".",
      "randint",
      "(",
      "0",
      ",",
      "999999999999",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      56,
      3,
      465,
      190,
      76
    ],
    "code_indx_copy": [
      524,
      117,
      148,
      22,
      299,
      1,
      43,
      8,
      524,
      17
    ],
    "code_indx_nocopy": [
      524,
      117,
      148,
      22,
      299,
      1,
      43,
      8,
      524,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "specific",
      "elements",
      "in",
      "a",
      "numpy",
      "array",
      "var_0"
    ],
    "code": [
      "numpy",
      ".",
      "delete",
      "(",
      "var_0",
      ",",
      "index",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      390,
      1,
      24,
      3,
      84,
      85,
      26
    ],
    "code_indx_copy": [
      147,
      22,
      81,
      1,
      34,
      8,
      160,
      17
    ],
    "code_indx_nocopy": [
      147,
      22,
      81,
      1,
      34,
      8,
      160,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "list",
      "var_0",
      "based",
      "on",
      "values",
      "of",
      "dictionary",
      "var_1"
    ],
    "code": [
      "sorted",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "trial_dict",
      "[",
      "x",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "trial_list",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "trail_dict",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      4,
      26,
      208,
      139,
      20,
      2,
      25,
      63
    ],
    "code_indx_copy": [
      101,
      1,
      34,
      8,
      102,
      19,
      44,
      26,
      13,
      524,
      12,
      26,
      16,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      34,
      8,
      102,
      19,
      44,
      26,
      13,
      524,
      12,
      26,
      16,
      17
    ]
  },
  {
    "intent": [
      "read",
      "a",
      "single",
      "character",
      "from",
      "stdin"
    ],
    "code": [
      "sys",
      ".",
      "stdin",
      ".",
      "read",
      "(",
      "1",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      124,
      3,
      9,
      202,
      58,
      446
    ],
    "code_indx_copy": [
      153,
      22,
      473,
      22,
      106,
      1,
      15,
      17
    ],
    "code_indx_nocopy": [
      153,
      22,
      473,
      22,
      106,
      1,
      15,
      17
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "list",
      "of",
      "characters",
      "in",
      "string",
      "var_0",
      "matching",
      "regex",
      "pattern",
      "var_1"
    ],
    "code": [
      "print",
      "(",
      "re",
      ".",
      "findall",
      "(",
      "var_1",
      ",",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "x",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "pattern",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      3,
      4,
      2,
      98,
      24,
      14,
      26,
      81,
      40,
      54,
      63
    ],
    "code_indx_copy": [
      49,
      1,
      39,
      22,
      48,
      1,
      91,
      8,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      39,
      22,
      48,
      1,
      91,
      8,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "context",
      "of",
      "a",
      "search",
      "by",
      "keyword",
      "str_0",
      "in",
      "beautifulsoup",
      "var_0"
    ],
    "code": [
      "k",
      "=",
      "var_0",
      ".",
      "find",
      "(",
      "text",
      "=",
      "re",
      ".",
      "compile",
      "(",
      "'str_0'",
      ")",
      ")",
      ".",
      "parent",
      ".",
      "text"
    ],
    "slot_map": {
      "str_0": {
        "value": "My keywords",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "soup",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      18,
      465,
      2,
      3,
      71,
      44,
      465,
      5,
      24,
      70,
      26
    ],
    "code_indx_copy": [
      89,
      19,
      34,
      22,
      282,
      1,
      355,
      19,
      39,
      22,
      83,
      1,
      29,
      17,
      17,
      22,
      524,
      22,
      355
    ],
    "code_indx_nocopy": [
      89,
      19,
      34,
      22,
      282,
      1,
      355,
      19,
      39,
      22,
      83,
      1,
      29,
      17,
      17,
      22,
      524,
      22,
      355
    ]
  },
  {
    "intent": [
      "convert",
      "rows",
      "in",
      "pandas",
      "data",
      "frame",
      "var_0",
      "into",
      "list"
    ],
    "code": [
      "var_0",
      ".",
      "apply",
      "(",
      "lambda",
      "x",
      ":",
      "x",
      ".",
      "tolist",
      "(",
      ")",
      ",",
      "axis",
      "=",
      "1",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      80,
      24,
      42,
      65,
      66,
      26,
      12,
      4
    ],
    "code_indx_copy": [
      34,
      22,
      59,
      1,
      44,
      26,
      13,
      26,
      22,
      306,
      1,
      17,
      8,
      42,
      19,
      15,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      59,
      1,
      44,
      26,
      13,
      26,
      22,
      306,
      1,
      17,
      8,
      42,
      19,
      15,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "1d",
      "var_0",
      "array",
      "to",
      "a",
      "2d",
      "array",
      "var_1"
    ],
    "code": [
      "var_1",
      "=",
      "np",
      ".",
      "reshape",
      "(",
      "var_0",
      ",",
      "(",
      "-",
      "1",
      ",",
      "2",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "A",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "B",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      3,
      465,
      26,
      85,
      8,
      3,
      236,
      85,
      63
    ],
    "code_indx_copy": [
      91,
      19,
      74,
      22,
      361,
      1,
      34,
      8,
      1,
      14,
      15,
      8,
      82,
      17,
      17
    ],
    "code_indx_nocopy": [
      91,
      19,
      74,
      22,
      361,
      1,
      34,
      8,
      1,
      14,
      15,
      8,
      82,
      17,
      17
    ]
  },
  {
    "intent": [
      "run",
      "app",
      "var_0",
      "on",
      "host",
      "str_0",
      "and",
      "port",
      "9000",
      "in",
      "flask"
    ],
    "code": [
      "var_0",
      ".",
      "run",
      "(",
      "host",
      "=",
      "'str_0'",
      ",",
      "port",
      "=",
      "9000",
      ",",
      "debug",
      "=",
      "False",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "app",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "192.168.0.58",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      251,
      465,
      26,
      139,
      465,
      5,
      31,
      465,
      465,
      24,
      405
    ],
    "code_indx_copy": [
      34,
      22,
      468,
      1,
      532,
      19,
      29,
      8,
      535,
      19,
      536,
      8,
      524,
      19,
      87,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      468,
      1,
      524,
      19,
      29,
      8,
      524,
      19,
      524,
      8,
      524,
      19,
      87,
      17
    ]
  },
  {
    "intent": [
      "encode",
      "unicode",
      "string",
      "str_0",
      "to",
      "utf-8",
      "code"
    ],
    "code": [
      "print",
      "(",
      "'str_0'",
      ".",
      "encode",
      "(",
      "'UTF8'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "\u00c5\u00c4\u00d6",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      447,
      230,
      14,
      5,
      8,
      183,
      293
    ],
    "code_indx_copy": [
      49,
      1,
      29,
      22,
      239,
      1,
      524,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      29,
      22,
      239,
      1,
      524,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "first",
      "element",
      "of",
      "each",
      "tuple",
      "from",
      "a",
      "list",
      "of",
      "tuples",
      "var_0"
    ],
    "code": [
      "[",
      "x",
      "[",
      "0",
      "]",
      "for",
      "x",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "G",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      18,
      151,
      49,
      2,
      22,
      113,
      58,
      3,
      4,
      2,
      33,
      26
    ],
    "code_indx_copy": [
      12,
      26,
      12,
      43,
      16,
      7,
      26,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      12,
      26,
      12,
      43,
      16,
      7,
      26,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "regular",
      "expression",
      "matching",
      "all",
      "but",
      "str_0",
      "and",
      "str_1",
      "for",
      "string",
      "var_0"
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'-(?!aa-|bb-)([^-]+)'",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "aa",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "bb",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "string",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      250,
      226,
      81,
      38,
      465,
      5,
      31,
      32,
      21,
      14,
      26
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      524,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      524,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "regular",
      "expression",
      "matching",
      "all",
      "but",
      "str_0",
      "and",
      "str_1"
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'-(?!aa|bb)([^-]+)'",
      ",",
      "string",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "aa",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "bb",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      250,
      226,
      81,
      38,
      465,
      5,
      31,
      32
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      524,
      8,
      64,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      524,
      8,
      64,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "false",
      "entries",
      "from",
      "a",
      "dictionary",
      "var_0"
    ],
    "code": [
      "{",
      "k",
      ":",
      "v",
      "for",
      "k",
      ",",
      "v",
      "in",
      "list",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      "if",
      "v",
      "}"
    ],
    "slot_map": {
      "var_0": {
        "value": "hand",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      465,
      254,
      58,
      3,
      25,
      26
    ],
    "code_indx_copy": [
      52,
      89,
      13,
      90,
      7,
      89,
      8,
      90,
      9,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      67,
      90,
      53
    ],
    "code_indx_nocopy": [
      52,
      89,
      13,
      90,
      7,
      89,
      8,
      90,
      9,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      67,
      90,
      53
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "dictionary",
      "from",
      "a",
      "dictionary",
      "var_0",
      "where",
      "the",
      "values",
      "are",
      "present"
    ],
    "code": [
      "dict",
      "(",
      "(",
      "k",
      ",",
      "v",
      ")",
      "for",
      "k",
      ",",
      "v",
      "in",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      "if",
      "v",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "hand",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      3,
      25,
      58,
      3,
      25,
      26,
      155,
      18,
      20,
      243,
      357
    ],
    "code_indx_copy": [
      70,
      1,
      1,
      89,
      8,
      90,
      17,
      7,
      89,
      8,
      90,
      9,
      34,
      22,
      35,
      1,
      17,
      67,
      90,
      17
    ],
    "code_indx_nocopy": [
      70,
      1,
      1,
      89,
      8,
      90,
      17,
      7,
      89,
      8,
      90,
      9,
      34,
      22,
      35,
      1,
      17,
      67,
      90,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "list",
      "var_0",
      "based",
      "on",
      "the",
      "value",
      "of",
      "variable",
      "str_0",
      "for",
      "each",
      "object",
      "in",
      "list",
      "var_0"
    ],
    "code": [
      "sorted",
      "(",
      "var_1",
      ",",
      "key",
      "=",
      "operator",
      ".",
      "itemgetter",
      "(",
      "'str_0'",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "L",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "resultType",
        "quote": "'",
        "type": "str"
      },
      "var_1": {
        "value": "L",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      4,
      26,
      208,
      139,
      18,
      143,
      2,
      95,
      5,
      21,
      22,
      15,
      24,
      4,
      26
    ],
    "code_indx_copy": [
      101,
      1,
      91,
      8,
      102,
      19,
      127,
      22,
      128,
      1,
      29,
      17,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      91,
      8,
      102,
      19,
      127,
      22,
      128,
      1,
      29,
      17,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "list",
      "of",
      "objects",
      "var_0",
      "by",
      "a",
      "member",
      "variable",
      "str_0"
    ],
    "code": [
      "var_0",
      ".",
      "sort",
      "(",
      "key",
      "=",
      "operator",
      ".",
      "attrgetter",
      "(",
      "'str_0'",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "resultType",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      117,
      3,
      4,
      2,
      178,
      26,
      44,
      3,
      465,
      95,
      5
    ],
    "code_indx_copy": [
      34,
      22,
      124,
      1,
      102,
      19,
      127,
      22,
      524,
      1,
      29,
      17,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      124,
      1,
      102,
      19,
      127,
      22,
      524,
      1,
      29,
      17,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "list",
      "of",
      "objects",
      "str_0",
      "where",
      "the",
      "object",
      "has",
      "member",
      "number",
      "variable",
      "var_0"
    ],
    "code": [
      "str_0",
      ".",
      "sort",
      "(",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "x",
      ".",
      "var_0",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "somelist",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "resultType",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      3,
      4,
      2,
      178,
      5,
      155,
      18,
      15,
      337,
      465,
      76,
      95,
      26
    ],
    "code_indx_copy": [
      11,
      22,
      124,
      1,
      102,
      19,
      44,
      26,
      13,
      26,
      22,
      34,
      17
    ],
    "code_indx_nocopy": [
      11,
      22,
      124,
      1,
      102,
      19,
      44,
      26,
      13,
      26,
      22,
      34,
      17
    ]
  },
  {
    "intent": [
      "join",
      "multiple",
      "dataframes",
      "var_0",
      ",",
      "var_1",
      ",",
      "and",
      "var_2",
      "on",
      "column",
      "str_0"
    ],
    "code": [
      "df1",
      ".",
      "merge",
      "(",
      "df2",
      ",",
      "on",
      "=",
      "'str_0'",
      ")",
      ".",
      "merge",
      "(",
      "df3",
      ",",
      "on",
      "=",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "d1",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "d2",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "d3",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "name",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      281,
      6,
      248,
      26,
      62,
      63,
      62,
      31,
      64,
      139,
      147,
      5
    ],
    "code_indx_copy": [
      280,
      22,
      220,
      1,
      308,
      8,
      244,
      19,
      29,
      17,
      22,
      220,
      1,
      524,
      8,
      244,
      19,
      29,
      17
    ],
    "code_indx_nocopy": [
      280,
      22,
      220,
      1,
      308,
      8,
      244,
      19,
      29,
      17,
      22,
      220,
      1,
      524,
      8,
      244,
      19,
      29,
      17
    ]
  },
  {
    "intent": [
      "generate",
      "random",
      "decimal"
    ],
    "code": [
      "decimal",
      ".",
      "Decimal",
      "(",
      "random",
      ".",
      "randrange",
      "(",
      "10000",
      ")",
      ")",
      "/",
      "100"
    ],
    "slot_map": {},
    "intent_indx": [
      56,
      190,
      255
    ],
    "code_indx_copy": [
      530,
      22,
      524,
      1,
      148,
      22,
      524,
      1,
      524,
      17,
      17,
      31,
      267
    ],
    "code_indx_nocopy": [
      524,
      22,
      524,
      1,
      148,
      22,
      524,
      1,
      524,
      17,
      17,
      31,
      267
    ]
  },
  {
    "intent": [
      "list",
      "all",
      "files",
      "of",
      "a",
      "directory",
      "var_0"
    ],
    "code": [
      "onlyfiles",
      "=",
      "[",
      "f",
      "for",
      "f",
      "in",
      "listdir",
      "(",
      "var_0",
      ")",
      "if",
      "isfile",
      "(",
      "join",
      "(",
      "var_0",
      ",",
      "f",
      ")",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "mypath",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      4,
      38,
      245,
      2,
      3,
      175,
      26
    ],
    "code_indx_copy": [
      524,
      19,
      12,
      190,
      7,
      190,
      9,
      198,
      1,
      34,
      17,
      67,
      474,
      1,
      23,
      1,
      34,
      8,
      190,
      17,
      17,
      16
    ],
    "code_indx_nocopy": [
      524,
      19,
      12,
      190,
      7,
      190,
      9,
      198,
      1,
      34,
      17,
      67,
      474,
      1,
      23,
      1,
      34,
      8,
      190,
      17,
      17,
      16
    ]
  },
  {
    "intent": [
      "list",
      "all",
      "files",
      "of",
      "a",
      "directory",
      "var_0"
    ],
    "code": [
      "f",
      "=",
      "[",
      "]",
      "\n",
      "for",
      "dirpath",
      ",",
      "dirnames",
      ",",
      "filenames",
      "in",
      "walk",
      "(",
      "var_0",
      ")",
      ":",
      "\n",
      "    ",
      "f",
      ".",
      "extend",
      "(",
      "filenames",
      ")",
      "\n",
      "break",
      ""
    ],
    "slot_map": {
      "var_0": {
        "value": "mypath",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      4,
      38,
      245,
      2,
      3,
      175,
      26
    ],
    "code_indx_copy": [
      190,
      19,
      12,
      16,
      161,
      7,
      524,
      8,
      475,
      8,
      476,
      9,
      477,
      1,
      34,
      17,
      13,
      161,
      216,
      190,
      22,
      524,
      1,
      476,
      17,
      161,
      524,
      218
    ],
    "code_indx_nocopy": [
      190,
      19,
      12,
      16,
      161,
      7,
      524,
      8,
      475,
      8,
      476,
      9,
      477,
      1,
      34,
      17,
      13,
      161,
      216,
      190,
      22,
      524,
      1,
      476,
      17,
      161,
      524,
      218
    ]
  },
  {
    "intent": [
      "list",
      "all",
      "str_0",
      "files",
      "of",
      "a",
      "directory",
      "str_1"
    ],
    "code": [
      "print",
      "(",
      "glob",
      ".",
      "glob",
      "(",
      "'/home/adam/*.txt'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": ".txt",
        "quote": "\"",
        "type": "str"
      },
      "str_1": {
        "value": "/home/adam/",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      4,
      38,
      5,
      245,
      2,
      3,
      175,
      32
    ],
    "code_indx_copy": [
      49,
      1,
      478,
      22,
      478,
      1,
      524,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      478,
      22,
      478,
      1,
      524,
      17,
      17
    ]
  },
  {
    "intent": [
      "list",
      "all",
      "files",
      "of",
      "a",
      "directory",
      "str_0"
    ],
    "code": [
      "os",
      ".",
      "listdir",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "somedirectory",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      4,
      38,
      245,
      2,
      3,
      175,
      5
    ],
    "code_indx_copy": [
      113,
      22,
      198,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      198,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "execute",
      "sql",
      "query",
      "str_0",
      "with",
      "all",
      "parameters",
      "in",
      "list",
      "var_0"
    ],
    "code": [
      "cur",
      ".",
      "executemany",
      "(",
      "'str_0'",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "INSERT INTO table VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s)",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "tup",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      135,
      423,
      275,
      5,
      79,
      38,
      370,
      24,
      4,
      26
    ],
    "code_indx_copy": [
      524,
      22,
      524,
      1,
      29,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      524,
      1,
      29,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "get",
      "keys",
      "with",
      "same",
      "value",
      "in",
      "dictionary",
      "var_0"
    ],
    "code": [
      "print",
      "(",
      "[",
      "key",
      "for",
      "key",
      "in",
      "var_0",
      "if",
      "var_0",
      "[",
      "key",
      "]",
      "==",
      "1",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "d",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      206,
      79,
      36,
      143,
      24,
      25,
      26
    ],
    "code_indx_copy": [
      49,
      1,
      12,
      102,
      7,
      102,
      9,
      34,
      67,
      34,
      12,
      102,
      16,
      76,
      15,
      16,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      12,
      102,
      7,
      102,
      9,
      34,
      67,
      34,
      12,
      102,
      16,
      76,
      15,
      16,
      17
    ]
  },
  {
    "intent": [
      "get",
      "keys",
      "with",
      "same",
      "value",
      "in",
      "dictionary",
      "var_0"
    ],
    "code": [
      "print",
      "(",
      "[",
      "key",
      "for",
      "key",
      ",",
      "value",
      "in",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      "if",
      "value",
      "==",
      "1",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "d",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      206,
      79,
      36,
      143,
      24,
      25,
      26
    ],
    "code_indx_copy": [
      49,
      1,
      12,
      102,
      7,
      102,
      8,
      151,
      9,
      34,
      22,
      35,
      1,
      17,
      67,
      151,
      76,
      15,
      16,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      12,
      102,
      7,
      102,
      8,
      151,
      9,
      34,
      22,
      35,
      1,
      17,
      67,
      151,
      76,
      15,
      16,
      17
    ]
  },
  {
    "intent": [
      "get",
      "keys",
      "from",
      "a",
      "dictionary",
      "str_0",
      "where",
      "the",
      "value",
      "is",
      "str_1",
      "."
    ],
    "code": [
      "print",
      "(",
      "[",
      "key",
      "for",
      "key",
      ",",
      "value",
      "in",
      "list",
      "(",
      "str_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      "if",
      "value",
      "==",
      "1",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "d",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "1",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      206,
      58,
      3,
      25,
      5,
      155,
      18,
      143,
      152,
      32,
      159
    ],
    "code_indx_copy": [
      49,
      1,
      12,
      102,
      7,
      102,
      8,
      151,
      9,
      33,
      1,
      11,
      22,
      35,
      1,
      17,
      17,
      67,
      151,
      76,
      15,
      16,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      12,
      102,
      7,
      102,
      8,
      151,
      9,
      33,
      1,
      11,
      22,
      35,
      1,
      17,
      17,
      67,
      151,
      76,
      15,
      16,
      17
    ]
  },
  {
    "intent": [
      "create",
      "list",
      "of",
      "str_0",
      "empty",
      "strings"
    ],
    "code": [
      "strs",
      "=",
      "[",
      "''",
      "for",
      "x",
      "in",
      "range",
      "(",
      "str_0",
      ")",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "size",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      148,
      4,
      2,
      5,
      146,
      259
    ],
    "code_indx_copy": [
      524,
      19,
      12,
      21,
      7,
      26,
      9,
      104,
      1,
      11,
      17,
      16
    ],
    "code_indx_nocopy": [
      524,
      19,
      12,
      21,
      7,
      26,
      9,
      104,
      1,
      11,
      17,
      16
    ]
  },
  {
    "intent": [
      "generate",
      "pdf",
      "file",
      "var_0",
      "from",
      "markdown",
      "file",
      "var_1"
    ],
    "code": [
      "with",
      "open",
      "(",
      "var_1",
      ",",
      "'r'",
      ")",
      "as",
      "f",
      ":",
      "\n",
      "    ",
      "html_text",
      "=",
      "markdown",
      "(",
      "f",
      ".",
      "read",
      "(",
      ")",
      ",",
      "output_format",
      "=",
      "'html4'",
      ")",
      "\n",
      "",
      "pdfkit",
      ".",
      "from_string",
      "(",
      "html_text",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "output_filename",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "input_filename",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      56,
      465,
      126,
      26,
      58,
      465,
      126,
      63
    ],
    "code_indx_copy": [
      364,
      105,
      1,
      91,
      8,
      365,
      17,
      366,
      190,
      13,
      161,
      216,
      524,
      19,
      533,
      1,
      190,
      22,
      106,
      1,
      17,
      8,
      524,
      19,
      524,
      17,
      161,
      218,
      524,
      22,
      524,
      1,
      524,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      364,
      105,
      1,
      91,
      8,
      365,
      17,
      366,
      190,
      13,
      161,
      216,
      524,
      19,
      524,
      1,
      190,
      22,
      106,
      1,
      17,
      8,
      524,
      19,
      524,
      17,
      161,
      218,
      524,
      22,
      524,
      1,
      524,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "duplicate",
      "dict",
      "in",
      "list",
      "var_0"
    ],
    "code": [
      "[",
      "dict",
      "(",
      "t",
      ")",
      "for",
      "t",
      "in",
      "set",
      "(",
      "[",
      "tuple",
      "(",
      "d",
      ".",
      "items",
      "(",
      ")",
      ")",
      "for",
      "d",
      "in",
      "var_0",
      "]",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "l",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      411,
      186,
      24,
      4,
      26
    ],
    "code_indx_copy": [
      12,
      70,
      1,
      45,
      17,
      7,
      45,
      9,
      189,
      1,
      12,
      432,
      1,
      2,
      22,
      35,
      1,
      17,
      17,
      7,
      2,
      9,
      34,
      16,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      70,
      1,
      45,
      17,
      7,
      45,
      9,
      189,
      1,
      12,
      432,
      1,
      2,
      22,
      35,
      1,
      17,
      17,
      7,
      2,
      9,
      34,
      16,
      17,
      16
    ]
  },
  {
    "intent": [
      "set",
      "time",
      "zone",
      "str_0",
      "in",
      "django"
    ],
    "code": [
      "TIME_ZONE",
      "=",
      "'str_0'"
    ],
    "slot_map": {
      "str_0": {
        "value": "Europe/Istanbul",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      59,
      134,
      465,
      5,
      24,
      87
    ],
    "code_indx_copy": [
      524,
      19,
      29
    ],
    "code_indx_nocopy": [
      524,
      19,
      29
    ]
  },
  {
    "intent": [
      "append",
      "var_0",
      "to",
      "list",
      "value",
      "of",
      "var_1",
      "in",
      "dictionary",
      "var_2",
      ",",
      "or",
      "create",
      "key",
      "var_1",
      "with",
      "value",
      "var_0",
      "in",
      "a",
      "list",
      "if",
      "it",
      "does",
      "not",
      "exist"
    ],
    "code": [
      "var_2",
      ".",
      "setdefault",
      "(",
      "var_3",
      ",",
      "[",
      "]",
      ")",
      ".",
      "append",
      "(",
      "var_4",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "date",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "key",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "dates_dict",
        "quote": "`",
        "type": "var"
      },
      "var_3": {
        "value": "key",
        "quote": "`",
        "type": "var"
      },
      "var_4": {
        "value": "date",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      111,
      26,
      8,
      4,
      143,
      2,
      63,
      24,
      25,
      64,
      62,
      344,
      148,
      23,
      63,
      79,
      143,
      26,
      24,
      3,
      4,
      150,
      145,
      184,
      105,
      185
    ],
    "code_indx_copy": [
      94,
      22,
      145,
      1,
      55,
      8,
      12,
      16,
      17,
      22,
      146,
      1,
      60,
      17
    ],
    "code_indx_nocopy": [
      94,
      22,
      145,
      1,
      55,
      8,
      12,
      16,
      17,
      22,
      146,
      1,
      60,
      17
    ]
  },
  {
    "intent": [
      "group",
      "the",
      "values",
      "from",
      "django",
      "model",
      "var_0",
      "with",
      "group",
      "by",
      "value",
      "var_1",
      "and",
      "annotate",
      "by",
      "var_2"
    ],
    "code": [
      "var_0",
      ".",
      "objects",
      ".",
      "values",
      "(",
      "'var_1'",
      ")",
      ".",
      "annotate",
      "(",
      "article_count",
      "=",
      "Count",
      "(",
      "'var_2'",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "Article",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "pub_date",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "title",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      383,
      18,
      20,
      58,
      87,
      313,
      26,
      79,
      383,
      44,
      143,
      63,
      31,
      465,
      44,
      64
    ],
    "code_indx_copy": [
      34,
      22,
      78,
      22,
      166,
      1,
      57,
      17,
      22,
      541,
      1,
      524,
      19,
      524,
      1,
      58,
      17,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      78,
      22,
      166,
      1,
      57,
      17,
      22,
      524,
      1,
      524,
      19,
      524,
      1,
      58,
      17,
      17
    ]
  },
  {
    "intent": [
      "clear",
      "tkinter",
      "canvas",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "delete",
      "(",
      "'all'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "canvas",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      426,
      223,
      465,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      81,
      1,
      389,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      81,
      1,
      389,
      17
    ]
  },
  {
    "intent": [
      "initialize",
      "a",
      "pandas",
      "series",
      "object",
      "var_0",
      "with",
      "columns",
      "str_0"
    ],
    "code": [
      "var_0",
      "=",
      "pd",
      ".",
      "Series",
      "(",
      "[",
      "str_0",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "['A', 'B', 'A1R', 'B2', 'AABB4']",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "['A', 'B', 'A1R', 'B2', 'AABB4']",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      3,
      42,
      339,
      15,
      26,
      79,
      61,
      5
    ],
    "code_indx_copy": [
      34,
      19,
      162,
      22,
      467,
      1,
      12,
      11,
      16,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      162,
      22,
      467,
      1,
      12,
      11,
      16,
      17
    ]
  },
  {
    "intent": [
      "none"
    ],
    "code": [
      "datetime",
      ".",
      "datetime",
      ".",
      "strptime",
      "(",
      "'2007-03-04T21:08:12'",
      ",",
      "'%Y-%m-%dT%H:%M:%S'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      465
    ],
    "code_indx_copy": [
      27,
      22,
      27,
      22,
      28,
      1,
      524,
      8,
      524,
      17
    ],
    "code_indx_nocopy": [
      27,
      22,
      27,
      22,
      28,
      1,
      524,
      8,
      524,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "list",
      "var_0",
      "using",
      "the",
      "first",
      "dimension",
      "of",
      "the",
      "element",
      "as",
      "the",
      "key",
      "to",
      "list",
      "var_1"
    ],
    "code": [
      "var_0",
      ".",
      "sort",
      "(",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "var_1",
      ".",
      "index",
      "(",
      "x",
      "[",
      "0",
      "]",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "b",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      4,
      26,
      109,
      18,
      151,
      465,
      2,
      18,
      49,
      90,
      18,
      23,
      8,
      4,
      63
    ],
    "code_indx_copy": [
      34,
      22,
      124,
      1,
      102,
      19,
      44,
      26,
      13,
      91,
      22,
      160,
      1,
      26,
      12,
      43,
      16,
      17,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      124,
      1,
      102,
      19,
      44,
      26,
      13,
      91,
      22,
      160,
      1,
      26,
      12,
      43,
      16,
      17,
      17
    ]
  },
  {
    "intent": [
      "how",
      "to",
      "sort",
      "a",
      "list",
      "according",
      "to",
      "another",
      "list",
      "?"
    ],
    "code": [
      "a",
      ".",
      "sort",
      "(",
      "key",
      "=",
      "lambda",
      "x_y",
      ":",
      "b",
      ".",
      "index",
      "(",
      "x_y",
      "[",
      "0",
      "]",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      77,
      8,
      117,
      3,
      4,
      378,
      8,
      176,
      4,
      52
    ],
    "code_indx_copy": [
      95,
      22,
      124,
      1,
      102,
      19,
      44,
      524,
      13,
      97,
      22,
      160,
      1,
      524,
      12,
      43,
      16,
      17,
      17
    ],
    "code_indx_nocopy": [
      95,
      22,
      124,
      1,
      102,
      19,
      44,
      524,
      13,
      97,
      22,
      160,
      1,
      524,
      12,
      43,
      16,
      17,
      17
    ]
  },
  {
    "intent": [
      "save",
      "plot",
      "var_0",
      "as",
      "png",
      "file",
      "str_0"
    ],
    "code": [
      "var_0",
      ".",
      "savefig",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "plt",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "filename.png",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      333,
      244,
      26,
      90,
      465,
      126,
      5
    ],
    "code_indx_copy": [
      34,
      22,
      407,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      407,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "save",
      "matplotlib",
      "graph",
      "to",
      "image",
      "file",
      "str_0",
      "at",
      "a",
      "resolution",
      "of",
      "str_1"
    ],
    "code": [
      "plt",
      ".",
      "savefig",
      "(",
      "'str_0'",
      ",",
      "dpi",
      "=",
      "300",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "filename.png",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": "300 dpi",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      333,
      350,
      465,
      8,
      299,
      126,
      5,
      35,
      3,
      465,
      2,
      32
    ],
    "code_indx_copy": [
      196,
      22,
      407,
      1,
      29,
      8,
      524,
      19,
      524,
      17
    ],
    "code_indx_nocopy": [
      196,
      22,
      407,
      1,
      29,
      8,
      524,
      19,
      524,
      17
    ]
  },
  {
    "intent": [
      "get",
      "output",
      "from",
      "process",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "communicate",
      "(",
      ")",
      "[",
      "0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "p1",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      257,
      58,
      444,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      479,
      1,
      17,
      12,
      43,
      16
    ],
    "code_indx_nocopy": [
      34,
      22,
      479,
      1,
      17,
      12,
      43,
      16
    ]
  },
  {
    "intent": [
      "how",
      "to",
      "get",
      "output",
      "of",
      "exe",
      "in",
      "python",
      "script",
      "?"
    ],
    "code": [
      "output",
      "=",
      "subprocess",
      ".",
      "Popen",
      "(",
      "[",
      "'mycmd'",
      ",",
      "'myarg'",
      "]",
      ",",
      "stdout",
      "=",
      "PIPE",
      ")",
      ".",
      "communicate",
      "(",
      ")",
      "[",
      "0",
      "]"
    ],
    "slot_map": {},
    "intent_indx": [
      77,
      8,
      17,
      257,
      2,
      465,
      24,
      50,
      246,
      52
    ],
    "code_indx_copy": [
      480,
      19,
      229,
      22,
      441,
      1,
      12,
      524,
      8,
      524,
      16,
      8,
      354,
      19,
      481,
      17,
      22,
      479,
      1,
      17,
      12,
      43,
      16
    ],
    "code_indx_nocopy": [
      480,
      19,
      229,
      22,
      441,
      1,
      12,
      524,
      8,
      524,
      16,
      8,
      354,
      19,
      481,
      17,
      22,
      479,
      1,
      17,
      12,
      43,
      16
    ]
  },
  {
    "intent": [
      "searche",
      "in",
      "html",
      "string",
      "for",
      "elements",
      "that",
      "have",
      "text",
      "str_0"
    ],
    "code": [
      "soup",
      ".",
      "body",
      ".",
      "findAll",
      "(",
      "text",
      "=",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "Python",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      24,
      307,
      14,
      21,
      1,
      195,
      196,
      267,
      5
    ],
    "code_indx_copy": [
      61,
      22,
      524,
      22,
      254,
      1,
      355,
      19,
      29,
      17
    ],
    "code_indx_nocopy": [
      61,
      22,
      524,
      22,
      254,
      1,
      355,
      19,
      29,
      17
    ]
  },
  {
    "intent": [
      "beautifulsoup",
      "find",
      "string",
      "str_0",
      "in",
      "html",
      "body",
      "var_0"
    ],
    "code": [
      "soup",
      ".",
      "var_0",
      ".",
      "findAll",
      "(",
      "text",
      "=",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "Python Jobs",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "body",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      70,
      47,
      14,
      5,
      24,
      307,
      465,
      26
    ],
    "code_indx_copy": [
      61,
      22,
      34,
      22,
      254,
      1,
      355,
      19,
      29,
      17
    ],
    "code_indx_nocopy": [
      61,
      22,
      34,
      22,
      254,
      1,
      355,
      19,
      29,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "items",
      "in",
      "dictionary",
      "var_0",
      "using",
      "the",
      "first",
      "part",
      "of",
      "the",
      "key",
      "after",
      "splitting",
      "the",
      "key"
    ],
    "code": [
      "sorted",
      "(",
      "list",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      ",",
      "key",
      "=",
      "lambda",
      "name_num",
      ":",
      "(",
      "name_num",
      "[",
      "0",
      "]",
      ".",
      "rsplit",
      "(",
      "None",
      ",",
      "\n",
      "1",
      ")",
      "[",
      "0",
      "]",
      ",",
      "name_num",
      "[",
      "1",
      "]",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "d",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      39,
      24,
      25,
      26,
      109,
      18,
      151,
      465,
      2,
      18,
      23,
      201,
      429,
      18,
      23
    ],
    "code_indx_copy": [
      101,
      1,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      8,
      102,
      19,
      44,
      482,
      13,
      1,
      482,
      12,
      43,
      16,
      22,
      268,
      1,
      209,
      8,
      161,
      15,
      17,
      12,
      43,
      16,
      8,
      482,
      12,
      15,
      16,
      17,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      8,
      102,
      19,
      44,
      482,
      13,
      1,
      482,
      12,
      43,
      16,
      22,
      268,
      1,
      209,
      8,
      161,
      15,
      17,
      12,
      43,
      16,
      8,
      482,
      12,
      15,
      16,
      17,
      17
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "set",
      "that",
      "is",
      "the",
      "exclusive",
      "or",
      "of",
      "[",
      "1",
      ",",
      "2",
      ",",
      "3",
      "]",
      "and",
      "[",
      "3",
      ",",
      "4",
      ",",
      "5",
      "]"
    ],
    "code": [
      "set",
      "(",
      "[",
      "1",
      ",",
      "2",
      ",",
      "3",
      "]",
      ")",
      "^",
      "set",
      "(",
      "[",
      "3",
      ",",
      "4",
      ",",
      "5",
      "]",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      148,
      3,
      59,
      195,
      152,
      18,
      465,
      344,
      2,
      218,
      237,
      62,
      82,
      62,
      57,
      220,
      31,
      218,
      57,
      62,
      231,
      62,
      232,
      220
    ],
    "code_indx_copy": [
      189,
      1,
      12,
      15,
      8,
      82,
      8,
      54,
      16,
      17,
      483,
      189,
      1,
      12,
      54,
      8,
      184,
      8,
      185,
      16,
      17
    ],
    "code_indx_nocopy": [
      189,
      1,
      12,
      15,
      8,
      82,
      8,
      54,
      16,
      17,
      483,
      189,
      1,
      12,
      54,
      8,
      184,
      8,
      185,
      16,
      17
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "list",
      "values",
      "of",
      "a",
      "dictionary",
      "item",
      "var_0",
      "from",
      "post",
      "requests",
      "in",
      "django"
    ],
    "code": [
      "request",
      ".",
      "POST",
      ".",
      "getlist",
      "(",
      "'var_0'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "pass_id",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      3,
      4,
      20,
      2,
      3,
      25,
      156,
      26,
      58,
      407,
      465,
      24,
      87
    ],
    "code_indx_copy": [
      233,
      22,
      484,
      22,
      524,
      1,
      56,
      17
    ],
    "code_indx_nocopy": [
      233,
      22,
      484,
      22,
      524,
      1,
      56,
      17
    ]
  },
  {
    "intent": [
      "filter",
      "duplicate",
      "entries",
      "w.r.t",
      ".",
      "value",
      "in",
      "str_0",
      "from",
      "a",
      "list",
      "of",
      "dictionaries",
      "str_1"
    ],
    "code": [
      "list",
      "(",
      "dict",
      "(",
      "(",
      "x",
      "[",
      "'str_0'",
      "]",
      ",",
      "x",
      ")",
      "for",
      "x",
      "in",
      "str_1",
      ")",
      ".",
      "values",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "id",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "L",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      217,
      411,
      254,
      465,
      159,
      143,
      24,
      5,
      58,
      3,
      4,
      2,
      188,
      32
    ],
    "code_indx_copy": [
      33,
      1,
      70,
      1,
      1,
      26,
      12,
      29,
      16,
      8,
      26,
      17,
      7,
      26,
      9,
      37,
      17,
      22,
      166,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      33,
      1,
      70,
      1,
      1,
      26,
      12,
      29,
      16,
      8,
      26,
      17,
      7,
      26,
      9,
      37,
      17,
      22,
      166,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "pandas",
      "groupby",
      "object",
      "with",
      "sum",
      "over",
      "the",
      "rows",
      "with",
      "same",
      "column",
      "names",
      "within",
      "dataframe",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "groupby",
      "(",
      "var_0",
      ".",
      "columns",
      ",",
      "axis",
      "=",
      "1",
      ")",
      ".",
      "sum",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      42,
      404,
      15,
      79,
      112,
      408,
      18,
      80,
      79,
      36,
      147,
      321,
      55,
      43,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      157,
      1,
      34,
      22,
      192,
      8,
      42,
      19,
      15,
      17,
      22,
      0,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      157,
      1,
      34,
      22,
      192,
      8,
      42,
      19,
      15,
      17,
      22,
      0,
      1,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "the",
      "zip",
      "of",
      "range",
      "str_0",
      "and",
      "range",
      "str_1",
      "into",
      "a",
      "dictionary"
    ],
    "code": [
      "dict",
      "(",
      "zip",
      "(",
      "list",
      "(",
      "range",
      "(",
      "str_0",
      ")",
      ")",
      ",",
      "list",
      "(",
      "range",
      "(",
      "str_1",
      ")",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "(1, 5)",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": "(7, 11)",
        "quote": "`",
        "type": "str"
      },
      "(str_0)": {
        "value": "(1, 5)",
        "quote": "`",
        "type": "str"
      },
      "(str_1)": {
        "value": "(7, 11)",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      18,
      28,
      2,
      123,
      5,
      31,
      123,
      32,
      12,
      3,
      25
    ],
    "code_indx_copy": [
      70,
      1,
      36,
      1,
      33,
      1,
      104,
      1,
      11,
      17,
      17,
      8,
      33,
      1,
      104,
      1,
      37,
      17,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      70,
      1,
      36,
      1,
      33,
      1,
      104,
      1,
      11,
      17,
      17,
      8,
      33,
      1,
      104,
      1,
      37,
      17,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "all",
      "indexes",
      "of",
      "boolean",
      "numpy",
      "array",
      "where",
      "boolean",
      "value",
      "var_0",
      "is",
      "true"
    ],
    "code": [
      "numpy",
      ".",
      "where",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "mask",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      38,
      235,
      2,
      366,
      84,
      85,
      155,
      366,
      143,
      26,
      152,
      367
    ],
    "code_indx_copy": [
      147,
      22,
      75,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      147,
      22,
      75,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "case",
      "insensitive",
      "comparison",
      "of",
      "strings",
      "var_0",
      "and",
      "var_1"
    ],
    "code": [
      "if",
      "var_0",
      ".",
      "lower",
      "(",
      ")",
      "==",
      "var_1",
      ".",
      "lower",
      "(",
      ")",
      ":",
      "\n",
      "    ",
      "print",
      "(",
      "'The strings are the same (case insensitive)'",
      ")",
      "\n",
      "",
      "else",
      ":",
      "\n",
      "    ",
      "print",
      "(",
      "'The strings are not the same (case insensitive)'",
      ")",
      ""
    ],
    "slot_map": {
      "var_0": {
        "value": "string1",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "string2",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      197,
      198,
      448,
      2,
      259,
      26,
      31,
      63
    ],
    "code_indx_copy": [
      67,
      34,
      22,
      152,
      1,
      17,
      76,
      91,
      22,
      152,
      1,
      17,
      13,
      161,
      216,
      49,
      1,
      524,
      17,
      161,
      218,
      211,
      13,
      161,
      216,
      49,
      1,
      524,
      17,
      218
    ],
    "code_indx_nocopy": [
      67,
      34,
      22,
      152,
      1,
      17,
      76,
      91,
      22,
      152,
      1,
      17,
      13,
      161,
      216,
      49,
      1,
      524,
      17,
      161,
      218,
      211,
      13,
      161,
      216,
      49,
      1,
      524,
      17,
      218
    ]
  },
  {
    "intent": [
      "case",
      "insensitive",
      "string",
      "comparison",
      "between",
      "var_0",
      "and",
      "var_1"
    ],
    "code": [
      "if",
      "var_0",
      ".",
      "lower",
      "(",
      ")",
      "==",
      "var_1",
      ".",
      "lower",
      "(",
      ")",
      ":",
      "\n",
      "    ",
      "pass",
      ""
    ],
    "slot_map": {
      "var_0": {
        "value": "string1",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "string2",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      197,
      198,
      14,
      448,
      278,
      26,
      31,
      63
    ],
    "code_indx_copy": [
      67,
      34,
      22,
      152,
      1,
      17,
      76,
      91,
      22,
      152,
      1,
      17,
      13,
      161,
      216,
      217,
      218
    ],
    "code_indx_nocopy": [
      67,
      34,
      22,
      152,
      1,
      17,
      76,
      91,
      22,
      152,
      1,
      17,
      13,
      161,
      216,
      217,
      218
    ]
  },
  {
    "intent": [
      "case",
      "insensitive",
      "string",
      "comparison",
      "between",
      "var_0",
      "and",
      "var_1"
    ],
    "code": [
      "var_0",
      ".",
      "lower",
      "(",
      ")",
      "==",
      "var_1",
      ".",
      "lower",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "string1",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "string2",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      197,
      198,
      14,
      448,
      278,
      26,
      31,
      63
    ],
    "code_indx_copy": [
      34,
      22,
      152,
      1,
      17,
      76,
      91,
      22,
      152,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      152,
      1,
      17,
      76,
      91,
      22,
      152,
      1,
      17
    ]
  },
  {
    "intent": [
      "case",
      "insensitive",
      "string",
      "comparison",
      "between",
      "var_0",
      "and",
      "var_1"
    ],
    "code": [
      "var_0",
      ".",
      "lower",
      "(",
      ")",
      "==",
      "var_1",
      ".",
      "lower",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "first",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "second",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      197,
      198,
      14,
      448,
      278,
      26,
      31,
      63
    ],
    "code_indx_copy": [
      34,
      22,
      152,
      1,
      17,
      76,
      91,
      22,
      152,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      152,
      1,
      17,
      76,
      91,
      22,
      152,
      1,
      17
    ]
  },
  {
    "intent": [
      "case",
      "insensitive",
      "comparison",
      "between",
      "strings",
      "var_0",
      "and",
      "var_1"
    ],
    "code": [
      "var_0",
      ".",
      "upper",
      "(",
      ")",
      "==",
      "var_1",
      ".",
      "upper",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "first",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "second",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      197,
      198,
      448,
      278,
      259,
      26,
      31,
      63
    ],
    "code_indx_copy": [
      34,
      22,
      298,
      1,
      17,
      76,
      91,
      22,
      298,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      298,
      1,
      17,
      76,
      91,
      22,
      298,
      1,
      17
    ]
  },
  {
    "intent": [
      "taking",
      "the",
      "results",
      "of",
      "a",
      "bash",
      "command",
      "str_0"
    ],
    "code": [
      "os",
      ".",
      "system",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "awk '{print $10, $11}' test.txt > test2.txt",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      18,
      465,
      2,
      3,
      361,
      137,
      5
    ],
    "code_indx_copy": [
      113,
      22,
      119,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      119,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "multiple",
      "values",
      "from",
      "a",
      "list",
      "var_0",
      "at",
      "the",
      "same",
      "time",
      "with",
      "index",
      "starting",
      "at",
      "str_0",
      "and",
      "ending",
      "just",
      "before",
      "str_1",
      "."
    ],
    "code": [
      "del",
      "var_0",
      "[",
      "2",
      ":",
      "6",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "my_list",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "2",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": "6",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      268,
      6,
      20,
      58,
      3,
      4,
      26,
      35,
      18,
      36,
      134,
      79,
      37,
      316,
      35,
      5,
      31,
      432,
      465,
      280,
      32,
      159
    ],
    "code_indx_copy": [
      283,
      34,
      12,
      82,
      13,
      249,
      16
    ],
    "code_indx_nocopy": [
      283,
      34,
      12,
      82,
      13,
      249,
      16
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "string",
      "var_0",
      "to",
      "its",
      "base-10",
      "representation"
    ],
    "code": [
      "int",
      "(",
      "var_0",
      ".",
      "encode",
      "(",
      "'hex'",
      ")",
      ",",
      "16",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      3,
      14,
      26,
      8,
      91,
      465,
      465
    ],
    "code_indx_copy": [
      20,
      1,
      34,
      22,
      239,
      1,
      100,
      17,
      8,
      271,
      17
    ],
    "code_indx_nocopy": [
      20,
      1,
      34,
      22,
      239,
      1,
      100,
      17,
      8,
      271,
      17
    ]
  },
  {
    "intent": [
      "match",
      "regex",
      "pattern",
      "str_0",
      "on",
      "string",
      "var_0"
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'str_0'",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "TAA(?:[ATGC]{3})+?TAA",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "seq",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      144,
      40,
      54,
      5,
      139,
      14,
      26
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      29,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      29,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "set",
      "var_0",
      "by",
      "numerical",
      "value"
    ],
    "code": [
      "sorted",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "float",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      3,
      59,
      26,
      44,
      465,
      143
    ],
    "code_indx_copy": [
      101,
      1,
      34,
      8,
      102,
      19,
      225,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      34,
      8,
      102,
      19,
      225,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "an",
      "int",
      "65",
      "to",
      "hex",
      "string"
    ],
    "code": [
      "hex",
      "(",
      "65",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      11,
      225,
      74,
      465,
      8,
      116,
      14
    ],
    "code_indx_copy": [
      245,
      1,
      531,
      17
    ],
    "code_indx_nocopy": [
      245,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "append",
      "a",
      "pandas",
      "series",
      "var_0",
      "to",
      "the",
      "series",
      "var_1",
      "and",
      "get",
      "a",
      "continuous",
      "index"
    ],
    "code": [
      "var_1",
      ".",
      "append",
      "(",
      "var_0",
      ")",
      ".",
      "reset_index",
      "(",
      "drop",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "b",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      111,
      3,
      42,
      339,
      26,
      8,
      18,
      339,
      63,
      31,
      17,
      3,
      465,
      37
    ],
    "code_indx_copy": [
      91,
      22,
      146,
      1,
      34,
      17,
      22,
      186,
      1,
      187,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      91,
      22,
      146,
      1,
      34,
      17,
      22,
      186,
      1,
      187,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "simple",
      "way",
      "to",
      "append",
      "a",
      "pandas",
      "series",
      "var_0",
      "and",
      "var_1",
      "with",
      "same",
      "index"
    ],
    "code": [
      "pd",
      ".",
      "concat",
      "(",
      "[",
      "var_0",
      ",",
      "var_1",
      "]",
      ",",
      "ignore_index",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "b",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      449,
      8,
      111,
      3,
      42,
      339,
      26,
      31,
      63,
      79,
      36,
      37
    ],
    "code_indx_copy": [
      162,
      22,
      163,
      1,
      12,
      34,
      8,
      91,
      16,
      8,
      524,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      162,
      22,
      163,
      1,
      12,
      34,
      8,
      91,
      16,
      8,
      524,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "list",
      "of",
      "tuples",
      "with",
      "multiple",
      "iterators",
      "using",
      "list",
      "comprehension"
    ],
    "code": [
      "[",
      "(",
      "i",
      ",",
      "j",
      ")",
      "for",
      "i",
      "in",
      "range",
      "(",
      "1",
      ",",
      "3",
      ")",
      "for",
      "j",
      "in",
      "range",
      "(",
      "1",
      ",",
      "5",
      ")",
      "]"
    ],
    "slot_map": {},
    "intent_indx": [
      17,
      3,
      4,
      2,
      33,
      79,
      6,
      465,
      109,
      4,
      346
    ],
    "code_indx_copy": [
      12,
      1,
      6,
      8,
      30,
      17,
      7,
      6,
      9,
      104,
      1,
      15,
      8,
      54,
      17,
      7,
      30,
      9,
      104,
      1,
      15,
      8,
      185,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      1,
      6,
      8,
      30,
      17,
      7,
      6,
      9,
      104,
      1,
      15,
      8,
      54,
      17,
      7,
      30,
      9,
      104,
      1,
      15,
      8,
      185,
      17,
      16
    ]
  },
  {
    "intent": [
      "reverse",
      "sort",
      "items",
      "in",
      "dictionary",
      "var_0",
      "by",
      "value"
    ],
    "code": [
      "sorted",
      "(",
      "iter",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      ",",
      "key",
      "=",
      "itemgetter",
      "(",
      "1",
      ")",
      ",",
      "reverse",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "mydict",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      282,
      117,
      39,
      24,
      25,
      26,
      44,
      143
    ],
    "code_indx_copy": [
      101,
      1,
      165,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      8,
      102,
      19,
      128,
      1,
      15,
      17,
      8,
      129,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      165,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      8,
      102,
      19,
      128,
      1,
      15,
      17,
      8,
      129,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "select",
      "the",
      "last",
      "business",
      "day",
      "of",
      "the",
      "month",
      "for",
      "each",
      "month",
      "in",
      "2014",
      "in",
      "pandas"
    ],
    "code": [
      "pd",
      ".",
      "date_range",
      "(",
      "'1/1/2014'",
      ",",
      "periods",
      "=",
      "12",
      ",",
      "freq",
      "=",
      "'BM'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      78,
      18,
      170,
      465,
      356,
      2,
      18,
      394,
      21,
      22,
      394,
      24,
      465,
      24,
      42
    ],
    "code_indx_copy": [
      162,
      22,
      524,
      1,
      524,
      8,
      524,
      19,
      348,
      8,
      524,
      19,
      524,
      17
    ],
    "code_indx_nocopy": [
      162,
      22,
      524,
      1,
      524,
      8,
      524,
      19,
      348,
      8,
      524,
      19,
      524,
      17
    ]
  },
  {
    "intent": [
      "disable",
      "the",
      "certificate",
      "check",
      "in",
      "https",
      "requests",
      "for",
      "url",
      "str_0"
    ],
    "code": [
      "requests",
      ".",
      "get",
      "(",
      "'str_0'",
      ",",
      "verify",
      "=",
      "False",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "https://kennethreitz.com",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      18,
      465,
      234,
      24,
      465,
      465,
      21,
      102,
      5
    ],
    "code_indx_copy": [
      85,
      22,
      86,
      1,
      29,
      8,
      524,
      19,
      87,
      17
    ],
    "code_indx_nocopy": [
      85,
      22,
      86,
      1,
      29,
      8,
      524,
      19,
      87,
      17
    ]
  },
  {
    "intent": [
      "return",
      "dataframe",
      "var_0",
      "with",
      "last",
      "row",
      "dropped"
    ],
    "code": [
      "var_0",
      ".",
      "ix",
      "[",
      ":",
      "-",
      "1",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      160,
      43,
      26,
      79,
      170,
      45,
      465
    ],
    "code_indx_copy": [
      34,
      22,
      201,
      12,
      13,
      14,
      15,
      16
    ],
    "code_indx_nocopy": [
      34,
      22,
      201,
      12,
      13,
      14,
      15,
      16
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "str_0",
      "is",
      "in",
      "string",
      "var_0"
    ],
    "code": [
      "if",
      "'str_0'",
      "not",
      "in",
      "var_0",
      ":",
      "\n",
      "    ",
      "pass",
      ""
    ],
    "slot_map": {
      "str_0": {
        "value": "blah",
        "quote": "\"",
        "type": "str"
      },
      "var_0": {
        "value": "somestring",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      234,
      150,
      5,
      152,
      24,
      14,
      26
    ],
    "code_indx_copy": [
      67,
      29,
      281,
      9,
      34,
      13,
      161,
      216,
      217,
      218
    ],
    "code_indx_nocopy": [
      67,
      29,
      281,
      9,
      34,
      13,
      161,
      216,
      217,
      218
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "string",
      "var_0",
      "is",
      "in",
      "var_1"
    ],
    "code": [
      "if",
      "var_0",
      "in",
      "var_1",
      ":",
      "\n",
      "    ",
      "pass",
      ""
    ],
    "slot_map": {
      "var_0": {
        "value": "needle",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "haystack",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      234,
      150,
      14,
      26,
      152,
      24,
      63
    ],
    "code_indx_copy": [
      67,
      34,
      9,
      91,
      13,
      161,
      216,
      217,
      218
    ],
    "code_indx_nocopy": [
      67,
      34,
      9,
      91,
      13,
      161,
      216,
      217,
      218
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "string",
      "str_0",
      "is",
      "in",
      "string"
    ],
    "code": [
      "string",
      ".",
      "find",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "substring",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      234,
      150,
      14,
      5,
      152,
      24,
      14
    ],
    "code_indx_copy": [
      64,
      22,
      282,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      64,
      22,
      282,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "string",
      "var_0",
      "contains",
      "str_0"
    ],
    "code": [
      "if",
      "var_0",
      ".",
      "find",
      "(",
      "'str_0'",
      ")",
      "==",
      "-",
      "1",
      ":",
      "\n",
      "    ",
      "print",
      "(",
      "\"No 'is' here!\"",
      ")",
      "\n",
      "",
      "else",
      ":",
      "\n",
      "    ",
      "print",
      "(",
      "\"Found 'is' in the string.\"",
      ")",
      ""
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "is",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      234,
      150,
      14,
      26,
      75,
      5
    ],
    "code_indx_copy": [
      67,
      34,
      22,
      282,
      1,
      29,
      17,
      76,
      14,
      15,
      13,
      161,
      216,
      49,
      1,
      524,
      17,
      161,
      218,
      211,
      13,
      161,
      216,
      49,
      1,
      524,
      17,
      218
    ],
    "code_indx_nocopy": [
      67,
      34,
      22,
      282,
      1,
      29,
      17,
      76,
      14,
      15,
      13,
      161,
      216,
      49,
      1,
      524,
      17,
      161,
      218,
      211,
      13,
      161,
      216,
      49,
      1,
      524,
      17,
      218
    ]
  },
  {
    "intent": [
      "extract",
      "first",
      "and",
      "last",
      "row",
      "of",
      "a",
      "dataframe",
      "var_0"
    ],
    "code": [
      "pd",
      ".",
      "concat",
      "(",
      "[",
      "var_0",
      ".",
      "head",
      "(",
      "1",
      ")",
      ",",
      "var_0",
      ".",
      "tail",
      "(",
      "1",
      ")",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      104,
      151,
      31,
      170,
      45,
      2,
      3,
      43,
      26
    ],
    "code_indx_copy": [
      162,
      22,
      163,
      1,
      12,
      34,
      22,
      375,
      1,
      15,
      17,
      8,
      34,
      22,
      524,
      1,
      15,
      17,
      16,
      17
    ],
    "code_indx_nocopy": [
      162,
      22,
      163,
      1,
      12,
      34,
      22,
      375,
      1,
      15,
      17,
      8,
      34,
      22,
      524,
      1,
      15,
      17,
      16,
      17
    ]
  },
  {
    "intent": [
      "filter",
      "a",
      "django",
      "model",
      "var_0",
      "to",
      "have",
      "charfield",
      "length",
      "of",
      "max",
      "str_0"
    ],
    "code": [
      "var_0",
      ".",
      "objects",
      ".",
      "extra",
      "(",
      "where",
      "=",
      "[",
      "'CHAR_LENGTH(text) > 254'",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "MyModel",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "255",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      217,
      3,
      87,
      313,
      26,
      8,
      196,
      465,
      209,
      2,
      258,
      5
    ],
    "code_indx_copy": [
      34,
      22,
      78,
      22,
      357,
      1,
      75,
      19,
      12,
      524,
      16,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      78,
      22,
      357,
      1,
      75,
      19,
      12,
      524,
      16,
      17
    ]
  },
  {
    "intent": [
      "filter",
      "queryset",
      "for",
      "all",
      "objects",
      "in",
      "django",
      "model",
      "var_0",
      "where",
      "texts",
      "length",
      "are",
      "greater",
      "than",
      "str_0"
    ],
    "code": [
      "var_0",
      ".",
      "objects",
      ".",
      "filter",
      "(",
      "text__regex",
      "=",
      "'^.{254}.*'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "MyModel",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "254",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      217,
      465,
      21,
      38,
      178,
      24,
      87,
      313,
      26,
      155,
      465,
      209,
      243,
      349,
      264,
      5
    ],
    "code_indx_copy": [
      34,
      22,
      78,
      22,
      79,
      1,
      524,
      19,
      524,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      78,
      22,
      79,
      1,
      524,
      19,
      524,
      17
    ]
  },
  {
    "intent": [
      "count",
      "the",
      "number",
      "of",
      "rows",
      "with",
      "missing",
      "values",
      "in",
      "a",
      "pandas",
      "dataframe",
      "var_0"
    ],
    "code": [
      "sum",
      "(",
      "var_0",
      ".",
      "apply",
      "(",
      "lambda",
      "x",
      ":",
      "sum",
      "(",
      "x",
      ".",
      "isnull",
      "(",
      ")",
      ".",
      "values",
      ")",
      ",",
      "axis",
      "=",
      "1",
      ")",
      ">",
      "0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      203,
      18,
      76,
      2,
      80,
      79,
      465,
      20,
      24,
      3,
      42,
      43,
      26
    ],
    "code_indx_copy": [
      0,
      1,
      34,
      22,
      59,
      1,
      44,
      26,
      13,
      0,
      1,
      26,
      22,
      430,
      1,
      17,
      22,
      166,
      17,
      8,
      42,
      19,
      15,
      17,
      214,
      43,
      17
    ],
    "code_indx_nocopy": [
      0,
      1,
      34,
      22,
      59,
      1,
      44,
      26,
      13,
      0,
      1,
      26,
      22,
      430,
      1,
      17,
      22,
      166,
      17,
      8,
      42,
      19,
      15,
      17,
      214,
      43,
      17
    ]
  },
  {
    "intent": [
      "sorting",
      "while",
      "preserving",
      "order",
      "in",
      "python"
    ],
    "code": [
      "sorted",
      "(",
      "enumerate",
      "(",
      "a",
      ")",
      ",",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "x",
      "[",
      "1",
      "]",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      283,
      430,
      465,
      162,
      24,
      50
    ],
    "code_indx_copy": [
      101,
      1,
      10,
      1,
      95,
      17,
      8,
      102,
      19,
      44,
      26,
      13,
      26,
      12,
      15,
      16,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      10,
      1,
      95,
      17,
      8,
      102,
      19,
      44,
      26,
      13,
      26,
      12,
      15,
      16,
      17
    ]
  },
  {
    "intent": [
      "set",
      "the",
      "font",
      "str_0",
      "of",
      "size",
      "12",
      "for",
      "a",
      "canvas",
      "'",
      "text",
      "item",
      "var_0"
    ],
    "code": [
      "canvas",
      ".",
      "create_text",
      "(",
      "x",
      ",",
      "y",
      ",",
      "font",
      "=",
      "(",
      "'str_0'",
      ",",
      "12",
      ")",
      ",",
      "text",
      "=",
      "var_0",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "Purisa",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "k",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      59,
      18,
      465,
      5,
      2,
      334,
      465,
      21,
      3,
      465,
      310,
      267,
      156,
      26
    ],
    "code_indx_copy": [
      537,
      22,
      524,
      1,
      26,
      8,
      103,
      8,
      530,
      19,
      1,
      29,
      8,
      348,
      17,
      8,
      355,
      19,
      34,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      524,
      1,
      26,
      8,
      103,
      8,
      524,
      19,
      1,
      29,
      8,
      348,
      17,
      8,
      355,
      19,
      34,
      17
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "list",
      "containing",
      "all",
      "values",
      "associated",
      "with",
      "key",
      "str_0",
      "in",
      "dictionaries",
      "of",
      "list",
      "var_0",
      "using",
      "list",
      "comprehension"
    ],
    "code": [
      "[",
      "y",
      "[",
      "'str_0'",
      "]",
      "for",
      "x",
      "in",
      "var_0",
      "for",
      "y",
      "in",
      "x",
      "[",
      "'bar'",
      "]",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "baz",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "foos",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      148,
      3,
      4,
      34,
      38,
      20,
      286,
      79,
      23,
      5,
      24,
      188,
      2,
      4,
      26,
      109,
      4,
      346
    ],
    "code_indx_copy": [
      12,
      103,
      12,
      29,
      16,
      7,
      26,
      9,
      34,
      7,
      103,
      9,
      26,
      12,
      485,
      16,
      16
    ],
    "code_indx_nocopy": [
      12,
      103,
      12,
      29,
      16,
      7,
      26,
      9,
      34,
      7,
      103,
      9,
      26,
      12,
      485,
      16,
      16
    ]
  },
  {
    "intent": [
      "read",
      "pandas",
      "data",
      "frame",
      "csv",
      "str_0",
      "with",
      "extra",
      "commas",
      "in",
      "column",
      "specifying",
      "string",
      "delimiter",
      "str_1"
    ],
    "code": [
      "df",
      "=",
      "pd",
      ".",
      "read_csv",
      "(",
      "'str_0'",
      ",",
      "quotechar",
      "=",
      "'str_1'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "comma.csv",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": "'",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      124,
      42,
      65,
      66,
      287,
      5,
      79,
      465,
      465,
      24,
      147,
      465,
      14,
      329,
      32
    ],
    "code_indx_copy": [
      149,
      19,
      162,
      22,
      452,
      1,
      29,
      8,
      524,
      19,
      63,
      17
    ],
    "code_indx_nocopy": [
      149,
      19,
      162,
      22,
      452,
      1,
      29,
      8,
      524,
      19,
      63,
      17
    ]
  },
  {
    "intent": [
      "replace",
      "string",
      "str_0",
      "with",
      "str_1",
      "in",
      "dataframe",
      "var_0",
      "column",
      "str_2"
    ],
    "code": [
      "var_0",
      "[",
      "'str_2'",
      "]",
      "=",
      "var_0",
      "[",
      "'str_2'",
      "]",
      ".",
      "str",
      ".",
      "replace",
      "(",
      "'str_1'",
      ",",
      "' in. '",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "in.",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "in.",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "str_2": {
        "value": "a",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      130,
      14,
      5,
      79,
      32,
      24,
      43,
      26,
      147,
      194
    ],
    "code_indx_copy": [
      34,
      12,
      150,
      16,
      19,
      34,
      12,
      150,
      16,
      22,
      25,
      22,
      107,
      1,
      63,
      8,
      524,
      17
    ],
    "code_indx_nocopy": [
      34,
      12,
      150,
      16,
      19,
      34,
      12,
      150,
      16,
      22,
      25,
      22,
      107,
      1,
      63,
      8,
      524,
      17
    ]
  },
  {
    "intent": [
      "get",
      "all",
      "indexes",
      "of",
      "a",
      "list",
      "var_0",
      "where",
      "each",
      "value",
      "is",
      "greater",
      "than",
      "str_0"
    ],
    "code": [
      "[",
      "i",
      "for",
      "i",
      "in",
      "range",
      "(",
      "len",
      "(",
      "var_0",
      ")",
      ")",
      "if",
      "var_0",
      "[",
      "i",
      "]",
      ">",
      "2",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "2",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      38,
      235,
      2,
      3,
      4,
      26,
      155,
      22,
      143,
      152,
      349,
      264,
      5
    ],
    "code_indx_copy": [
      12,
      6,
      7,
      6,
      9,
      104,
      1,
      32,
      1,
      34,
      17,
      17,
      67,
      34,
      12,
      6,
      16,
      214,
      82,
      16
    ],
    "code_indx_nocopy": [
      12,
      6,
      7,
      6,
      9,
      104,
      1,
      32,
      1,
      34,
      17,
      17,
      67,
      34,
      12,
      6,
      16,
      214,
      82,
      16
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "a",
      "local",
      "variable",
      "var_0",
      "exists"
    ],
    "code": [
      "'var_0'",
      "in",
      "locals",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "myVar",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      234,
      150,
      3,
      465,
      95,
      26,
      274
    ],
    "code_indx_copy": [
      56,
      9,
      524,
      1,
      17
    ],
    "code_indx_nocopy": [
      56,
      9,
      524,
      1,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "a",
      "global",
      "variable",
      "var_0",
      "exists"
    ],
    "code": [
      "'var_0'",
      "in",
      "globals",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "myVar",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      234,
      150,
      3,
      465,
      95,
      26,
      274
    ],
    "code_indx_copy": [
      56,
      9,
      284,
      1,
      17
    ],
    "code_indx_nocopy": [
      56,
      9,
      284,
      1,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "object",
      "var_0",
      "has",
      "attribute",
      "str_0"
    ],
    "code": [
      "hasattr",
      "(",
      "var_0",
      ",",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "obj",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "attr_name",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      234,
      150,
      15,
      26,
      337,
      341,
      5
    ],
    "code_indx_copy": [
      486,
      1,
      34,
      8,
      29,
      17
    ],
    "code_indx_nocopy": [
      486,
      1,
      34,
      8,
      29,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "a",
      "local",
      "variable",
      "str_0",
      "exists"
    ],
    "code": [
      "if",
      "'str_0'",
      "in",
      "locals",
      "(",
      ")",
      ":",
      "\n",
      "    ",
      "pass",
      ""
    ],
    "slot_map": {
      "str_0": {
        "value": "myVar",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      234,
      150,
      3,
      465,
      95,
      5,
      274
    ],
    "code_indx_copy": [
      67,
      29,
      9,
      524,
      1,
      17,
      13,
      161,
      216,
      217,
      218
    ],
    "code_indx_nocopy": [
      67,
      29,
      9,
      524,
      1,
      17,
      13,
      161,
      216,
      217,
      218
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "a",
      "global",
      "variable",
      "str_0",
      "exists"
    ],
    "code": [
      "if",
      "'str_0'",
      "in",
      "globals",
      "(",
      ")",
      ":",
      "\n",
      "    ",
      "pass",
      ""
    ],
    "slot_map": {
      "str_0": {
        "value": "myVar",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      234,
      150,
      3,
      465,
      95,
      5,
      274
    ],
    "code_indx_copy": [
      67,
      29,
      9,
      284,
      1,
      17,
      13,
      161,
      216,
      217,
      218
    ],
    "code_indx_nocopy": [
      67,
      29,
      9,
      284,
      1,
      17,
      13,
      161,
      216,
      217,
      218
    ]
  },
  {
    "intent": [
      "lambda",
      "function",
      "that",
      "adds",
      "two",
      "operands"
    ],
    "code": [
      "lambda",
      "x",
      ",",
      "y",
      ":",
      "x",
      "+",
      "y"
    ],
    "slot_map": {},
    "intent_indx": [
      68,
      69,
      195,
      465,
      29,
      465
    ],
    "code_indx_copy": [
      44,
      26,
      8,
      103,
      13,
      26,
      96,
      103
    ],
    "code_indx_nocopy": [
      44,
      26,
      8,
      103,
      13,
      26,
      96,
      103
    ]
  },
  {
    "intent": [
      "count",
      "the",
      "number",
      "of",
      "items",
      "in",
      "a",
      "generator/iterator",
      "var_0"
    ],
    "code": [
      "sum",
      "(",
      "1",
      "for",
      "i",
      "in",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "it",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      203,
      18,
      76,
      2,
      39,
      24,
      3,
      465,
      26
    ],
    "code_indx_copy": [
      0,
      1,
      15,
      7,
      6,
      9,
      34,
      17
    ],
    "code_indx_nocopy": [
      0,
      1,
      15,
      7,
      6,
      9,
      34,
      17
    ]
  },
  {
    "intent": [
      "get",
      "tuples",
      "of",
      "the",
      "corresponding",
      "elements",
      "from",
      "lists",
      "var_0",
      "and",
      "var_1"
    ],
    "code": [
      "[",
      "(",
      "x",
      ",",
      "var_1",
      "[",
      "i",
      "]",
      ")",
      "for",
      "i",
      ",",
      "x",
      "in",
      "enumerate",
      "(",
      "var_0",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "lst",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "lst2",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      33,
      2,
      18,
      347,
      1,
      58,
      30,
      26,
      31,
      63
    ],
    "code_indx_copy": [
      12,
      1,
      26,
      8,
      91,
      12,
      6,
      16,
      17,
      7,
      6,
      8,
      26,
      9,
      10,
      1,
      34,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      1,
      26,
      8,
      91,
      12,
      6,
      16,
      17,
      7,
      6,
      8,
      26,
      9,
      10,
      1,
      34,
      17,
      16
    ]
  },
  {
    "intent": [
      "create",
      "tuples",
      "containing",
      "elements",
      "that",
      "are",
      "at",
      "the",
      "same",
      "index",
      "of",
      "list",
      "var_0",
      "and",
      "list",
      "var_1"
    ],
    "code": [
      "[",
      "(",
      "i",
      ",",
      "j",
      ")",
      "for",
      "i",
      ",",
      "j",
      "in",
      "zip",
      "(",
      "var_0",
      ",",
      "var_1",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "lst",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "lst2",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      148,
      33,
      34,
      1,
      195,
      243,
      35,
      18,
      36,
      37,
      2,
      4,
      26,
      31,
      4,
      63
    ],
    "code_indx_copy": [
      12,
      1,
      6,
      8,
      30,
      17,
      7,
      6,
      8,
      30,
      9,
      36,
      1,
      34,
      8,
      91,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      1,
      6,
      8,
      30,
      17,
      7,
      6,
      8,
      30,
      9,
      36,
      1,
      34,
      8,
      91,
      17,
      16
    ]
  },
  {
    "intent": [
      "get",
      "tuples",
      "from",
      "lists",
      "var_0",
      "and",
      "var_1",
      "using",
      "list",
      "comprehension",
      "in",
      "python",
      "2"
    ],
    "code": [
      "[",
      "(",
      "var_0",
      "[",
      "i",
      "]",
      ",",
      "var_1",
      "[",
      "i",
      "]",
      ")",
      "for",
      "i",
      "in",
      "range",
      "(",
      "len",
      "(",
      "var_0",
      ")",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "lst",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "lst2",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      33,
      58,
      30,
      26,
      31,
      63,
      109,
      4,
      346,
      24,
      50,
      82
    ],
    "code_indx_copy": [
      12,
      1,
      34,
      12,
      6,
      16,
      8,
      91,
      12,
      6,
      16,
      17,
      7,
      6,
      9,
      104,
      1,
      32,
      1,
      34,
      17,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      1,
      34,
      12,
      6,
      16,
      8,
      91,
      12,
      6,
      16,
      17,
      7,
      6,
      9,
      104,
      1,
      32,
      1,
      34,
      17,
      17,
      16
    ]
  },
  {
    "intent": [
      "convert",
      "hex",
      "triplet",
      "string",
      "var_0",
      "to",
      "rgb",
      "tuple"
    ],
    "code": [
      "struct",
      ".",
      "unpack",
      "(",
      "'BBB'",
      ",",
      "var_0",
      ".",
      "decode",
      "(",
      "'hex'",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "rgbstr",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      116,
      465,
      14,
      26,
      8,
      465,
      113
    ],
    "code_indx_copy": [
      317,
      22,
      406,
      1,
      524,
      8,
      34,
      22,
      99,
      1,
      100,
      17,
      17
    ],
    "code_indx_nocopy": [
      317,
      22,
      406,
      1,
      524,
      8,
      34,
      22,
      99,
      1,
      100,
      17,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "3",
      "is",
      "not",
      "in",
      "a",
      "list",
      "[",
      "2",
      ",",
      "3",
      ",",
      "4",
      "]"
    ],
    "code": [
      "3",
      "not",
      "in",
      "[",
      "2",
      ",",
      "3",
      ",",
      "4",
      "]"
    ],
    "slot_map": {},
    "intent_indx": [
      234,
      150,
      57,
      152,
      105,
      24,
      3,
      4,
      218,
      82,
      62,
      57,
      62,
      231,
      220
    ],
    "code_indx_copy": [
      54,
      281,
      9,
      12,
      82,
      8,
      54,
      8,
      184,
      16
    ],
    "code_indx_nocopy": [
      54,
      281,
      9,
      12,
      82,
      8,
      54,
      8,
      184,
      16
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "tuple",
      "(",
      "2",
      ",",
      "3",
      ")",
      "is",
      "not",
      "in",
      "a",
      "list",
      "[",
      "(",
      "2",
      ",",
      "3",
      ")",
      ",",
      "(",
      "5",
      ",",
      "6",
      ")",
      ",",
      "(",
      "9",
      ",",
      "1",
      ")",
      "]"
    ],
    "code": [
      "(",
      "2",
      ",",
      "3",
      ")",
      "not",
      "in",
      "[",
      "(",
      "2",
      ",",
      "3",
      ")",
      ",",
      "(",
      "5",
      ",",
      "6",
      ")",
      ",",
      "(",
      "9",
      ",",
      "1",
      ")",
      "]"
    ],
    "slot_map": {},
    "intent_indx": [
      234,
      150,
      113,
      212,
      82,
      62,
      57,
      27,
      152,
      105,
      24,
      3,
      4,
      218,
      212,
      82,
      62,
      57,
      27,
      62,
      212,
      232,
      62,
      393,
      27,
      62,
      212,
      403,
      62,
      237,
      27,
      220
    ],
    "code_indx_copy": [
      1,
      82,
      8,
      54,
      17,
      281,
      9,
      12,
      1,
      82,
      8,
      54,
      17,
      8,
      1,
      185,
      8,
      249,
      17,
      8,
      1,
      371,
      8,
      15,
      17,
      16
    ],
    "code_indx_nocopy": [
      1,
      82,
      8,
      54,
      17,
      281,
      9,
      12,
      1,
      82,
      8,
      54,
      17,
      8,
      1,
      185,
      8,
      249,
      17,
      8,
      1,
      371,
      8,
      15,
      17,
      16
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "tuple",
      "(",
      "2",
      ",",
      "3",
      ")",
      "is",
      "not",
      "in",
      "a",
      "list",
      "[",
      "(",
      "2",
      ",",
      "7",
      ")",
      ",",
      "(",
      "7",
      ",",
      "3",
      ")",
      ",",
      "str_0",
      "]"
    ],
    "code": [
      "(",
      "2",
      ",",
      "3",
      ")",
      "not",
      "in",
      "[",
      "(",
      "2",
      ",",
      "7",
      ")",
      ",",
      "(",
      "7",
      ",",
      "3",
      ")",
      ",",
      "'str_0'",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "hi",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      234,
      150,
      113,
      212,
      82,
      62,
      57,
      27,
      152,
      105,
      24,
      3,
      4,
      218,
      212,
      82,
      62,
      340,
      27,
      62,
      212,
      340,
      62,
      57,
      27,
      62,
      5,
      220
    ],
    "code_indx_copy": [
      1,
      82,
      8,
      54,
      17,
      281,
      9,
      12,
      1,
      82,
      8,
      219,
      17,
      8,
      1,
      219,
      8,
      54,
      17,
      8,
      29,
      16
    ],
    "code_indx_nocopy": [
      1,
      82,
      8,
      54,
      17,
      281,
      9,
      12,
      1,
      82,
      8,
      219,
      17,
      8,
      1,
      219,
      8,
      54,
      17,
      8,
      29,
      16
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "3",
      "is",
      "not",
      "in",
      "the",
      "list",
      "[",
      "4,5,6",
      "]"
    ],
    "code": [
      "3",
      "not",
      "in",
      "[",
      "4",
      ",",
      "5",
      ",",
      "6",
      "]"
    ],
    "slot_map": {},
    "intent_indx": [
      234,
      150,
      57,
      152,
      105,
      24,
      18,
      4,
      218,
      465,
      220
    ],
    "code_indx_copy": [
      54,
      281,
      9,
      12,
      184,
      8,
      185,
      8,
      249,
      16
    ],
    "code_indx_nocopy": [
      54,
      281,
      9,
      12,
      184,
      8,
      185,
      8,
      249,
      16
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "list",
      "by",
      "appending",
      "components",
      "from",
      "list",
      "var_0",
      "and",
      "reversed",
      "list",
      "var_1",
      "interchangeably"
    ],
    "code": [
      "[",
      "value",
      "for",
      "pair",
      "in",
      "zip",
      "(",
      "var_0",
      ",",
      "var_1",
      "[",
      ":",
      ":",
      "-",
      "1",
      "]",
      ")",
      "for",
      "value",
      "in",
      "pair",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "b",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      148,
      3,
      4,
      44,
      465,
      465,
      58,
      4,
      26,
      31,
      465,
      4,
      63,
      465
    ],
    "code_indx_copy": [
      12,
      151,
      7,
      320,
      9,
      36,
      1,
      34,
      8,
      91,
      12,
      13,
      13,
      14,
      15,
      16,
      17,
      7,
      151,
      9,
      320,
      16
    ],
    "code_indx_nocopy": [
      12,
      151,
      7,
      320,
      9,
      36,
      1,
      34,
      8,
      91,
      12,
      13,
      13,
      14,
      15,
      16,
      17,
      7,
      151,
      9,
      320,
      16
    ]
  },
  {
    "intent": [
      "delete",
      "the",
      "last",
      "column",
      "of",
      "numpy",
      "array",
      "var_0",
      "and",
      "assign",
      "resulting",
      "array",
      "to",
      "var_1"
    ],
    "code": [
      "var_1",
      "=",
      "np",
      ".",
      "delete",
      "(",
      "var_0",
      ",",
      "-",
      "1",
      ",",
      "1",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "b",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      86,
      18,
      170,
      147,
      2,
      84,
      85,
      26,
      31,
      93,
      353,
      85,
      8,
      63
    ],
    "code_indx_copy": [
      91,
      19,
      74,
      22,
      81,
      1,
      34,
      8,
      14,
      15,
      8,
      15,
      17
    ],
    "code_indx_nocopy": [
      91,
      19,
      74,
      22,
      81,
      1,
      34,
      8,
      14,
      15,
      8,
      15,
      17
    ]
  },
  {
    "intent": [
      "commit",
      "all",
      "the",
      "changes",
      "after",
      "executing",
      "a",
      "query",
      "."
    ],
    "code": [
      "dbb",
      ".",
      "commit",
      "(",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      465,
      38,
      18,
      465,
      201,
      465,
      3,
      275,
      159
    ],
    "code_indx_copy": [
      524,
      22,
      528,
      1,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      524,
      1,
      17
    ]
  },
  {
    "intent": [
      "join",
      "two",
      "dataframes",
      "based",
      "on",
      "values",
      "in",
      "selected",
      "columns"
    ],
    "code": [
      "pd",
      ".",
      "merge",
      "(",
      "a",
      ",",
      "b",
      ",",
      "on",
      "=",
      "[",
      "'A'",
      ",",
      "'B'",
      "]",
      ",",
      "how",
      "=",
      "'outer'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      281,
      29,
      248,
      208,
      139,
      20,
      24,
      465,
      61
    ],
    "code_indx_copy": [
      162,
      22,
      220,
      1,
      95,
      8,
      97,
      8,
      244,
      19,
      12,
      247,
      8,
      327,
      16,
      8,
      243,
      19,
      524,
      17
    ],
    "code_indx_nocopy": [
      162,
      22,
      220,
      1,
      95,
      8,
      97,
      8,
      244,
      19,
      12,
      247,
      8,
      327,
      16,
      8,
      243,
      19,
      524,
      17
    ]
  },
  {
    "intent": [
      "set",
      "text",
      "color",
      "as",
      "var_0",
      "and",
      "background",
      "color",
      "as",
      "str_0",
      "in",
      "qpushbutton"
    ],
    "code": [
      "setStyleSheet",
      "(",
      "'QPushButton {background-color: #A3C1DA; color: red;}'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "red",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "#A3C1DA",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      59,
      267,
      222,
      90,
      26,
      31,
      465,
      222,
      90,
      5,
      24,
      465
    ],
    "code_indx_copy": [
      524,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      524,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "find",
      "the",
      "mean",
      "of",
      "elements",
      "in",
      "list",
      "var_0"
    ],
    "code": [
      "sum",
      "(",
      "var_0",
      ")",
      "/",
      "float",
      "(",
      "len",
      "(",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "l",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      47,
      18,
      412,
      2,
      1,
      24,
      4,
      26
    ],
    "code_indx_copy": [
      0,
      1,
      34,
      17,
      31,
      225,
      1,
      32,
      1,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      0,
      1,
      34,
      17,
      31,
      225,
      1,
      32,
      1,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "find",
      "all",
      "the",
      "items",
      "from",
      "a",
      "dictionary",
      "var_0",
      "if",
      "the",
      "key",
      "contains",
      "the",
      "string",
      "var_1"
    ],
    "code": [
      "[",
      "(",
      "k",
      ",",
      "v",
      ")",
      "for",
      "k",
      ",",
      "v",
      "in",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      "if",
      "'var_1'",
      "in",
      "k",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "D",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "Light",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      47,
      38,
      18,
      39,
      58,
      3,
      25,
      26,
      150,
      18,
      23,
      75,
      18,
      14,
      63
    ],
    "code_indx_copy": [
      12,
      1,
      89,
      8,
      90,
      17,
      7,
      89,
      8,
      90,
      9,
      34,
      22,
      35,
      1,
      17,
      67,
      57,
      9,
      89,
      16
    ],
    "code_indx_nocopy": [
      12,
      1,
      89,
      8,
      90,
      17,
      7,
      89,
      8,
      90,
      9,
      34,
      22,
      35,
      1,
      17,
      67,
      57,
      9,
      89,
      16
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "md5",
      "hash",
      "from",
      "string",
      "var_0"
    ],
    "code": [
      "k",
      "=",
      "hashlib",
      ".",
      "md5",
      "(",
      "'var_0'",
      ")",
      ".",
      "hexdigest",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "thecakeisalie",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      3,
      465,
      465,
      58,
      14,
      26
    ],
    "code_indx_copy": [
      89,
      19,
      257,
      22,
      258,
      1,
      56,
      17,
      22,
      259,
      1,
      17
    ],
    "code_indx_nocopy": [
      89,
      19,
      257,
      22,
      258,
      1,
      56,
      17,
      22,
      259,
      1,
      17
    ]
  },
  {
    "intent": [
      "how",
      "to",
      "get",
      "only",
      "the",
      "last",
      "part",
      "of",
      "a",
      "path",
      "in",
      "python",
      "?"
    ],
    "code": [
      "os",
      ".",
      "path",
      ".",
      "basename",
      "(",
      "os",
      ".",
      "path",
      ".",
      "normpath",
      "(",
      "'/folderA/folderB/folderC/folderD/'",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      77,
      8,
      17,
      352,
      18,
      170,
      465,
      2,
      3,
      199,
      24,
      50,
      52
    ],
    "code_indx_copy": [
      113,
      22,
      114,
      22,
      524,
      1,
      113,
      22,
      114,
      22,
      524,
      1,
      524,
      17,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      114,
      22,
      524,
      1,
      113,
      22,
      114,
      22,
      524,
      1,
      524,
      17,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "datetime",
      "objects",
      "var_0",
      "by",
      "var_1",
      "and",
      "var_2"
    ],
    "code": [
      "var_0",
      ".",
      "sort",
      "(",
      "key",
      "=",
      "lambda",
      "d",
      ":",
      "(",
      "d",
      ".",
      "var_1",
      ",",
      "d",
      ".",
      "var_2",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "birthdays",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "month",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "day",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      13,
      178,
      26,
      44,
      63,
      31,
      64
    ],
    "code_indx_copy": [
      34,
      22,
      124,
      1,
      102,
      19,
      44,
      2,
      13,
      1,
      2,
      22,
      91,
      8,
      2,
      22,
      94,
      17,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      124,
      1,
      102,
      19,
      44,
      2,
      13,
      1,
      2,
      22,
      91,
      8,
      2,
      22,
      94,
      17,
      17
    ]
  },
  {
    "intent": [
      "extract",
      "table",
      "data",
      "from",
      "table",
      "var_0",
      "using",
      "beautifulsoup"
    ],
    "code": [
      "[",
      "[",
      "td",
      ".",
      "findNext",
      "(",
      "text",
      "=",
      "True",
      ")",
      "for",
      "td",
      "in",
      "tr",
      ".",
      "findAll",
      "(",
      "'td'",
      ")",
      "]",
      "for",
      "tr",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "rows",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      104,
      388,
      65,
      58,
      388,
      26,
      109,
      70
    ],
    "code_indx_copy": [
      12,
      12,
      524,
      22,
      524,
      1,
      355,
      19,
      109,
      17,
      7,
      524,
      9,
      524,
      22,
      254,
      1,
      524,
      17,
      16,
      7,
      524,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      12,
      12,
      524,
      22,
      524,
      1,
      355,
      19,
      109,
      17,
      7,
      524,
      9,
      524,
      22,
      254,
      1,
      524,
      17,
      16,
      7,
      524,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "strip",
      "the",
      "string",
      "str_0",
      "from",
      "anywhere",
      "in",
      "the",
      "string",
      "str_1"
    ],
    "code": [
      "\"\"\"str_1\"\"\"",
      ".",
      "replace",
      "(",
      "'str_0'",
      ",",
      "''",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": ".txt",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": "Boat.txt.txt",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      331,
      18,
      14,
      5,
      58,
      465,
      24,
      18,
      14,
      32
    ],
    "code_indx_copy": [
      439,
      22,
      107,
      1,
      29,
      8,
      21,
      17
    ],
    "code_indx_nocopy": [
      439,
      22,
      107,
      1,
      29,
      8,
      21,
      17
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "list",
      "of",
      "the",
      "row",
      "names",
      "from",
      "index",
      "of",
      "a",
      "pandas",
      "data",
      "frame"
    ],
    "code": [
      "list",
      "(",
      "df",
      ".",
      "index",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      17,
      3,
      4,
      2,
      18,
      45,
      321,
      58,
      37,
      2,
      3,
      42,
      65,
      66
    ],
    "code_indx_copy": [
      33,
      1,
      149,
      22,
      160,
      17
    ],
    "code_indx_nocopy": [
      33,
      1,
      149,
      22,
      160,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "row",
      "names",
      "from",
      "index",
      "in",
      "a",
      "pandas",
      "data",
      "frame"
    ],
    "code": [
      "df",
      ".",
      "index"
    ],
    "slot_map": {},
    "intent_indx": [
      17,
      18,
      45,
      321,
      58,
      37,
      24,
      3,
      42,
      65,
      66
    ],
    "code_indx_copy": [
      149,
      22,
      160
    ],
    "code_indx_nocopy": [
      149,
      22,
      160
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "list",
      "of",
      "all",
      "unique",
      "characters",
      "in",
      "string",
      "str_0"
    ],
    "code": [
      "\"\"\"\"\"\"",
      ".",
      "join",
      "(",
      "list",
      "(",
      "OrderedDict",
      ".",
      "fromkeys",
      "(",
      "'str_0'",
      ")",
      ".",
      "keys",
      "(",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "aaabcabccd",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      148,
      3,
      4,
      2,
      38,
      204,
      98,
      24,
      14,
      5
    ],
    "code_indx_copy": [
      287,
      22,
      23,
      1,
      33,
      1,
      288,
      22,
      524,
      1,
      29,
      17,
      22,
      167,
      1,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      287,
      22,
      23,
      1,
      33,
      1,
      288,
      22,
      524,
      1,
      29,
      17,
      22,
      167,
      1,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "list",
      "of",
      "all",
      "unique",
      "characters",
      "in",
      "a",
      "string",
      "str_0"
    ],
    "code": [
      "list",
      "(",
      "set",
      "(",
      "'str_0'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "aaabcabccd",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      4,
      2,
      38,
      204,
      98,
      24,
      3,
      14,
      5
    ],
    "code_indx_copy": [
      33,
      1,
      189,
      1,
      29,
      17,
      17
    ],
    "code_indx_nocopy": [
      33,
      1,
      189,
      1,
      29,
      17,
      17
    ]
  },
  {
    "intent": [
      "list",
      "of",
      "all",
      "unique",
      "characters",
      "in",
      "a",
      "string",
      "?"
    ],
    "code": [
      "\"\"\"\"\"\"",
      ".",
      "join",
      "(",
      "set",
      "(",
      "'aaabcabccd'",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      4,
      2,
      38,
      204,
      98,
      24,
      3,
      14,
      52
    ],
    "code_indx_copy": [
      287,
      22,
      23,
      1,
      189,
      1,
      524,
      17,
      17
    ],
    "code_indx_nocopy": [
      287,
      22,
      23,
      1,
      189,
      1,
      524,
      17,
      17
    ]
  },
  {
    "intent": [
      "find",
      "rows",
      "with",
      "non",
      "zero",
      "values",
      "in",
      "a",
      "subset",
      "of",
      "columns",
      "where",
      "str_0",
      "is",
      "not",
      "equal",
      "to",
      "var_0",
      "in",
      "pandas",
      "dataframe"
    ],
    "code": [
      "df",
      ".",
      "loc",
      "[",
      "(",
      "df",
      ".",
      "loc",
      "[",
      ":",
      ",",
      "(",
      "df",
      ".",
      "dtypes",
      "!=",
      "var_0",
      ")",
      "]",
      "!=",
      "0",
      ")",
      ".",
      "any",
      "(",
      "1",
      ")",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "df.dtypes",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "object",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      47,
      80,
      79,
      465,
      261,
      20,
      24,
      3,
      443,
      2,
      61,
      155,
      5,
      152,
      105,
      106,
      8,
      26,
      24,
      42,
      43
    ],
    "code_indx_copy": [
      149,
      22,
      202,
      12,
      1,
      149,
      22,
      202,
      12,
      13,
      8,
      1,
      149,
      22,
      524,
      88,
      34,
      17,
      16,
      88,
      43,
      17,
      22,
      269,
      1,
      15,
      17,
      16
    ],
    "code_indx_nocopy": [
      149,
      22,
      202,
      12,
      1,
      149,
      22,
      202,
      12,
      13,
      8,
      1,
      149,
      22,
      524,
      88,
      34,
      17,
      16,
      88,
      43,
      17,
      22,
      269,
      1,
      15,
      17,
      16
    ]
  },
  {
    "intent": [
      "upload",
      "file",
      "with",
      "python",
      "mechanize"
    ],
    "code": [
      "br",
      ".",
      "form",
      ".",
      "add_file",
      "(",
      "open",
      "(",
      "filename",
      ")",
      ",",
      "'text/plain'",
      ",",
      "filename",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      465,
      126,
      79,
      50,
      465
    ],
    "code_indx_copy": [
      524,
      22,
      524,
      22,
      524,
      1,
      105,
      1,
      402,
      17,
      8,
      524,
      8,
      402,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      524,
      22,
      524,
      1,
      105,
      1,
      402,
      17,
      8,
      524,
      8,
      402,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "dictionary",
      "var_0",
      "contains",
      "all",
      "keys",
      "in",
      "list",
      "str_0"
    ],
    "code": [
      "all",
      "(",
      "word",
      "in",
      "var_0",
      "for",
      "word",
      "in",
      "[",
      "str_0",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "d",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "['somekey', 'someotherkey', 'somekeyggg']",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "['somekey', 'someotherkey', 'somekeyggg']",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      234,
      150,
      25,
      26,
      75,
      38,
      206,
      24,
      4,
      5
    ],
    "code_indx_copy": [
      77,
      1,
      487,
      9,
      34,
      7,
      487,
      9,
      12,
      11,
      16,
      17
    ],
    "code_indx_nocopy": [
      77,
      1,
      487,
      9,
      34,
      7,
      487,
      9,
      12,
      11,
      16,
      17
    ]
  },
  {
    "intent": [
      "hide",
      "output",
      "of",
      "subprocess",
      "str_0"
    ],
    "code": [
      "subprocess",
      ".",
      "check_output",
      "(",
      "[",
      "str_0",
      "]",
      ",",
      "stderr",
      "=",
      "subprocess",
      ".",
      "STDOUT",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "['espeak', text]",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "['espeak', text]",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      257,
      2,
      290,
      5
    ],
    "code_indx_copy": [
      229,
      22,
      449,
      1,
      12,
      11,
      16,
      8,
      488,
      19,
      229,
      22,
      489,
      17
    ],
    "code_indx_nocopy": [
      229,
      22,
      449,
      1,
      12,
      11,
      16,
      8,
      488,
      19,
      229,
      22,
      489,
      17
    ]
  },
  {
    "intent": [
      "replace",
      "nans",
      "by",
      "preceding",
      "values",
      "in",
      "pandas",
      "dataframe",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "fillna",
      "(",
      "method",
      "=",
      "'ffill'",
      ",",
      "inplace",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      130,
      465,
      44,
      465,
      20,
      24,
      42,
      43,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      352,
      1,
      524,
      19,
      524,
      8,
      279,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      352,
      1,
      524,
      19,
      524,
      8,
      279,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "create",
      "4",
      "numbers",
      "in",
      "range",
      "between",
      "1",
      "and",
      "3"
    ],
    "code": [
      "print",
      "(",
      "np",
      ".",
      "linspace",
      "(",
      "1",
      ",",
      "3",
      ",",
      "num",
      "=",
      "4",
      ",",
      "endpoint",
      "=",
      "False",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      148,
      231,
      97,
      24,
      123,
      278,
      237,
      31,
      57
    ],
    "code_indx_copy": [
      49,
      1,
      74,
      22,
      524,
      1,
      15,
      8,
      54,
      8,
      524,
      19,
      184,
      8,
      524,
      19,
      87,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      74,
      22,
      524,
      1,
      15,
      8,
      54,
      8,
      524,
      19,
      184,
      8,
      524,
      19,
      87,
      17,
      17
    ]
  },
  {
    "intent": [
      "create",
      "numpy",
      "array",
      "of",
      "str_0",
      "numbers",
      "starting",
      "from",
      "str_1",
      "with",
      "interval",
      "of",
      "str_2"
    ],
    "code": [
      "print",
      "(",
      "np",
      ".",
      "linspace",
      "(",
      "1",
      ",",
      "3",
      ",",
      "num",
      "=",
      "5",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "5",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": "1",
        "quote": "`",
        "type": "str"
      },
      "str_2": {
        "value": "3",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      148,
      84,
      85,
      2,
      5,
      97,
      316,
      58,
      32,
      79,
      465,
      2,
      194
    ],
    "code_indx_copy": [
      49,
      1,
      74,
      22,
      524,
      1,
      15,
      8,
      54,
      8,
      524,
      19,
      185,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      74,
      22,
      524,
      1,
      15,
      8,
      54,
      8,
      524,
      19,
      185,
      17,
      17
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "symlink",
      "directory",
      "str_0",
      "for",
      "directory",
      "str_1",
      "with",
      "unicode",
      "support",
      "using",
      "ctypes",
      "library"
    ],
    "code": [
      "kdll",
      ".",
      "CreateSymbolicLinkW",
      "(",
      "'str_0'",
      ",",
      "'str_1'",
      ",",
      "1",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "D:\\testdirLink",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": "D:\\testdir",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      148,
      3,
      465,
      175,
      5,
      21,
      175,
      32,
      79,
      230,
      465,
      109,
      465,
      465
    ],
    "code_indx_copy": [
      524,
      22,
      524,
      1,
      29,
      8,
      63,
      8,
      15,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      524,
      1,
      29,
      8,
      63,
      8,
      15,
      17
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "list",
      "var_0",
      "of",
      "array",
      "slices",
      "of",
      "the",
      "first",
      "two",
      "rows",
      "and",
      "columns",
      "from",
      "array",
      "var_1"
    ],
    "code": [
      "var_0",
      "=",
      "[",
      "var_1",
      "[",
      "i",
      "]",
      "[",
      "0",
      ":",
      "2",
      "]",
      "for",
      "i",
      "in",
      "range",
      "(",
      "0",
      ",",
      "2",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "slice",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "arr",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      3,
      4,
      26,
      2,
      85,
      465,
      2,
      18,
      151,
      29,
      80,
      31,
      61,
      58,
      85,
      63
    ],
    "code_indx_copy": [
      34,
      19,
      12,
      91,
      12,
      6,
      16,
      12,
      43,
      13,
      82,
      16,
      7,
      6,
      9,
      104,
      1,
      43,
      8,
      82,
      17,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      12,
      91,
      12,
      6,
      16,
      12,
      43,
      13,
      82,
      16,
      7,
      6,
      9,
      104,
      1,
      43,
      8,
      82,
      17,
      16
    ]
  },
  {
    "intent": [
      "upload",
      "uploaded",
      "file",
      "from",
      "path",
      "str_0",
      "to",
      "google",
      "cloud",
      "storage",
      "str_1",
      "bucket"
    ],
    "code": [
      "upload_url",
      "=",
      "blobstore",
      ".",
      "create_upload_url",
      "(",
      "'str_0'",
      ",",
      "gs_bucket_name",
      "=",
      "'str_1'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "/upload",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "my_bucket",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      465,
      126,
      58,
      199,
      5,
      8,
      465,
      465,
      465,
      32,
      465
    ],
    "code_indx_copy": [
      524,
      19,
      524,
      22,
      524,
      1,
      29,
      8,
      524,
      19,
      63,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      524,
      22,
      524,
      1,
      29,
      8,
      524,
      19,
      63,
      17
    ]
  },
  {
    "intent": [
      "change",
      "directory",
      "to",
      "the",
      "directory",
      "of",
      "a",
      "python",
      "script"
    ],
    "code": [
      "os",
      ".",
      "chdir",
      "(",
      "os",
      ".",
      "path",
      ".",
      "dirname",
      "(",
      "__file__",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      221,
      175,
      8,
      18,
      175,
      2,
      3,
      50,
      246
    ],
    "code_indx_copy": [
      113,
      22,
      445,
      1,
      113,
      22,
      114,
      22,
      378,
      1,
      383,
      17,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      445,
      1,
      113,
      22,
      114,
      22,
      378,
      1,
      383,
      17,
      17
    ]
  },
  {
    "intent": [
      "call",
      "a",
      "function",
      "with",
      "argument",
      "list",
      "var_0"
    ],
    "code": [
      "func",
      "(",
      "*",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "args",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      304,
      3,
      69,
      79,
      465,
      4,
      26
    ],
    "code_indx_copy": [
      524,
      1,
      3,
      34,
      17
    ],
    "code_indx_nocopy": [
      524,
      1,
      3,
      34,
      17
    ]
  },
  {
    "intent": [
      "split",
      "column",
      "str_0",
      "in",
      "dataframe",
      "var_0",
      "into",
      "two",
      "columns",
      "by",
      "first",
      "whitespace",
      "str_1"
    ],
    "code": [
      "var_0",
      "[",
      "'str_0'",
      "]",
      ".",
      "str",
      ".",
      "split",
      "(",
      "' '",
      ",",
      "1",
      ",",
      "expand",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "AB",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "str_1": {
        "value": "",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      138,
      147,
      5,
      24,
      43,
      26,
      12,
      29,
      61,
      44,
      151,
      211,
      32
    ],
    "code_indx_copy": [
      34,
      12,
      29,
      16,
      22,
      25,
      22,
      71,
      1,
      108,
      8,
      15,
      8,
      524,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      34,
      12,
      29,
      16,
      22,
      25,
      22,
      71,
      1,
      108,
      8,
      15,
      8,
      524,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "pandas",
      "dataframe",
      ",",
      "how",
      "do",
      "i",
      "split",
      "a",
      "column",
      "str_0",
      "into",
      "two",
      "str_1",
      "and",
      "str_2",
      "on",
      "delimiter",
      "str_3"
    ],
    "code": [
      "df",
      "[",
      "'str_1'",
      "]",
      ",",
      "df",
      "[",
      "'str_2'",
      "]",
      "=",
      "df",
      "[",
      "'str_0'",
      "]",
      ".",
      "str",
      ".",
      "split",
      "(",
      "' '",
      ",",
      "1",
      ")",
      ".",
      "str"
    ],
    "slot_map": {
      "str_0": {
        "value": "AB",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "A",
        "quote": "'",
        "type": "str"
      },
      "str_2": {
        "value": "B",
        "quote": "'",
        "type": "str"
      },
      "str_3": {
        "value": "",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      42,
      43,
      62,
      77,
      327,
      328,
      138,
      3,
      147,
      5,
      12,
      29,
      32,
      31,
      194,
      139,
      329,
      219
    ],
    "code_indx_copy": [
      149,
      12,
      63,
      16,
      8,
      149,
      12,
      150,
      16,
      19,
      149,
      12,
      29,
      16,
      22,
      25,
      22,
      71,
      1,
      108,
      8,
      15,
      17,
      22,
      25
    ],
    "code_indx_nocopy": [
      149,
      12,
      63,
      16,
      8,
      149,
      12,
      150,
      16,
      19,
      149,
      12,
      29,
      16,
      22,
      25,
      22,
      71,
      1,
      108,
      8,
      15,
      17,
      22,
      25
    ]
  },
  {
    "intent": [
      "sort",
      "list",
      "var_0",
      "based",
      "on",
      "the",
      "length",
      "of",
      "its",
      "elements"
    ],
    "code": [
      "print",
      "(",
      "sorted",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "len",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "xs",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      4,
      26,
      208,
      139,
      18,
      209,
      2,
      91,
      1
    ],
    "code_indx_copy": [
      49,
      1,
      101,
      1,
      34,
      8,
      102,
      19,
      32,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      101,
      1,
      34,
      8,
      102,
      19,
      32,
      17,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "list",
      "var_0",
      "in",
      "ascending",
      "order",
      "of",
      "length",
      "of",
      "elements"
    ],
    "code": [
      "var_0",
      ".",
      "sort",
      "(",
      "lambda",
      "x",
      ",",
      "y",
      ":",
      "cmp",
      "(",
      "len",
      "(",
      "x",
      ")",
      ",",
      "len",
      "(",
      "y",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "xs",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      4,
      26,
      24,
      119,
      162,
      2,
      209,
      2,
      1
    ],
    "code_indx_copy": [
      34,
      22,
      124,
      1,
      44,
      26,
      8,
      103,
      13,
      524,
      1,
      32,
      1,
      26,
      17,
      8,
      32,
      1,
      103,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      124,
      1,
      44,
      26,
      8,
      103,
      13,
      524,
      1,
      32,
      1,
      26,
      17,
      8,
      32,
      1,
      103,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "list",
      "of",
      "strings",
      "var_0",
      "by",
      "the",
      "length",
      "of",
      "string"
    ],
    "code": [
      "var_0",
      ".",
      "sort",
      "(",
      "key",
      "=",
      "lambda",
      "s",
      ":",
      "len",
      "(",
      "s",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "xs",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      4,
      2,
      259,
      26,
      44,
      18,
      209,
      2,
      14
    ],
    "code_indx_copy": [
      34,
      22,
      124,
      1,
      102,
      19,
      44,
      181,
      13,
      32,
      1,
      181,
      17,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      124,
      1,
      102,
      19,
      44,
      181,
      13,
      32,
      1,
      181,
      17,
      17
    ]
  },
  {
    "intent": [
      "plot",
      "point",
      "marker",
      "str_0",
      "on",
      "series",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "plot",
      "(",
      "marker",
      "=",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": ".",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "ts",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      244,
      271,
      465,
      5,
      139,
      339,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      290,
      1,
      291,
      19,
      29,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      290,
      1,
      291,
      19,
      29,
      17
    ]
  },
  {
    "intent": [
      "get",
      "all",
      "combination",
      "of",
      "n",
      "binary",
      "values"
    ],
    "code": [
      "lst",
      "=",
      "list",
      "(",
      "itertools",
      ".",
      "product",
      "(",
      "[",
      "0",
      ",",
      "1",
      "]",
      ",",
      "repeat",
      "=",
      "n",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      17,
      38,
      382,
      2,
      465,
      276,
      20
    ],
    "code_indx_copy": [
      350,
      19,
      33,
      1,
      50,
      22,
      328,
      1,
      12,
      43,
      8,
      15,
      16,
      8,
      490,
      19,
      307,
      17,
      17
    ],
    "code_indx_nocopy": [
      350,
      19,
      33,
      1,
      50,
      22,
      328,
      1,
      12,
      43,
      8,
      15,
      16,
      8,
      490,
      19,
      307,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "all",
      "combination",
      "of",
      "n",
      "binary",
      "values"
    ],
    "code": [
      "lst",
      "=",
      "map",
      "(",
      "list",
      ",",
      "itertools",
      ".",
      "product",
      "(",
      "[",
      "0",
      ",",
      "1",
      "]",
      ",",
      "repeat",
      "=",
      "n",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      17,
      38,
      382,
      2,
      465,
      276,
      20
    ],
    "code_indx_copy": [
      350,
      19,
      24,
      1,
      33,
      8,
      50,
      22,
      328,
      1,
      12,
      43,
      8,
      15,
      16,
      8,
      490,
      19,
      307,
      17,
      17
    ],
    "code_indx_nocopy": [
      350,
      19,
      24,
      1,
      33,
      8,
      50,
      22,
      328,
      1,
      12,
      43,
      8,
      15,
      16,
      8,
      490,
      19,
      307,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "all",
      "combination",
      "of",
      "3",
      "binary",
      "values"
    ],
    "code": [
      "bin",
      "=",
      "[",
      "0",
      ",",
      "1",
      "]",
      "\n",
      "[",
      "(",
      "x",
      ",",
      "y",
      ",",
      "z",
      ")",
      "for",
      "x",
      "in",
      "bin",
      "for",
      "y",
      "in",
      "bin",
      "for",
      "z",
      "in",
      "bin",
      "]"
    ],
    "slot_map": {},
    "intent_indx": [
      17,
      38,
      382,
      2,
      57,
      276,
      20
    ],
    "code_indx_copy": [
      418,
      19,
      12,
      43,
      8,
      15,
      16,
      161,
      12,
      1,
      26,
      8,
      103,
      8,
      524,
      17,
      7,
      26,
      9,
      418,
      7,
      103,
      9,
      418,
      7,
      524,
      9,
      418,
      16
    ],
    "code_indx_nocopy": [
      418,
      19,
      12,
      43,
      8,
      15,
      16,
      161,
      12,
      1,
      26,
      8,
      103,
      8,
      524,
      17,
      7,
      26,
      9,
      418,
      7,
      103,
      9,
      418,
      7,
      524,
      9,
      418,
      16
    ]
  },
  {
    "intent": [
      "get",
      "all",
      "combination",
      "of",
      "3",
      "binary",
      "values"
    ],
    "code": [
      "lst",
      "=",
      "list",
      "(",
      "itertools",
      ".",
      "product",
      "(",
      "[",
      "0",
      ",",
      "1",
      "]",
      ",",
      "repeat",
      "=",
      "3",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      17,
      38,
      382,
      2,
      57,
      276,
      20
    ],
    "code_indx_copy": [
      350,
      19,
      33,
      1,
      50,
      22,
      328,
      1,
      12,
      43,
      8,
      15,
      16,
      8,
      490,
      19,
      54,
      17,
      17
    ],
    "code_indx_nocopy": [
      350,
      19,
      33,
      1,
      50,
      22,
      328,
      1,
      12,
      43,
      8,
      15,
      16,
      8,
      490,
      19,
      54,
      17,
      17
    ]
  },
  {
    "intent": [
      "append",
      "string",
      "str_0",
      "at",
      "the",
      "beginning",
      "of",
      "each",
      "value",
      "in",
      "column",
      "str_1",
      "of",
      "dataframe",
      "var_0"
    ],
    "code": [
      "var_0",
      "[",
      "'str_1'",
      "]",
      "=",
      "'str_0'",
      "+",
      "var_0",
      "[",
      "'str_1'",
      "]",
      ".",
      "astype",
      "(",
      "str_0",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "str",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "col",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      111,
      14,
      5,
      35,
      18,
      171,
      2,
      22,
      143,
      24,
      147,
      32,
      2,
      43,
      26
    ],
    "code_indx_copy": [
      34,
      12,
      63,
      16,
      19,
      29,
      96,
      34,
      12,
      63,
      16,
      22,
      242,
      1,
      11,
      17
    ],
    "code_indx_nocopy": [
      34,
      12,
      63,
      16,
      19,
      29,
      96,
      34,
      12,
      63,
      16,
      22,
      242,
      1,
      11,
      17
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "dict",
      "of",
      "variable",
      "names",
      "str_0",
      "as",
      "a",
      "string",
      "and",
      "their",
      "values"
    ],
    "code": [
      "dict",
      "(",
      "(",
      "name",
      ",",
      "eval",
      "(",
      "name",
      ")",
      ")",
      "for",
      "name",
      "in",
      "[",
      "str_0",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "['some', 'list', 'of', 'vars']",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "['some', 'list', 'of', 'vars']",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      3,
      186,
      2,
      95,
      321,
      5,
      90,
      3,
      14,
      31,
      294,
      20
    ],
    "code_indx_copy": [
      70,
      1,
      1,
      316,
      8,
      321,
      1,
      316,
      17,
      17,
      7,
      316,
      9,
      12,
      11,
      16,
      17
    ],
    "code_indx_nocopy": [
      70,
      1,
      1,
      316,
      8,
      321,
      1,
      316,
      17,
      17,
      7,
      316,
      9,
      12,
      11,
      16,
      17
    ]
  },
  {
    "intent": [
      "add",
      "a",
      "colorbar",
      "to",
      "plot",
      "var_0",
      "using",
      "image",
      "var_1",
      "on",
      "axes",
      "var_2"
    ],
    "code": [
      "var_0",
      ".",
      "colorbar",
      "(",
      "var_1",
      ",",
      "var_2",
      "=",
      "var_2",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "plt",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "im",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "ax",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      60,
      3,
      465,
      8,
      244,
      26,
      109,
      299,
      63,
      139,
      161,
      64
    ],
    "code_indx_copy": [
      34,
      22,
      530,
      1,
      91,
      8,
      94,
      19,
      94,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      524,
      1,
      91,
      8,
      94,
      19,
      94,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "nested",
      "list",
      "str_0",
      "into",
      "a",
      "flat",
      "list"
    ],
    "code": [
      "[",
      "a",
      "for",
      "c",
      "in",
      "str_0",
      "for",
      "b",
      "in",
      "c",
      "for",
      "a",
      "in",
      "b",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "Cards",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      154,
      4,
      5,
      12,
      3,
      380,
      4
    ],
    "code_indx_copy": [
      12,
      95,
      7,
      66,
      9,
      11,
      7,
      97,
      9,
      66,
      7,
      95,
      9,
      97,
      16
    ],
    "code_indx_nocopy": [
      12,
      95,
      7,
      66,
      9,
      11,
      7,
      97,
      9,
      66,
      7,
      95,
      9,
      97,
      16
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "list",
      "containing",
      "keys",
      "of",
      "dictionary",
      "var_0",
      "and",
      "sort",
      "it",
      "alphabetically"
    ],
    "code": [
      "sorted",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "var_0",
      ".",
      "get",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "d",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      148,
      3,
      4,
      34,
      206,
      2,
      25,
      26,
      31,
      117,
      145,
      465
    ],
    "code_indx_copy": [
      101,
      1,
      34,
      8,
      102,
      19,
      34,
      22,
      86,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      34,
      8,
      102,
      19,
      34,
      22,
      86,
      17
    ]
  },
  {
    "intent": [
      "print",
      "the",
      "number",
      "of",
      "occurences",
      "of",
      "not",
      "var_0",
      "in",
      "a",
      "list",
      "var_1",
      "in",
      "python",
      "2"
    ],
    "code": [
      "print",
      "(",
      "len",
      "(",
      "[",
      "x",
      "for",
      "x",
      "in",
      "var_1",
      "if",
      "x",
      "is",
      "not",
      "None",
      "]",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "none",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "lst",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      166,
      18,
      76,
      2,
      465,
      2,
      105,
      26,
      24,
      3,
      4,
      63,
      24,
      50,
      82
    ],
    "code_indx_copy": [
      49,
      1,
      32,
      1,
      12,
      26,
      7,
      26,
      9,
      91,
      67,
      26,
      335,
      281,
      209,
      16,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      32,
      1,
      12,
      26,
      7,
      26,
      9,
      91,
      67,
      26,
      335,
      281,
      209,
      16,
      17,
      17
    ]
  },
  {
    "intent": [
      "lookup",
      "dictionary",
      "key",
      "var_0",
      "in",
      "django",
      "template",
      "var_1"
    ],
    "code": [
      "{",
      "{",
      "var_1",
      ".",
      "var_0",
      "}",
      "}"
    ],
    "slot_map": {
      "var_0": {
        "value": "key1",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "json",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      25,
      23,
      26,
      24,
      87,
      465,
      63
    ],
    "code_indx_copy": [
      52,
      52,
      91,
      22,
      34,
      53,
      53
    ],
    "code_indx_nocopy": [
      52,
      52,
      91,
      22,
      34,
      53,
      53
    ]
  },
  {
    "intent": [
      "remove",
      "duplicates",
      "from",
      "list",
      "var_0"
    ],
    "code": [
      "mynewlist",
      "=",
      "list",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "myset",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      336,
      58,
      4,
      26
    ],
    "code_indx_copy": [
      524,
      19,
      33,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      33,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "get",
      "unique",
      "values",
      "from",
      "the",
      "list",
      "str_0"
    ],
    "code": [
      "set",
      "(",
      "[",
      "str_0",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "['a', 'b', 'c', 'd']",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "['a', 'b', 'c', 'd']",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      204,
      20,
      58,
      18,
      4,
      5
    ],
    "code_indx_copy": [
      189,
      1,
      12,
      11,
      16,
      17
    ],
    "code_indx_nocopy": [
      189,
      1,
      12,
      11,
      16,
      17
    ]
  },
  {
    "intent": [
      "set",
      "size",
      "of",
      "var_0",
      "to",
      "landscape",
      "a4",
      "i.e",
      ".",
      "str_0",
      "inches"
    ],
    "code": [
      "var_0",
      "(",
      "figsize",
      "=",
      "(",
      "11.69",
      ",",
      "8.27",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "figure",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "11.69, 8.27",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      59,
      334,
      2,
      26,
      8,
      465,
      465,
      465,
      159,
      5,
      465
    ],
    "code_indx_copy": [
      34,
      1,
      524,
      19,
      1,
      524,
      8,
      524,
      17,
      17
    ],
    "code_indx_nocopy": [
      34,
      1,
      524,
      19,
      1,
      524,
      8,
      524,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "every",
      "thing",
      "after",
      "last",
      "str_0"
    ],
    "code": [
      "url",
      ".",
      "rsplit",
      "(",
      "'str_0'",
      ",",
      "1",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "/",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      279,
      465,
      201,
      170,
      5
    ],
    "code_indx_copy": [
      235,
      22,
      268,
      1,
      29,
      8,
      15,
      17
    ],
    "code_indx_nocopy": [
      235,
      22,
      268,
      1,
      29,
      8,
      15,
      17
    ]
  },
  {
    "intent": [
      "get",
      "everything",
      "after",
      "last",
      "slash",
      "in",
      "a",
      "url",
      "stored",
      "in",
      "variable",
      "str_0"
    ],
    "code": [
      "str_0",
      ".",
      "rsplit",
      "(",
      "'/'",
      ",",
      "1",
      ")",
      "[",
      "-",
      "1",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "url",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      465,
      201,
      170,
      465,
      24,
      3,
      102,
      465,
      24,
      95,
      5
    ],
    "code_indx_copy": [
      11,
      22,
      268,
      1,
      524,
      8,
      15,
      17,
      12,
      14,
      15,
      16
    ],
    "code_indx_nocopy": [
      11,
      22,
      268,
      1,
      524,
      8,
      15,
      17,
      12,
      14,
      15,
      16
    ]
  },
  {
    "intent": [
      "open",
      "file",
      "str_0",
      "in",
      "directory",
      "var_0"
    ],
    "code": [
      "x_file",
      "=",
      "open",
      "(",
      "os",
      ".",
      "path",
      ".",
      "join",
      "(",
      "var_0",
      ",",
      "'str_0'",
      ")",
      ",",
      "'r'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "5_1.txt",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "direct",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      284,
      126,
      5,
      24,
      175,
      26
    ],
    "code_indx_copy": [
      524,
      19,
      105,
      1,
      113,
      22,
      114,
      22,
      23,
      1,
      34,
      8,
      29,
      17,
      8,
      365,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      105,
      1,
      113,
      22,
      114,
      22,
      23,
      1,
      34,
      8,
      29,
      17,
      8,
      365,
      17
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "list",
      "with",
      "the",
      "characters",
      "of",
      "a",
      "string",
      "str_0"
    ],
    "code": [
      "list",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "5+6",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      148,
      3,
      4,
      79,
      18,
      98,
      2,
      3,
      14,
      5
    ],
    "code_indx_copy": [
      33,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      33,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "concatenate",
      "a",
      "list",
      "of",
      "numpy",
      "arrays",
      "var_0",
      "together",
      "into",
      "a",
      "flattened",
      "list",
      "of",
      "values"
    ],
    "code": [
      "np",
      ".",
      "concatenate",
      "(",
      "var_0",
      ")",
      ".",
      "ravel",
      "(",
      ")",
      ".",
      "tolist",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "input_list",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      0,
      3,
      4,
      2,
      84,
      165,
      26,
      465,
      12,
      3,
      465,
      4,
      2,
      20
    ],
    "code_indx_copy": [
      74,
      22,
      491,
      1,
      34,
      17,
      22,
      524,
      1,
      17,
      22,
      306,
      1,
      17
    ],
    "code_indx_nocopy": [
      74,
      22,
      491,
      1,
      34,
      17,
      22,
      524,
      1,
      17,
      22,
      306,
      1,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "dictionary",
      "var_0",
      "into",
      "a",
      "flat",
      "list"
    ],
    "code": [
      "print",
      "(",
      "[",
      "y",
      "for",
      "x",
      "in",
      "list",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      "for",
      "y",
      "in",
      "x",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "dict",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      25,
      26,
      12,
      3,
      380,
      4
    ],
    "code_indx_copy": [
      49,
      1,
      12,
      103,
      7,
      26,
      9,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      7,
      103,
      9,
      26,
      16,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      12,
      103,
      7,
      26,
      9,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      7,
      103,
      9,
      26,
      16,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "dictionary",
      "var_0",
      "into",
      "a",
      "list",
      "with",
      "key",
      "and",
      "values",
      "as",
      "list",
      "items",
      "."
    ],
    "code": [
      "[",
      "y",
      "for",
      "x",
      "in",
      "list",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      "for",
      "y",
      "in",
      "x",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "dict",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      3,
      25,
      26,
      12,
      3,
      4,
      79,
      23,
      31,
      20,
      90,
      4,
      39,
      159
    ],
    "code_indx_copy": [
      12,
      103,
      7,
      26,
      9,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      7,
      103,
      9,
      26,
      16
    ],
    "code_indx_nocopy": [
      12,
      103,
      7,
      26,
      9,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      7,
      103,
      9,
      26,
      16
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "random",
      "record",
      "from",
      "model",
      "str_0",
      "using",
      "django",
      "'s",
      "orm"
    ],
    "code": [
      "str_0",
      ".",
      "objects",
      ".",
      "order_by",
      "(",
      "'?'",
      ")",
      ".",
      "first",
      "(",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "MyModel",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      3,
      190,
      465,
      58,
      313,
      5,
      109,
      87,
      266,
      465
    ],
    "code_indx_copy": [
      11,
      22,
      78,
      22,
      136,
      1,
      241,
      17,
      22,
      524,
      1,
      17
    ],
    "code_indx_nocopy": [
      11,
      22,
      78,
      22,
      136,
      1,
      241,
      17,
      22,
      524,
      1,
      17
    ]
  },
  {
    "intent": [
      "change",
      "current",
      "working",
      "directory",
      "to",
      "directory",
      "str_0"
    ],
    "code": [
      "os",
      ".",
      "chdir",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "chapter3",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      221,
      179,
      437,
      175,
      8,
      175,
      5
    ],
    "code_indx_copy": [
      113,
      22,
      445,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      445,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "change",
      "current",
      "working",
      "directory"
    ],
    "code": [
      "os",
      ".",
      "chdir",
      "(",
      "'C:\\\\Users\\\\username\\\\Desktop\\\\headfirstpython\\\\chapter3'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      221,
      179,
      437,
      175
    ],
    "code_indx_copy": [
      113,
      22,
      445,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      445,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "change",
      "current",
      "working",
      "directory"
    ],
    "code": [
      "os",
      ".",
      "chdir",
      "(",
      "'.\\\\chapter3'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      221,
      179,
      437,
      175
    ],
    "code_indx_copy": [
      113,
      22,
      445,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      445,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "flat",
      "dictionary",
      "by",
      "summing",
      "values",
      "associated",
      "with",
      "similar",
      "keys",
      "in",
      "each",
      "dictionary",
      "of",
      "list",
      "var_0"
    ],
    "code": [
      "dict",
      "(",
      "(",
      "key",
      ",",
      "sum",
      "(",
      "d",
      "[",
      "key",
      "]",
      "for",
      "d",
      "in",
      "dictList",
      ")",
      ")",
      "for",
      "key",
      "in",
      "dictList",
      "[",
      "0",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "dictlist",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      148,
      3,
      380,
      25,
      44,
      177,
      20,
      286,
      79,
      465,
      206,
      24,
      22,
      25,
      2,
      4,
      26
    ],
    "code_indx_copy": [
      70,
      1,
      1,
      102,
      8,
      0,
      1,
      2,
      12,
      102,
      16,
      7,
      2,
      9,
      524,
      17,
      17,
      7,
      102,
      9,
      524,
      12,
      43,
      16,
      17
    ],
    "code_indx_nocopy": [
      70,
      1,
      1,
      102,
      8,
      0,
      1,
      2,
      12,
      102,
      16,
      7,
      2,
      9,
      524,
      17,
      17,
      7,
      102,
      9,
      524,
      12,
      43,
      16,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "pandas",
      "data",
      "frame",
      "var_0",
      "using",
      "values",
      "from",
      "columns",
      "var_1",
      "and",
      "var_2",
      "in",
      "ascending",
      "order"
    ],
    "code": [
      "var_0",
      ".",
      "sort",
      "(",
      "[",
      "'var_1'",
      ",",
      "'var_2'",
      "]",
      ",",
      "ascending",
      "=",
      "[",
      "True",
      ",",
      "True",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "c1",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "c2",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      42,
      65,
      66,
      26,
      109,
      20,
      58,
      61,
      63,
      31,
      64,
      24,
      119,
      162
    ],
    "code_indx_copy": [
      34,
      22,
      124,
      1,
      12,
      57,
      8,
      58,
      16,
      8,
      278,
      19,
      12,
      109,
      8,
      109,
      16,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      124,
      1,
      12,
      57,
      8,
      58,
      16,
      8,
      278,
      19,
      12,
      109,
      8,
      109,
      16,
      17
    ]
  },
  {
    "intent": [
      "converting",
      "string",
      "lists",
      "var_0",
      "to",
      "float",
      "list"
    ],
    "code": [
      "floats",
      "=",
      "[",
      "float",
      "(",
      "x",
      ")",
      "for",
      "x",
      "in",
      "var_0",
      ".",
      "split",
      "(",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      115,
      14,
      30,
      26,
      8,
      94,
      4
    ],
    "code_indx_copy": [
      524,
      19,
      12,
      225,
      1,
      26,
      17,
      7,
      26,
      9,
      34,
      22,
      71,
      1,
      17,
      16
    ],
    "code_indx_nocopy": [
      524,
      19,
      12,
      225,
      1,
      26,
      17,
      7,
      26,
      9,
      34,
      22,
      71,
      1,
      17,
      16
    ]
  },
  {
    "intent": [
      "converting",
      "string",
      "lists",
      "var_0",
      "to",
      "float",
      "list"
    ],
    "code": [
      "floats",
      "=",
      "map",
      "(",
      "float",
      ",",
      "var_0",
      ".",
      "split",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      115,
      14,
      30,
      26,
      8,
      94,
      4
    ],
    "code_indx_copy": [
      524,
      19,
      24,
      1,
      225,
      8,
      34,
      22,
      71,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      24,
      1,
      225,
      8,
      34,
      22,
      71,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "set",
      "labels",
      "str_0",
      "on",
      "axis",
      "x",
      "in",
      "plot",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "xticks",
      "(",
      "[",
      "str_0",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "[1, 2, 3, 4, 5]",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "plt",
        "quote": "`",
        "type": "var"
      },
      "[str_0]": {
        "value": "[1, 2, 3, 4, 5]",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      59,
      322,
      5,
      139,
      450,
      465,
      24,
      244,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      524,
      1,
      12,
      11,
      16,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      524,
      1,
      12,
      11,
      16,
      17
    ]
  },
  {
    "intent": [
      "read",
      "line",
      "by",
      "line",
      "from",
      "stdin"
    ],
    "code": [
      "for",
      "line",
      "in",
      "fileinput",
      ".",
      "input",
      "(",
      ")",
      ":",
      "\n",
      "    ",
      "pass",
      ""
    ],
    "slot_map": {},
    "intent_indx": [
      124,
      172,
      44,
      172,
      58,
      446
    ],
    "code_indx_copy": [
      7,
      315,
      9,
      524,
      22,
      251,
      1,
      17,
      13,
      161,
      216,
      217,
      218
    ],
    "code_indx_nocopy": [
      7,
      315,
      9,
      524,
      22,
      251,
      1,
      17,
      13,
      161,
      216,
      217,
      218
    ]
  },
  {
    "intent": [
      "read",
      "line",
      "by",
      "line",
      "from",
      "stdin"
    ],
    "code": [
      "for",
      "line",
      "in",
      "sys",
      ".",
      "stdin",
      ":",
      "\n",
      "    ",
      "pass",
      ""
    ],
    "slot_map": {},
    "intent_indx": [
      124,
      172,
      44,
      172,
      58,
      446
    ],
    "code_indx_copy": [
      7,
      315,
      9,
      153,
      22,
      473,
      13,
      161,
      216,
      217,
      218
    ],
    "code_indx_nocopy": [
      7,
      315,
      9,
      153,
      22,
      473,
      13,
      161,
      216,
      217,
      218
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "string",
      "var_0",
      "exists",
      "in",
      "the",
      "values",
      "of",
      "dictionary",
      "var_1"
    ],
    "code": [
      "'var_0'",
      "in",
      "list",
      "(",
      "var_1",
      ".",
      "values",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "one",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "d",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      234,
      150,
      14,
      26,
      274,
      24,
      18,
      20,
      2,
      25,
      63
    ],
    "code_indx_copy": [
      56,
      9,
      33,
      1,
      91,
      22,
      166,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      56,
      9,
      33,
      1,
      91,
      22,
      166,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "value",
      "str_0",
      "is",
      "among",
      "the",
      "values",
      "of",
      "dictionary",
      "var_0"
    ],
    "code": [
      "'str_0'",
      "in",
      "iter",
      "(",
      "var_0",
      ".",
      "values",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "one",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "d",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      234,
      150,
      143,
      5,
      152,
      465,
      18,
      20,
      2,
      25,
      26
    ],
    "code_indx_copy": [
      29,
      9,
      165,
      1,
      34,
      22,
      166,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      29,
      9,
      165,
      1,
      34,
      22,
      166,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "call",
      "parent",
      "class",
      "var_0",
      "of",
      "child",
      "class",
      "constructor"
    ],
    "code": [
      "super",
      "(",
      "var_0",
      ",",
      "self",
      ")",
      ".",
      "__init__",
      "(",
      "name",
      ",",
      "year",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "Instructor",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      304,
      465,
      311,
      26,
      2,
      465,
      311,
      465
    ],
    "code_indx_copy": [
      492,
      1,
      34,
      8,
      310,
      17,
      22,
      493,
      1,
      316,
      8,
      494,
      17
    ],
    "code_indx_nocopy": [
      492,
      1,
      34,
      8,
      310,
      17,
      22,
      493,
      1,
      316,
      8,
      494,
      17
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "dictionary",
      "using",
      "two",
      "listsvar_0",
      "and",
      "var_1"
    ],
    "code": [
      "dict",
      "(",
      "zip",
      "(",
      "var_0",
      ",",
      "var_1",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "x",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "y",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      148,
      3,
      25,
      109,
      29,
      465,
      31,
      63
    ],
    "code_indx_copy": [
      70,
      1,
      36,
      1,
      34,
      8,
      91,
      17,
      17
    ],
    "code_indx_nocopy": [
      70,
      1,
      36,
      1,
      34,
      8,
      91,
      17,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "list",
      "of",
      "dictionaries",
      "var_0",
      "by",
      "dictionary",
      "values",
      "in",
      "descending",
      "order"
    ],
    "code": [
      "sorted",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "lambda",
      "i",
      ":",
      "list",
      "(",
      "i",
      ".",
      "values",
      "(",
      ")",
      ")",
      "[",
      "0",
      "]",
      ",",
      "reverse",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      3,
      4,
      2,
      188,
      26,
      44,
      25,
      20,
      24,
      121,
      162
    ],
    "code_indx_copy": [
      101,
      1,
      34,
      8,
      102,
      19,
      44,
      6,
      13,
      33,
      1,
      6,
      22,
      166,
      1,
      17,
      17,
      12,
      43,
      16,
      8,
      129,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      34,
      8,
      102,
      19,
      44,
      6,
      13,
      33,
      1,
      6,
      22,
      166,
      1,
      17,
      17,
      12,
      43,
      16,
      8,
      129,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "sorting",
      "a",
      "list",
      "of",
      "dictionary",
      "var_0",
      "by",
      "values",
      "in",
      "descending",
      "order"
    ],
    "code": [
      "sorted",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "dict",
      ".",
      "values",
      ",",
      "reverse",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      283,
      3,
      4,
      2,
      25,
      26,
      44,
      20,
      24,
      121,
      162
    ],
    "code_indx_copy": [
      101,
      1,
      34,
      8,
      102,
      19,
      70,
      22,
      166,
      8,
      129,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      34,
      8,
      102,
      19,
      70,
      22,
      166,
      8,
      129,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "use",
      "multiple",
      "groupby",
      "and",
      "agg",
      "operations",
      "var_0",
      ",",
      "var_1",
      ",",
      "var_2",
      "for",
      "pandas",
      "data",
      "frame",
      "var_3"
    ],
    "code": [
      "var_3",
      ".",
      "groupby",
      "(",
      "level",
      "=",
      "0",
      ")",
      ".",
      "agg",
      "(",
      "[",
      "'var_0'",
      ",",
      "'var_1'",
      ",",
      "'var_2'",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "sum",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "count",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "std",
        "quote": "`",
        "type": "var"
      },
      "var_3": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      309,
      6,
      404,
      31,
      465,
      465,
      26,
      62,
      63,
      62,
      64,
      21,
      42,
      65,
      66,
      67
    ],
    "code_indx_copy": [
      55,
      22,
      157,
      1,
      158,
      19,
      43,
      17,
      22,
      159,
      1,
      12,
      56,
      8,
      57,
      8,
      58,
      16,
      17
    ],
    "code_indx_nocopy": [
      55,
      22,
      157,
      1,
      158,
      19,
      43,
      17,
      22,
      159,
      1,
      12,
      56,
      8,
      57,
      8,
      58,
      16,
      17
    ]
  },
  {
    "intent": [
      "for",
      "a",
      "dictionary",
      "var_0",
      ",",
      "set",
      "default",
      "value",
      "for",
      "key",
      "var_1",
      "as",
      "list",
      "and",
      "append",
      "value",
      "var_2",
      "in",
      "that",
      "key"
    ],
    "code": [
      "var_0",
      ".",
      "setdefault",
      "(",
      "'var_1'",
      ",",
      "[",
      "]",
      ")",
      ".",
      "append",
      "(",
      "'var_2'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "somekey",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "bob",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      21,
      3,
      25,
      26,
      62,
      59,
      233,
      143,
      21,
      23,
      63,
      90,
      4,
      31,
      111,
      143,
      64,
      24,
      195,
      23
    ],
    "code_indx_copy": [
      34,
      22,
      145,
      1,
      57,
      8,
      12,
      16,
      17,
      22,
      146,
      1,
      58,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      145,
      1,
      57,
      8,
      12,
      16,
      17,
      22,
      146,
      1,
      58,
      17
    ]
  },
  {
    "intent": [
      "sum",
      "values",
      "in",
      "list",
      "of",
      "dictionaries",
      "var_0",
      "with",
      "key",
      "str_0"
    ],
    "code": [
      "sum",
      "(",
      "item",
      "[",
      "'str_0'",
      "]",
      "for",
      "item",
      "in",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "example_list",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "gold",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      112,
      20,
      24,
      4,
      2,
      188,
      26,
      79,
      23,
      5
    ],
    "code_indx_copy": [
      0,
      1,
      387,
      12,
      29,
      16,
      7,
      387,
      9,
      34,
      17
    ],
    "code_indx_nocopy": [
      0,
      1,
      387,
      12,
      29,
      16,
      7,
      387,
      9,
      34,
      17
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "sum",
      "of",
      "all",
      "values",
      "from",
      "key",
      "var_0",
      "in",
      "a",
      "list",
      "of",
      "dictionary",
      "var_1"
    ],
    "code": [
      "sum",
      "(",
      "[",
      "item",
      "[",
      "'var_0'",
      "]",
      "for",
      "item",
      "in",
      "var_1",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "gold",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "example_list",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      3,
      112,
      2,
      38,
      20,
      58,
      23,
      26,
      24,
      3,
      4,
      2,
      25,
      63
    ],
    "code_indx_copy": [
      0,
      1,
      12,
      387,
      12,
      56,
      16,
      7,
      387,
      9,
      91,
      16,
      17
    ],
    "code_indx_nocopy": [
      0,
      1,
      12,
      387,
      12,
      56,
      16,
      7,
      387,
      9,
      91,
      16,
      17
    ]
  },
  {
    "intent": [
      "get",
      "all",
      "the",
      "values",
      "in",
      "key",
      "var_0",
      "summed",
      "from",
      "a",
      "list",
      "of",
      "dictionary",
      "var_1"
    ],
    "code": [
      "sum",
      "(",
      "item",
      "[",
      "'var_0'",
      "]",
      "for",
      "item",
      "in",
      "var_1",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "gold",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "myLIst",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      38,
      18,
      20,
      24,
      23,
      26,
      465,
      58,
      3,
      4,
      2,
      25,
      63
    ],
    "code_indx_copy": [
      0,
      1,
      387,
      12,
      56,
      16,
      7,
      387,
      9,
      91,
      17
    ],
    "code_indx_nocopy": [
      0,
      1,
      387,
      12,
      56,
      16,
      7,
      387,
      9,
      91,
      17
    ]
  },
  {
    "intent": [
      "writing",
      "string",
      "str_0",
      "to",
      "file",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "write",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "text to write\n",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "f",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      451,
      14,
      5,
      8,
      126,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      131,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      131,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "write",
      "a",
      "string",
      "str_0",
      "to",
      "a",
      "file",
      "var_0",
      "including",
      "new",
      "line",
      "character"
    ],
    "code": [
      "var_0",
      ".",
      "write",
      "(",
      "'My String\\n'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "My String",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "file",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      168,
      3,
      14,
      5,
      8,
      3,
      126,
      26,
      213,
      192,
      172,
      202
    ],
    "code_indx_copy": [
      34,
      22,
      131,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      131,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "find",
      "consecutive",
      "segments",
      "from",
      "a",
      "column",
      "str_0",
      "in",
      "a",
      "pandas",
      "data",
      "frame",
      "str_1"
    ],
    "code": [
      "str_1",
      ".",
      "reset_index",
      "(",
      ")",
      ".",
      "groupby",
      "(",
      "'str_0'",
      ")",
      "[",
      "'index'",
      "]",
      ".",
      "apply",
      "(",
      "np",
      ".",
      "array",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "A",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "df",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      47,
      434,
      465,
      58,
      3,
      147,
      5,
      24,
      3,
      42,
      65,
      66,
      32
    ],
    "code_indx_copy": [
      37,
      22,
      186,
      1,
      17,
      22,
      157,
      1,
      29,
      17,
      12,
      495,
      16,
      22,
      59,
      1,
      74,
      22,
      175,
      17
    ],
    "code_indx_nocopy": [
      37,
      22,
      186,
      1,
      17,
      22,
      157,
      1,
      29,
      17,
      12,
      495,
      16,
      22,
      59,
      1,
      74,
      22,
      175,
      17
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "relative",
      "path",
      "of",
      "file",
      "str_0",
      "into",
      "variable",
      "var_0"
    ],
    "code": [
      "var_0",
      "=",
      "os",
      ".",
      "path",
      ".",
      "join",
      "(",
      "os",
      ".",
      "path",
      ".",
      "dirname",
      "(",
      "__file__",
      ")",
      ",",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "my_file",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "fn",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      3,
      465,
      199,
      2,
      126,
      5,
      12,
      95,
      26
    ],
    "code_indx_copy": [
      34,
      19,
      113,
      22,
      114,
      22,
      23,
      1,
      113,
      22,
      114,
      22,
      378,
      1,
      383,
      17,
      8,
      29,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      113,
      22,
      114,
      22,
      23,
      1,
      113,
      22,
      114,
      22,
      378,
      1,
      383,
      17,
      8,
      29,
      17
    ]
  },
  {
    "intent": [
      "retrieve",
      "an",
      "element",
      "from",
      "a",
      "set",
      "var_0",
      "without",
      "removing",
      "it"
    ],
    "code": [
      "e",
      "=",
      "next",
      "(",
      "iter",
      "(",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      371,
      225,
      49,
      58,
      3,
      59,
      26,
      103,
      99,
      145
    ],
    "code_indx_copy": [
      420,
      19,
      496,
      1,
      165,
      1,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      420,
      19,
      496,
      1,
      165,
      1,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "execute",
      "a",
      "command",
      "in",
      "the",
      "command",
      "prompt",
      "to",
      "list",
      "directory",
      "contents",
      "of",
      "the",
      "c",
      "drive",
      "`",
      "c",
      ":",
      "\\\\",
      "'"
    ],
    "code": [
      "os",
      ".",
      "system",
      "(",
      "'dir c:\\\\'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      135,
      3,
      137,
      24,
      18,
      137,
      465,
      8,
      4,
      175,
      125,
      2,
      18,
      465,
      465,
      345,
      465,
      128,
      465,
      310
    ],
    "code_indx_copy": [
      113,
      22,
      119,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      119,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "make",
      "a",
      "auto",
      "scrolled",
      "window",
      "to",
      "the",
      "end",
      "of",
      "the",
      "list",
      "in",
      "gtk"
    ],
    "code": [
      "self",
      ".",
      "treeview",
      ".",
      "connect",
      "(",
      "'size-allocate'",
      ",",
      "self",
      ".",
      "treeview_changed",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      191,
      3,
      465,
      465,
      302,
      8,
      18,
      295,
      2,
      18,
      4,
      24,
      465
    ],
    "code_indx_copy": [
      310,
      22,
      524,
      22,
      524,
      1,
      524,
      8,
      310,
      22,
      524,
      17
    ],
    "code_indx_nocopy": [
      310,
      22,
      524,
      22,
      524,
      1,
      524,
      8,
      310,
      22,
      524,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "3",
      "is",
      "inside",
      "list",
      "str_0"
    ],
    "code": [
      "3",
      "in",
      "[",
      "str_0",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "[1, 2, 3]",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "[1, 2, 3]",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      234,
      150,
      57,
      152,
      46,
      4,
      5
    ],
    "code_indx_copy": [
      54,
      9,
      12,
      11,
      16
    ],
    "code_indx_nocopy": [
      54,
      9,
      12,
      11,
      16
    ]
  },
  {
    "intent": [
      "represent",
      "datetime",
      "object",
      "str_0",
      "with",
      "format",
      "str_1",
      "into",
      "format",
      "str_2"
    ],
    "code": [
      "datetime",
      ".",
      "datetime",
      ".",
      "strptime",
      "(",
      "'str_0'",
      ",",
      "'str_1'",
      ")",
      ".",
      "strftime",
      "(",
      "'str_2'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "10/05/2012",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "%d/%m/%Y",
        "quote": "'",
        "type": "str"
      },
      "str_2": {
        "value": "%Y-%m-%d",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      13,
      15,
      5,
      79,
      16,
      32,
      12,
      16,
      194
    ],
    "code_indx_copy": [
      27,
      22,
      27,
      22,
      28,
      1,
      29,
      8,
      63,
      17,
      22,
      65,
      1,
      150,
      17
    ],
    "code_indx_nocopy": [
      27,
      22,
      27,
      22,
      28,
      1,
      29,
      8,
      63,
      17,
      22,
      65,
      1,
      150,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "string",
      "literal",
      "var_0",
      "with",
      "values",
      "str_0",
      "to",
      "raw",
      "string",
      "literal"
    ],
    "code": [
      "var_0",
      "=",
      "var_0",
      ".",
      "replace",
      "(",
      "'str_0'",
      ",",
      "'\\\\\\\\'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "\\",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      3,
      14,
      314,
      26,
      79,
      20,
      5,
      8,
      465,
      14,
      314
    ],
    "code_indx_copy": [
      34,
      19,
      34,
      22,
      107,
      1,
      29,
      8,
      524,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      34,
      22,
      107,
      1,
      29,
      8,
      524,
      17
    ]
  },
  {
    "intent": [
      "get",
      "output",
      "of",
      "script",
      "var_0"
    ],
    "code": [
      "print",
      "(",
      "var_0",
      ".",
      "communicate",
      "(",
      ")",
      "[",
      "0",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "proc",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      257,
      2,
      246,
      26
    ],
    "code_indx_copy": [
      49,
      1,
      34,
      22,
      479,
      1,
      17,
      12,
      43,
      16,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      34,
      22,
      479,
      1,
      17,
      12,
      43,
      16,
      17
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "pandas",
      "data",
      "frame",
      "from",
      "list",
      "of",
      "nested",
      "dictionaries",
      "var_0"
    ],
    "code": [
      "pd",
      ".",
      "concat",
      "(",
      "[",
      "pd",
      ".",
      "DataFrame",
      "(",
      "l",
      ")",
      "for",
      "l",
      "in",
      "var_0",
      "]",
      ",",
      "axis",
      "=",
      "1",
      ")",
      ".",
      "T"
    ],
    "slot_map": {
      "var_0": {
        "value": "my_list",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      148,
      3,
      42,
      65,
      66,
      58,
      4,
      2,
      154,
      188,
      26
    ],
    "code_indx_copy": [
      162,
      22,
      163,
      1,
      12,
      162,
      22,
      164,
      1,
      431,
      17,
      7,
      431,
      9,
      34,
      16,
      8,
      42,
      19,
      15,
      17,
      22,
      134
    ],
    "code_indx_nocopy": [
      162,
      22,
      163,
      1,
      12,
      162,
      22,
      164,
      1,
      431,
      17,
      7,
      431,
      9,
      34,
      16,
      8,
      42,
      19,
      15,
      17,
      22,
      134
    ]
  },
  {
    "intent": [
      "delete",
      "all",
      "columns",
      "in",
      "dataframe",
      "var_0",
      "that",
      "do",
      "not",
      "hold",
      "a",
      "non-zero",
      "value",
      "in",
      "its",
      "records"
    ],
    "code": [
      "var_0",
      ".",
      "loc",
      "[",
      ":",
      ",",
      "(",
      "(",
      "var_0",
      "!=",
      "0",
      ")",
      ".",
      "any",
      "(",
      "axis",
      "=",
      "0",
      ")",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      86,
      38,
      61,
      24,
      43,
      26,
      195,
      327,
      105,
      465,
      3,
      465,
      143,
      24,
      91,
      374
    ],
    "code_indx_copy": [
      34,
      22,
      202,
      12,
      13,
      8,
      1,
      1,
      34,
      88,
      43,
      17,
      22,
      269,
      1,
      42,
      19,
      43,
      17,
      17,
      16
    ],
    "code_indx_nocopy": [
      34,
      22,
      202,
      12,
      13,
      8,
      1,
      1,
      34,
      88,
      43,
      17,
      22,
      269,
      1,
      42,
      19,
      43,
      17,
      17,
      16
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "multidimensional",
      "array",
      "var_0",
      "by",
      "column",
      "with",
      "index",
      "1"
    ],
    "code": [
      "sorted",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "x",
      "[",
      "1",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      3,
      465,
      85,
      26,
      44,
      147,
      79,
      37,
      237
    ],
    "code_indx_copy": [
      101,
      1,
      34,
      8,
      102,
      19,
      44,
      26,
      13,
      26,
      12,
      15,
      16,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      34,
      8,
      102,
      19,
      44,
      26,
      13,
      26,
      12,
      15,
      16,
      17
    ]
  },
  {
    "intent": [
      "split",
      "string",
      "var_0",
      "to",
      "list",
      "conversion",
      "by",
      "str_0"
    ],
    "code": [
      "[",
      "x",
      ".",
      "strip",
      "(",
      ")",
      "for",
      "x",
      "in",
      "var_0",
      ".",
      "split",
      "(",
      "'str_0'",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": ",",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      138,
      14,
      26,
      8,
      4,
      465,
      44,
      5
    ],
    "code_indx_copy": [
      12,
      26,
      22,
      170,
      1,
      17,
      7,
      26,
      9,
      34,
      22,
      71,
      1,
      29,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      26,
      22,
      170,
      1,
      17,
      7,
      26,
      9,
      34,
      22,
      71,
      1,
      29,
      17,
      16
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "list",
      "of",
      "items",
      "in",
      "the",
      "list",
      "var_0",
      "with",
      "attribute",
      "equal",
      "to",
      "var_1"
    ],
    "code": [
      "items",
      "=",
      "[",
      "item",
      "for",
      "item",
      "in",
      "var_0",
      "if",
      "item",
      ".",
      "attribute",
      "==",
      "var_1",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "container",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "value",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      3,
      4,
      2,
      39,
      24,
      18,
      4,
      26,
      79,
      341,
      106,
      8,
      63
    ],
    "code_indx_copy": [
      35,
      19,
      12,
      387,
      7,
      387,
      9,
      34,
      67,
      387,
      22,
      538,
      76,
      91,
      16
    ],
    "code_indx_nocopy": [
      35,
      19,
      12,
      387,
      7,
      387,
      9,
      34,
      67,
      387,
      22,
      524,
      76,
      91,
      16
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "file",
      "str_0",
      "with",
      "each",
      "tuple",
      "in",
      "the",
      "list",
      "var_0",
      "written",
      "to",
      "a",
      "line"
    ],
    "code": [
      "open",
      "(",
      "'str_0'",
      ",",
      "'w'",
      ")",
      ".",
      "write",
      "(",
      "'\\n'",
      ".",
      "join",
      "(",
      "'%s %s'",
      "%",
      "x",
      "for",
      "x",
      "in",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "filename",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "mylist",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      148,
      3,
      126,
      5,
      79,
      22,
      113,
      24,
      18,
      4,
      26,
      465,
      8,
      3,
      172
    ],
    "code_indx_copy": [
      105,
      1,
      29,
      8,
      497,
      17,
      22,
      131,
      1,
      133,
      22,
      23,
      1,
      524,
      117,
      26,
      7,
      26,
      9,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      105,
      1,
      29,
      8,
      497,
      17,
      22,
      131,
      1,
      133,
      22,
      23,
      1,
      524,
      117,
      26,
      7,
      26,
      9,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "multiple",
      "matched",
      "strings",
      "using",
      "regex",
      "pattern",
      "str_0"
    ],
    "code": [
      "pattern",
      "=",
      "re",
      ".",
      "compile",
      "(",
      "'str_0'",
      ",",
      "re",
      ".",
      "IGNORECASE",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "(?:review: )?(http://url.com/(\\d+))\\s?",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      6,
      465,
      259,
      109,
      40,
      54,
      5
    ],
    "code_indx_copy": [
      303,
      19,
      39,
      22,
      83,
      1,
      29,
      8,
      39,
      22,
      180,
      17
    ],
    "code_indx_nocopy": [
      303,
      19,
      39,
      22,
      83,
      1,
      29,
      8,
      39,
      22,
      180,
      17
    ]
  },
  {
    "intent": [
      "read",
      "a",
      "text",
      "file",
      "str_0",
      "into",
      "a",
      "string",
      "variable",
      "var_0"
    ],
    "code": [
      "var_0",
      "=",
      "open",
      "(",
      "'str_0'",
      ",",
      "'r'",
      ")",
      ".",
      "read",
      "(",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "very_Important.txt",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "str",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      124,
      3,
      267,
      126,
      5,
      12,
      3,
      14,
      95,
      26
    ],
    "code_indx_copy": [
      34,
      19,
      105,
      1,
      29,
      8,
      365,
      17,
      22,
      106,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      105,
      1,
      29,
      8,
      365,
      17,
      22,
      106,
      1,
      17
    ]
  },
  {
    "intent": [
      "return",
      "values",
      "for",
      "column",
      "var_0",
      "after",
      "group",
      "by",
      "on",
      "column",
      "var_1",
      "and",
      "var_2",
      "in",
      "dataframe",
      "var_3"
    ],
    "code": [
      "var_3",
      ".",
      "groupby",
      "(",
      "[",
      "'var_1'",
      ",",
      "'var_2'",
      "]",
      ")",
      "[",
      "'var_0'",
      "]",
      ".",
      "unique",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "C",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "A",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "B",
        "quote": "`",
        "type": "var"
      },
      "var_3": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      160,
      20,
      21,
      147,
      26,
      201,
      383,
      44,
      139,
      147,
      63,
      31,
      64,
      24,
      43,
      67
    ],
    "code_indx_copy": [
      55,
      22,
      157,
      1,
      12,
      57,
      8,
      58,
      16,
      17,
      12,
      56,
      16,
      22,
      277,
      1,
      17
    ],
    "code_indx_nocopy": [
      55,
      22,
      157,
      1,
      12,
      57,
      8,
      58,
      16,
      17,
      12,
      56,
      16,
      22,
      277,
      1,
      17
    ]
  },
  {
    "intent": [
      "read",
      "file",
      "var_0",
      "line",
      "by",
      "line",
      "into",
      "a",
      "list",
      "var_1"
    ],
    "code": [
      "with",
      "open",
      "(",
      "var_0",
      ")",
      "as",
      "f",
      ":",
      "\n",
      "    ",
      "var_1",
      "=",
      "f",
      ".",
      "readlines",
      "(",
      ")",
      ""
    ],
    "slot_map": {
      "var_0": {
        "value": "fname",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "content",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      124,
      126,
      26,
      172,
      44,
      172,
      12,
      3,
      4,
      63
    ],
    "code_indx_copy": [
      364,
      105,
      1,
      34,
      17,
      366,
      190,
      13,
      161,
      216,
      91,
      19,
      190,
      22,
      498,
      1,
      17,
      218
    ],
    "code_indx_nocopy": [
      364,
      105,
      1,
      34,
      17,
      366,
      190,
      13,
      161,
      216,
      91,
      19,
      190,
      22,
      498,
      1,
      17,
      218
    ]
  },
  {
    "intent": [
      "read",
      "file",
      "str_0",
      "line",
      "by",
      "line",
      "into",
      "a",
      "list",
      "var_0"
    ],
    "code": [
      "with",
      "open",
      "(",
      "'str_0'",
      ")",
      "as",
      "f",
      ":",
      "\n",
      "    ",
      "var_0",
      "=",
      "f",
      ".",
      "readlines",
      "(",
      ")",
      ""
    ],
    "slot_map": {
      "str_0": {
        "value": "filename",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "lines",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      124,
      126,
      5,
      172,
      44,
      172,
      12,
      3,
      4,
      26
    ],
    "code_indx_copy": [
      364,
      105,
      1,
      29,
      17,
      366,
      190,
      13,
      161,
      216,
      34,
      19,
      190,
      22,
      498,
      1,
      17,
      218
    ],
    "code_indx_nocopy": [
      364,
      105,
      1,
      29,
      17,
      366,
      190,
      13,
      161,
      216,
      34,
      19,
      190,
      22,
      498,
      1,
      17,
      218
    ]
  },
  {
    "intent": [
      "read",
      "file",
      "str_0",
      "line",
      "by",
      "line",
      "into",
      "a",
      "list",
      "var_0"
    ],
    "code": [
      "var_0",
      "=",
      "[",
      "line",
      ".",
      "rstrip",
      "(",
      "'\\n'",
      ")",
      "for",
      "line",
      "in",
      "open",
      "(",
      "'str_0'",
      ")",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "filename",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "lines",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      124,
      126,
      5,
      172,
      44,
      172,
      12,
      3,
      4,
      26
    ],
    "code_indx_copy": [
      34,
      19,
      12,
      315,
      22,
      172,
      1,
      133,
      17,
      7,
      315,
      9,
      105,
      1,
      29,
      17,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      12,
      315,
      22,
      172,
      1,
      133,
      17,
      7,
      315,
      9,
      105,
      1,
      29,
      17,
      16
    ]
  },
  {
    "intent": [
      "read",
      "file",
      "str_0",
      "line",
      "by",
      "line",
      "into",
      "a",
      "list",
      "var_0"
    ],
    "code": [
      "with",
      "open",
      "(",
      "'str_0'",
      ",",
      "'r'",
      ")",
      "as",
      "ins",
      ":",
      "\n",
      "    ",
      "var_0",
      "=",
      "[",
      "]",
      "\n",
      "for",
      "line",
      "in",
      "ins",
      ":",
      "\n",
      "        ",
      "var_0",
      ".",
      "append",
      "(",
      "line",
      ")",
      "",
      ""
    ],
    "slot_map": {
      "str_0": {
        "value": "file.txt",
        "quote": "\"",
        "type": "str"
      },
      "var_0": {
        "value": "array",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      124,
      126,
      5,
      172,
      44,
      172,
      12,
      3,
      4,
      26
    ],
    "code_indx_copy": [
      364,
      105,
      1,
      29,
      8,
      365,
      17,
      366,
      524,
      13,
      161,
      216,
      34,
      19,
      12,
      16,
      161,
      7,
      315,
      9,
      524,
      13,
      161,
      368,
      34,
      22,
      146,
      1,
      315,
      17,
      218,
      218
    ],
    "code_indx_nocopy": [
      364,
      105,
      1,
      29,
      8,
      365,
      17,
      366,
      524,
      13,
      161,
      216,
      34,
      19,
      12,
      16,
      161,
      7,
      315,
      9,
      524,
      13,
      161,
      368,
      34,
      22,
      146,
      1,
      315,
      17,
      218,
      218
    ]
  },
  {
    "intent": [
      "convert",
      "the",
      "dataframe",
      "column",
      "str_0",
      "from",
      "string",
      "types",
      "to",
      "datetime",
      "types"
    ],
    "code": [
      "df",
      "[",
      "'str_0'",
      "]",
      "=",
      "pd",
      ".",
      "to_datetime",
      "(",
      "df",
      "[",
      "'str_0'",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "col",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      18,
      43,
      147,
      5,
      58,
      14,
      465,
      8,
      13,
      465
    ],
    "code_indx_copy": [
      149,
      12,
      29,
      16,
      19,
      162,
      22,
      466,
      1,
      149,
      12,
      29,
      16,
      17
    ],
    "code_indx_nocopy": [
      149,
      12,
      29,
      16,
      19,
      162,
      22,
      466,
      1,
      149,
      12,
      29,
      16,
      17
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "list",
      "of",
      "the",
      "keys",
      "in",
      "each",
      "dictionary",
      "in",
      "a",
      "dictionary",
      "of",
      "dictionaries",
      "var_0"
    ],
    "code": [
      "[",
      "k",
      "for",
      "d",
      "in",
      "list",
      "(",
      "var_0",
      ".",
      "values",
      "(",
      ")",
      ")",
      "for",
      "k",
      "in",
      "d",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "foo",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      3,
      4,
      2,
      18,
      206,
      24,
      22,
      25,
      24,
      3,
      25,
      2,
      188,
      26
    ],
    "code_indx_copy": [
      12,
      89,
      7,
      2,
      9,
      33,
      1,
      34,
      22,
      166,
      1,
      17,
      17,
      7,
      89,
      9,
      2,
      16
    ],
    "code_indx_nocopy": [
      12,
      89,
      7,
      2,
      9,
      33,
      1,
      34,
      22,
      166,
      1,
      17,
      17,
      7,
      89,
      9,
      2,
      16
    ]
  },
  {
    "intent": [
      "get",
      "user",
      "input",
      "using",
      "message",
      "str_0",
      "and",
      "insert",
      "it",
      "to",
      "the",
      "first",
      "placeholder",
      "in",
      "string",
      "str_1"
    ],
    "code": [
      "print",
      "(",
      "'str_1'",
      ".",
      "format",
      "(",
      "input",
      "(",
      "'Enter name here: '",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "Enter name here:",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "Hello, {0}, how do you do?",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      174,
      452,
      109,
      157,
      5,
      31,
      277,
      145,
      8,
      18,
      151,
      465,
      24,
      14,
      32
    ],
    "code_indx_copy": [
      49,
      1,
      63,
      22,
      38,
      1,
      251,
      1,
      524,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      63,
      22,
      38,
      1,
      251,
      1,
      524,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "create",
      "pandas",
      "data",
      "frame",
      "var_0",
      "from",
      "txt",
      "file",
      "str_0",
      "with",
      "column",
      "str_1",
      "and",
      "separator",
      "str_2"
    ],
    "code": [
      "var_0",
      "=",
      "pd",
      ".",
      "read_csv",
      "(",
      "'str_0'",
      ",",
      "sep",
      "=",
      "'str_2'",
      ",",
      "names",
      "=",
      "[",
      "'str_1'",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "filename.txt",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": "Region Name",
        "quote": "`",
        "type": "str"
      },
      "str_2": {
        "value": ";",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      148,
      42,
      65,
      66,
      26,
      58,
      465,
      126,
      5,
      79,
      147,
      32,
      31,
      465,
      194
    ],
    "code_indx_copy": [
      34,
      19,
      162,
      22,
      452,
      1,
      29,
      8,
      264,
      19,
      150,
      8,
      524,
      19,
      12,
      63,
      16,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      162,
      22,
      452,
      1,
      29,
      8,
      264,
      19,
      150,
      8,
      524,
      19,
      12,
      63,
      16,
      17
    ]
  },
  {
    "intent": [
      "pandas",
      ":",
      "how",
      "can",
      "i",
      "use",
      "the",
      "apply",
      "(",
      ")",
      "function",
      "for",
      "a",
      "single",
      "column",
      "?"
    ],
    "code": [
      "df",
      "[",
      "'a'",
      "]",
      "=",
      "df",
      "[",
      "'a'",
      "]",
      ".",
      "apply",
      "(",
      "lambda",
      "x",
      ":",
      "x",
      "+",
      "1",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      42,
      128,
      77,
      386,
      328,
      309,
      18,
      401,
      212,
      27,
      69,
      21,
      3,
      9,
      147,
      52
    ],
    "code_indx_copy": [
      149,
      12,
      413,
      16,
      19,
      149,
      12,
      413,
      16,
      22,
      59,
      1,
      44,
      26,
      13,
      26,
      96,
      15,
      17
    ],
    "code_indx_nocopy": [
      149,
      12,
      413,
      16,
      19,
      149,
      12,
      413,
      16,
      22,
      59,
      1,
      44,
      26,
      13,
      26,
      96,
      15,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "platform",
      "os",
      "name"
    ],
    "code": [
      "platform",
      ".",
      "system",
      "(",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      17,
      18,
      465,
      136,
      129
    ],
    "code_indx_copy": [
      499,
      22,
      119,
      1,
      17
    ],
    "code_indx_nocopy": [
      499,
      22,
      119,
      1,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "list",
      "var_0",
      "in",
      "ascending",
      "order",
      "based",
      "on",
      "its",
      "elements",
      "'",
      "float",
      "values"
    ],
    "code": [
      "var_0",
      "=",
      "sorted",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "float",
      "(",
      "x",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      4,
      26,
      24,
      119,
      162,
      208,
      139,
      91,
      1,
      310,
      94,
      20
    ],
    "code_indx_copy": [
      34,
      19,
      101,
      1,
      34,
      8,
      102,
      19,
      44,
      26,
      13,
      225,
      1,
      26,
      17,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      101,
      1,
      34,
      8,
      102,
      19,
      44,
      26,
      13,
      225,
      1,
      26,
      17,
      17
    ]
  },
  {
    "intent": [
      "finding",
      "words",
      "in",
      "string",
      "var_0",
      "after",
      "keyword",
      "str_0"
    ],
    "code": [
      "re",
      ".",
      "search",
      "(",
      "'name (.*)'",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "name",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      41,
      24,
      14,
      26,
      201,
      465,
      5
    ],
    "code_indx_copy": [
      39,
      22,
      93,
      1,
      524,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      93,
      1,
      524,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "find",
      "all",
      "records",
      "from",
      "collection",
      "var_0",
      "without",
      "extracting",
      "mongo",
      "id",
      "var_1"
    ],
    "code": [
      "db",
      ".",
      "var_0",
      ".",
      "find",
      "(",
      "{",
      "}",
      ",",
      "{",
      "'var_1'",
      ":",
      "False",
      "}",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "collection",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "_id",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      47,
      38,
      374,
      58,
      465,
      26,
      103,
      465,
      465,
      440,
      63
    ],
    "code_indx_copy": [
      252,
      22,
      34,
      22,
      282,
      1,
      52,
      53,
      8,
      52,
      57,
      13,
      87,
      53,
      17
    ],
    "code_indx_nocopy": [
      252,
      22,
      34,
      22,
      282,
      1,
      52,
      53,
      8,
      52,
      57,
      13,
      87,
      53,
      17
    ]
  },
  {
    "intent": [
      "get",
      "all",
      "the",
      "second",
      "values",
      "from",
      "a",
      "list",
      "of",
      "lists",
      "var_0"
    ],
    "code": [
      "[",
      "row",
      "[",
      "1",
      "]",
      "for",
      "row",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "A",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      38,
      18,
      118,
      20,
      58,
      3,
      4,
      2,
      30,
      26
    ],
    "code_indx_copy": [
      12,
      262,
      12,
      15,
      16,
      7,
      262,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      12,
      262,
      12,
      15,
      16,
      7,
      262,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "extract",
      "first",
      "column",
      "from",
      "a",
      "multi-dimensional",
      "array",
      "var_0"
    ],
    "code": [
      "[",
      "row",
      "[",
      "0",
      "]",
      "for",
      "row",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      104,
      151,
      147,
      58,
      3,
      465,
      85,
      26
    ],
    "code_indx_copy": [
      12,
      262,
      12,
      43,
      16,
      7,
      262,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      12,
      262,
      12,
      43,
      16,
      7,
      262,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "sort",
      "list",
      "str_0",
      "in",
      "ascending",
      "order",
      "based",
      "on",
      "the",
      "integer",
      "value",
      "of",
      "its",
      "elements"
    ],
    "code": [
      "sorted",
      "(",
      "[",
      "str_0",
      "]",
      ",",
      "key",
      "=",
      "int",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "['10', '3', '2']",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "['10', '3', '2']",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      117,
      4,
      5,
      24,
      119,
      162,
      208,
      139,
      18,
      10,
      143,
      2,
      91,
      1
    ],
    "code_indx_copy": [
      101,
      1,
      12,
      11,
      16,
      8,
      102,
      19,
      20,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      12,
      11,
      16,
      8,
      102,
      19,
      20,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "file",
      "var_0",
      "is",
      "descendant",
      "of",
      "directory",
      "str_0"
    ],
    "code": [
      "os",
      ".",
      "path",
      ".",
      "commonprefix",
      "(",
      "[",
      "'str_0'",
      ",",
      "os",
      ".",
      "path",
      ".",
      "realpath",
      "(",
      "var_0",
      ")",
      "]",
      ")",
      "==",
      "'str_0'"
    ],
    "slot_map": {
      "var_0": {
        "value": "filename",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "/the/dir/",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      234,
      150,
      126,
      26,
      152,
      465,
      2,
      175,
      5
    ],
    "code_indx_copy": [
      113,
      22,
      114,
      22,
      524,
      1,
      12,
      29,
      8,
      113,
      22,
      114,
      22,
      188,
      1,
      34,
      17,
      16,
      17,
      76,
      29
    ],
    "code_indx_nocopy": [
      113,
      22,
      114,
      22,
      524,
      1,
      12,
      29,
      8,
      113,
      22,
      114,
      22,
      188,
      1,
      34,
      17,
      16,
      17,
      76,
      29
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "any",
      "element",
      "of",
      "list",
      "var_0",
      "are",
      "in",
      "string",
      "var_1"
    ],
    "code": [
      "any",
      "(",
      "substring",
      "in",
      "var_1",
      "for",
      "substring",
      "in",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "substring_list",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "string",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      234,
      150,
      272,
      49,
      2,
      4,
      26,
      243,
      24,
      14,
      63
    ],
    "code_indx_copy": [
      269,
      1,
      524,
      9,
      91,
      7,
      524,
      9,
      34,
      17
    ],
    "code_indx_nocopy": [
      269,
      1,
      524,
      9,
      91,
      7,
      524,
      9,
      34,
      17
    ]
  },
  {
    "intent": [
      "construct",
      "pandas",
      "dataframe",
      "from",
      "a",
      "list",
      "of",
      "tuples"
    ],
    "code": [
      "df",
      "=",
      "pandas",
      ".",
      "DataFrame",
      "(",
      "data",
      ",",
      "columns",
      "=",
      "[",
      "'R_Number'",
      ",",
      "'C_Number'",
      ",",
      "'Avg'",
      ",",
      "'Std'",
      "]",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      465,
      42,
      43,
      58,
      3,
      4,
      2,
      33
    ],
    "code_indx_copy": [
      149,
      19,
      276,
      22,
      164,
      1,
      135,
      8,
      192,
      19,
      12,
      524,
      8,
      524,
      8,
      524,
      8,
      524,
      16,
      17
    ],
    "code_indx_nocopy": [
      149,
      19,
      276,
      22,
      164,
      1,
      135,
      8,
      192,
      19,
      12,
      524,
      8,
      524,
      8,
      524,
      8,
      524,
      16,
      17
    ]
  },
  {
    "intent": [
      "find",
      "and",
      "replace",
      "2nd",
      "occurrence",
      "of",
      "word",
      "str_0",
      "by",
      "str_1",
      "in",
      "a",
      "sentence",
      "str_2"
    ],
    "code": [
      "re",
      ".",
      "sub",
      "(",
      "'^((?:(?!cat).)*cat(?:(?!cat).)*)cat'",
      ",",
      "'\\\\1Bull'",
      ",",
      "str_2",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "cat",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "Bull",
        "quote": "'",
        "type": "str"
      },
      "str_2": {
        "value": "s",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      47,
      31,
      130,
      465,
      364,
      2,
      239,
      5,
      44,
      32,
      24,
      3,
      465,
      194
    ],
    "code_indx_copy": [
      39,
      22,
      40,
      1,
      524,
      8,
      524,
      8,
      183,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      40,
      1,
      524,
      8,
      524,
      8,
      183,
      17
    ]
  },
  {
    "intent": [
      "find",
      "and",
      "replace",
      "2nd",
      "occurrence",
      "of",
      "word",
      "str_0",
      "by",
      "str_1",
      "in",
      "a",
      "sentence",
      "str_2"
    ],
    "code": [
      "re",
      ".",
      "sub",
      "(",
      "'^((.*?cat.*?){1})cat'",
      ",",
      "'\\\\1Bull'",
      ",",
      "str_2",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "cat",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "Bull",
        "quote": "'",
        "type": "str"
      },
      "str_2": {
        "value": "s",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      47,
      31,
      130,
      465,
      364,
      2,
      239,
      5,
      44,
      32,
      24,
      3,
      465,
      194
    ],
    "code_indx_copy": [
      39,
      22,
      40,
      1,
      524,
      8,
      524,
      8,
      183,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      40,
      1,
      524,
      8,
      524,
      8,
      183,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "list",
      "of",
      "strings",
      "in",
      "list",
      "var_0",
      "by",
      "integer",
      "suffix"
    ],
    "code": [
      "sorted",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "lambda",
      "k",
      ":",
      "int",
      "(",
      "k",
      ".",
      "split",
      "(",
      "'_'",
      ")",
      "[",
      "1",
      "]",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "the_list",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      4,
      2,
      259,
      24,
      4,
      26,
      44,
      10,
      465
    ],
    "code_indx_copy": [
      101,
      1,
      34,
      8,
      102,
      19,
      44,
      89,
      13,
      20,
      1,
      89,
      22,
      71,
      1,
      336,
      17,
      12,
      15,
      16,
      17,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      34,
      8,
      102,
      19,
      44,
      89,
      13,
      20,
      1,
      89,
      22,
      71,
      1,
      336,
      17,
      12,
      15,
      16,
      17,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "list",
      "of",
      "strings",
      "var_0",
      "by",
      "integer",
      "suffix",
      "before",
      "str_0"
    ],
    "code": [
      "sorted",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "int",
      "(",
      "x",
      ".",
      "split",
      "(",
      "'str_0'",
      ")",
      "[",
      "1",
      "]",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "the_list",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "_",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      117,
      4,
      2,
      259,
      26,
      44,
      10,
      465,
      280,
      5
    ],
    "code_indx_copy": [
      101,
      1,
      34,
      8,
      102,
      19,
      44,
      26,
      13,
      20,
      1,
      26,
      22,
      71,
      1,
      29,
      17,
      12,
      15,
      16,
      17,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      34,
      8,
      102,
      19,
      44,
      26,
      13,
      20,
      1,
      26,
      22,
      71,
      1,
      29,
      17,
      12,
      15,
      16,
      17,
      17
    ]
  },
  {
    "intent": [
      "make",
      "a",
      "list",
      "of",
      "lists",
      "in",
      "which",
      "each",
      "list",
      "var_0",
      "are",
      "the",
      "elements",
      "from",
      "list",
      "var_1",
      "which",
      "have",
      "the",
      "same",
      "characters",
      "up",
      "to",
      "the",
      "first",
      "var_2",
      "character"
    ],
    "code": [
      "[",
      "list",
      "(",
      "var_0",
      ")",
      "for",
      "var_2",
      ",",
      "var_0",
      "in",
      "itertools",
      ".",
      "groupby",
      "(",
      "var_1",
      ",",
      "lambda",
      "x",
      ":",
      "x",
      ".",
      "split",
      "\n",
      "(",
      "'var_2'",
      ")",
      "[",
      "0",
      "]",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "g",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "test",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "_",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      191,
      3,
      4,
      2,
      30,
      24,
      205,
      22,
      4,
      26,
      243,
      18,
      1,
      58,
      4,
      63,
      205,
      196,
      18,
      36,
      98,
      379,
      8,
      18,
      151,
      64,
      202
    ],
    "code_indx_copy": [
      12,
      33,
      1,
      34,
      17,
      7,
      94,
      8,
      34,
      9,
      50,
      22,
      157,
      1,
      91,
      8,
      44,
      26,
      13,
      26,
      22,
      71,
      161,
      1,
      58,
      17,
      12,
      43,
      16,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      33,
      1,
      34,
      17,
      7,
      94,
      8,
      34,
      9,
      50,
      22,
      157,
      1,
      91,
      8,
      44,
      26,
      13,
      26,
      22,
      71,
      161,
      1,
      58,
      17,
      12,
      43,
      16,
      17,
      16
    ]
  },
  {
    "intent": [
      "how",
      "to",
      "group",
      "similar",
      "items",
      "in",
      "a",
      "list",
      "?"
    ],
    "code": [
      "[",
      "list",
      "(",
      "g",
      ")",
      "for",
      "_",
      ",",
      "g",
      "in",
      "itertools",
      ".",
      "groupby",
      "(",
      "test",
      ",",
      "lambda",
      "x",
      ":",
      "x",
      ".",
      "partition",
      "(",
      "'_'",
      ")",
      "[",
      "0",
      "]",
      ")",
      "]"
    ],
    "slot_map": {},
    "intent_indx": [
      77,
      8,
      383,
      465,
      39,
      24,
      3,
      4,
      52
    ],
    "code_indx_copy": [
      12,
      33,
      1,
      448,
      17,
      7,
      470,
      8,
      448,
      9,
      50,
      22,
      157,
      1,
      524,
      8,
      44,
      26,
      13,
      26,
      22,
      524,
      1,
      336,
      17,
      12,
      43,
      16,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      33,
      1,
      448,
      17,
      7,
      470,
      8,
      448,
      9,
      50,
      22,
      157,
      1,
      524,
      8,
      44,
      26,
      13,
      26,
      22,
      524,
      1,
      336,
      17,
      12,
      43,
      16,
      17,
      16
    ]
  },
  {
    "intent": [
      "load",
      "the",
      "url",
      "str_0",
      "in",
      "selenium",
      "webdriver",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "get",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "http://www.google.com",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "driver",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      249,
      18,
      102,
      5,
      24,
      51,
      332,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      86,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      86,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "using",
      "python",
      "'s",
      "datetime",
      "module",
      ",",
      "get",
      "the",
      "year",
      "that",
      "utc-11",
      "is",
      "currently",
      "in"
    ],
    "code": [
      "(",
      "datetime",
      ".",
      "datetime",
      ".",
      "utcnow",
      "(",
      ")",
      "-",
      "datetime",
      ".",
      "timedelta",
      "(",
      "hours",
      "=",
      "11",
      ")",
      ")",
      ".",
      "year"
    ],
    "slot_map": {},
    "intent_indx": [
      109,
      50,
      266,
      13,
      342,
      62,
      17,
      18,
      416,
      195,
      465,
      152,
      465,
      24
    ],
    "code_indx_copy": [
      1,
      27,
      22,
      27,
      22,
      138,
      1,
      17,
      14,
      27,
      22,
      295,
      1,
      297,
      19,
      380,
      17,
      17,
      22,
      494
    ],
    "code_indx_nocopy": [
      1,
      27,
      22,
      27,
      22,
      138,
      1,
      17,
      14,
      27,
      22,
      295,
      1,
      297,
      19,
      380,
      17,
      17,
      22,
      494
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "difference",
      "between",
      "two",
      "lists",
      "str_0",
      "and",
      "str_1",
      "that",
      "may",
      "have",
      "duplicate",
      "values"
    ],
    "code": [
      "Counter",
      "(",
      "[",
      "str_0",
      "]",
      ")",
      "-",
      "Counter",
      "(",
      "[",
      "str_1",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "[1, 2, 2, 2, 3]",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": "[1, 2]",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "[1, 2, 2, 2, 3]",
        "quote": "`",
        "type": "str"
      },
      "[str_1]": {
        "value": "[1, 2]",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      18,
      465,
      278,
      29,
      30,
      5,
      31,
      32,
      195,
      465,
      196,
      411,
      20
    ],
    "code_indx_copy": [
      500,
      1,
      12,
      11,
      16,
      17,
      14,
      500,
      1,
      12,
      37,
      16,
      17
    ],
    "code_indx_nocopy": [
      500,
      1,
      12,
      11,
      16,
      17,
      14,
      500,
      1,
      12,
      37,
      16,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "tags",
      "from",
      "a",
      "string",
      "var_0"
    ],
    "code": [
      "re",
      ".",
      "sub",
      "(",
      "'<[^>]*>'",
      ",",
      "''",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "mystring",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      392,
      58,
      3,
      14,
      26
    ],
    "code_indx_copy": [
      39,
      22,
      40,
      1,
      524,
      8,
      21,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      40,
      1,
      524,
      8,
      21,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "encode",
      "string",
      "var_0",
      "as",
      "var_1"
    ],
    "code": [
      "var_0",
      ".",
      "encode",
      "(",
      "'var_1'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "data",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "hex",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      447,
      14,
      26,
      90,
      63
    ],
    "code_indx_copy": [
      34,
      22,
      239,
      1,
      57,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      239,
      1,
      57,
      17
    ]
  },
  {
    "intent": [
      "filter",
      "var_0",
      "by",
      "field",
      "var_1",
      "with",
      "level",
      "greater",
      "than",
      "or",
      "equal",
      "to",
      "str_0"
    ],
    "code": [
      "User",
      ".",
      "objects",
      ".",
      "filter",
      "(",
      "userprofile__level__gte",
      "=",
      "0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "Users",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "userprofile",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "0",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      217,
      26,
      44,
      312,
      63,
      79,
      238,
      349,
      264,
      344,
      106,
      8,
      5
    ],
    "code_indx_copy": [
      524,
      22,
      78,
      22,
      79,
      1,
      524,
      19,
      43,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      78,
      22,
      79,
      1,
      524,
      19,
      43,
      17
    ]
  },
  {
    "intent": [
      "beautifulsoup",
      "find",
      "a",
      "tag",
      "whose",
      "id",
      "ends",
      "with",
      "string",
      "str_0"
    ],
    "code": [
      "soup",
      ".",
      "findAll",
      "(",
      "id",
      "=",
      "re",
      ".",
      "compile",
      "(",
      "'para$'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "para",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      70,
      47,
      3,
      72,
      228,
      440,
      173,
      79,
      14,
      5
    ],
    "code_indx_copy": [
      61,
      22,
      254,
      1,
      80,
      19,
      39,
      22,
      83,
      1,
      524,
      17,
      17
    ],
    "code_indx_nocopy": [
      61,
      22,
      254,
      1,
      80,
      19,
      39,
      22,
      83,
      1,
      524,
      17,
      17
    ]
  },
  {
    "intent": [
      "select",
      "var_0",
      "tags",
      "whose",
      "var_1s",
      "begin",
      "with",
      "var_2"
    ],
    "code": [
      "soup",
      ".",
      "select",
      "(",
      "'div[id^=\"value_xxx_c_1_f_8_a_\"]'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "div",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "id",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "value_xxx_c_1_f_8_a_",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      78,
      26,
      392,
      228,
      465,
      465,
      79,
      64
    ],
    "code_indx_copy": [
      61,
      22,
      358,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      61,
      22,
      358,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "delete",
      "an",
      "item",
      "var_0",
      "in",
      "a",
      "list",
      "var_1",
      "if",
      "it",
      "exists"
    ],
    "code": [
      "cleaned_list",
      "=",
      "[",
      "x",
      "for",
      "x",
      "in",
      "var_1",
      "if",
      "x",
      "is",
      "not",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "thing",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "some_list",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      86,
      225,
      156,
      26,
      24,
      3,
      4,
      63,
      150,
      145,
      274
    ],
    "code_indx_copy": [
      524,
      19,
      12,
      26,
      7,
      26,
      9,
      91,
      67,
      26,
      335,
      281,
      34,
      16
    ],
    "code_indx_nocopy": [
      524,
      19,
      12,
      26,
      7,
      26,
      9,
      91,
      67,
      26,
      335,
      281,
      34,
      16
    ]
  },
  {
    "intent": [
      "print",
      "str_0",
      "to",
      "console",
      ",",
      "and",
      "read",
      "user",
      "input",
      "to",
      "var_0"
    ],
    "code": [
      "var_0",
      "=",
      "input",
      "(",
      "'Please enter something: '",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "Please enter something:",
        "quote": "\"",
        "type": "str"
      },
      "var_0": {
        "value": "var",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      166,
      5,
      8,
      465,
      62,
      31,
      124,
      174,
      452,
      8,
      26
    ],
    "code_indx_copy": [
      34,
      19,
      251,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      251,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "append",
      "4",
      "to",
      "list",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "append",
      "(",
      "4",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "foo",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      111,
      231,
      8,
      4,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      146,
      1,
      184,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      146,
      1,
      184,
      17
    ]
  },
  {
    "intent": [
      "append",
      "a",
      "list",
      "[",
      "8",
      ",",
      "7",
      "]",
      "to",
      "list",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "append",
      "(",
      "[",
      "8",
      ",",
      "7",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "foo",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      111,
      3,
      4,
      218,
      453,
      62,
      340,
      220,
      8,
      4,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      146,
      1,
      12,
      501,
      8,
      219,
      16,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      146,
      1,
      12,
      501,
      8,
      219,
      16,
      17
    ]
  },
  {
    "intent": [
      "insert",
      "77",
      "to",
      "index",
      "2",
      "of",
      "list",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "insert",
      "(",
      "2",
      ",",
      "77",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "x",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      277,
      465,
      8,
      37,
      82,
      2,
      4,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      319,
      1,
      82,
      8,
      529,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      319,
      1,
      82,
      8,
      524,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "white",
      "space",
      "padding",
      "around",
      "a",
      "saved",
      "image",
      "str_0",
      "in",
      "matplotlib"
    ],
    "code": [
      "plt",
      ".",
      "savefig",
      "(",
      "'str_0'",
      ",",
      "bbox_inches",
      "=",
      "'tight'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "test.png",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      268,
      131,
      400,
      465,
      465,
      3,
      465,
      299,
      5,
      24,
      350
    ],
    "code_indx_copy": [
      196,
      22,
      407,
      1,
      29,
      8,
      524,
      19,
      524,
      17
    ],
    "code_indx_nocopy": [
      196,
      22,
      407,
      1,
      29,
      8,
      524,
      19,
      524,
      17
    ]
  },
  {
    "intent": [
      "concatenate",
      "lists",
      "var_0",
      "and",
      "var_1"
    ],
    "code": [
      "var_0",
      "+",
      "var_1"
    ],
    "slot_map": {
      "var_0": {
        "value": "listone",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "listtwo",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      0,
      30,
      26,
      31,
      63
    ],
    "code_indx_copy": [
      34,
      96,
      91
    ],
    "code_indx_nocopy": [
      34,
      96,
      91
    ]
  },
  {
    "intent": [
      "iterate",
      "items",
      "in",
      "lists",
      "var_0",
      "and",
      "var_1"
    ],
    "code": [
      "for",
      "item",
      "in",
      "itertools",
      ".",
      "chain",
      "(",
      "var_0",
      ",",
      "var_1",
      ")",
      ":",
      "\n",
      "    ",
      "pass",
      ""
    ],
    "slot_map": {
      "var_0": {
        "value": "listone",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "listtwo",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      454,
      39,
      24,
      30,
      26,
      31,
      63
    ],
    "code_indx_copy": [
      7,
      387,
      9,
      50,
      22,
      450,
      1,
      34,
      8,
      91,
      17,
      13,
      161,
      216,
      217,
      218
    ],
    "code_indx_nocopy": [
      7,
      387,
      9,
      50,
      22,
      450,
      1,
      34,
      8,
      91,
      17,
      13,
      161,
      216,
      217,
      218
    ]
  },
  {
    "intent": [
      "create",
      "dataframe",
      "var_0",
      "containing",
      "data",
      "of",
      "dataframe",
      "var_1",
      "where",
      "column",
      "var_2",
      "is",
      "equal",
      "to",
      "str_0",
      "and",
      "column",
      "var_3",
      "is",
      "equal",
      "to",
      "2014"
    ],
    "code": [
      "var_0",
      "=",
      "var_1",
      "[",
      "(",
      "var_1",
      "[",
      "var_2",
      "]",
      "==",
      "'str_0'",
      ")",
      "&",
      "(",
      "var_1",
      "[",
      "var_3",
      "]",
      "==",
      "2014",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "males",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "Gender",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "Male",
        "quote": "'",
        "type": "str"
      },
      "var_3": {
        "value": "Year",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      148,
      43,
      26,
      34,
      65,
      2,
      43,
      63,
      155,
      147,
      64,
      152,
      106,
      8,
      5,
      31,
      147,
      67,
      152,
      106,
      8,
      465
    ],
    "code_indx_copy": [
      34,
      19,
      91,
      12,
      1,
      91,
      12,
      94,
      16,
      76,
      29,
      17,
      226,
      1,
      91,
      12,
      55,
      16,
      76,
      549,
      17,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      91,
      12,
      1,
      91,
      12,
      94,
      16,
      76,
      29,
      17,
      226,
      1,
      91,
      12,
      55,
      16,
      76,
      524,
      17,
      16
    ]
  },
  {
    "intent": [
      "print",
      "backslash"
    ],
    "code": [
      "print",
      "(",
      "'\\\\'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      166,
      465
    ],
    "code_indx_copy": [
      49,
      1,
      332,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      332,
      17
    ]
  },
  {
    "intent": [
      "replace",
      "str_0",
      "in",
      "pandas",
      "dataframe",
      "var_0",
      "with",
      "str_1"
    ],
    "code": [
      "var_0",
      ".",
      "replace",
      "(",
      "'str_0'",
      ",",
      "np",
      ".",
      "nan",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "-",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "str_1": {
        "value": "np.nan",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      130,
      5,
      24,
      42,
      43,
      26,
      79,
      32
    ],
    "code_indx_copy": [
      34,
      22,
      107,
      1,
      29,
      8,
      74,
      22,
      524,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      107,
      1,
      29,
      8,
      74,
      22,
      524,
      17
    ]
  },
  {
    "intent": [
      "delete",
      "column",
      "str_0",
      "from",
      "dataframe",
      "var_0"
    ],
    "code": [
      "var_0",
      "=",
      "var_0",
      ".",
      "drop",
      "(",
      "'str_0'",
      ",",
      "1",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "column_name",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      86,
      147,
      5,
      58,
      43,
      26
    ],
    "code_indx_copy": [
      34,
      19,
      34,
      22,
      187,
      1,
      29,
      8,
      15,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      34,
      22,
      187,
      1,
      29,
      8,
      15,
      17
    ]
  },
  {
    "intent": [
      "delete",
      "1st",
      ",",
      "2nd",
      "and",
      "4th",
      "columns",
      "from",
      "dataframe",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "drop",
      "(",
      "var_0",
      ".",
      "columns",
      "[",
      "[",
      "0",
      ",",
      "1",
      ",",
      "3",
      "]",
      "]",
      ",",
      "axis",
      "=",
      "1",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      86,
      465,
      62,
      465,
      31,
      465,
      61,
      58,
      43,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      187,
      1,
      34,
      22,
      192,
      12,
      12,
      43,
      8,
      15,
      8,
      54,
      16,
      16,
      8,
      42,
      19,
      15,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      187,
      1,
      34,
      22,
      192,
      12,
      12,
      43,
      8,
      15,
      8,
      54,
      16,
      16,
      8,
      42,
      19,
      15,
      17
    ]
  },
  {
    "intent": [
      "delete",
      "a",
      "column",
      "var_0",
      "without",
      "having",
      "to",
      "reassign",
      "from",
      "pandas",
      "data",
      "frame",
      "var_1"
    ],
    "code": [
      "var_1",
      ".",
      "drop",
      "(",
      "'var_0'",
      ",",
      "axis",
      "=",
      "1",
      ",",
      "inplace",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "column_name",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      86,
      3,
      147,
      26,
      103,
      92,
      8,
      465,
      58,
      42,
      65,
      66,
      63
    ],
    "code_indx_copy": [
      91,
      22,
      187,
      1,
      56,
      8,
      42,
      19,
      15,
      8,
      279,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      91,
      22,
      187,
      1,
      56,
      8,
      42,
      19,
      15,
      8,
      279,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "disable",
      "abbreviation",
      "in",
      "argparse"
    ],
    "code": [
      "parser",
      "=",
      "argparse",
      ".",
      "ArgumentParser",
      "(",
      "allow_abbrev",
      "=",
      "False",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      465,
      465,
      24,
      465
    ],
    "code_indx_copy": [
      376,
      19,
      531,
      22,
      524,
      1,
      524,
      19,
      87,
      17
    ],
    "code_indx_nocopy": [
      376,
      19,
      524,
      22,
      524,
      1,
      524,
      19,
      87,
      17
    ]
  },
  {
    "intent": [
      "extract",
      "dictionary",
      "values",
      "by",
      "key",
      "str_0",
      "from",
      "data",
      "frame",
      "var_0"
    ],
    "code": [
      "feature3",
      "=",
      "[",
      "d",
      ".",
      "get",
      "(",
      "'str_0'",
      ")",
      "for",
      "d",
      "in",
      "var_0",
      ".",
      "dic",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "Feature3",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      104,
      25,
      20,
      44,
      23,
      5,
      58,
      65,
      66,
      26
    ],
    "code_indx_copy": [
      524,
      19,
      12,
      2,
      22,
      86,
      1,
      29,
      17,
      7,
      2,
      9,
      34,
      22,
      524,
      16
    ],
    "code_indx_nocopy": [
      524,
      19,
      12,
      2,
      22,
      86,
      1,
      29,
      17,
      7,
      2,
      9,
      34,
      22,
      524,
      16
    ]
  },
  {
    "intent": [
      "get",
      "data",
      "of",
      "column",
      "str_0",
      "and",
      "column",
      "str_1",
      "in",
      "dataframe",
      "var_0",
      "where",
      "column",
      "str_0",
      "is",
      "equal",
      "to",
      "str_3"
    ],
    "code": [
      "var_0",
      ".",
      "loc",
      "[",
      "gb",
      ".",
      "groups",
      "[",
      "'str_3'",
      "]",
      ",",
      "(",
      "'str_2'",
      ",",
      "'str_1'",
      ")",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "A",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "B",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "str_2": {
        "value": "A",
        "quote": "'",
        "type": "str"
      },
      "str_3": {
        "value": "foo",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      65,
      2,
      147,
      5,
      31,
      147,
      32,
      24,
      43,
      26,
      155,
      147,
      5,
      152,
      106,
      8,
      219
    ],
    "code_indx_copy": [
      34,
      22,
      202,
      12,
      524,
      22,
      433,
      12,
      173,
      16,
      8,
      1,
      150,
      8,
      63,
      17,
      16
    ],
    "code_indx_nocopy": [
      34,
      22,
      202,
      12,
      524,
      22,
      433,
      12,
      173,
      16,
      8,
      1,
      150,
      8,
      63,
      17,
      16
    ]
  },
  {
    "intent": [
      "print",
      "str_0"
    ],
    "code": [
      "print",
      "(",
      "'[%s, %s, %s]'",
      "%",
      "(",
      "1",
      ",",
      "2",
      ",",
      "3",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "[1, 2, 3]",
        "quote": "'",
        "type": "str"
      },
      "[str_0]": {
        "value": "[1, 2, 3]",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      166,
      5
    ],
    "code_indx_copy": [
      49,
      1,
      524,
      117,
      1,
      15,
      8,
      82,
      8,
      54,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      524,
      117,
      1,
      15,
      8,
      82,
      8,
      54,
      17,
      17
    ]
  },
  {
    "intent": [
      "display",
      "str_0",
      "as",
      "a",
      "list",
      "of",
      "string"
    ],
    "code": [
      "print",
      "(",
      "'[{0}, {1}, {2}]'",
      ".",
      "format",
      "(",
      "1",
      ",",
      "2",
      ",",
      "3",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "1 2 3",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      363,
      5,
      90,
      3,
      4,
      2,
      14
    ],
    "code_indx_copy": [
      49,
      1,
      524,
      22,
      38,
      1,
      15,
      8,
      82,
      8,
      54,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      524,
      22,
      38,
      1,
      15,
      8,
      82,
      8,
      54,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "values",
      "from",
      "a",
      "dictionary",
      "var_0",
      "whose",
      "key",
      "contains",
      "the",
      "string",
      "var_1"
    ],
    "code": [
      "[",
      "v",
      "for",
      "k",
      ",",
      "v",
      "in",
      "list",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      "if",
      "'var_1'",
      "in",
      "k",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "my_dict",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "Date",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      20,
      58,
      3,
      25,
      26,
      228,
      23,
      75,
      18,
      14,
      63
    ],
    "code_indx_copy": [
      12,
      90,
      7,
      89,
      8,
      90,
      9,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      67,
      57,
      9,
      89,
      16
    ],
    "code_indx_nocopy": [
      12,
      90,
      7,
      89,
      8,
      90,
      9,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      67,
      57,
      9,
      89,
      16
    ]
  },
  {
    "intent": [
      "python",
      "date",
      "string",
      "formatting"
    ],
    "code": [
      "\"\"\"{0.month}/{0.day}/{0.year}\"\"\"",
      ".",
      "format",
      "(",
      "my_date",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      50,
      133,
      14,
      167
    ],
    "code_indx_copy": [
      524,
      22,
      38,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      38,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "drop",
      "a",
      "single",
      "subcolumn",
      "str_0",
      "in",
      "column",
      "str_1",
      "from",
      "a",
      "dataframe",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "drop",
      "(",
      "(",
      "'str_1'",
      ",",
      "'str_0'",
      ")",
      ",",
      "axis",
      "=",
      "1",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "a",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "col1",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      262,
      3,
      9,
      465,
      5,
      24,
      147,
      32,
      58,
      3,
      43,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      187,
      1,
      1,
      63,
      8,
      29,
      17,
      8,
      42,
      19,
      15,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      187,
      1,
      1,
      63,
      8,
      29,
      17,
      8,
      42,
      19,
      15,
      17
    ]
  },
  {
    "intent": [
      "dropping",
      "all",
      "columns",
      "named",
      "str_0",
      "from",
      "a",
      "multiindex",
      "str_1",
      ",",
      "across",
      "all",
      "level",
      "."
    ],
    "code": [
      "str_1",
      ".",
      "drop",
      "(",
      "'str_0'",
      ",",
      "level",
      "=",
      "1",
      ",",
      "axis",
      "=",
      "1",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "a",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "df",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      38,
      61,
      320,
      5,
      58,
      3,
      465,
      32,
      62,
      465,
      38,
      238,
      159
    ],
    "code_indx_copy": [
      37,
      22,
      187,
      1,
      29,
      8,
      158,
      19,
      15,
      8,
      42,
      19,
      15,
      17
    ],
    "code_indx_nocopy": [
      37,
      22,
      187,
      1,
      29,
      8,
      158,
      19,
      15,
      8,
      42,
      19,
      15,
      17
    ]
  },
  {
    "intent": [
      "build",
      "dictionary",
      "with",
      "keys",
      "of",
      "dictionary",
      "var_0",
      "as",
      "keys",
      "and",
      "values",
      "of",
      "returned",
      "value",
      "of",
      "function",
      "var_1",
      "with",
      "correlating",
      "key",
      "as",
      "parameter"
    ],
    "code": [
      "{",
      "_key",
      ":",
      "var_1",
      "(",
      "_key",
      ")",
      "for",
      "_key",
      "in",
      "var_0",
      "}"
    ],
    "slot_map": {
      "var_0": {
        "value": "_container",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "_value",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      25,
      79,
      206,
      2,
      25,
      26,
      90,
      206,
      31,
      20,
      2,
      465,
      143,
      2,
      69,
      63,
      79,
      465,
      23,
      90,
      372
    ],
    "code_indx_copy": [
      52,
      502,
      13,
      91,
      1,
      502,
      17,
      7,
      502,
      9,
      34,
      53
    ],
    "code_indx_nocopy": [
      52,
      502,
      13,
      91,
      1,
      502,
      17,
      7,
      502,
      9,
      34,
      53
    ]
  },
  {
    "intent": [
      "click",
      "on",
      "the",
      "text",
      "button",
      "str_0",
      "using",
      "selenium",
      "python"
    ],
    "code": [
      "browser",
      ".",
      "find_element_by_class_name",
      "(",
      "'str_0'",
      ")",
      ".",
      "click",
      "(",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "section-select-all",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      139,
      18,
      267,
      455,
      5,
      109,
      51,
      50
    ],
    "code_indx_copy": [
      362,
      22,
      524,
      1,
      29,
      17,
      22,
      156,
      1,
      17
    ],
    "code_indx_nocopy": [
      362,
      22,
      524,
      1,
      29,
      17,
      22,
      156,
      1,
      17
    ]
  },
  {
    "intent": [
      "combine",
      "two",
      "dictionaries",
      "str_0",
      "and",
      "var_0",
      ",",
      "concatenate",
      "string",
      "values",
      "with",
      "identical",
      "var_1"
    ],
    "code": [
      "dict",
      "(",
      "(",
      "k",
      ",",
      "str_0",
      ".",
      "get",
      "(",
      "k",
      ",",
      "''",
      ")",
      "+",
      "var_0",
      ".",
      "get",
      "(",
      "k",
      ",",
      "''",
      ")",
      ")",
      "for",
      "k",
      "in",
      "var_1",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "d",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "d1",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "keys",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      365,
      29,
      188,
      5,
      31,
      26,
      62,
      0,
      14,
      20,
      79,
      465,
      63
    ],
    "code_indx_copy": [
      70,
      1,
      1,
      89,
      8,
      11,
      22,
      86,
      1,
      89,
      8,
      21,
      17,
      96,
      34,
      22,
      86,
      1,
      89,
      8,
      21,
      17,
      17,
      7,
      89,
      9,
      91,
      17
    ],
    "code_indx_nocopy": [
      70,
      1,
      1,
      89,
      8,
      11,
      22,
      86,
      1,
      89,
      8,
      21,
      17,
      96,
      34,
      22,
      86,
      1,
      89,
      8,
      21,
      17,
      17,
      7,
      89,
      9,
      91,
      17
    ]
  },
  {
    "intent": [
      "generate",
      "unique",
      "equal",
      "hash",
      "for",
      "equal",
      "dictionaries",
      "var_0",
      "and",
      "var_1"
    ],
    "code": [
      "hash",
      "(",
      "pformat",
      "(",
      "var_0",
      ")",
      ")",
      "==",
      "hash",
      "(",
      "pformat",
      "(",
      "var_1",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "b",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      56,
      204,
      106,
      465,
      21,
      106,
      188,
      26,
      31,
      63
    ],
    "code_indx_copy": [
      531,
      1,
      524,
      1,
      34,
      17,
      17,
      76,
      531,
      1,
      524,
      1,
      91,
      17,
      17
    ],
    "code_indx_nocopy": [
      524,
      1,
      524,
      1,
      34,
      17,
      17,
      76,
      524,
      1,
      524,
      1,
      91,
      17,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "nested",
      "list",
      "of",
      "lists",
      "str_0",
      "into",
      "a",
      "list",
      "of",
      "tuples"
    ],
    "code": [
      "list",
      "(",
      "map",
      "(",
      "tuple",
      ",",
      "[",
      "str_0",
      "]",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "[['tom', 'cat'], ['jerry', 'mouse'], ['spark', 'dog']]",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "[['tom', 'cat'], ['jerry', 'mouse'], ['spark', 'dog']]",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      154,
      4,
      2,
      30,
      5,
      12,
      3,
      4,
      2,
      33
    ],
    "code_indx_copy": [
      33,
      1,
      24,
      1,
      432,
      8,
      12,
      11,
      16,
      17,
      17
    ],
    "code_indx_nocopy": [
      33,
      1,
      24,
      1,
      432,
      8,
      12,
      11,
      16,
      17,
      17
    ]
  },
  {
    "intent": [
      "sum",
      "the",
      "column",
      "var_0",
      "along",
      "the",
      "other",
      "columns",
      "var_1",
      ",",
      "var_2",
      ",",
      "var_3",
      "in",
      "a",
      "pandas",
      "data",
      "frame",
      "var_4"
    ],
    "code": [
      "var_4",
      ".",
      "groupby",
      "(",
      "[",
      "'var_1'",
      ",",
      "'var_2'",
      ",",
      "'var_3'",
      "]",
      ",",
      "as_index",
      "=",
      "False",
      ")",
      "[",
      "'var_0'",
      "]",
      ".",
      "sum",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "positions",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "stock",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "same1",
        "quote": "`",
        "type": "var"
      },
      "var_3": {
        "value": "same2",
        "quote": "`",
        "type": "var"
      },
      "var_4": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      112,
      18,
      147,
      26,
      465,
      18,
      193,
      61,
      63,
      62,
      64,
      62,
      67,
      24,
      3,
      42,
      65,
      66,
      465
    ],
    "code_indx_copy": [
      60,
      22,
      157,
      1,
      12,
      57,
      8,
      58,
      8,
      221,
      16,
      8,
      524,
      19,
      87,
      17,
      12,
      56,
      16,
      22,
      0,
      1,
      17
    ],
    "code_indx_nocopy": [
      60,
      22,
      157,
      1,
      12,
      57,
      8,
      58,
      8,
      221,
      16,
      8,
      524,
      19,
      87,
      17,
      12,
      56,
      16,
      22,
      0,
      1,
      17
    ]
  },
  {
    "intent": [
      "summing",
      "across",
      "rows",
      "of",
      "pandas",
      "dataframe"
    ],
    "code": [
      "df",
      ".",
      "groupby",
      "(",
      "[",
      "'stock'",
      ",",
      "'same1'",
      ",",
      "'same2'",
      "]",
      ")",
      "[",
      "'positions'",
      "]",
      ".",
      "sum",
      "(",
      ")",
      ".",
      "reset_index",
      "(",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      177,
      465,
      80,
      2,
      42,
      43
    ],
    "code_indx_copy": [
      149,
      22,
      157,
      1,
      12,
      524,
      8,
      524,
      8,
      524,
      16,
      17,
      12,
      524,
      16,
      22,
      0,
      1,
      17,
      22,
      186,
      1,
      17
    ],
    "code_indx_nocopy": [
      149,
      22,
      157,
      1,
      12,
      524,
      8,
      524,
      8,
      524,
      16,
      17,
      12,
      524,
      16,
      22,
      0,
      1,
      17,
      22,
      186,
      1,
      17
    ]
  },
  {
    "intent": [
      "change",
      "string",
      "var_0",
      "to",
      "upper",
      "case"
    ],
    "code": [
      "var_0",
      ".",
      "upper",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      221,
      14,
      26,
      8,
      465,
      197
    ],
    "code_indx_copy": [
      34,
      22,
      298,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      298,
      1,
      17
    ]
  },
  {
    "intent": [
      "split",
      "a",
      "string",
      "var_0",
      "by",
      "str_0",
      "and",
      "convert",
      "to",
      "a",
      "dictionary"
    ],
    "code": [
      "dict",
      "(",
      "item",
      ".",
      "split",
      "(",
      "'='",
      ")",
      "for",
      "item",
      "in",
      "var_0",
      ".",
      "split",
      "(",
      "'str_0'",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": ";",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      138,
      3,
      14,
      26,
      44,
      5,
      31,
      11,
      8,
      3,
      25
    ],
    "code_indx_copy": [
      70,
      1,
      387,
      22,
      71,
      1,
      524,
      17,
      7,
      387,
      9,
      34,
      22,
      71,
      1,
      29,
      17,
      17
    ],
    "code_indx_nocopy": [
      70,
      1,
      387,
      22,
      71,
      1,
      524,
      17,
      7,
      387,
      9,
      34,
      22,
      71,
      1,
      29,
      17,
      17
    ]
  },
  {
    "intent": [
      "add",
      "header",
      "str_0",
      "to",
      "mechanize",
      "browser",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "addheaders",
      "=",
      "[",
      "(",
      "str_0",
      ")",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "('Cookie', 'cookiename=cookie value')",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "br",
        "quote": "`",
        "type": "var"
      },
      "(str_0)": {
        "value": "('Cookie', 'cookiename=cookie value')",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      60,
      427,
      5,
      8,
      465,
      465,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      524,
      19,
      12,
      1,
      11,
      17,
      16
    ],
    "code_indx_nocopy": [
      34,
      22,
      524,
      19,
      12,
      1,
      11,
      17,
      16
    ]
  },
  {
    "intent": [
      "set",
      "data",
      "in",
      "column",
      "str_0",
      "of",
      "dataframe",
      "var_0",
      "equal",
      "to",
      "first",
      "element",
      "of",
      "each",
      "list"
    ],
    "code": [
      "var_0",
      "[",
      "'str_0'",
      "]",
      "=",
      "var_0",
      "[",
      "'str_0'",
      "]",
      ".",
      "str",
      "[",
      "0",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "value",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      59,
      65,
      24,
      147,
      5,
      2,
      43,
      26,
      106,
      8,
      151,
      49,
      2,
      22,
      4
    ],
    "code_indx_copy": [
      34,
      12,
      29,
      16,
      19,
      34,
      12,
      29,
      16,
      22,
      25,
      12,
      43,
      16
    ],
    "code_indx_nocopy": [
      34,
      12,
      29,
      16,
      19,
      34,
      12,
      29,
      16,
      22,
      25,
      12,
      43,
      16
    ]
  },
  {
    "intent": [
      "get",
      "element",
      "at",
      "index",
      "0",
      "of",
      "each",
      "list",
      "in",
      "column",
      "str_0",
      "of",
      "dataframe",
      "var_0"
    ],
    "code": [
      "var_0",
      "[",
      "'str_0'",
      "]",
      "=",
      "var_0",
      "[",
      "'str_0'",
      "]",
      ".",
      "str",
      ".",
      "get",
      "(",
      "0",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "value",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      49,
      35,
      37,
      107,
      2,
      22,
      4,
      24,
      147,
      5,
      2,
      43,
      26
    ],
    "code_indx_copy": [
      34,
      12,
      29,
      16,
      19,
      34,
      12,
      29,
      16,
      22,
      25,
      22,
      86,
      1,
      43,
      17
    ],
    "code_indx_nocopy": [
      34,
      12,
      29,
      16,
      19,
      34,
      12,
      29,
      16,
      22,
      25,
      22,
      86,
      1,
      43,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "square",
      "bracket",
      "str_0",
      "from",
      "pandas",
      "dataframe",
      "var_0",
      "column",
      "str_1"
    ],
    "code": [
      "var_0",
      "[",
      "'str_1'",
      "]",
      "=",
      "var_0",
      "[",
      "'str_1'",
      "]",
      ".",
      "str",
      ".",
      "strip",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "[]",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "str_1": {
        "value": "value",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      268,
      465,
      465,
      5,
      58,
      42,
      43,
      26,
      147,
      32
    ],
    "code_indx_copy": [
      34,
      12,
      63,
      16,
      19,
      34,
      12,
      63,
      16,
      22,
      25,
      22,
      170,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      34,
      12,
      63,
      16,
      19,
      34,
      12,
      63,
      16,
      22,
      25,
      22,
      170,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "string",
      "with",
      "string",
      "formatting",
      "from",
      "dictionary",
      "var_0"
    ],
    "code": [
      "\"\"\", \"\"\"",
      ".",
      "join",
      "(",
      "[",
      "'{}_{}'",
      ".",
      "format",
      "(",
      "k",
      ",",
      "v",
      ")",
      "for",
      "k",
      ",",
      "v",
      "in",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "d",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      3,
      14,
      79,
      14,
      167,
      58,
      25,
      26
    ],
    "code_indx_copy": [
      122,
      22,
      23,
      1,
      12,
      524,
      22,
      38,
      1,
      89,
      8,
      90,
      17,
      7,
      89,
      8,
      90,
      9,
      34,
      22,
      35,
      1,
      17,
      16,
      17
    ],
    "code_indx_nocopy": [
      122,
      22,
      23,
      1,
      12,
      524,
      22,
      38,
      1,
      89,
      8,
      90,
      17,
      7,
      89,
      8,
      90,
      9,
      34,
      22,
      35,
      1,
      17,
      16,
      17
    ]
  },
  {
    "intent": [
      "sum",
      "of",
      "sums",
      "of",
      "each",
      "list",
      ",",
      "in",
      "a",
      "list",
      "of",
      "lists",
      "named",
      "str_0",
      "."
    ],
    "code": [
      "sum",
      "(",
      "sum",
      "(",
      "x",
      ")",
      "for",
      "x",
      "in",
      "str_0",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "lists",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      112,
      2,
      465,
      2,
      22,
      4,
      62,
      24,
      3,
      4,
      2,
      30,
      320,
      5,
      159
    ],
    "code_indx_copy": [
      0,
      1,
      0,
      1,
      26,
      17,
      7,
      26,
      9,
      11,
      17
    ],
    "code_indx_nocopy": [
      0,
      1,
      0,
      1,
      26,
      17,
      7,
      26,
      9,
      11,
      17
    ]
  },
  {
    "intent": [
      "check",
      "whether",
      "a",
      "numpy",
      "array",
      "var_0",
      "contains",
      "a",
      "given",
      "row",
      "str_0"
    ],
    "code": [
      "any",
      "(",
      "np",
      ".",
      "equal",
      "(",
      "var_0",
      ",",
      "[",
      "str_0",
      "]",
      ")",
      ".",
      "all",
      "(",
      "1",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "[1, 2]",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "[1, 2]",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      234,
      359,
      3,
      84,
      85,
      26,
      75,
      3,
      273,
      45,
      5
    ],
    "code_indx_copy": [
      269,
      1,
      74,
      22,
      524,
      1,
      34,
      8,
      12,
      11,
      16,
      17,
      22,
      77,
      1,
      15,
      17,
      17
    ],
    "code_indx_nocopy": [
      269,
      1,
      74,
      22,
      524,
      1,
      34,
      8,
      12,
      11,
      16,
      17,
      22,
      77,
      1,
      15,
      17,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "all",
      "elements",
      "in",
      "list",
      "var_0",
      "are",
      "the",
      "same"
    ],
    "code": [
      "len",
      "(",
      "set",
      "(",
      "var_0",
      ")",
      ")",
      "==",
      "1"
    ],
    "slot_map": {
      "var_0": {
        "value": "mylist",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      234,
      150,
      38,
      1,
      24,
      4,
      26,
      243,
      18,
      36
    ],
    "code_indx_copy": [
      32,
      1,
      189,
      1,
      34,
      17,
      17,
      76,
      15
    ],
    "code_indx_nocopy": [
      32,
      1,
      189,
      1,
      34,
      17,
      17,
      76,
      15
    ]
  },
  {
    "intent": [
      "split",
      "a",
      "string",
      "var_0",
      "at",
      "line",
      "breaks",
      "str_0"
    ],
    "code": [
      "[",
      "map",
      "(",
      "int",
      ",",
      "x",
      ".",
      "split",
      "(",
      "'\\t'",
      ")",
      ")",
      "for",
      "x",
      "in",
      "var_0",
      ".",
      "rstrip",
      "(",
      ")",
      ".",
      "split",
      "(",
      "'str_0'",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "\r\n",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      138,
      3,
      14,
      26,
      35,
      172,
      465,
      5
    ],
    "code_indx_copy": [
      12,
      24,
      1,
      20,
      8,
      26,
      22,
      71,
      1,
      265,
      17,
      17,
      7,
      26,
      9,
      34,
      22,
      172,
      1,
      17,
      22,
      71,
      1,
      29,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      24,
      1,
      20,
      8,
      26,
      22,
      71,
      1,
      265,
      17,
      17,
      7,
      26,
      9,
      34,
      22,
      172,
      1,
      17,
      22,
      71,
      1,
      29,
      17,
      16
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "dictionary",
      "var_0",
      "by",
      "values",
      "that",
      "are",
      "list",
      "type"
    ],
    "code": [
      "t",
      "=",
      "sorted",
      "(",
      "list",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      ",",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "x",
      "[",
      "1",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      3,
      25,
      26,
      44,
      20,
      195,
      243,
      4,
      330
    ],
    "code_indx_copy": [
      45,
      19,
      101,
      1,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      8,
      102,
      19,
      44,
      26,
      13,
      26,
      12,
      15,
      16,
      17
    ],
    "code_indx_nocopy": [
      45,
      19,
      101,
      1,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      8,
      102,
      19,
      44,
      26,
      13,
      26,
      12,
      15,
      16,
      17
    ]
  },
  {
    "intent": [
      "search",
      "for",
      "string",
      "str_0",
      "in",
      "txt",
      "file",
      "str_1"
    ],
    "code": [
      "if",
      "'str_0'",
      "in",
      "open",
      "(",
      "'str_1'",
      ")",
      ".",
      "read",
      "(",
      ")",
      ":",
      "\n",
      "    ",
      "pass",
      ""
    ],
    "slot_map": {
      "str_0": {
        "value": "blabla",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "example.txt",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      71,
      21,
      14,
      5,
      24,
      465,
      126,
      32
    ],
    "code_indx_copy": [
      67,
      29,
      9,
      105,
      1,
      63,
      17,
      22,
      106,
      1,
      17,
      13,
      161,
      216,
      217,
      218
    ],
    "code_indx_nocopy": [
      67,
      29,
      9,
      105,
      1,
      63,
      17,
      22,
      106,
      1,
      17,
      13,
      161,
      216,
      217,
      218
    ]
  },
  {
    "intent": [
      "search",
      "for",
      "string",
      "str_0",
      "in",
      "txt",
      "file",
      "str_1"
    ],
    "code": [
      "f",
      "=",
      "open",
      "(",
      "'str_1'",
      ")",
      "\n",
      "s",
      "=",
      "mmap",
      ".",
      "mmap",
      "(",
      "f",
      ".",
      "fileno",
      "(",
      ")",
      ",",
      "0",
      ",",
      "access",
      "=",
      "mmap",
      ".",
      "ACCESS_READ",
      ")",
      "\n",
      "if",
      "s",
      ".",
      "find",
      "(",
      "'str_0'",
      ")",
      "!=",
      "-",
      "1",
      ":",
      "\n",
      "    ",
      "pass",
      ""
    ],
    "slot_map": {
      "str_0": {
        "value": "blabla",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "example.txt",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      71,
      21,
      14,
      5,
      24,
      465,
      126,
      32
    ],
    "code_indx_copy": [
      190,
      19,
      105,
      1,
      63,
      17,
      161,
      181,
      19,
      503,
      22,
      503,
      1,
      190,
      22,
      524,
      1,
      17,
      8,
      43,
      8,
      524,
      19,
      503,
      22,
      524,
      17,
      161,
      67,
      181,
      22,
      282,
      1,
      29,
      17,
      88,
      14,
      15,
      13,
      161,
      216,
      217,
      218
    ],
    "code_indx_nocopy": [
      190,
      19,
      105,
      1,
      63,
      17,
      161,
      181,
      19,
      503,
      22,
      503,
      1,
      190,
      22,
      524,
      1,
      17,
      8,
      43,
      8,
      524,
      19,
      503,
      22,
      524,
      17,
      161,
      67,
      181,
      22,
      282,
      1,
      29,
      17,
      88,
      14,
      15,
      13,
      161,
      216,
      217,
      218
    ]
  },
  {
    "intent": [
      "search",
      "for",
      "string",
      "var_0",
      "in",
      "txt",
      "file",
      "str_0"
    ],
    "code": [
      "datafile",
      "=",
      "file",
      "(",
      "'str_0'",
      ")",
      "\n",
      "found",
      "=",
      "False",
      "\n",
      "for",
      "line",
      "in",
      "datafile",
      ":",
      "\n",
      "    ",
      "if",
      "var_0",
      "in",
      "line",
      ":",
      "\n",
      "        ",
      "return",
      "True",
      "\n",
      "",
      "",
      "return",
      "False"
    ],
    "slot_map": {
      "var_0": {
        "value": "blabla",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "example.txt",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      71,
      21,
      14,
      26,
      24,
      465,
      126,
      5
    ],
    "code_indx_copy": [
      524,
      19,
      403,
      1,
      29,
      17,
      161,
      524,
      19,
      87,
      161,
      7,
      315,
      9,
      524,
      13,
      161,
      216,
      67,
      34,
      9,
      315,
      13,
      161,
      368,
      118,
      109,
      161,
      218,
      218,
      118,
      87
    ],
    "code_indx_nocopy": [
      524,
      19,
      403,
      1,
      29,
      17,
      161,
      524,
      19,
      87,
      161,
      7,
      315,
      9,
      524,
      13,
      161,
      216,
      67,
      34,
      9,
      315,
      13,
      161,
      368,
      118,
      109,
      161,
      218,
      218,
      118,
      87
    ]
  },
  {
    "intent": [
      "insert",
      "string",
      "var_0",
      "after",
      "each",
      "character",
      "of",
      "var_1"
    ],
    "code": [
      "var_1",
      ".",
      "replace",
      "(",
      "''",
      ",",
      "var_0",
      ")",
      "[",
      "len",
      "(",
      "var_0",
      ")",
      ":",
      "-",
      "len",
      "(",
      "var_0",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "string1",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "string2",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      277,
      14,
      26,
      201,
      22,
      202,
      2,
      63
    ],
    "code_indx_copy": [
      91,
      22,
      107,
      1,
      21,
      8,
      34,
      17,
      12,
      32,
      1,
      34,
      17,
      13,
      14,
      32,
      1,
      34,
      17,
      16
    ],
    "code_indx_nocopy": [
      91,
      22,
      107,
      1,
      21,
      8,
      34,
      17,
      12,
      32,
      1,
      34,
      17,
      13,
      14,
      32,
      1,
      34,
      17,
      16
    ]
  },
  {
    "intent": [
      "getting",
      "every",
      "possible",
      "combination",
      "of",
      "two",
      "elements",
      "in",
      "a",
      "list"
    ],
    "code": [
      "list",
      "(",
      "itertools",
      ".",
      "combinations",
      "(",
      "[",
      "1",
      ",",
      "2",
      ",",
      "3",
      ",",
      "4",
      ",",
      "5",
      ",",
      "6",
      "]",
      ",",
      "2",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      402,
      279,
      465,
      382,
      2,
      29,
      1,
      24,
      3,
      4
    ],
    "code_indx_copy": [
      33,
      1,
      50,
      22,
      51,
      1,
      12,
      15,
      8,
      82,
      8,
      54,
      8,
      184,
      8,
      185,
      8,
      249,
      16,
      8,
      82,
      17,
      17
    ],
    "code_indx_nocopy": [
      33,
      1,
      50,
      22,
      51,
      1,
      12,
      15,
      8,
      82,
      8,
      54,
      8,
      184,
      8,
      185,
      8,
      249,
      16,
      8,
      82,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "utf-8",
      "string",
      "literal",
      "representation",
      "of",
      "byte",
      "string",
      "var_0"
    ],
    "code": [
      "\"\"\"x = {}\"\"\"",
      ".",
      "format",
      "(",
      "var_0",
      ".",
      "decode",
      "(",
      "'utf8'",
      ")",
      ")",
      ".",
      "encode",
      "(",
      "'utf8'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "x",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      3,
      183,
      14,
      314,
      465,
      2,
      229,
      14,
      26
    ],
    "code_indx_copy": [
      524,
      22,
      38,
      1,
      34,
      22,
      99,
      1,
      200,
      17,
      17,
      22,
      239,
      1,
      200,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      38,
      1,
      34,
      22,
      99,
      1,
      200,
      17,
      17,
      22,
      239,
      1,
      200,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "var_0",
      "is",
      "an",
      "integer"
    ],
    "code": [
      "isinstance",
      "(",
      "var_0",
      ",",
      "int",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "x",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      234,
      150,
      26,
      152,
      225,
      10
    ],
    "code_indx_copy": [
      206,
      1,
      34,
      8,
      20,
      17
    ],
    "code_indx_nocopy": [
      206,
      1,
      34,
      8,
      20,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "var_0",
      "is",
      "an",
      "integer"
    ],
    "code": [
      "type",
      "(",
      "var_0",
      ")",
      "==",
      "int"
    ],
    "slot_map": {
      "var_0": {
        "value": "x",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      234,
      150,
      26,
      152,
      225,
      10
    ],
    "code_indx_copy": [
      524,
      1,
      34,
      17,
      76,
      20
    ],
    "code_indx_nocopy": [
      524,
      1,
      34,
      17,
      76,
      20
    ]
  },
  {
    "intent": [
      "play",
      "the",
      "wav",
      "file",
      "str_0"
    ],
    "code": [
      "winsound",
      ".",
      "PlaySound",
      "(",
      "'str_0'",
      ",",
      "winsound",
      ".",
      "SND_FILENAME",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "sound.wav",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      18,
      465,
      126,
      5
    ],
    "code_indx_copy": [
      524,
      22,
      524,
      1,
      29,
      8,
      524,
      22,
      524,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      524,
      1,
      29,
      8,
      524,
      22,
      524,
      17
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "list",
      "containing",
      "the",
      "var_0",
      "next",
      "values",
      "of",
      "generator",
      "var_1"
    ],
    "code": [
      "[",
      "next",
      "(",
      "var_1",
      ")",
      "for",
      "_",
      "in",
      "range",
      "(",
      "var_0",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "n",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "it",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      148,
      3,
      4,
      34,
      18,
      26,
      48,
      20,
      2,
      141,
      63
    ],
    "code_indx_copy": [
      12,
      496,
      1,
      91,
      17,
      7,
      470,
      9,
      104,
      1,
      34,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      496,
      1,
      91,
      17,
      7,
      470,
      9,
      104,
      1,
      34,
      17,
      16
    ]
  },
  {
    "intent": [
      "get",
      "list",
      "of",
      "n",
      "next",
      "values",
      "of",
      "a",
      "generator",
      "var_0"
    ],
    "code": [
      "list",
      "(",
      "itertools",
      ".",
      "islice",
      "(",
      "var_0",
      ",",
      "0",
      ",",
      "n",
      ",",
      "1",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "it",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      4,
      2,
      465,
      48,
      20,
      2,
      3,
      141,
      26
    ],
    "code_indx_copy": [
      33,
      1,
      50,
      22,
      524,
      1,
      34,
      8,
      43,
      8,
      307,
      8,
      15,
      17,
      17
    ],
    "code_indx_nocopy": [
      33,
      1,
      50,
      22,
      524,
      1,
      34,
      8,
      43,
      8,
      307,
      8,
      15,
      17,
      17
    ]
  },
  {
    "intent": [
      "compare",
      "two",
      "lists",
      "in",
      "python",
      "var_0",
      "and",
      "var_1",
      "and",
      "return",
      "matches"
    ],
    "code": [
      "set",
      "(",
      "var_0",
      ")",
      ".",
      "intersection",
      "(",
      "var_1",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "b",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      29,
      30,
      24,
      50,
      26,
      31,
      63,
      31,
      160,
      108
    ],
    "code_indx_copy": [
      189,
      1,
      34,
      17,
      22,
      270,
      1,
      91,
      17
    ],
    "code_indx_nocopy": [
      189,
      1,
      34,
      17,
      22,
      270,
      1,
      91,
      17
    ]
  },
  {
    "intent": [
      "how",
      "can",
      "i",
      "compare",
      "two",
      "lists",
      "in",
      "python",
      "and",
      "return",
      "matches"
    ],
    "code": [
      "[",
      "i",
      "for",
      "i",
      ",",
      "j",
      "in",
      "zip",
      "(",
      "a",
      ",",
      "b",
      ")",
      "if",
      "i",
      "==",
      "j",
      "]"
    ],
    "slot_map": {},
    "intent_indx": [
      77,
      386,
      328,
      465,
      29,
      30,
      24,
      50,
      31,
      160,
      108
    ],
    "code_indx_copy": [
      12,
      6,
      7,
      6,
      8,
      30,
      9,
      36,
      1,
      95,
      8,
      97,
      17,
      67,
      6,
      76,
      30,
      16
    ],
    "code_indx_nocopy": [
      12,
      6,
      7,
      6,
      8,
      30,
      9,
      36,
      1,
      95,
      8,
      97,
      17,
      67,
      6,
      76,
      30,
      16
    ]
  },
  {
    "intent": [
      "convert",
      "list",
      "var_0",
      "into",
      "a",
      "string",
      "of",
      "its",
      "elements"
    ],
    "code": [
      "print",
      "(",
      "''",
      ".",
      "join",
      "(",
      "map",
      "(",
      "str",
      ",",
      "var_0",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "data",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      4,
      26,
      12,
      3,
      14,
      2,
      91,
      1
    ],
    "code_indx_copy": [
      49,
      1,
      21,
      22,
      23,
      1,
      24,
      1,
      25,
      8,
      34,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      21,
      22,
      23,
      1,
      24,
      1,
      25,
      8,
      34,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "match",
      "regex",
      "pattern",
      "str_0",
      "on",
      "string",
      "str_1"
    ],
    "code": [
      "re",
      ".",
      "match",
      "(",
      "'str_0'",
      ",",
      "'str_1'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "\\$[0-9]+[^\\$]*$",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "$1 off delicious $5 ham.",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      144,
      40,
      54,
      5,
      139,
      14,
      32
    ],
    "code_indx_copy": [
      39,
      22,
      123,
      1,
      29,
      8,
      63,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      123,
      1,
      29,
      8,
      63,
      17
    ]
  },
  {
    "intent": [
      "import",
      "a",
      "nested",
      "module",
      "str_0",
      "within",
      "var_0",
      "within",
      "var_1",
      "with",
      "importlib"
    ],
    "code": [
      "importlib",
      ".",
      "import_module",
      "(",
      "'.c'",
      ",",
      "'a.b'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "c.py",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "b",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      3,
      154,
      342,
      5,
      55,
      26,
      55,
      63,
      79,
      465
    ],
    "code_indx_copy": [
      285,
      22,
      286,
      1,
      524,
      8,
      524,
      17
    ],
    "code_indx_nocopy": [
      285,
      22,
      286,
      1,
      524,
      8,
      524,
      17
    ]
  },
  {
    "intent": [
      "import",
      "a",
      "module",
      "str_0",
      "with",
      "importlib.import_module",
      "in",
      "python",
      "2"
    ],
    "code": [
      "importlib",
      ".",
      "import_module",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "a.b.c",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      3,
      342,
      5,
      79,
      465,
      24,
      50,
      82
    ],
    "code_indx_copy": [
      285,
      22,
      286,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      285,
      22,
      286,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "array",
      "var_0",
      "to",
      "numpy",
      "array"
    ],
    "code": [
      "var_0",
      "=",
      "np",
      ".",
      "array",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      85,
      26,
      8,
      84,
      85
    ],
    "code_indx_copy": [
      34,
      19,
      74,
      22,
      175,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      74,
      22,
      175,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "find",
      "all",
      "var_0",
      "tags",
      "whose",
      "classes",
      "has",
      "the",
      "value",
      "str_0",
      "in",
      "a",
      "beautiful",
      "soup",
      "object",
      "var_1"
    ],
    "code": [
      "var_1",
      ".",
      "find_all",
      "(",
      "'var_0'",
      ",",
      "class_",
      "=",
      "re",
      ".",
      "compile",
      "(",
      "'str_0'",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "div",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "comment-",
        "quote": "`",
        "type": "str"
      },
      "var_1": {
        "value": "soup",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      47,
      38,
      26,
      392,
      228,
      465,
      337,
      18,
      143,
      5,
      24,
      3,
      465,
      465,
      15,
      63
    ],
    "code_indx_copy": [
      91,
      22,
      62,
      1,
      56,
      8,
      524,
      19,
      39,
      22,
      83,
      1,
      29,
      17,
      17
    ],
    "code_indx_nocopy": [
      91,
      22,
      62,
      1,
      56,
      8,
      524,
      19,
      39,
      22,
      83,
      1,
      29,
      17,
      17
    ]
  },
  {
    "intent": [
      "a",
      "sequence",
      "of",
      "empty",
      "lists",
      "of",
      "length",
      "var_0"
    ],
    "code": [
      "[",
      "[",
      "]",
      "for",
      "_",
      "in",
      "range",
      "(",
      "var_0",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "n",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      3,
      445,
      2,
      146,
      30,
      2,
      209,
      26
    ],
    "code_indx_copy": [
      12,
      12,
      16,
      7,
      470,
      9,
      104,
      1,
      34,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      12,
      16,
      7,
      470,
      9,
      104,
      1,
      34,
      17,
      16
    ]
  },
  {
    "intent": [
      "create",
      "dictionary",
      "from",
      "list",
      "of",
      "variables",
      "str_0",
      "and",
      "str_1",
      "already",
      "defined"
    ],
    "code": [
      "dict",
      "(",
      "(",
      "k",
      ",",
      "globals",
      "(",
      ")",
      "[",
      "k",
      "]",
      ")",
      "for",
      "k",
      "in",
      "(",
      "'str_0'",
      ",",
      "'str_1'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "foo",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "bar",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      148,
      25,
      58,
      4,
      2,
      306,
      5,
      31,
      32,
      465,
      465
    ],
    "code_indx_copy": [
      70,
      1,
      1,
      89,
      8,
      284,
      1,
      17,
      12,
      89,
      16,
      17,
      7,
      89,
      9,
      1,
      29,
      8,
      63,
      17,
      17
    ],
    "code_indx_nocopy": [
      70,
      1,
      1,
      89,
      8,
      284,
      1,
      17,
      12,
      89,
      16,
      17,
      7,
      89,
      9,
      1,
      29,
      8,
      63,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "two",
      "random",
      "records",
      "from",
      "model",
      "str_0",
      "in",
      "django"
    ],
    "code": [
      "str_0",
      ".",
      "objects",
      ".",
      "order_by",
      "(",
      "'?'",
      ")",
      "[",
      ":",
      "2",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "MyModel",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      29,
      190,
      374,
      58,
      313,
      5,
      24,
      87
    ],
    "code_indx_copy": [
      11,
      22,
      78,
      22,
      136,
      1,
      241,
      17,
      12,
      13,
      82,
      16
    ],
    "code_indx_nocopy": [
      11,
      22,
      78,
      22,
      136,
      1,
      241,
      17,
      12,
      13,
      82,
      16
    ]
  },
  {
    "intent": [
      "print",
      "a",
      "dictionary",
      "str_0",
      "with",
      "string",
      "formatting"
    ],
    "code": [
      "\"\"\"Hello {user[name]}\"\"\"",
      ".",
      "format",
      "(",
      "**",
      "{",
      "str_0",
      "}",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "{'user': {'name': 'Markus'}}",
        "quote": "`",
        "type": "str"
      },
      "{str_0}": {
        "value": "{'user': {'name': 'Markus'}}",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      166,
      3,
      25,
      5,
      79,
      14,
      167
    ],
    "code_indx_copy": [
      524,
      22,
      38,
      1,
      5,
      52,
      11,
      53,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      38,
      1,
      5,
      52,
      11,
      53,
      17
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "dictionary",
      "var_0",
      "containing",
      "each",
      "tuple",
      "in",
      "list",
      "var_1",
      "as",
      "values",
      "and",
      "the",
      "tuple",
      "'s",
      "first",
      "element",
      "as",
      "the",
      "corresponding",
      "key"
    ],
    "code": [
      "var_0",
      "=",
      "{",
      "t",
      "[",
      "0",
      "]",
      ":",
      "t",
      "for",
      "t",
      "in",
      "var_1",
      "}"
    ],
    "slot_map": {
      "var_0": {
        "value": "list_dict",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "tuple_list",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      148,
      3,
      25,
      26,
      34,
      22,
      113,
      24,
      4,
      63,
      90,
      20,
      31,
      18,
      113,
      266,
      151,
      49,
      90,
      18,
      347,
      23
    ],
    "code_indx_copy": [
      34,
      19,
      52,
      45,
      12,
      43,
      16,
      13,
      45,
      7,
      45,
      9,
      91,
      53
    ],
    "code_indx_nocopy": [
      34,
      19,
      52,
      45,
      12,
      43,
      16,
      13,
      45,
      7,
      45,
      9,
      91,
      53
    ]
  },
  {
    "intent": [
      "generate",
      "a",
      "random",
      "integer",
      "between",
      "0",
      "and",
      "9"
    ],
    "code": [
      "randint",
      "(",
      "0",
      ",",
      "9",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      56,
      3,
      190,
      10,
      278,
      107,
      31,
      403
    ],
    "code_indx_copy": [
      299,
      1,
      43,
      8,
      371,
      17
    ],
    "code_indx_nocopy": [
      299,
      1,
      43,
      8,
      371,
      17
    ]
  },
  {
    "intent": [
      "generate",
      "a",
      "random",
      "integer",
      "between",
      "var_0",
      "and",
      "var_1"
    ],
    "code": [
      "random",
      ".",
      "randint",
      "(",
      "var_0",
      ",",
      "var_1",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "b",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      56,
      3,
      190,
      10,
      278,
      26,
      31,
      63
    ],
    "code_indx_copy": [
      148,
      22,
      299,
      1,
      34,
      8,
      91,
      17
    ],
    "code_indx_nocopy": [
      148,
      22,
      299,
      1,
      34,
      8,
      91,
      17
    ]
  },
  {
    "intent": [
      "generate",
      "random",
      "integers",
      "between",
      "0",
      "and",
      "9"
    ],
    "code": [
      "print",
      "(",
      "random",
      ".",
      "randint",
      "(",
      "0",
      ",",
      "9",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      56,
      190,
      7,
      278,
      107,
      31,
      403
    ],
    "code_indx_copy": [
      49,
      1,
      148,
      22,
      299,
      1,
      43,
      8,
      371,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      148,
      22,
      299,
      1,
      43,
      8,
      371,
      17,
      17
    ]
  },
  {
    "intent": [
      "reverse",
      "a",
      "string",
      "var_0",
      "by",
      "2",
      "characters",
      "at",
      "a",
      "time"
    ],
    "code": [
      "\"\"\"\"\"\"",
      ".",
      "join",
      "(",
      "reversed",
      "(",
      "[",
      "var_0",
      "[",
      "i",
      ":",
      "i",
      "+",
      "2",
      "]",
      "for",
      "i",
      "in",
      "range",
      "(",
      "0",
      ",",
      "len",
      "(",
      "var_0",
      ")",
      ",",
      "2",
      ")",
      "]",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      282,
      3,
      14,
      26,
      44,
      82,
      98,
      35,
      3,
      134
    ],
    "code_indx_copy": [
      287,
      22,
      23,
      1,
      246,
      1,
      12,
      34,
      12,
      6,
      13,
      6,
      96,
      82,
      16,
      7,
      6,
      9,
      104,
      1,
      43,
      8,
      32,
      1,
      34,
      17,
      8,
      82,
      17,
      16,
      17,
      17
    ],
    "code_indx_nocopy": [
      287,
      22,
      23,
      1,
      246,
      1,
      12,
      34,
      12,
      6,
      13,
      6,
      96,
      82,
      16,
      7,
      6,
      9,
      104,
      1,
      43,
      8,
      32,
      1,
      34,
      17,
      8,
      82,
      17,
      16,
      17,
      17
    ]
  },
  {
    "intent": [
      "transform",
      "time",
      "series",
      "var_0",
      "into",
      "a",
      "pivot",
      "table",
      "aggregated",
      "by",
      "column",
      "str_0",
      "using",
      "column",
      "str_1",
      "as",
      "index",
      "and",
      "values",
      "of",
      "column",
      "str_2",
      "as",
      "columns"
    ],
    "code": [
      "pd",
      ".",
      "pivot_table",
      "(",
      "var_0",
      ",",
      "index",
      "=",
      "var_0",
      ".",
      "index",
      ".",
      "date",
      ",",
      "columns",
      "=",
      "var_0",
      ".",
      "index",
      ".",
      "time",
      ",",
      "\n",
      "values",
      "=",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "Close",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "df.index.date",
        "quote": "`",
        "type": "str"
      },
      "str_2": {
        "value": "df.index.time",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      134,
      339,
      26,
      12,
      3,
      387,
      388,
      465,
      44,
      147,
      5,
      109,
      147,
      32,
      90,
      37,
      31,
      20,
      2,
      147,
      194,
      90,
      61
    ],
    "code_indx_copy": [
      162,
      22,
      337,
      1,
      34,
      8,
      160,
      19,
      34,
      22,
      160,
      22,
      139,
      8,
      192,
      19,
      34,
      22,
      160,
      22,
      84,
      8,
      161,
      166,
      19,
      29,
      17
    ],
    "code_indx_nocopy": [
      162,
      22,
      337,
      1,
      34,
      8,
      160,
      19,
      34,
      22,
      160,
      22,
      139,
      8,
      192,
      19,
      34,
      22,
      160,
      22,
      84,
      8,
      161,
      166,
      19,
      29,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "the",
      "third",
      "element",
      "of",
      "all",
      "the",
      "lists",
      "in",
      "a",
      "list",
      "str_0",
      "is",
      "equal",
      "to",
      "zero",
      "."
    ],
    "code": [
      "any",
      "(",
      "item",
      "[",
      "2",
      "]",
      "==",
      "0",
      "for",
      "item",
      "in",
      "str_0",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "items",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      234,
      150,
      18,
      120,
      49,
      2,
      38,
      18,
      30,
      24,
      3,
      4,
      5,
      152,
      106,
      8,
      261,
      159
    ],
    "code_indx_copy": [
      269,
      1,
      387,
      12,
      82,
      16,
      76,
      43,
      7,
      387,
      9,
      11,
      17
    ],
    "code_indx_nocopy": [
      269,
      1,
      387,
      12,
      82,
      16,
      76,
      43,
      7,
      387,
      9,
      11,
      17
    ]
  },
  {
    "intent": [
      "find",
      "all",
      "the",
      "lists",
      "from",
      "a",
      "lists",
      "of",
      "list",
      "str_0",
      "if",
      "third",
      "element",
      "in",
      "all",
      "sub-lists",
      "is",
      "str_1"
    ],
    "code": [
      "[",
      "x",
      "for",
      "x",
      "in",
      "str_0",
      "if",
      "x",
      "[",
      "2",
      "]",
      "==",
      "0",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "items",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "0",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      47,
      38,
      18,
      30,
      58,
      3,
      30,
      2,
      4,
      5,
      150,
      120,
      49,
      24,
      38,
      465,
      152,
      32
    ],
    "code_indx_copy": [
      12,
      26,
      7,
      26,
      9,
      11,
      67,
      26,
      12,
      82,
      16,
      76,
      43,
      16
    ],
    "code_indx_nocopy": [
      12,
      26,
      7,
      26,
      9,
      11,
      67,
      26,
      12,
      82,
      16,
      76,
      43,
      16
    ]
  },
  {
    "intent": [
      "sort",
      "dictionary",
      "of",
      "dictionaries",
      "var_0",
      "according",
      "to",
      "the",
      "key",
      "str_0"
    ],
    "code": [
      "sorted",
      "(",
      "list",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      ",",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "x",
      "[",
      "1",
      "]",
      "[",
      "'str_0'",
      "]",
      ",",
      "reverse",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "dic",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "Fisher",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      117,
      25,
      2,
      188,
      26,
      378,
      8,
      18,
      23,
      5
    ],
    "code_indx_copy": [
      101,
      1,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      8,
      102,
      19,
      44,
      26,
      13,
      26,
      12,
      15,
      16,
      12,
      29,
      16,
      8,
      129,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      8,
      102,
      19,
      44,
      26,
      13,
      26,
      12,
      15,
      16,
      12,
      29,
      16,
      8,
      129,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "plot",
      "a",
      "data",
      "logarithmically",
      "in",
      "y",
      "axis"
    ],
    "code": [
      "plt",
      ".",
      "yscale",
      "(",
      "'log'",
      ",",
      "nonposy",
      "=",
      "'clip'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      244,
      3,
      65,
      465,
      24,
      465,
      450
    ],
    "code_indx_copy": [
      196,
      22,
      524,
      1,
      524,
      8,
      524,
      19,
      524,
      17
    ],
    "code_indx_nocopy": [
      196,
      22,
      524,
      1,
      524,
      8,
      524,
      19,
      524,
      17
    ]
  },
  {
    "intent": [
      "extract",
      "digits",
      "in",
      "a",
      "simple",
      "way",
      "from",
      "a",
      "python",
      "string"
    ],
    "code": [
      "map",
      "(",
      "int",
      ",",
      "re",
      ".",
      "findall",
      "(",
      "'\\\\d+'",
      ",",
      "s",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      104,
      200,
      24,
      3,
      465,
      449,
      58,
      3,
      50,
      14
    ],
    "code_indx_copy": [
      24,
      1,
      20,
      8,
      39,
      22,
      48,
      1,
      443,
      8,
      181,
      17,
      17
    ],
    "code_indx_nocopy": [
      24,
      1,
      20,
      8,
      39,
      22,
      48,
      1,
      443,
      8,
      181,
      17,
      17
    ]
  },
  {
    "intent": [
      "list",
      "the",
      "contents",
      "of",
      "a",
      "directory",
      "str_0"
    ],
    "code": [
      "os",
      ".",
      "listdir",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "/home/username/www/",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      4,
      18,
      125,
      2,
      3,
      175,
      5
    ],
    "code_indx_copy": [
      113,
      22,
      198,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      198,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "list",
      "all",
      "the",
      "contents",
      "of",
      "the",
      "directory",
      "str_0",
      "."
    ],
    "code": [
      "os",
      ".",
      "listdir",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "path",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      4,
      38,
      18,
      125,
      2,
      18,
      175,
      5,
      159
    ],
    "code_indx_copy": [
      113,
      22,
      198,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      198,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "merge",
      "a",
      "pandas",
      "data",
      "frame",
      "var_0",
      "and",
      "column",
      "var_1",
      "in",
      "pandas",
      "data",
      "frame",
      "var_2",
      "into",
      "single"
    ],
    "code": [
      "pd",
      ".",
      "concat",
      "(",
      "[",
      "var_0",
      ",",
      "var_2",
      ".",
      "var_1",
      "]",
      ",",
      "axis",
      "=",
      "1",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "distancesDF",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "dates",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "datesDF",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      247,
      3,
      42,
      65,
      66,
      26,
      31,
      147,
      63,
      24,
      42,
      65,
      66,
      64,
      12,
      9
    ],
    "code_indx_copy": [
      162,
      22,
      163,
      1,
      12,
      34,
      8,
      94,
      22,
      91,
      16,
      8,
      42,
      19,
      15,
      17
    ],
    "code_indx_nocopy": [
      162,
      22,
      163,
      1,
      12,
      34,
      8,
      94,
      22,
      91,
      16,
      8,
      42,
      19,
      15,
      17
    ]
  },
  {
    "intent": [
      "get",
      "value",
      "of",
      "first",
      "index",
      "of",
      "each",
      "element",
      "in",
      "list",
      "var_0"
    ],
    "code": [
      "[",
      "x",
      "[",
      "0",
      "]",
      "for",
      "x",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      143,
      2,
      151,
      37,
      2,
      22,
      49,
      24,
      4,
      26
    ],
    "code_indx_copy": [
      12,
      26,
      12,
      43,
      16,
      7,
      26,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      12,
      26,
      12,
      43,
      16,
      7,
      26,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "python",
      "how",
      "to",
      "get",
      "every",
      "first",
      "element",
      "in",
      "2",
      "dimensional",
      "list",
      "var_0"
    ],
    "code": [
      "[",
      "i",
      "[",
      "0",
      "]",
      "for",
      "i",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      50,
      77,
      8,
      17,
      279,
      151,
      49,
      24,
      82,
      83,
      4,
      26
    ],
    "code_indx_copy": [
      12,
      6,
      12,
      43,
      16,
      7,
      6,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      12,
      6,
      12,
      43,
      16,
      7,
      6,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "remove",
      "line",
      "breaks",
      "from",
      "string",
      "var_0",
      "using",
      "regex"
    ],
    "code": [
      "re",
      ".",
      "sub",
      "(",
      "'(?<=[a-z])\\\\r?\\\\n'",
      ",",
      "' '",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "textblock",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      172,
      465,
      58,
      14,
      26,
      109,
      40
    ],
    "code_indx_copy": [
      39,
      22,
      40,
      1,
      524,
      8,
      108,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      40,
      1,
      524,
      8,
      108,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "open",
      "gzip-compressed",
      "file",
      "encoded",
      "as",
      "utf-8",
      "str_0",
      "in",
      "text",
      "mode"
    ],
    "code": [
      "gzip",
      ".",
      "open",
      "(",
      "'str_0'",
      ",",
      "'rt'",
      ",",
      "encoding",
      "=",
      "'utf-8'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "file.gz",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      284,
      465,
      126,
      296,
      90,
      183,
      5,
      24,
      267,
      285
    ],
    "code_indx_copy": [
      524,
      22,
      105,
      1,
      29,
      8,
      524,
      8,
      524,
      19,
      143,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      105,
      1,
      29,
      8,
      524,
      8,
      524,
      19,
      143,
      17
    ]
  },
  {
    "intent": [
      "test",
      "if",
      "either",
      "of",
      "strings",
      "var_0",
      "or",
      "var_1",
      "are",
      "members",
      "of",
      "the",
      "set",
      "of",
      "strings",
      ",",
      "str_0"
    ],
    "code": [
      "set",
      "(",
      "[",
      "'var_0'",
      ",",
      "'var_1'",
      "]",
      ")",
      ".",
      "issubset",
      "(",
      "[",
      "'var_1'",
      ",",
      "'var_0'",
      ",",
      "'foo'",
      ",",
      "'bar'",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "b",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "['b', 'a', 'foo', 'bar']",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "['b', 'a', 'foo', 'bar']",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      150,
      465,
      2,
      259,
      26,
      344,
      63,
      243,
      465,
      2,
      18,
      59,
      2,
      259,
      62,
      5
    ],
    "code_indx_copy": [
      189,
      1,
      12,
      56,
      8,
      57,
      16,
      17,
      22,
      191,
      1,
      12,
      57,
      8,
      56,
      8,
      524,
      8,
      485,
      16,
      17
    ],
    "code_indx_nocopy": [
      189,
      1,
      12,
      56,
      8,
      57,
      16,
      17,
      22,
      191,
      1,
      12,
      57,
      8,
      56,
      8,
      524,
      8,
      485,
      16,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "all",
      "the",
      "values",
      "in",
      "a",
      "list",
      "str_0",
      "are",
      "present",
      "in",
      "another",
      "list",
      "str_1"
    ],
    "code": [
      "all",
      "(",
      "x",
      "in",
      "[",
      "str_1",
      "]",
      "for",
      "x",
      "in",
      "[",
      "str_0",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "['a', 'b']",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": "['b', 'a', 'foo', 'bar']",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "['a', 'b']",
        "quote": "`",
        "type": "str"
      },
      "[str_1]": {
        "value": "['b', 'a', 'foo', 'bar']",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      234,
      150,
      38,
      18,
      20,
      24,
      3,
      4,
      5,
      243,
      357,
      24,
      176,
      4,
      32
    ],
    "code_indx_copy": [
      77,
      1,
      26,
      9,
      12,
      37,
      16,
      7,
      26,
      9,
      12,
      11,
      16,
      17
    ],
    "code_indx_nocopy": [
      77,
      1,
      26,
      9,
      12,
      37,
      16,
      7,
      26,
      9,
      12,
      11,
      16,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "characters",
      "str_0",
      "from",
      "a",
      "string",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "translate",
      "(",
      "None",
      ",",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "!@#$",
        "quote": "\"",
        "type": "str"
      },
      "var_0": {
        "value": "line",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      98,
      5,
      58,
      3,
      14,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      421,
      1,
      209,
      8,
      29,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      421,
      1,
      209,
      8,
      29,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "characters",
      "str_0",
      "from",
      "a",
      "string",
      "var_0"
    ],
    "code": [
      "var_0",
      "=",
      "re",
      ".",
      "sub",
      "(",
      "'[!@#$]'",
      ",",
      "''",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "!@#$",
        "quote": "\"",
        "type": "str"
      },
      "var_0": {
        "value": "line",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      98,
      5,
      58,
      3,
      14,
      26
    ],
    "code_indx_copy": [
      34,
      19,
      39,
      22,
      40,
      1,
      524,
      8,
      21,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      39,
      22,
      40,
      1,
      524,
      8,
      21,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "string",
      "str_0",
      "from",
      "string",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "replace",
      "(",
      "'str_0'",
      ",",
      "''",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "1",
        "quote": "\"",
        "type": "str"
      },
      "var_0": {
        "value": "string",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      14,
      5,
      58,
      14,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      107,
      1,
      29,
      8,
      21,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      107,
      1,
      29,
      8,
      21,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "character",
      "var_0",
      "from",
      "a",
      "string",
      "var_1"
    ],
    "code": [
      "var_1",
      "=",
      "var_1",
      ".",
      "replace",
      "(",
      "var_0",
      ",",
      "''",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "char",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      202,
      26,
      58,
      3,
      14,
      63
    ],
    "code_indx_copy": [
      91,
      19,
      91,
      22,
      107,
      1,
      34,
      8,
      21,
      17
    ],
    "code_indx_nocopy": [
      91,
      19,
      91,
      22,
      107,
      1,
      34,
      8,
      21,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "characters",
      "in",
      "var_0",
      "from",
      "a",
      "string",
      "var_1"
    ],
    "code": [
      "var_1",
      "=",
      "var_1",
      ".",
      "replace",
      "(",
      "char",
      ",",
      "''",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "b",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      98,
      24,
      26,
      58,
      3,
      14,
      63
    ],
    "code_indx_copy": [
      91,
      19,
      91,
      22,
      107,
      1,
      524,
      8,
      21,
      17
    ],
    "code_indx_nocopy": [
      91,
      19,
      91,
      22,
      107,
      1,
      524,
      8,
      21,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "characters",
      "in",
      "str_0",
      "from",
      "a",
      "string",
      "var_0"
    ],
    "code": [
      "var_0",
      "=",
      "var_0",
      ".",
      "translate",
      "(",
      "string",
      ".",
      "maketrans",
      "(",
      "''",
      ",",
      "''",
      ")",
      ",",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "!@#$",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "line",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      98,
      24,
      5,
      58,
      3,
      14,
      26
    ],
    "code_indx_copy": [
      34,
      19,
      34,
      22,
      421,
      1,
      64,
      22,
      524,
      1,
      21,
      8,
      21,
      17,
      8,
      29,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      34,
      22,
      421,
      1,
      64,
      22,
      524,
      1,
      21,
      8,
      21,
      17,
      8,
      29,
      17
    ]
  },
  {
    "intent": [
      "binarize",
      "the",
      "values",
      "in",
      "columns",
      "of",
      "list",
      "var_0",
      "in",
      "a",
      "pandas",
      "data",
      "frame"
    ],
    "code": [
      "pd",
      ".",
      "concat",
      "(",
      "[",
      "df",
      ",",
      "pd",
      ".",
      "get_dummies",
      "(",
      "df",
      ",",
      "''",
      ",",
      "''",
      ")",
      ".",
      "astype",
      "(",
      "int",
      ")",
      "]",
      ",",
      "axis",
      "=",
      "1",
      ")",
      "[",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "order",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      18,
      20,
      24,
      61,
      2,
      4,
      26,
      24,
      3,
      42,
      65,
      66
    ],
    "code_indx_copy": [
      162,
      22,
      163,
      1,
      12,
      149,
      8,
      162,
      22,
      524,
      1,
      149,
      8,
      21,
      8,
      21,
      17,
      22,
      242,
      1,
      20,
      17,
      16,
      8,
      42,
      19,
      15,
      17,
      12,
      34,
      16
    ],
    "code_indx_nocopy": [
      162,
      22,
      163,
      1,
      12,
      149,
      8,
      162,
      22,
      524,
      1,
      149,
      8,
      21,
      8,
      21,
      17,
      22,
      242,
      1,
      20,
      17,
      16,
      8,
      42,
      19,
      15,
      17,
      12,
      34,
      16
    ]
  },
  {
    "intent": [
      "store",
      "integer",
      "3",
      ",",
      "4",
      ",",
      "1",
      "and",
      "2",
      "in",
      "a",
      "list"
    ],
    "code": [
      "[",
      "3",
      ",",
      "4",
      ",",
      "1",
      ",",
      "2",
      "]"
    ],
    "slot_map": {},
    "intent_indx": [
      377,
      10,
      57,
      62,
      231,
      62,
      237,
      31,
      82,
      24,
      3,
      4
    ],
    "code_indx_copy": [
      12,
      54,
      8,
      184,
      8,
      15,
      8,
      82,
      16
    ],
    "code_indx_nocopy": [
      12,
      54,
      8,
      184,
      8,
      15,
      8,
      82,
      16
    ]
  },
  {
    "intent": [
      "define",
      "global",
      "variable",
      "var_0",
      "with",
      "value",
      "var_1"
    ],
    "code": [
      "globals",
      "(",
      ")",
      "[",
      "'var_0'",
      "]",
      "=",
      "'var_1'"
    ],
    "slot_map": {
      "var_0": {
        "value": "something",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "bob",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      465,
      95,
      26,
      79,
      143,
      63
    ],
    "code_indx_copy": [
      284,
      1,
      17,
      12,
      56,
      16,
      19,
      57
    ],
    "code_indx_nocopy": [
      284,
      1,
      17,
      12,
      56,
      16,
      19,
      57
    ]
  },
  {
    "intent": [
      "insert",
      "spaces",
      "before",
      "capital",
      "letters",
      "in",
      "string",
      "var_0"
    ],
    "code": [
      "re",
      ".",
      "sub",
      "(",
      "'([a-z](?=[A-Z])|[A-Z](?=[A-Z][a-z]))'",
      ",",
      "'\\\\1 '",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "text",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      277,
      132,
      280,
      465,
      360,
      24,
      14,
      26
    ],
    "code_indx_copy": [
      39,
      22,
      40,
      1,
      524,
      8,
      524,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      40,
      1,
      524,
      8,
      524,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "print",
      "unicode",
      "string",
      "str_0",
      "in",
      "uppercase"
    ],
    "code": [
      "print",
      "(",
      "'str_0'",
      ".",
      "upper",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "ex\u00e1mple",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      166,
      230,
      14,
      5,
      24,
      465
    ],
    "code_indx_copy": [
      49,
      1,
      29,
      22,
      298,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      29,
      22,
      298,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "last",
      "element",
      "of",
      "string",
      "splitted",
      "by",
      "str_0",
      "from",
      "list",
      "of",
      "strings",
      "var_0"
    ],
    "code": [
      "[",
      "l",
      ".",
      "split",
      "(",
      "'str_0'",
      ")",
      "[",
      "-",
      "1",
      "]",
      "for",
      "l",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "\\",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "list_dirs",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      170,
      49,
      2,
      14,
      465,
      44,
      5,
      58,
      4,
      2,
      259,
      26
    ],
    "code_indx_copy": [
      12,
      431,
      22,
      71,
      1,
      29,
      17,
      12,
      14,
      15,
      16,
      7,
      431,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      12,
      431,
      22,
      71,
      1,
      29,
      17,
      12,
      14,
      15,
      16,
      7,
      431,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "combine",
      "two",
      "sequences",
      "into",
      "a",
      "dictionary"
    ],
    "code": [
      "dict",
      "(",
      "zip",
      "(",
      "keys",
      ",",
      "values",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      365,
      29,
      465,
      12,
      3,
      25
    ],
    "code_indx_copy": [
      70,
      1,
      36,
      1,
      167,
      8,
      166,
      17,
      17
    ],
    "code_indx_nocopy": [
      70,
      1,
      36,
      1,
      167,
      8,
      166,
      17,
      17
    ]
  },
  {
    "intent": [
      "customize",
      "the",
      "time",
      "format",
      "in",
      "python",
      "logging"
    ],
    "code": [
      "formatter",
      "=",
      "logging",
      ".",
      "Formatter",
      "(",
      "'%(asctime)s;%(levelname)s;%(message)s'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      465,
      18,
      134,
      16,
      24,
      50,
      465
    ],
    "code_indx_copy": [
      524,
      19,
      125,
      22,
      524,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      125,
      22,
      524,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "replace",
      "comma",
      "with",
      "dot",
      "in",
      "a",
      "string",
      "var_0",
      "using",
      "regex"
    ],
    "code": [
      "new_string",
      "=",
      "re",
      ".",
      "sub",
      "(",
      "'\"(\\\\d+),(\\\\d+)\"'",
      ",",
      "'\\\\1.\\\\2'",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "original_string",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      130,
      417,
      79,
      409,
      24,
      3,
      14,
      26,
      109,
      40
    ],
    "code_indx_copy": [
      524,
      19,
      39,
      22,
      40,
      1,
      524,
      8,
      524,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      39,
      22,
      40,
      1,
      524,
      8,
      524,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "call",
      "a",
      "function",
      "var_0",
      "inside",
      "a",
      "bash",
      "script",
      "str_0",
      "using",
      "subprocess"
    ],
    "code": [
      "subprocess",
      ".",
      "call",
      "(",
      "'test.sh otherfunc'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "otherfunc",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "test.sh",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      304,
      3,
      69,
      26,
      46,
      3,
      361,
      246,
      5,
      109,
      290
    ],
    "code_indx_copy": [
      229,
      22,
      230,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      229,
      22,
      230,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "can",
      "a",
      "python",
      "script",
      "execute",
      "a",
      "function",
      "inside",
      "a",
      "bash",
      "script",
      "?"
    ],
    "code": [
      "subprocess",
      ".",
      "Popen",
      "(",
      "[",
      "'bash'",
      ",",
      "'-c'",
      ",",
      "'. foo.sh; go'",
      "]",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      386,
      3,
      50,
      246,
      135,
      3,
      69,
      46,
      3,
      361,
      246,
      52
    ],
    "code_indx_copy": [
      229,
      22,
      441,
      1,
      12,
      524,
      8,
      524,
      8,
      524,
      16,
      17
    ],
    "code_indx_nocopy": [
      229,
      22,
      441,
      1,
      12,
      524,
      8,
      524,
      8,
      524,
      16,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "multiple",
      "spaces",
      "in",
      "a",
      "string",
      "var_0"
    ],
    "code": [
      "\"\"\" \"\"\"",
      ".",
      "join",
      "(",
      "var_0",
      ".",
      "split",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "foo",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      6,
      132,
      24,
      3,
      14,
      26
    ],
    "code_indx_copy": [
      215,
      22,
      23,
      1,
      34,
      22,
      71,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      215,
      22,
      23,
      1,
      34,
      22,
      71,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "decimal",
      "8",
      "to",
      "a",
      "list",
      "of",
      "its",
      "binary",
      "values"
    ],
    "code": [
      "list",
      "(",
      "'{0:0b}'",
      ".",
      "format",
      "(",
      "8",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      11,
      255,
      453,
      8,
      3,
      4,
      2,
      91,
      276,
      20
    ],
    "code_indx_copy": [
      33,
      1,
      524,
      22,
      38,
      1,
      501,
      17,
      17
    ],
    "code_indx_nocopy": [
      33,
      1,
      524,
      22,
      38,
      1,
      501,
      17,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "decimal",
      "integer",
      "8",
      "to",
      "a",
      "list",
      "of",
      "its",
      "binary",
      "values",
      "as",
      "elements"
    ],
    "code": [
      "[",
      "int",
      "(",
      "x",
      ")",
      "for",
      "x",
      "in",
      "list",
      "(",
      "'{0:0b}'",
      ".",
      "format",
      "(",
      "8",
      ")",
      ")",
      "]"
    ],
    "slot_map": {},
    "intent_indx": [
      11,
      255,
      10,
      453,
      8,
      3,
      4,
      2,
      91,
      276,
      20,
      90,
      1
    ],
    "code_indx_copy": [
      12,
      20,
      1,
      26,
      17,
      7,
      26,
      9,
      33,
      1,
      524,
      22,
      38,
      1,
      501,
      17,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      20,
      1,
      26,
      17,
      7,
      26,
      9,
      33,
      1,
      524,
      22,
      38,
      1,
      501,
      17,
      17,
      16
    ]
  },
  {
    "intent": [
      "convert",
      "decimal",
      "str_0",
      "to",
      "binary",
      "list"
    ],
    "code": [
      "[",
      "int",
      "(",
      "x",
      ")",
      "for",
      "x",
      "in",
      "bin",
      "(",
      "8",
      ")",
      "[",
      "2",
      ":",
      "]",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "8",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      255,
      5,
      8,
      276,
      4
    ],
    "code_indx_copy": [
      12,
      20,
      1,
      26,
      17,
      7,
      26,
      9,
      418,
      1,
      501,
      17,
      12,
      82,
      13,
      16,
      16
    ],
    "code_indx_nocopy": [
      12,
      20,
      1,
      26,
      17,
      7,
      26,
      9,
      418,
      1,
      501,
      17,
      12,
      82,
      13,
      16,
      16
    ]
  },
  {
    "intent": [
      "get",
      "key-value",
      "pairs",
      "in",
      "dictionary",
      "var_0",
      "for",
      "all",
      "keys",
      "in",
      "list",
      "var_1",
      "in",
      "the",
      "order",
      "they",
      "appear",
      "in",
      "var_1"
    ],
    "code": [
      "dict",
      "(",
      "zip",
      "(",
      "var_2",
      ",",
      "map",
      "(",
      "var_0",
      ".",
      "get",
      ",",
      "var_2",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "my_dictionary",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "my_list",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "my_list",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      422,
      187,
      24,
      25,
      26,
      21,
      38,
      206,
      24,
      4,
      63,
      24,
      18,
      162,
      465,
      465,
      24,
      63
    ],
    "code_indx_copy": [
      70,
      1,
      36,
      1,
      94,
      8,
      24,
      1,
      34,
      22,
      86,
      8,
      94,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      70,
      1,
      36,
      1,
      94,
      8,
      24,
      1,
      34,
      22,
      86,
      8,
      94,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "cartesian",
      "product",
      "of",
      "var_0",
      "and",
      "var_1",
      "array",
      "points",
      "into",
      "single",
      "array",
      "of",
      "2d",
      "points"
    ],
    "code": [
      "numpy",
      ".",
      "dstack",
      "(",
      "numpy",
      ".",
      "meshgrid",
      "(",
      "var_0",
      ",",
      "var_1",
      ")",
      ")",
      ".",
      "reshape",
      "(",
      "-",
      "1",
      ",",
      "2",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "x",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "y",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      163,
      2,
      26,
      31,
      63,
      85,
      318,
      12,
      9,
      85,
      2,
      236,
      318
    ],
    "code_indx_copy": [
      147,
      22,
      524,
      1,
      147,
      22,
      524,
      1,
      34,
      8,
      91,
      17,
      17,
      22,
      361,
      1,
      14,
      15,
      8,
      82,
      17
    ],
    "code_indx_nocopy": [
      147,
      22,
      524,
      1,
      147,
      22,
      524,
      1,
      34,
      8,
      91,
      17,
      17,
      22,
      361,
      1,
      14,
      15,
      8,
      82,
      17
    ]
  },
  {
    "intent": [
      "selenium",
      "wait",
      "for",
      "driver",
      "var_0",
      "60",
      "seconds",
      "before",
      "throwing",
      "a",
      "nosuchelementexceptions",
      "exception"
    ],
    "code": [
      "var_0",
      ".",
      "implicitly_wait",
      "(",
      "60",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "driver",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      51,
      465,
      21,
      465,
      26,
      465,
      376,
      280,
      465,
      3,
      465,
      389
    ],
    "code_indx_copy": [
      34,
      22,
      524,
      1,
      313,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      524,
      1,
      313,
      17
    ]
  },
  {
    "intent": [
      "selenium",
      "webdriver",
      "switch",
      "to",
      "frame",
      "str_0"
    ],
    "code": [
      "driver",
      ".",
      "switch_to_frame",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "frameName",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      51,
      332,
      465,
      8,
      66,
      5
    ],
    "code_indx_copy": [
      46,
      22,
      524,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      46,
      22,
      524,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "format",
      "current",
      "date",
      "to",
      "pattern",
      "str_0"
    ],
    "code": [
      "time",
      ".",
      "strftime",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "{%Y-%m-%d %H:%M:%S}",
        "quote": "'",
        "type": "str"
      },
      "{str_0}": {
        "value": "{%Y-%m-%d %H:%M:%S}",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      16,
      179,
      133,
      8,
      54,
      5
    ],
    "code_indx_copy": [
      84,
      22,
      65,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      84,
      22,
      65,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "list",
      "str_0"
    ],
    "code": [
      "sorted",
      "(",
      "[",
      "str_0",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "['14:10:01', '03:12:08']",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "['14:10:01', '03:12:08']",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      117,
      4,
      5
    ],
    "code_indx_copy": [
      101,
      1,
      12,
      11,
      16,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      12,
      11,
      16,
      17
    ]
  },
  {
    "intent": [
      "find",
      "all",
      "occurrences",
      "of",
      "regex",
      "pattern",
      "str_0",
      "in",
      "string",
      "var_0"
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'str_0'",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "(?:\\w+(?:\\s+\\w+)*,\\s)+(?:\\w+(?:\\s\\w+)*)",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "x",
        "quote": "`",
        "type": "var"
      },
      "(str_0)": {
        "value": "(?:\\w+(?:\\s+\\w+)*,\\s)+(?:\\w+(?:\\s\\w+)*)",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      47,
      38,
      53,
      2,
      40,
      54,
      5,
      24,
      14,
      26
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      29,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      29,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "duplicate",
      "rows",
      "from",
      "dataframe",
      "var_0",
      "and",
      "calculate",
      "their",
      "frequency"
    ],
    "code": [
      "var_0",
      ".",
      "groupby",
      "(",
      "[",
      "'key'",
      ",",
      "'year'",
      "]",
      ")",
      ".",
      "size",
      "(",
      ")",
      ".",
      "reset_index",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df1",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      411,
      80,
      58,
      43,
      26,
      31,
      252,
      294,
      465
    ],
    "code_indx_copy": [
      34,
      22,
      157,
      1,
      12,
      524,
      8,
      524,
      16,
      17,
      22,
      374,
      1,
      17,
      22,
      186,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      157,
      1,
      12,
      524,
      8,
      524,
      16,
      17,
      22,
      374,
      1,
      17,
      22,
      186,
      1,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "dictionary",
      "var_0",
      "in",
      "ascending",
      "order",
      "by",
      "its",
      "values"
    ],
    "code": [
      "sorted",
      "(",
      "list",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      ",",
      "key",
      "=",
      "operator",
      ".",
      "itemgetter",
      "(",
      "1",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "dictionary",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      25,
      26,
      24,
      119,
      162,
      44,
      91,
      20
    ],
    "code_indx_copy": [
      101,
      1,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      8,
      102,
      19,
      127,
      22,
      128,
      1,
      15,
      17,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      8,
      102,
      19,
      127,
      22,
      128,
      1,
      15,
      17,
      17
    ]
  },
  {
    "intent": [
      "iterate",
      "over",
      "dictionary",
      "var_0",
      "in",
      "ascending",
      "order",
      "of",
      "values"
    ],
    "code": [
      "sorted",
      "(",
      "iter",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      ",",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "x",
      "[",
      "1",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "d",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      454,
      408,
      25,
      26,
      24,
      119,
      162,
      2,
      20
    ],
    "code_indx_copy": [
      101,
      1,
      165,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      8,
      102,
      19,
      44,
      26,
      13,
      26,
      12,
      15,
      16,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      165,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      8,
      102,
      19,
      44,
      26,
      13,
      26,
      12,
      15,
      16,
      17
    ]
  },
  {
    "intent": [
      "iterate",
      "over",
      "a",
      "python",
      "dictionary",
      ",",
      "ordered",
      "by",
      "values"
    ],
    "code": [
      "sorted",
      "(",
      "list",
      "(",
      "dictionary",
      ".",
      "items",
      "(",
      ")",
      ")",
      ",",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "x",
      "[",
      "1",
      "]",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      454,
      408,
      3,
      50,
      25,
      62,
      465,
      44,
      20
    ],
    "code_indx_copy": [
      101,
      1,
      33,
      1,
      532,
      22,
      35,
      1,
      17,
      17,
      8,
      102,
      19,
      44,
      26,
      13,
      26,
      12,
      15,
      16,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      33,
      1,
      524,
      22,
      35,
      1,
      17,
      17,
      8,
      102,
      19,
      44,
      26,
      13,
      26,
      12,
      15,
      16,
      17
    ]
  },
  {
    "intent": [
      "split",
      "1d",
      "array",
      "var_0",
      "into",
      "2d",
      "array",
      "at",
      "the",
      "last",
      "element"
    ],
    "code": [
      "np",
      ".",
      "split",
      "(",
      "var_0",
      ",",
      "[",
      "-",
      "1",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      138,
      465,
      85,
      26,
      12,
      236,
      85,
      35,
      18,
      170,
      49
    ],
    "code_indx_copy": [
      74,
      22,
      71,
      1,
      34,
      8,
      12,
      14,
      15,
      16,
      17
    ],
    "code_indx_nocopy": [
      74,
      22,
      71,
      1,
      34,
      8,
      12,
      14,
      15,
      16,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "dataframe",
      "var_0",
      "into",
      "a",
      "pivot",
      "table",
      "using",
      "column",
      "str_0",
      "as",
      "index",
      "and",
      "values",
      "of",
      "column",
      "str_1",
      "as",
      "columns"
    ],
    "code": [
      "var_0",
      ".",
      "pivot",
      "(",
      "index",
      "=",
      "'str_0'",
      ",",
      "columns",
      "=",
      "'str_1'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "order",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "sample",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      43,
      26,
      12,
      3,
      387,
      388,
      109,
      147,
      5,
      90,
      37,
      31,
      20,
      2,
      147,
      32,
      90,
      61
    ],
    "code_indx_copy": [
      34,
      22,
      533,
      1,
      160,
      19,
      29,
      8,
      192,
      19,
      63,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      524,
      1,
      160,
      19,
      29,
      8,
      192,
      19,
      63,
      17
    ]
  },
  {
    "intent": [
      "select",
      "all",
      "rows",
      "from",
      "pandas",
      "dataframe",
      "str_0",
      "where",
      "the",
      "value",
      "in",
      "column",
      "str_1",
      "is",
      "greater",
      "than",
      "1",
      "or",
      "less",
      "than",
      "-1",
      "in",
      "column",
      "str_2",
      "."
    ],
    "code": [
      "str_0",
      "[",
      "(",
      "str_0",
      "[",
      "'str_1'",
      "]",
      ">",
      "1",
      ")",
      "|",
      "(",
      "str_0",
      "[",
      "'str_2'",
      "]",
      "<",
      "-",
      "1",
      ")",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "df",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "A",
        "quote": "'",
        "type": "str"
      },
      "str_2": {
        "value": "B",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      78,
      38,
      80,
      58,
      42,
      43,
      5,
      155,
      18,
      143,
      24,
      147,
      32,
      152,
      349,
      264,
      237,
      344,
      465,
      264,
      465,
      24,
      147,
      194,
      159
    ],
    "code_indx_copy": [
      11,
      12,
      1,
      11,
      12,
      63,
      16,
      214,
      15,
      17,
      412,
      1,
      11,
      12,
      150,
      16,
      344,
      14,
      15,
      17,
      16
    ],
    "code_indx_nocopy": [
      11,
      12,
      1,
      11,
      12,
      63,
      16,
      214,
      15,
      17,
      412,
      1,
      11,
      12,
      150,
      16,
      344,
      14,
      15,
      17,
      16
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "zip",
      "output",
      "as",
      "list",
      "from",
      "the",
      "lists",
      "str_0",
      ",",
      "str_1",
      ",",
      "str_2"
    ],
    "code": [
      "[",
      "list",
      "(",
      "a",
      ")",
      "for",
      "a",
      "in",
      "zip",
      "(",
      "[",
      "str_0",
      "]",
      ",",
      "[",
      "str_1",
      "]",
      ",",
      "[",
      "str_2",
      "]",
      ")",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "[1, 2, 3]",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": "[4, 5, 6]",
        "quote": "`",
        "type": "str"
      },
      "str_2": {
        "value": "[7, 8, 9]",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "[1, 2, 3]",
        "quote": "`",
        "type": "str"
      },
      "[str_1]": {
        "value": "[4, 5, 6]",
        "quote": "`",
        "type": "str"
      },
      "[str_2]": {
        "value": "[7, 8, 9]",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      18,
      28,
      257,
      90,
      4,
      58,
      18,
      30,
      5,
      62,
      32,
      62,
      194
    ],
    "code_indx_copy": [
      12,
      33,
      1,
      95,
      17,
      7,
      95,
      9,
      36,
      1,
      12,
      11,
      16,
      8,
      12,
      37,
      16,
      8,
      12,
      183,
      16,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      33,
      1,
      95,
      17,
      7,
      95,
      9,
      36,
      1,
      12,
      11,
      16,
      8,
      12,
      37,
      16,
      8,
      12,
      183,
      16,
      17,
      16
    ]
  },
  {
    "intent": [
      "select",
      "rows",
      "of",
      "dataframe",
      "var_0",
      "whose",
      "value",
      "for",
      "column",
      "var_1",
      "is",
      "var_2"
    ],
    "code": [
      "print",
      "(",
      "var_0",
      ".",
      "loc",
      "[",
      "var_0",
      "[",
      "'var_1'",
      "]",
      "==",
      "'var_2'",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "A",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "foo",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      78,
      80,
      2,
      43,
      26,
      228,
      143,
      21,
      147,
      63,
      152,
      64
    ],
    "code_indx_copy": [
      49,
      1,
      34,
      22,
      202,
      12,
      34,
      12,
      57,
      16,
      76,
      58,
      16,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      34,
      22,
      202,
      12,
      34,
      12,
      57,
      16,
      76,
      58,
      16,
      17
    ]
  },
  {
    "intent": [
      "select",
      "rows",
      "whose",
      "column",
      "value",
      "in",
      "column",
      "var_0",
      "does",
      "not",
      "equal",
      "var_1",
      "in",
      "pandas",
      "data",
      "frame"
    ],
    "code": [
      "df",
      ".",
      "loc",
      "[",
      "df",
      "[",
      "'var_0'",
      "]",
      "!=",
      "var_1",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "column_name",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "some_value",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      78,
      80,
      228,
      147,
      143,
      24,
      147,
      26,
      184,
      105,
      106,
      63,
      24,
      42,
      65,
      66
    ],
    "code_indx_copy": [
      149,
      22,
      202,
      12,
      149,
      12,
      56,
      16,
      88,
      91,
      16
    ],
    "code_indx_nocopy": [
      149,
      22,
      202,
      12,
      149,
      12,
      56,
      16,
      88,
      91,
      16
    ]
  },
  {
    "intent": [
      "select",
      "rows",
      "from",
      "a",
      "dataframe",
      "var_0",
      "whose",
      "value",
      "for",
      "column",
      "var_1",
      "is",
      "not",
      "in",
      "var_2"
    ],
    "code": [
      "var_0",
      ".",
      "loc",
      "[",
      "~",
      "var_0",
      "[",
      "'var_1'",
      "]",
      ".",
      "isin",
      "(",
      "var_2",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "column_name",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "some_values",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      78,
      80,
      58,
      3,
      43,
      26,
      228,
      143,
      21,
      147,
      63,
      152,
      105,
      24,
      64
    ],
    "code_indx_copy": [
      34,
      22,
      202,
      12,
      360,
      34,
      12,
      57,
      16,
      22,
      248,
      1,
      94,
      17,
      16
    ],
    "code_indx_nocopy": [
      34,
      22,
      202,
      12,
      360,
      34,
      12,
      57,
      16,
      22,
      248,
      1,
      94,
      17,
      16
    ]
  },
  {
    "intent": [
      "select",
      "all",
      "rows",
      "whose",
      "values",
      "in",
      "a",
      "column",
      "var_0",
      "equals",
      "a",
      "scalar",
      "var_1",
      "in",
      "pandas",
      "data",
      "frame",
      "object",
      "var_2"
    ],
    "code": [
      "var_2",
      ".",
      "loc",
      "[",
      "var_2",
      "[",
      "'var_0'",
      "]",
      "==",
      "var_1",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "column_name",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "some_value",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      78,
      38,
      80,
      228,
      20,
      24,
      3,
      147,
      26,
      465,
      3,
      465,
      63,
      24,
      42,
      65,
      66,
      15,
      64
    ],
    "code_indx_copy": [
      94,
      22,
      202,
      12,
      94,
      12,
      56,
      16,
      76,
      91,
      16
    ],
    "code_indx_nocopy": [
      94,
      22,
      202,
      12,
      94,
      12,
      56,
      16,
      76,
      91,
      16
    ]
  },
  {
    "intent": [
      "select",
      "rows",
      "whose",
      "value",
      "of",
      "the",
      "str_0",
      "column",
      "is",
      "str_1",
      "or",
      "str_2",
      "in",
      "the",
      "dataframe",
      "var_0"
    ],
    "code": [
      "print",
      "(",
      "var_0",
      ".",
      "loc",
      "[",
      "var_0",
      "[",
      "'str_0'",
      "]",
      ".",
      "isin",
      "(",
      "[",
      "'str_1'",
      ",",
      "'str_2'",
      "]",
      ")",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "B",
        "quote": "\"",
        "type": "str"
      },
      "str_1": {
        "value": "one",
        "quote": "\"",
        "type": "str"
      },
      "str_2": {
        "value": "three",
        "quote": "\"",
        "type": "str"
      },
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      78,
      80,
      228,
      143,
      2,
      18,
      5,
      147,
      152,
      32,
      344,
      194,
      24,
      18,
      43,
      26
    ],
    "code_indx_copy": [
      49,
      1,
      34,
      22,
      202,
      12,
      34,
      12,
      29,
      16,
      22,
      248,
      1,
      12,
      63,
      8,
      150,
      16,
      17,
      16,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      34,
      22,
      202,
      12,
      34,
      12,
      29,
      16,
      22,
      248,
      1,
      12,
      63,
      8,
      150,
      16,
      17,
      16,
      17
    ]
  },
  {
    "intent": [
      "repeat",
      "every",
      "character",
      "for",
      "7",
      "times",
      "in",
      "string",
      "str_0"
    ],
    "code": [
      "\"\"\"\"\"\"",
      ".",
      "join",
      "(",
      "str_0",
      "(",
      "lambda",
      "x",
      ":",
      "x",
      "*",
      "7",
      ",",
      "'str_0'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "map",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      279,
      202,
      21,
      340,
      442,
      24,
      14,
      5
    ],
    "code_indx_copy": [
      287,
      22,
      23,
      1,
      11,
      1,
      44,
      26,
      13,
      26,
      3,
      219,
      8,
      29,
      17,
      17
    ],
    "code_indx_nocopy": [
      287,
      22,
      23,
      1,
      11,
      1,
      44,
      26,
      13,
      26,
      3,
      219,
      8,
      29,
      17,
      17
    ]
  },
  {
    "intent": [
      "delete",
      "an",
      "empty",
      "directory"
    ],
    "code": [
      "os",
      ".",
      "rmdir",
      "(",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      86,
      225,
      146,
      175
    ],
    "code_indx_copy": [
      113,
      22,
      524,
      1,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      524,
      1,
      17
    ]
  },
  {
    "intent": [
      "recursively",
      "delete",
      "all",
      "contents",
      "in",
      "directory",
      "var_0"
    ],
    "code": [
      "shutil",
      ".",
      "rmtree",
      "(",
      "var_0",
      ",",
      "ignore_errors",
      "=",
      "False",
      ",",
      "onerror",
      "=",
      "None",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "path",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      86,
      38,
      125,
      24,
      175,
      26
    ],
    "code_indx_copy": [
      384,
      22,
      524,
      1,
      34,
      8,
      524,
      19,
      87,
      8,
      524,
      19,
      209,
      17
    ],
    "code_indx_nocopy": [
      384,
      22,
      524,
      1,
      34,
      8,
      524,
      19,
      87,
      8,
      524,
      19,
      209,
      17
    ]
  },
  {
    "intent": [
      "recursively",
      "remove",
      "folder",
      "var_0"
    ],
    "code": [
      "os",
      ".",
      "removedirs",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "name",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      268,
      406,
      26
    ],
    "code_indx_copy": [
      113,
      22,
      524,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      524,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "add",
      "row",
      "str_0",
      "to",
      "dataframe",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "loc",
      "[",
      "len",
      "(",
      "var_0",
      ")",
      "]",
      "=",
      "[",
      "str_0",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "['8/19/2014', 'Jun', 'Fly', '98765']",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "[str_0]": {
        "value": "['8/19/2014', 'Jun', 'Fly', '98765']",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      60,
      45,
      5,
      8,
      43,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      202,
      12,
      32,
      1,
      34,
      17,
      16,
      19,
      12,
      11,
      16
    ],
    "code_indx_nocopy": [
      34,
      22,
      202,
      12,
      32,
      1,
      34,
      17,
      16,
      19,
      12,
      11,
      16
    ]
  },
  {
    "intent": [
      "list",
      "all",
      "files",
      "in",
      "a",
      "current",
      "directory"
    ],
    "code": [
      "glob",
      ".",
      "glob",
      "(",
      "'*'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      4,
      38,
      245,
      24,
      3,
      179,
      175
    ],
    "code_indx_copy": [
      478,
      22,
      478,
      1,
      429,
      17
    ],
    "code_indx_nocopy": [
      478,
      22,
      478,
      1,
      429,
      17
    ]
  },
  {
    "intent": [
      "list",
      "all",
      "the",
      "files",
      "that",
      "does",
      "n't",
      "contain",
      "the",
      "name",
      "var_0"
    ],
    "code": [
      "glob",
      ".",
      "glob",
      "(",
      "'[!hello]*.txt'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "hello",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      4,
      38,
      18,
      245,
      195,
      184,
      465,
      325,
      18,
      129,
      26
    ],
    "code_indx_copy": [
      478,
      22,
      478,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      478,
      22,
      478,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "list",
      "all",
      "the",
      "files",
      "that",
      "matches",
      "the",
      "pattern",
      "str_0"
    ],
    "code": [
      "glob",
      ".",
      "glob",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "hello*.txt",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      4,
      38,
      18,
      245,
      195,
      108,
      18,
      54,
      5
    ],
    "code_indx_copy": [
      478,
      22,
      478,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      478,
      22,
      478,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "evaluate",
      "the",
      "expression",
      "str_0"
    ],
    "code": [
      "eval",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "20<30",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      18,
      226,
      5
    ],
    "code_indx_copy": [
      321,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      321,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "copy",
      "list",
      "var_0",
      "and",
      "name",
      "it",
      "var_1"
    ],
    "code": [
      "var_1",
      "=",
      "[",
      "x",
      "[",
      ":",
      "]",
      "for",
      "x",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "old_list",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "new_list",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      324,
      4,
      26,
      31,
      129,
      145,
      63
    ],
    "code_indx_copy": [
      91,
      19,
      12,
      26,
      12,
      13,
      16,
      7,
      26,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      91,
      19,
      12,
      26,
      12,
      13,
      16,
      7,
      26,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "convert",
      "scientific",
      "notation",
      "of",
      "variable",
      "var_0",
      "to",
      "decimal"
    ],
    "code": [
      "\"\"\"{:.50f}\"\"\"",
      ".",
      "format",
      "(",
      "float",
      "(",
      "var_0",
      "[",
      "0",
      "]",
      "/",
      "var_0",
      "[",
      "1",
      "]",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      465,
      456,
      2,
      95,
      26,
      8,
      255
    ],
    "code_indx_copy": [
      524,
      22,
      38,
      1,
      225,
      1,
      34,
      12,
      43,
      16,
      31,
      34,
      12,
      15,
      16,
      17,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      38,
      1,
      225,
      1,
      34,
      12,
      43,
      16,
      31,
      34,
      12,
      15,
      16,
      17,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "dataframe",
      "var_0",
      "to",
      "integer-type",
      "sparse",
      "object"
    ],
    "code": [
      "var_0",
      ".",
      "to_sparse",
      "(",
      "0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      43,
      26,
      8,
      465,
      465,
      15
    ],
    "code_indx_copy": [
      34,
      22,
      524,
      1,
      43,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      524,
      1,
      43,
      17
    ]
  },
  {
    "intent": [
      "display",
      "attribute",
      "var_0",
      "for",
      "each",
      "object",
      "var_1",
      "in",
      "list",
      "var_2"
    ],
    "code": [
      "print",
      "(",
      "[",
      "var_1",
      ".",
      "var_0",
      "for",
      "var_1",
      "in",
      "var_2",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "attr",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "obj",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "my_list_of_objs",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      363,
      341,
      26,
      21,
      22,
      15,
      63,
      24,
      4,
      64
    ],
    "code_indx_copy": [
      49,
      1,
      12,
      91,
      22,
      34,
      7,
      91,
      9,
      94,
      16,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      12,
      91,
      22,
      34,
      7,
      91,
      9,
      94,
      16,
      17
    ]
  },
  {
    "intent": [
      "count",
      "the",
      "number",
      "of",
      "true",
      "values",
      "associated",
      "with",
      "key",
      "str_0",
      "in",
      "dictionary",
      "var_0"
    ],
    "code": [
      "sum",
      "(",
      "1",
      "if",
      "var_0",
      "[",
      "'str_0'",
      "]",
      "else",
      "0",
      "for",
      "var_0",
      "in",
      "s",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "success",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "d",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      203,
      18,
      76,
      2,
      367,
      20,
      286,
      79,
      23,
      5,
      24,
      25,
      26
    ],
    "code_indx_copy": [
      0,
      1,
      15,
      67,
      34,
      12,
      29,
      16,
      211,
      43,
      7,
      34,
      9,
      181,
      17
    ],
    "code_indx_nocopy": [
      0,
      1,
      15,
      67,
      34,
      12,
      29,
      16,
      211,
      43,
      7,
      34,
      9,
      181,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "sum",
      "of",
      "values",
      "associated",
      "with",
      "the",
      "key",
      "\u2018",
      "success",
      "\u2019",
      "for",
      "a",
      "list",
      "of",
      "dictionaries",
      "var_0"
    ],
    "code": [
      "sum",
      "(",
      "d",
      "[",
      "'success'",
      "]",
      "for",
      "d",
      "in",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      18,
      112,
      2,
      20,
      286,
      79,
      18,
      23,
      398,
      465,
      399,
      21,
      3,
      4,
      2,
      188,
      26
    ],
    "code_indx_copy": [
      0,
      1,
      2,
      12,
      524,
      16,
      7,
      2,
      9,
      34,
      17
    ],
    "code_indx_nocopy": [
      0,
      1,
      2,
      12,
      524,
      16,
      7,
      2,
      9,
      34,
      17
    ]
  },
  {
    "intent": [
      "get",
      "complete",
      "path",
      "of",
      "a",
      "module",
      "named",
      "var_0"
    ],
    "code": [
      "imp",
      ".",
      "find_module",
      "(",
      "'var_0'",
      ")",
      "[",
      "1",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "os",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      465,
      199,
      2,
      3,
      342,
      320,
      26
    ],
    "code_indx_copy": [
      524,
      22,
      524,
      1,
      56,
      17,
      12,
      15,
      16
    ],
    "code_indx_nocopy": [
      524,
      22,
      524,
      1,
      56,
      17,
      12,
      15,
      16
    ]
  },
  {
    "intent": [
      "get",
      "logical",
      "xor",
      "of",
      "var_0",
      "and",
      "var_1"
    ],
    "code": [
      "bool",
      "(",
      "var_0",
      ")",
      "!=",
      "bool",
      "(",
      "var_1",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "b",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      457,
      458,
      2,
      26,
      31,
      63
    ],
    "code_indx_copy": [
      457,
      1,
      34,
      17,
      88,
      457,
      1,
      91,
      17
    ],
    "code_indx_nocopy": [
      457,
      1,
      34,
      17,
      88,
      457,
      1,
      91,
      17
    ]
  },
  {
    "intent": [
      "get",
      "logical",
      "xor",
      "of",
      "var_0",
      "and",
      "var_1"
    ],
    "code": [
      "var_0",
      "and",
      "not",
      "var_1",
      "or",
      "not",
      "var_0",
      "and",
      "var_1"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "b",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      457,
      458,
      2,
      26,
      31,
      63
    ],
    "code_indx_copy": [
      34,
      458,
      281,
      91,
      524,
      281,
      34,
      458,
      91
    ],
    "code_indx_nocopy": [
      34,
      458,
      281,
      91,
      524,
      281,
      34,
      458,
      91
    ]
  },
  {
    "intent": [
      "get",
      "logical",
      "xor",
      "of",
      "var_0",
      "and",
      "var_1"
    ],
    "code": [
      "bool",
      "(",
      "var_0",
      ")",
      "^",
      "bool",
      "(",
      "var_1",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "b",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      457,
      458,
      2,
      26,
      31,
      63
    ],
    "code_indx_copy": [
      457,
      1,
      34,
      17,
      483,
      457,
      1,
      91,
      17
    ],
    "code_indx_nocopy": [
      457,
      1,
      34,
      17,
      483,
      457,
      1,
      91,
      17
    ]
  },
  {
    "intent": [
      "get",
      "logical",
      "xor",
      "of",
      "var_0",
      "and",
      "var_1"
    ],
    "code": [
      "xor",
      "(",
      "bool",
      "(",
      "var_0",
      ")",
      ",",
      "bool",
      "(",
      "var_1",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "b",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      457,
      458,
      2,
      26,
      31,
      63
    ],
    "code_indx_copy": [
      530,
      1,
      457,
      1,
      34,
      17,
      8,
      457,
      1,
      91,
      17,
      17
    ],
    "code_indx_nocopy": [
      524,
      1,
      457,
      1,
      34,
      17,
      8,
      457,
      1,
      91,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "logical",
      "xor",
      "of",
      "two",
      "variables",
      "var_0",
      "and",
      "var_1"
    ],
    "code": [
      "return",
      "bool",
      "(",
      "var_0",
      ")",
      "^",
      "bool",
      "(",
      "var_1",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "str1",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "str2",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      18,
      457,
      458,
      2,
      29,
      306,
      26,
      31,
      63
    ],
    "code_indx_copy": [
      118,
      457,
      1,
      34,
      17,
      483,
      457,
      1,
      91,
      17
    ],
    "code_indx_nocopy": [
      118,
      457,
      1,
      34,
      17,
      483,
      457,
      1,
      91,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "list",
      "var_0",
      "in",
      "alphabetical",
      "order",
      "based",
      "on",
      "the",
      "values",
      "associated",
      "with",
      "key",
      "str_0",
      "of",
      "each",
      "dictionary",
      "in",
      "the",
      "list"
    ],
    "code": [
      "var_0",
      ".",
      "sort",
      "(",
      "key",
      "=",
      "operator",
      ".",
      "itemgetter",
      "(",
      "'str_0'",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "my_list",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "name",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      117,
      4,
      26,
      24,
      465,
      162,
      208,
      139,
      18,
      20,
      286,
      79,
      23,
      5,
      2,
      22,
      25,
      24,
      18,
      4
    ],
    "code_indx_copy": [
      34,
      22,
      124,
      1,
      102,
      19,
      127,
      22,
      128,
      1,
      29,
      17,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      124,
      1,
      102,
      19,
      127,
      22,
      128,
      1,
      29,
      17,
      17
    ]
  },
  {
    "intent": [
      "split",
      "a",
      "string",
      "str_0",
      "using",
      "both",
      "commas",
      "and",
      "semicolons",
      "as",
      "delimeters"
    ],
    "code": [
      "re",
      ".",
      "split",
      "(",
      "'\\\\s*,\\\\s*|\\\\s*;\\\\s*'",
      ",",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "a , b; cdf",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      138,
      3,
      14,
      5,
      109,
      465,
      465,
      31,
      465,
      90,
      465
    ],
    "code_indx_copy": [
      39,
      22,
      71,
      1,
      524,
      8,
      29,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      71,
      1,
      524,
      8,
      29,
      17
    ]
  },
  {
    "intent": [
      "split",
      "a",
      "string",
      "var_0",
      "by",
      "multiple",
      "separators",
      "str_0",
      "and",
      "str_1"
    ],
    "code": [
      "[",
      "t",
      ".",
      "strip",
      "(",
      ")",
      "for",
      "s",
      "in",
      "var_0",
      ".",
      "split",
      "(",
      "'str_0'",
      ")",
      "for",
      "t",
      "in",
      "s",
      ".",
      "split",
      "(",
      "'str_1'",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "string",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": ",",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": ";",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      138,
      3,
      14,
      26,
      44,
      6,
      465,
      5,
      31,
      32
    ],
    "code_indx_copy": [
      12,
      45,
      22,
      170,
      1,
      17,
      7,
      181,
      9,
      34,
      22,
      71,
      1,
      29,
      17,
      7,
      45,
      9,
      181,
      22,
      71,
      1,
      63,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      45,
      22,
      170,
      1,
      17,
      7,
      181,
      9,
      34,
      22,
      71,
      1,
      29,
      17,
      7,
      45,
      9,
      181,
      22,
      71,
      1,
      63,
      17,
      16
    ]
  },
  {
    "intent": [
      "make",
      "a",
      "function",
      "var_0",
      "that",
      "calculates",
      "the",
      "sum",
      "of",
      "two",
      "integer",
      "variables",
      "var_1",
      "and",
      "var_2"
    ],
    "code": [
      "var_0",
      "=",
      "lambda",
      "var_1",
      ",",
      "var_2",
      ":",
      "var_1",
      "+",
      "var_2"
    ],
    "slot_map": {
      "var_0": {
        "value": "f",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "x",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "y",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      191,
      3,
      69,
      26,
      195,
      465,
      18,
      112,
      2,
      29,
      10,
      306,
      63,
      31,
      64
    ],
    "code_indx_copy": [
      34,
      19,
      44,
      91,
      8,
      94,
      13,
      91,
      96,
      94
    ],
    "code_indx_nocopy": [
      34,
      19,
      44,
      91,
      8,
      94,
      13,
      91,
      96,
      94
    ]
  },
  {
    "intent": [
      "create",
      "list",
      "var_0",
      "containing",
      "29",
      "objects",
      "of",
      "type",
      "myclass"
    ],
    "code": [
      "var_0",
      "=",
      "[",
      "MyClass",
      "(",
      ")",
      "for",
      "i",
      "in",
      "range",
      "(",
      "29",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "instancelist",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      148,
      4,
      26,
      34,
      465,
      178,
      2,
      330,
      465
    ],
    "code_indx_copy": [
      34,
      19,
      12,
      524,
      1,
      17,
      7,
      6,
      9,
      104,
      1,
      532,
      17,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      12,
      524,
      1,
      17,
      7,
      6,
      9,
      104,
      1,
      524,
      17,
      16
    ]
  },
  {
    "intent": [
      "make",
      "a",
      "dictionary",
      "from",
      "list",
      "var_0",
      "which",
      "is",
      "in",
      "the",
      "format",
      "of",
      "four",
      "sets",
      "of",
      "str_0"
    ],
    "code": [
      "{",
      "var_0",
      "[",
      "i",
      "+",
      "1",
      "]",
      ":",
      "[",
      "var_0",
      "[",
      "i",
      "]",
      ",",
      "var_0",
      "[",
      "i",
      "+",
      "2",
      "]",
      "]",
      "for",
      "i",
      "in",
      "range",
      "(",
      "0",
      ",",
      "len",
      "(",
      "var_0",
      ")",
      ",",
      "3",
      ")",
      "}"
    ],
    "slot_map": {
      "var_0": {
        "value": "f",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "val, key, val",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      191,
      3,
      25,
      58,
      4,
      26,
      205,
      152,
      24,
      18,
      16,
      2,
      465,
      465,
      2,
      5
    ],
    "code_indx_copy": [
      52,
      34,
      12,
      6,
      96,
      15,
      16,
      13,
      12,
      34,
      12,
      6,
      16,
      8,
      34,
      12,
      6,
      96,
      82,
      16,
      16,
      7,
      6,
      9,
      104,
      1,
      43,
      8,
      32,
      1,
      34,
      17,
      8,
      54,
      17,
      53
    ],
    "code_indx_nocopy": [
      52,
      34,
      12,
      6,
      96,
      15,
      16,
      13,
      12,
      34,
      12,
      6,
      16,
      8,
      34,
      12,
      6,
      96,
      82,
      16,
      16,
      7,
      6,
      9,
      104,
      1,
      43,
      8,
      32,
      1,
      34,
      17,
      8,
      54,
      17,
      53
    ]
  },
  {
    "intent": [
      "convert",
      "bytes",
      "string",
      "var_0",
      "to",
      "an",
      "unsigned",
      "integer"
    ],
    "code": [
      "struct",
      ".",
      "unpack",
      "(",
      "'>q'",
      ",",
      "var_0",
      ")",
      "[",
      "0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      420,
      14,
      26,
      8,
      225,
      465,
      10
    ],
    "code_indx_copy": [
      317,
      22,
      406,
      1,
      524,
      8,
      34,
      17,
      12,
      43,
      16
    ],
    "code_indx_nocopy": [
      317,
      22,
      406,
      1,
      524,
      8,
      34,
      17,
      12,
      43,
      16
    ]
  },
  {
    "intent": [
      "concatenate",
      "a",
      "series",
      "var_0",
      "onto",
      "a",
      "dataframe",
      "var_1",
      "with",
      "pandas"
    ],
    "code": [
      "pd",
      ".",
      "concat",
      "(",
      "[",
      "var_0",
      ",",
      "pd",
      ".",
      "DataFrame",
      "(",
      "var_1",
      ")",
      "]",
      ",",
      "axis",
      "=",
      "1",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "students",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "marks",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      0,
      3,
      339,
      26,
      465,
      3,
      43,
      63,
      79,
      42
    ],
    "code_indx_copy": [
      162,
      22,
      163,
      1,
      12,
      34,
      8,
      162,
      22,
      164,
      1,
      91,
      17,
      16,
      8,
      42,
      19,
      15,
      17
    ],
    "code_indx_nocopy": [
      162,
      22,
      163,
      1,
      12,
      34,
      8,
      162,
      22,
      164,
      1,
      91,
      17,
      16,
      8,
      42,
      19,
      15,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "list",
      "var_0",
      "in",
      "ascending",
      "order",
      "based",
      "on",
      "each",
      "of",
      "its",
      "elements",
      "'",
      "attribute",
      "var_1"
    ],
    "code": [
      "var_0",
      ".",
      "sort",
      "(",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "x",
      ".",
      "var_1",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "alist",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "foo",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      4,
      26,
      24,
      119,
      162,
      208,
      139,
      22,
      2,
      91,
      1,
      310,
      341,
      63
    ],
    "code_indx_copy": [
      34,
      22,
      124,
      1,
      102,
      19,
      44,
      26,
      13,
      26,
      22,
      91,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      124,
      1,
      102,
      19,
      44,
      26,
      13,
      26,
      22,
      91,
      17
    ]
  },
  {
    "intent": [
      "beautifulsoup",
      "select",
      "str_0",
      "elements",
      "with",
      "an",
      "id",
      "attribute",
      "value",
      "ending",
      "with",
      "sub-string",
      "str_1",
      "in",
      "html",
      "parsed",
      "string",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "select",
      "(",
      "'div[id$=_answer]'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "div",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "_answer",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "soup",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      70,
      78,
      5,
      1,
      79,
      225,
      440,
      341,
      143,
      432,
      79,
      465,
      32,
      24,
      307,
      465,
      14,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      358,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      358,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "sympy",
      "solve",
      "matrix",
      "of",
      "linear",
      "equations",
      "str_0",
      "with",
      "variables",
      "str_1"
    ],
    "code": [
      "linsolve",
      "(",
      "Matrix",
      "(",
      "str_0",
      ")",
      ",",
      "(",
      "str_1",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "(([1, 1, 1, 1], [1, 1, 2, 3]))",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": "(x, y, z)",
        "quote": "`",
        "type": "str"
      },
      "(str_0)": {
        "value": "(([1, 1, 1, 1], [1, 1, 2, 3]))",
        "quote": "`",
        "type": "str"
      },
      "(str_1)": {
        "value": "(x, y, z)",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      465,
      189,
      2,
      465,
      465,
      5,
      79,
      306,
      32
    ],
    "code_indx_copy": [
      524,
      1,
      524,
      1,
      11,
      17,
      8,
      1,
      37,
      17,
      17
    ],
    "code_indx_nocopy": [
      524,
      1,
      524,
      1,
      11,
      17,
      8,
      1,
      37,
      17,
      17
    ]
  },
  {
    "intent": [
      "best",
      "way",
      "to",
      "extract",
      "subset",
      "of",
      "key-value",
      "pairs",
      "with",
      "keys",
      "matching",
      "str_0",
      ",",
      "str_1",
      ",",
      "or",
      "str_2",
      "from",
      "python",
      "dictionary",
      "object"
    ],
    "code": [
      "{",
      "k",
      ":",
      "bigdict",
      "[",
      "k",
      "]",
      "for",
      "k",
      "in",
      "list",
      "(",
      "bigdict",
      ".",
      "keys",
      "(",
      ")",
      ")",
      "&",
      "{",
      "'str_0'",
      ",",
      "'str_1'",
      ",",
      "'str_2'",
      "}",
      "}"
    ],
    "slot_map": {
      "str_0": {
        "value": "l",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "m",
        "quote": "'",
        "type": "str"
      },
      "str_2": {
        "value": "n",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      449,
      8,
      104,
      443,
      2,
      422,
      187,
      79,
      206,
      81,
      5,
      62,
      32,
      62,
      344,
      194,
      58,
      50,
      25,
      15
    ],
    "code_indx_copy": [
      52,
      89,
      13,
      524,
      12,
      89,
      16,
      7,
      89,
      9,
      33,
      1,
      524,
      22,
      167,
      1,
      17,
      17,
      226,
      52,
      29,
      8,
      63,
      8,
      150,
      53,
      53
    ],
    "code_indx_nocopy": [
      52,
      89,
      13,
      524,
      12,
      89,
      16,
      7,
      89,
      9,
      33,
      1,
      524,
      22,
      167,
      1,
      17,
      17,
      226,
      52,
      29,
      8,
      63,
      8,
      150,
      53,
      53
    ]
  },
  {
    "intent": [
      "extract",
      "subset",
      "of",
      "key-value",
      "pairs",
      "with",
      "keys",
      "as",
      "str_0",
      "from",
      "dictionary",
      "object",
      "var_0"
    ],
    "code": [
      "dict",
      "(",
      "(",
      "k",
      ",",
      "var_0",
      "[",
      "k",
      "]",
      ")",
      "for",
      "k",
      "in",
      "(",
      "str_0",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "('l', 'm', 'n')",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "bigdict",
        "quote": "`",
        "type": "var"
      },
      "(str_0)": {
        "value": "('l', 'm', 'n')",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      104,
      443,
      2,
      422,
      187,
      79,
      206,
      90,
      5,
      58,
      25,
      15,
      26
    ],
    "code_indx_copy": [
      70,
      1,
      1,
      89,
      8,
      34,
      12,
      89,
      16,
      17,
      7,
      89,
      9,
      1,
      11,
      17,
      17
    ],
    "code_indx_nocopy": [
      70,
      1,
      1,
      89,
      8,
      34,
      12,
      89,
      16,
      17,
      7,
      89,
      9,
      1,
      11,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "items",
      "from",
      "a",
      "dictionary",
      "var_0",
      "where",
      "the",
      "keys",
      "are",
      "present",
      "in",
      "str_0"
    ],
    "code": [
      "{",
      "k",
      ":",
      "var_0",
      ".",
      "get",
      "(",
      "k",
      ",",
      "None",
      ")",
      "for",
      "k",
      "in",
      "(",
      "str_0",
      ")",
      "}"
    ],
    "slot_map": {
      "var_0": {
        "value": "bigdict",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "('l', 'm', 'n')",
        "quote": "`",
        "type": "str"
      },
      "(str_0)": {
        "value": "('l', 'm', 'n')",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      39,
      58,
      3,
      25,
      26,
      155,
      18,
      206,
      243,
      357,
      24,
      5
    ],
    "code_indx_copy": [
      52,
      89,
      13,
      34,
      22,
      86,
      1,
      89,
      8,
      209,
      17,
      7,
      89,
      9,
      1,
      11,
      17,
      53
    ],
    "code_indx_nocopy": [
      52,
      89,
      13,
      34,
      22,
      86,
      1,
      89,
      8,
      209,
      17,
      7,
      89,
      9,
      1,
      11,
      17,
      53
    ]
  },
  {
    "intent": [
      "extract",
      "subset",
      "of",
      "key",
      "value",
      "pair",
      "for",
      "keys",
      "str_0",
      ",",
      "str_1",
      ",",
      "str_2",
      "from",
      "var_0",
      "in",
      "python",
      "3"
    ],
    "code": [
      "{",
      "k",
      ":",
      "var_0",
      "[",
      "k",
      "]",
      "for",
      "k",
      "in",
      "(",
      "'str_0'",
      ",",
      "'str_1'",
      ",",
      "'str_2'",
      ")",
      "}"
    ],
    "slot_map": {
      "str_0": {
        "value": "l",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "m",
        "quote": "'",
        "type": "str"
      },
      "str_2": {
        "value": "n",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "bigdict",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      104,
      443,
      2,
      23,
      143,
      89,
      21,
      206,
      5,
      62,
      32,
      62,
      194,
      58,
      26,
      24,
      50,
      57
    ],
    "code_indx_copy": [
      52,
      89,
      13,
      34,
      12,
      89,
      16,
      7,
      89,
      9,
      1,
      29,
      8,
      63,
      8,
      150,
      17,
      53
    ],
    "code_indx_nocopy": [
      52,
      89,
      13,
      34,
      12,
      89,
      16,
      7,
      89,
      9,
      1,
      29,
      8,
      63,
      8,
      150,
      17,
      53
    ]
  },
  {
    "intent": [
      "selenium",
      "get",
      "the",
      "entire",
      "var_0",
      "page",
      "text"
    ],
    "code": [
      "var_0",
      ".",
      "page_source"
    ],
    "slot_map": {
      "var_0": {
        "value": "driver",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      51,
      17,
      18,
      465,
      26,
      308,
      267
    ],
    "code_indx_copy": [
      34,
      22,
      524
    ],
    "code_indx_nocopy": [
      34,
      22,
      524
    ]
  },
  {
    "intent": [
      "extracting",
      "column",
      "str_0",
      "and",
      "str_1",
      "from",
      "array",
      "var_0"
    ],
    "code": [
      "var_0",
      "[",
      ":",
      ",",
      "(",
      "[",
      "1",
      ",",
      "9",
      "]",
      ")",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "1",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": "9",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "data",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      147,
      5,
      31,
      32,
      58,
      85,
      26
    ],
    "code_indx_copy": [
      34,
      12,
      13,
      8,
      1,
      12,
      15,
      8,
      371,
      16,
      17,
      16
    ],
    "code_indx_nocopy": [
      34,
      12,
      13,
      8,
      1,
      12,
      15,
      8,
      371,
      16,
      17,
      16
    ]
  },
  {
    "intent": [
      "remove",
      "all",
      "square",
      "brackets",
      "from",
      "string",
      "str_0"
    ],
    "code": [
      "re",
      ".",
      "sub",
      "(",
      "'\\\\[.*?\\\\]'",
      ",",
      "''",
      ",",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "abcd[e]yth[ac]ytwec",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      268,
      38,
      465,
      465,
      58,
      14,
      5
    ],
    "code_indx_copy": [
      39,
      22,
      40,
      1,
      524,
      8,
      21,
      8,
      29,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      40,
      1,
      524,
      8,
      21,
      8,
      29,
      17
    ]
  },
  {
    "intent": [
      "how",
      "can",
      "i",
      "resize",
      "the",
      "root",
      "window",
      "in",
      "tkinter",
      "?"
    ],
    "code": [
      "root",
      ".",
      "geometry",
      "(",
      "'500x500'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      77,
      386,
      328,
      465,
      18,
      158,
      302,
      24,
      223,
      52
    ],
    "code_indx_copy": [
      174,
      22,
      524,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      174,
      22,
      524,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "find",
      "all",
      "substrings",
      "in",
      "string",
      "var_0",
      "composed",
      "only",
      "of",
      "letters",
      "var_1",
      "and",
      "var_2",
      "where",
      "each",
      "var_1",
      "is",
      "directly",
      "preceded",
      "and",
      "succeeded",
      "by",
      "var_2"
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'\\\\b(?:b+a)+b+\\\\b'",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "mystring",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "b",
        "quote": "`",
        "type": "var"
      },
      "var_3": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "var_4": {
        "value": "b",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      47,
      38,
      410,
      24,
      14,
      26,
      465,
      352,
      2,
      360,
      63,
      31,
      64,
      155,
      22,
      63,
      152,
      465,
      465,
      31,
      465,
      44,
      64
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      524,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      524,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "list",
      "var_0",
      "of",
      "tuples",
      "of",
      "floats",
      "to",
      "list",
      "var_1",
      "of",
      "tuples",
      "of",
      "strings",
      "of",
      "floats",
      "in",
      "scientific",
      "notation",
      "with",
      "eight",
      "decimal",
      "point",
      "precision"
    ],
    "code": [
      "var_1",
      "=",
      "[",
      "tuple",
      "(",
      "'{0:.8e}'",
      ".",
      "format",
      "(",
      "flt",
      ")",
      "for",
      "flt",
      "in",
      "sublist",
      ")",
      "for",
      "sublist",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "lst",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "str_list",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      4,
      26,
      2,
      33,
      2,
      301,
      8,
      4,
      63,
      2,
      33,
      2,
      259,
      2,
      301,
      24,
      465,
      456,
      79,
      465,
      255,
      271,
      465
    ],
    "code_indx_copy": [
      91,
      19,
      12,
      432,
      1,
      524,
      22,
      38,
      1,
      504,
      17,
      7,
      504,
      9,
      428,
      17,
      7,
      428,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      91,
      19,
      12,
      432,
      1,
      524,
      22,
      38,
      1,
      504,
      17,
      7,
      504,
      9,
      428,
      17,
      7,
      428,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "convert",
      "list",
      "of",
      "sublists",
      "var_0",
      "of",
      "floats",
      "to",
      "a",
      "list",
      "of",
      "sublists",
      "var_1",
      "of",
      "strings",
      "of",
      "integers",
      "in",
      "scientific",
      "notation",
      "with",
      "8",
      "decimal",
      "points"
    ],
    "code": [
      "var_1",
      "=",
      "[",
      "[",
      "'{0:.8e}'",
      ".",
      "format",
      "(",
      "flt",
      ")",
      "for",
      "flt",
      "in",
      "sublist",
      "]",
      "for",
      "sublist",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "lst",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "str_list",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      4,
      2,
      465,
      26,
      2,
      301,
      8,
      3,
      4,
      2,
      465,
      63,
      2,
      259,
      2,
      7,
      24,
      465,
      456,
      79,
      453,
      255,
      318
    ],
    "code_indx_copy": [
      91,
      19,
      12,
      12,
      524,
      22,
      38,
      1,
      504,
      17,
      7,
      504,
      9,
      428,
      16,
      7,
      428,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      91,
      19,
      12,
      12,
      524,
      22,
      38,
      1,
      504,
      17,
      7,
      504,
      9,
      428,
      16,
      7,
      428,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "tuple",
      "var_0",
      "containing",
      "first",
      "element",
      "of",
      "each",
      "tuple",
      "in",
      "tuple",
      "var_1"
    ],
    "code": [
      "var_0",
      "=",
      "tuple",
      "(",
      "x",
      "[",
      "0",
      "]",
      "for",
      "x",
      "in",
      "var_1",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "t",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      148,
      3,
      113,
      26,
      34,
      151,
      49,
      2,
      22,
      113,
      24,
      113,
      63
    ],
    "code_indx_copy": [
      34,
      19,
      432,
      1,
      26,
      12,
      43,
      16,
      7,
      26,
      9,
      91,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      432,
      1,
      26,
      12,
      43,
      16,
      7,
      26,
      9,
      91,
      17
    ]
  },
  {
    "intent": [
      "obtain",
      "the",
      "current",
      "day",
      "of",
      "the",
      "week",
      "in",
      "a",
      "3",
      "letter",
      "format",
      "from",
      "a",
      "datetime",
      "object"
    ],
    "code": [
      "datetime",
      ".",
      "datetime",
      ".",
      "now",
      "(",
      ")",
      ".",
      "strftime",
      "(",
      "'%a'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      465,
      18,
      179,
      356,
      2,
      18,
      413,
      24,
      3,
      57,
      433,
      16,
      58,
      3,
      13,
      15
    ],
    "code_indx_copy": [
      27,
      22,
      27,
      22,
      294,
      1,
      17,
      22,
      65,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      27,
      22,
      27,
      22,
      294,
      1,
      17,
      22,
      65,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "ascii",
      "value",
      "of",
      "a",
      "character",
      "str_0",
      "as",
      "an",
      "int"
    ],
    "code": [
      "ord",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "a",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      18,
      384,
      143,
      2,
      3,
      202,
      5,
      90,
      225,
      74
    ],
    "code_indx_copy": [
      98,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      98,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "ascii",
      "value",
      "of",
      "a",
      "character",
      "ustr_0",
      "as",
      "an",
      "int"
    ],
    "code": [
      "ord",
      "(",
      "'\u3042'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "\u00e3\u0081\u0082",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      18,
      384,
      143,
      2,
      3,
      202,
      465,
      90,
      225,
      74
    ],
    "code_indx_copy": [
      98,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      98,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "ascii",
      "value",
      "of",
      "a",
      "character",
      "as",
      "an",
      "int"
    ],
    "code": [
      "ord",
      "(",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      17,
      18,
      384,
      143,
      2,
      3,
      202,
      90,
      225,
      74
    ],
    "code_indx_copy": [
      98,
      1,
      17
    ],
    "code_indx_nocopy": [
      98,
      1,
      17
    ]
  },
  {
    "intent": [
      "decode",
      "json",
      "string",
      "var_0",
      "to",
      "a",
      "dictionary"
    ],
    "code": [
      "json",
      ".",
      "load",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "u",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      182,
      181,
      14,
      26,
      8,
      3,
      25
    ],
    "code_indx_copy": [
      140,
      22,
      154,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      140,
      22,
      154,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "delete",
      "mulitple",
      "columns",
      "var_0",
      ",",
      "var_1",
      "in",
      "pandas",
      "data",
      "frame",
      "var_2"
    ],
    "code": [
      "var_2",
      ".",
      "drop",
      "(",
      "[",
      "'var_0'",
      ",",
      "'var_1'",
      "]",
      ",",
      "axis",
      "=",
      "1",
      ",",
      "inplace",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "columnheading1",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "columnheading2",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "yourdf",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      86,
      465,
      61,
      26,
      62,
      63,
      24,
      42,
      65,
      66,
      64
    ],
    "code_indx_copy": [
      94,
      22,
      187,
      1,
      12,
      56,
      8,
      57,
      16,
      8,
      42,
      19,
      15,
      8,
      279,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      94,
      22,
      187,
      1,
      12,
      56,
      8,
      57,
      16,
      8,
      42,
      19,
      15,
      8,
      279,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "list",
      "of",
      "of",
      "elements",
      "resulting",
      "from",
      "splitting",
      "user",
      "input",
      "by",
      "commas",
      "and",
      "stripping",
      "white",
      "space",
      "from",
      "each",
      "resulting",
      "string",
      "var_0"
    ],
    "code": [
      "[",
      "var_0",
      ".",
      "strip",
      "(",
      ")",
      "for",
      "var_0",
      "in",
      "input",
      "(",
      ")",
      ".",
      "split",
      "(",
      "','",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      3,
      4,
      2,
      2,
      1,
      353,
      58,
      429,
      174,
      452,
      44,
      465,
      31,
      465,
      131,
      400,
      58,
      22,
      353,
      14,
      26
    ],
    "code_indx_copy": [
      12,
      34,
      22,
      170,
      1,
      17,
      7,
      34,
      9,
      251,
      1,
      17,
      22,
      71,
      1,
      73,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      34,
      22,
      170,
      1,
      17,
      7,
      34,
      9,
      251,
      1,
      17,
      22,
      71,
      1,
      73,
      17,
      16
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "list",
      "containing",
      "the",
      "digits",
      "values",
      "from",
      "binary",
      "string",
      "var_0",
      "as",
      "elements"
    ],
    "code": [
      "[",
      "int",
      "(",
      "d",
      ")",
      "for",
      "d",
      "in",
      "str",
      "(",
      "bin",
      "(",
      "var_0",
      ")",
      ")",
      "[",
      "2",
      ":",
      "]",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "x",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      148,
      3,
      4,
      34,
      18,
      200,
      20,
      58,
      276,
      14,
      26,
      90,
      1
    ],
    "code_indx_copy": [
      12,
      20,
      1,
      2,
      17,
      7,
      2,
      9,
      25,
      1,
      418,
      1,
      34,
      17,
      17,
      12,
      82,
      13,
      16,
      16
    ],
    "code_indx_nocopy": [
      12,
      20,
      1,
      2,
      17,
      7,
      2,
      9,
      25,
      1,
      418,
      1,
      34,
      17,
      17,
      12,
      82,
      13,
      16,
      16
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "max",
      "string",
      "length",
      "in",
      "list",
      "var_0"
    ],
    "code": [
      "max",
      "(",
      "len",
      "(",
      "word",
      ")",
      "for",
      "word",
      "in",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "i",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      18,
      258,
      14,
      209,
      24,
      4,
      26
    ],
    "code_indx_copy": [
      179,
      1,
      32,
      1,
      487,
      17,
      7,
      487,
      9,
      34,
      17
    ],
    "code_indx_nocopy": [
      179,
      1,
      32,
      1,
      487,
      17,
      7,
      487,
      9,
      34,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "maximum",
      "string",
      "length",
      "in",
      "nested",
      "list",
      "var_0"
    ],
    "code": [
      "len",
      "(",
      "max",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "len",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "i",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      18,
      227,
      14,
      209,
      24,
      154,
      4,
      26
    ],
    "code_indx_copy": [
      32,
      1,
      179,
      1,
      34,
      8,
      102,
      19,
      32,
      17,
      17
    ],
    "code_indx_nocopy": [
      32,
      1,
      179,
      1,
      34,
      8,
      102,
      19,
      32,
      17,
      17
    ]
  },
  {
    "intent": [
      "execute",
      "os",
      "command",
      "var_0"
    ],
    "code": [
      "os",
      ".",
      "system",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "my_cmd",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      135,
      136,
      137,
      26
    ],
    "code_indx_copy": [
      113,
      22,
      119,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      119,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "list",
      "var_0",
      "alphabetically"
    ],
    "code": [
      "var_0",
      ".",
      "sort",
      "(",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "x",
      ".",
      "lower",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "mylist",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      4,
      26,
      465
    ],
    "code_indx_copy": [
      34,
      22,
      124,
      1,
      102,
      19,
      44,
      26,
      13,
      26,
      22,
      152,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      124,
      1,
      102,
      19,
      44,
      26,
      13,
      26,
      22,
      152,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "list",
      "var_0",
      "in",
      "alphabetical",
      "order"
    ],
    "code": [
      "var_0",
      ".",
      "sort",
      "(",
      "key",
      "=",
      "str",
      ".",
      "lower",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "mylist",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      4,
      26,
      24,
      465,
      162
    ],
    "code_indx_copy": [
      34,
      22,
      124,
      1,
      102,
      19,
      25,
      22,
      152,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      124,
      1,
      102,
      19,
      25,
      22,
      152,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "list",
      "of",
      "strings",
      "str_0",
      "."
    ],
    "code": [
      "str_0",
      ".",
      "sort",
      "(",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "mylist",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      117,
      3,
      4,
      2,
      259,
      5,
      159
    ],
    "code_indx_copy": [
      11,
      22,
      124,
      1,
      17
    ],
    "code_indx_nocopy": [
      11,
      22,
      124,
      1,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "list",
      "of",
      "strings",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "sort",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "list",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      3,
      4,
      2,
      259,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      124,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      124,
      1,
      17
    ]
  },
  {
    "intent": [
      "set",
      "multi",
      "index",
      "on",
      "columns",
      "str_0",
      "and",
      "str_1",
      "of",
      "data",
      "frame",
      "var_0",
      "in",
      "pandas",
      "."
    ],
    "code": [
      "var_0",
      ".",
      "set_index",
      "(",
      "[",
      "'str_0'",
      ",",
      "'str_1'",
      "]",
      ",",
      "inplace",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "Company",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "date",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      59,
      465,
      37,
      139,
      61,
      5,
      31,
      32,
      2,
      65,
      66,
      26,
      24,
      42,
      159
    ],
    "code_indx_copy": [
      34,
      22,
      203,
      1,
      12,
      29,
      8,
      63,
      16,
      8,
      279,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      203,
      1,
      12,
      29,
      8,
      63,
      16,
      8,
      279,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "attribute",
      "var_0",
      "from",
      "object",
      "var_1"
    ],
    "code": [
      "getattr",
      "(",
      "var_1",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "x",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "your_obj",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      18,
      341,
      26,
      58,
      15,
      63
    ],
    "code_indx_copy": [
      300,
      1,
      91,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      300,
      1,
      91,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "first",
      "word",
      "in",
      "string",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "split",
      "(",
      "' '",
      ",",
      "1",
      ")",
      "[",
      "1",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      151,
      239,
      24,
      14,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      71,
      1,
      108,
      8,
      15,
      17,
      12,
      15,
      16
    ],
    "code_indx_nocopy": [
      34,
      22,
      71,
      1,
      108,
      8,
      15,
      17,
      12,
      15,
      16
    ]
  },
  {
    "intent": [
      "save",
      "xlsxwriter",
      "file",
      "in",
      "str_0",
      "path",
      "and",
      "assign",
      "to",
      "variable",
      "var_0"
    ],
    "code": [
      "var_0",
      "=",
      "xlsxwriter",
      ".",
      "Workbook",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "app/smth1/smth2/Expenses01.xlsx",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "workbook",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      333,
      465,
      126,
      24,
      5,
      199,
      31,
      93,
      8,
      95,
      26
    ],
    "code_indx_copy": [
      34,
      19,
      529,
      22,
      524,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      524,
      22,
      524,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "save",
      "xlsxwriter",
      "file",
      "to",
      "str_0",
      "path"
    ],
    "code": [
      "workbook",
      "=",
      "xlsxwriter",
      ".",
      "Workbook",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "C:/Users/Steven/Documents/demo.xlsx",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      333,
      465,
      126,
      8,
      5,
      199
    ],
    "code_indx_copy": [
      524,
      19,
      529,
      22,
      524,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      524,
      22,
      524,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "change",
      "legend",
      "size",
      "to",
      "str_0",
      "in",
      "upper-left",
      "location"
    ],
    "code": [
      "pyplot",
      ".",
      "legend",
      "(",
      "loc",
      "=",
      "2",
      ",",
      "fontsize",
      "=",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "x-small",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      221,
      415,
      334,
      8,
      5,
      24,
      465,
      465
    ],
    "code_indx_copy": [
      524,
      22,
      404,
      1,
      202,
      19,
      82,
      8,
      524,
      19,
      29,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      404,
      1,
      202,
      19,
      82,
      8,
      524,
      19,
      29,
      17
    ]
  },
  {
    "intent": [
      "change",
      "legend",
      "font",
      "size",
      "with",
      "matplotlib.pyplot",
      "to",
      "6"
    ],
    "code": [
      "plot",
      ".",
      "legend",
      "(",
      "loc",
      "=",
      "2",
      ",",
      "prop",
      "=",
      "{",
      "'size'",
      ":",
      "6",
      "}",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      221,
      415,
      465,
      334,
      79,
      465,
      8,
      393
    ],
    "code_indx_copy": [
      290,
      22,
      404,
      1,
      202,
      19,
      82,
      8,
      524,
      19,
      52,
      505,
      13,
      249,
      53,
      17
    ],
    "code_indx_nocopy": [
      290,
      22,
      404,
      1,
      202,
      19,
      82,
      8,
      524,
      19,
      52,
      505,
      13,
      249,
      53,
      17
    ]
  },
  {
    "intent": [
      "split",
      "list",
      "var_0",
      "into",
      "var_1",
      "sized",
      "lists"
    ],
    "code": [
      "[",
      "var_0",
      "[",
      "i",
      ":",
      "i",
      "+",
      "var_1",
      "]",
      "for",
      "i",
      "in",
      "range",
      "(",
      "0",
      ",",
      "len",
      "(",
      "var_0",
      ")",
      ",",
      "var_1",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "l",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "n",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      138,
      4,
      26,
      12,
      63,
      465,
      30
    ],
    "code_indx_copy": [
      12,
      34,
      12,
      6,
      13,
      6,
      96,
      91,
      16,
      7,
      6,
      9,
      104,
      1,
      43,
      8,
      32,
      1,
      34,
      17,
      8,
      91,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      34,
      12,
      6,
      13,
      6,
      96,
      91,
      16,
      7,
      6,
      9,
      104,
      1,
      43,
      8,
      32,
      1,
      34,
      17,
      8,
      91,
      17,
      16
    ]
  },
  {
    "intent": [
      "split",
      "a",
      "list",
      "var_0",
      "into",
      "evenly",
      "sized",
      "chunks",
      "var_1"
    ],
    "code": [
      "[",
      "var_0",
      "[",
      "i",
      ":",
      "i",
      "+",
      "var_1",
      "]",
      "for",
      "i",
      "in",
      "range",
      "(",
      "0",
      ",",
      "len",
      "(",
      "var_0",
      ")",
      ",",
      "var_1",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "l",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "n",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      138,
      3,
      4,
      26,
      12,
      465,
      465,
      465,
      63
    ],
    "code_indx_copy": [
      12,
      34,
      12,
      6,
      13,
      6,
      96,
      91,
      16,
      7,
      6,
      9,
      104,
      1,
      43,
      8,
      32,
      1,
      34,
      17,
      8,
      91,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      34,
      12,
      6,
      13,
      6,
      96,
      91,
      16,
      7,
      6,
      9,
      104,
      1,
      43,
      8,
      32,
      1,
      34,
      17,
      8,
      91,
      17,
      16
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "character",
      "str_0",
      "exists",
      "in",
      "a",
      "dataframe",
      "var_0",
      "cell",
      "str_1"
    ],
    "code": [
      "var_0",
      "[",
      "'str_1'",
      "]",
      ".",
      "str",
      ".",
      "contains",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "-",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "str_1": {
        "value": "a",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      234,
      150,
      202,
      5,
      274,
      24,
      3,
      43,
      26,
      465,
      32
    ],
    "code_indx_copy": [
      34,
      12,
      63,
      16,
      22,
      25,
      22,
      524,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      34,
      12,
      63,
      16,
      22,
      25,
      22,
      524,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "all",
      "non",
      "-word",
      ",",
      "-whitespace",
      ",",
      "or",
      "-apostrophe",
      "characters",
      "from",
      "string",
      "str_0"
    ],
    "code": [
      "re",
      ".",
      "sub",
      "(",
      "\"[^\\\\w' ]\"",
      ",",
      "''",
      ",",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "doesn't this mean it -technically- works?",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      268,
      38,
      465,
      465,
      62,
      465,
      62,
      344,
      465,
      98,
      58,
      14,
      5
    ],
    "code_indx_copy": [
      39,
      22,
      40,
      1,
      524,
      8,
      21,
      8,
      29,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      40,
      1,
      524,
      8,
      21,
      8,
      29,
      17
    ]
  },
  {
    "intent": [
      "find",
      "all",
      "digits",
      "between",
      "two",
      "characters",
      "str_0",
      "and",
      "str_1in",
      "a",
      "string",
      "var_0"
    ],
    "code": [
      "print",
      "(",
      "re",
      ".",
      "findall",
      "(",
      "'\\\\d+'",
      ",",
      "'\\n'",
      ".",
      "join",
      "(",
      "re",
      ".",
      "findall",
      "(",
      "'\u00ab([\\\\s\\\\S]*?)\u00bb'",
      ",",
      "var_0",
      ")",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "\u00ab",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": "\u00bb",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "text",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      47,
      38,
      200,
      278,
      29,
      98,
      5,
      31,
      465,
      3,
      14,
      26
    ],
    "code_indx_copy": [
      49,
      1,
      39,
      22,
      48,
      1,
      443,
      8,
      133,
      22,
      23,
      1,
      39,
      22,
      48,
      1,
      524,
      8,
      34,
      17,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      39,
      22,
      48,
      1,
      443,
      8,
      133,
      22,
      23,
      1,
      39,
      22,
      48,
      1,
      524,
      8,
      34,
      17,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "plot",
      "data",
      "of",
      "column",
      "str_0",
      "versus",
      "column",
      "str_1",
      "of",
      "dataframe",
      "var_0",
      "after",
      "resetting",
      "its",
      "index"
    ],
    "code": [
      "var_0",
      ".",
      "reset_index",
      "(",
      ")",
      ".",
      "plot",
      "(",
      "x",
      "=",
      "'str_0'",
      ",",
      "y",
      "=",
      "'str_1'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "index",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "A",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "monthly_mean",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      244,
      65,
      2,
      147,
      5,
      465,
      147,
      32,
      2,
      43,
      26,
      201,
      465,
      91,
      37
    ],
    "code_indx_copy": [
      34,
      22,
      186,
      1,
      17,
      22,
      290,
      1,
      26,
      19,
      29,
      8,
      103,
      19,
      63,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      186,
      1,
      17,
      22,
      290,
      1,
      26,
      19,
      29,
      8,
      103,
      19,
      63,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "output",
      "of",
      "a",
      "subprocess",
      "command",
      "str_0",
      "in",
      "command",
      "line"
    ],
    "code": [
      "subprocess",
      ".",
      "check_output",
      "(",
      "'str_0'",
      ",",
      "shell",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "echo \"foo\"",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      18,
      257,
      2,
      3,
      290,
      137,
      5,
      24,
      137,
      172
    ],
    "code_indx_copy": [
      229,
      22,
      449,
      1,
      29,
      8,
      231,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      229,
      22,
      449,
      1,
      29,
      8,
      231,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "encode",
      "each",
      "value",
      "to",
      "str_0",
      "in",
      "the",
      "list",
      "var_0"
    ],
    "code": [
      "[",
      "x",
      ".",
      "encode",
      "(",
      "'str_0'",
      ")",
      "for",
      "x",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "UTF8",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "EmployeeList",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      447,
      22,
      143,
      8,
      5,
      24,
      18,
      4,
      26
    ],
    "code_indx_copy": [
      12,
      26,
      22,
      239,
      1,
      29,
      17,
      7,
      26,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      12,
      26,
      22,
      239,
      1,
      29,
      17,
      7,
      26,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "combine",
      "two",
      "columns",
      "var_0",
      "and",
      "var_1",
      "in",
      "a",
      "pandas",
      "data",
      "frame"
    ],
    "code": [
      "pandas",
      ".",
      "concat",
      "(",
      "[",
      "df",
      "[",
      "'var_0'",
      "]",
      ".",
      "dropna",
      "(",
      ")",
      ",",
      "df",
      "[",
      "'var_1'",
      "]",
      ".",
      "dropna",
      "(",
      ")",
      "]",
      ")",
      ".",
      "reindex_like",
      "(",
      "df",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "foo",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "bar",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      365,
      29,
      61,
      26,
      31,
      63,
      24,
      3,
      42,
      65,
      66
    ],
    "code_indx_copy": [
      276,
      22,
      163,
      1,
      12,
      149,
      12,
      56,
      16,
      22,
      388,
      1,
      17,
      8,
      149,
      12,
      57,
      16,
      22,
      388,
      1,
      17,
      16,
      17,
      22,
      524,
      1,
      149,
      17
    ],
    "code_indx_nocopy": [
      276,
      22,
      163,
      1,
      12,
      149,
      12,
      56,
      16,
      22,
      388,
      1,
      17,
      8,
      149,
      12,
      57,
      16,
      22,
      388,
      1,
      17,
      16,
      17,
      22,
      524,
      1,
      149,
      17
    ]
  },
  {
    "intent": [
      "generate",
      "a",
      "list",
      "of",
      "consecutive",
      "integers",
      "from",
      "0",
      "to",
      "8"
    ],
    "code": [
      "list",
      "(",
      "range",
      "(",
      "9",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      56,
      3,
      4,
      2,
      434,
      7,
      58,
      107,
      8,
      453
    ],
    "code_indx_copy": [
      33,
      1,
      104,
      1,
      371,
      17,
      17
    ],
    "code_indx_nocopy": [
      33,
      1,
      104,
      1,
      371,
      17,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "list",
      "var_0",
      "into",
      "a",
      "unicode",
      "string"
    ],
    "code": [
      "\"\"\"\"\"\"",
      ".",
      "join",
      "(",
      "chr",
      "(",
      "i",
      ")",
      "for",
      "i",
      "in",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "myintegers",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      4,
      26,
      12,
      3,
      230,
      14
    ],
    "code_indx_copy": [
      287,
      22,
      23,
      1,
      455,
      1,
      6,
      17,
      7,
      6,
      9,
      34,
      17
    ],
    "code_indx_nocopy": [
      287,
      22,
      23,
      1,
      455,
      1,
      6,
      17,
      7,
      6,
      9,
      34,
      17
    ]
  },
  {
    "intent": [
      "inherit",
      "from",
      "class",
      "var_0"
    ],
    "code": [
      "super",
      "(",
      "var_0",
      ",",
      "self",
      ")",
      ".",
      "__init__",
      "(",
      "*",
      "args",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "Executive",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      58,
      311,
      26
    ],
    "code_indx_copy": [
      492,
      1,
      34,
      8,
      310,
      17,
      22,
      493,
      1,
      3,
      311,
      17
    ],
    "code_indx_nocopy": [
      492,
      1,
      34,
      8,
      310,
      17,
      22,
      493,
      1,
      3,
      311,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "the",
      "string",
      "value",
      "var_0",
      "from",
      "a",
      "list",
      "of",
      "strings",
      "var_1"
    ],
    "code": [
      "[",
      "var_0",
      "for",
      "var_0",
      "in",
      "var_1",
      "if",
      "var_0",
      "!=",
      "'var_0'",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "item",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "my_sequence",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      18,
      14,
      143,
      26,
      58,
      3,
      4,
      2,
      259,
      63
    ],
    "code_indx_copy": [
      12,
      34,
      7,
      34,
      9,
      91,
      67,
      34,
      88,
      56,
      16
    ],
    "code_indx_nocopy": [
      12,
      34,
      7,
      34,
      9,
      91,
      67,
      34,
      88,
      56,
      16
    ]
  },
  {
    "intent": [
      "randomly",
      "select",
      "an",
      "item",
      "from",
      "list",
      "var_0"
    ],
    "code": [
      "random",
      ".",
      "choice",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "foo",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      78,
      225,
      156,
      58,
      4,
      26
    ],
    "code_indx_copy": [
      148,
      22,
      210,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      148,
      22,
      210,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "all",
      "of",
      "the",
      "following",
      "items",
      "in",
      "list",
      "str_0",
      "are",
      "in",
      "a",
      "list",
      "str_1"
    ],
    "code": [
      "set",
      "(",
      "[",
      "str_0",
      "]",
      ")",
      ".",
      "issubset",
      "(",
      "[",
      "str_1",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "['a', 'b']",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": "['a', 'b', 'c']",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "['a', 'b']",
        "quote": "`",
        "type": "str"
      },
      "[str_1]": {
        "value": "['a', 'b', 'c']",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      234,
      150,
      38,
      2,
      18,
      465,
      39,
      24,
      4,
      5,
      243,
      24,
      3,
      4,
      32
    ],
    "code_indx_copy": [
      189,
      1,
      12,
      11,
      16,
      17,
      22,
      191,
      1,
      12,
      37,
      16,
      17
    ],
    "code_indx_nocopy": [
      189,
      1,
      12,
      11,
      16,
      17,
      22,
      191,
      1,
      12,
      37,
      16,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "all",
      "the",
      "items",
      "in",
      "a",
      "list",
      "str_0",
      "exists",
      "in",
      "another",
      "list",
      "var_0"
    ],
    "code": [
      "set",
      "(",
      "[",
      "str_0",
      "]",
      ")",
      ".",
      "issubset",
      "(",
      "set",
      "(",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "['a', 'b']",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "l",
        "quote": "`",
        "type": "var"
      },
      "[str_0]": {
        "value": "['a', 'b']",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      234,
      150,
      38,
      18,
      39,
      24,
      3,
      4,
      5,
      274,
      24,
      176,
      4,
      26
    ],
    "code_indx_copy": [
      189,
      1,
      12,
      11,
      16,
      17,
      22,
      191,
      1,
      189,
      1,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      189,
      1,
      12,
      11,
      16,
      17,
      22,
      191,
      1,
      189,
      1,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "set",
      "the",
      "stdin",
      "of",
      "the",
      "process",
      "str_0",
      "to",
      "be",
      "bstr_1"
    ],
    "code": [
      "p",
      "=",
      "Popen",
      "(",
      "[",
      "'grep'",
      ",",
      "'f'",
      "]",
      ",",
      "stdout",
      "=",
      "PIPE",
      ",",
      "stdin",
      "=",
      "PIPE",
      ",",
      "stderr",
      "=",
      "STDOUT",
      ")",
      "\n",
      "grep_stdout",
      "=",
      "p",
      ".",
      "communicate",
      "(",
      "input",
      "=",
      "'str_1'",
      ")",
      "[",
      "0",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "grep f",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "one\ntwo\nthree\nfour\nfive\nsix\n",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      59,
      18,
      446,
      2,
      18,
      444,
      5,
      8,
      362,
      465
    ],
    "code_indx_copy": [
      435,
      19,
      441,
      1,
      12,
      524,
      8,
      456,
      16,
      8,
      354,
      19,
      481,
      8,
      473,
      19,
      481,
      8,
      488,
      19,
      489,
      17,
      161,
      524,
      19,
      435,
      22,
      479,
      1,
      251,
      19,
      63,
      17,
      12,
      43,
      16
    ],
    "code_indx_nocopy": [
      435,
      19,
      441,
      1,
      12,
      524,
      8,
      456,
      16,
      8,
      354,
      19,
      481,
      8,
      473,
      19,
      481,
      8,
      488,
      19,
      489,
      17,
      161,
      524,
      19,
      435,
      22,
      479,
      1,
      251,
      19,
      63,
      17,
      12,
      43,
      16
    ]
  },
  {
    "intent": [
      "set",
      "the",
      "stdin",
      "of",
      "the",
      "process",
      "str_0",
      "to",
      "be",
      "str_1"
    ],
    "code": [
      "p",
      "=",
      "subprocess",
      ".",
      "Popen",
      "(",
      "[",
      "'grep'",
      ",",
      "'f'",
      "]",
      ",",
      "stdout",
      "=",
      "subprocess",
      ".",
      "PIPE",
      ",",
      "stdin",
      "=",
      "\n",
      "subprocess",
      ".",
      "PIPE",
      ")",
      "\n",
      "p",
      ".",
      "stdin",
      ".",
      "write",
      "(",
      "'str_1'",
      ")",
      "\n",
      "p",
      ".",
      "communicate",
      "(",
      ")",
      "[",
      "0",
      "]",
      "\n",
      "p",
      ".",
      "stdin",
      ".",
      "close",
      "(",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "grep f",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "one\ntwo\nthree\nfour\nfive\nsix\n",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      59,
      18,
      446,
      2,
      18,
      444,
      5,
      8,
      362,
      32
    ],
    "code_indx_copy": [
      435,
      19,
      229,
      22,
      441,
      1,
      12,
      524,
      8,
      456,
      16,
      8,
      354,
      19,
      229,
      22,
      481,
      8,
      473,
      19,
      161,
      229,
      22,
      481,
      17,
      161,
      435,
      22,
      473,
      22,
      131,
      1,
      63,
      17,
      161,
      435,
      22,
      479,
      1,
      17,
      12,
      43,
      16,
      161,
      435,
      22,
      473,
      22,
      506,
      1,
      17
    ],
    "code_indx_nocopy": [
      435,
      19,
      229,
      22,
      441,
      1,
      12,
      524,
      8,
      456,
      16,
      8,
      354,
      19,
      229,
      22,
      481,
      8,
      473,
      19,
      161,
      229,
      22,
      481,
      17,
      161,
      435,
      22,
      473,
      22,
      131,
      1,
      63,
      17,
      161,
      435,
      22,
      479,
      1,
      17,
      12,
      43,
      16,
      161,
      435,
      22,
      473,
      22,
      506,
      1,
      17
    ]
  },
  {
    "intent": [
      "to",
      "convert",
      "a",
      "list",
      "of",
      "tuples",
      "var_0",
      "into",
      "list",
      "of",
      "lists"
    ],
    "code": [
      "[",
      "list",
      "(",
      "t",
      ")",
      "for",
      "t",
      "in",
      "zip",
      "(",
      "*",
      "var_0",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "list_of_tuples",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      8,
      11,
      3,
      4,
      2,
      33,
      26,
      12,
      4,
      2,
      30
    ],
    "code_indx_copy": [
      12,
      33,
      1,
      45,
      17,
      7,
      45,
      9,
      36,
      1,
      3,
      34,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      33,
      1,
      45,
      17,
      7,
      45,
      9,
      36,
      1,
      3,
      34,
      17,
      16
    ]
  },
  {
    "intent": [
      "group",
      "a",
      "list",
      "var_0",
      "of",
      "tuples",
      "by",
      "values"
    ],
    "code": [
      "zip",
      "(",
      "*",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "list_of_tuples",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      383,
      3,
      4,
      26,
      2,
      33,
      44,
      20
    ],
    "code_indx_copy": [
      36,
      1,
      3,
      34,
      17
    ],
    "code_indx_nocopy": [
      36,
      1,
      3,
      34,
      17
    ]
  },
  {
    "intent": [
      "merge",
      "pandas",
      "dataframe",
      "var_0",
      "with",
      "columns",
      "str_0",
      "and",
      "str_1",
      "and",
      "dataframe",
      "var_1",
      "with",
      "column",
      "str_2"
    ],
    "code": [
      "pd",
      ".",
      "merge",
      "(",
      "str_2",
      ",",
      "var_0",
      ",",
      "on",
      "=",
      "'k'",
      ")",
      "[",
      "[",
      "'str_0'",
      ",",
      "'str_1'",
      ",",
      "'str_2'",
      "]",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "x",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "a",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "b",
        "quote": "'",
        "type": "str"
      },
      "var_1": {
        "value": "y",
        "quote": "`",
        "type": "var"
      },
      "str_2": {
        "value": "y",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      247,
      42,
      43,
      26,
      79,
      61,
      5,
      31,
      32,
      31,
      43,
      63,
      79,
      147,
      194
    ],
    "code_indx_copy": [
      162,
      22,
      220,
      1,
      183,
      8,
      34,
      8,
      244,
      19,
      524,
      17,
      12,
      12,
      29,
      8,
      63,
      8,
      150,
      16,
      16
    ],
    "code_indx_nocopy": [
      162,
      22,
      220,
      1,
      183,
      8,
      34,
      8,
      244,
      19,
      524,
      17,
      12,
      12,
      29,
      8,
      63,
      8,
      150,
      16,
      16
    ]
  },
  {
    "intent": [
      "split",
      "string",
      "with",
      "comma",
      "(",
      ",",
      ")",
      "and",
      "remove",
      "whitespace",
      "from",
      "a",
      "string",
      "str_0"
    ],
    "code": [
      "[",
      "item",
      ".",
      "strip",
      "(",
      ")",
      "for",
      "item",
      "in",
      "str_0",
      ".",
      "split",
      "(",
      "','",
      ")",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "my_string",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      138,
      14,
      79,
      417,
      212,
      62,
      27,
      31,
      268,
      211,
      58,
      3,
      14,
      5
    ],
    "code_indx_copy": [
      12,
      387,
      22,
      170,
      1,
      17,
      7,
      387,
      9,
      11,
      22,
      71,
      1,
      73,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      387,
      22,
      170,
      1,
      17,
      7,
      387,
      9,
      11,
      22,
      71,
      1,
      73,
      17,
      16
    ]
  },
  {
    "intent": [
      "get",
      "all",
      "object",
      "attributes",
      "of",
      "object",
      "var_0"
    ],
    "code": [
      "print",
      "(",
      "var_0",
      ".",
      "__dict__",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "obj",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      38,
      15,
      459,
      2,
      15,
      26
    ],
    "code_indx_copy": [
      49,
      1,
      34,
      22,
      142,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      34,
      22,
      142,
      17
    ]
  },
  {
    "intent": [
      "get",
      "all",
      "object",
      "attributes",
      "of",
      "an",
      "object"
    ],
    "code": [
      "dir",
      "(",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      17,
      38,
      15,
      459,
      2,
      225,
      15
    ],
    "code_indx_copy": [
      507,
      1,
      17
    ],
    "code_indx_nocopy": [
      507,
      1,
      17
    ]
  },
  {
    "intent": [
      "get",
      "all",
      "object",
      "attributes",
      "of",
      "an",
      "object"
    ],
    "code": [
      "dir",
      "(",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      17,
      38,
      15,
      459,
      2,
      225,
      15
    ],
    "code_indx_copy": [
      507,
      1,
      17
    ],
    "code_indx_nocopy": [
      507,
      1,
      17
    ]
  },
  {
    "intent": [
      "pygobject",
      "center",
      "window",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "set_position",
      "(",
      "Gtk",
      ".",
      "WindowPosition",
      ".",
      "CENTER",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "window",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      465,
      302,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      524,
      1,
      524,
      22,
      524,
      22,
      524,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      524,
      1,
      524,
      22,
      524,
      22,
      524,
      17
    ]
  },
  {
    "intent": [
      "change",
      "the",
      "size",
      "of",
      "the",
      "sci",
      "notation",
      "to",
      "str_0",
      "above",
      "the",
      "y",
      "axis",
      "in",
      "matplotlib",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "rc",
      "(",
      "'font'",
      ",",
      "**",
      "{",
      "'size'",
      ":",
      "'str_0'",
      "}",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "30",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "plt",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      221,
      18,
      334,
      2,
      18,
      465,
      456,
      8,
      5,
      465,
      18,
      465,
      450,
      24,
      350,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      524,
      1,
      524,
      8,
      5,
      52,
      505,
      13,
      29,
      53,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      524,
      1,
      524,
      8,
      5,
      52,
      505,
      13,
      29,
      53,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "datafram",
      "var_0",
      "has",
      "any",
      "nan",
      "vlaues"
    ],
    "code": [
      "var_0",
      ".",
      "isnull",
      "(",
      ")",
      ".",
      "values",
      ".",
      "any",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      234,
      150,
      465,
      26,
      337,
      272,
      289,
      465
    ],
    "code_indx_copy": [
      34,
      22,
      430,
      1,
      17,
      22,
      166,
      22,
      269,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      430,
      1,
      17,
      22,
      166,
      22,
      269,
      1,
      17
    ]
  },
  {
    "intent": [
      "unpack",
      "the",
      "arguments",
      "out",
      "of",
      "list",
      "var_0",
      "to",
      "function",
      "var_1"
    ],
    "code": [
      "var_1",
      "(",
      "*",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "params",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "some_func",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      142,
      18,
      305,
      465,
      2,
      4,
      26,
      8,
      69,
      63
    ],
    "code_indx_copy": [
      91,
      1,
      3,
      34,
      17
    ],
    "code_indx_nocopy": [
      91,
      1,
      3,
      34,
      17
    ]
  },
  {
    "intent": [
      "decode",
      "encodeuricomponent",
      "in",
      "gae"
    ],
    "code": [
      "urllib",
      ".",
      "parse",
      ".",
      "unquote",
      "(",
      "h",
      ".",
      "path",
      ".",
      "encode",
      "(",
      "'utf-8'",
      ")",
      ")",
      ".",
      "decode",
      "(",
      "'utf-8'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      182,
      465,
      24,
      465
    ],
    "code_indx_copy": [
      232,
      22,
      236,
      22,
      237,
      1,
      524,
      22,
      114,
      22,
      239,
      1,
      143,
      17,
      17,
      22,
      99,
      1,
      143,
      17
    ],
    "code_indx_nocopy": [
      232,
      22,
      236,
      22,
      237,
      1,
      524,
      22,
      114,
      22,
      239,
      1,
      143,
      17,
      17,
      22,
      99,
      1,
      143,
      17
    ]
  },
  {
    "intent": [
      "get",
      "proportion",
      "of",
      "rows",
      "in",
      "dataframe",
      "var_0",
      "whose",
      "values",
      "for",
      "column",
      "var_1",
      "are",
      "greater",
      "than",
      "0"
    ],
    "code": [
      "(",
      "var_0",
      "[",
      "'var_1'",
      "]",
      ">",
      "0",
      ")",
      ".",
      "mean",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "trace_df",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "ratio",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      465,
      2,
      80,
      24,
      43,
      26,
      228,
      20,
      21,
      147,
      63,
      243,
      349,
      264,
      107
    ],
    "code_indx_copy": [
      1,
      34,
      12,
      57,
      16,
      214,
      43,
      17,
      22,
      390,
      1,
      17
    ],
    "code_indx_nocopy": [
      1,
      34,
      12,
      57,
      16,
      214,
      43,
      17,
      22,
      390,
      1,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "set",
      "of",
      "tuples",
      "var_0",
      "to",
      "a",
      "string",
      "var_1"
    ],
    "code": [
      "var_1",
      "=",
      "'\\n'",
      ".",
      "join",
      "(",
      "item",
      "[",
      "0",
      "]",
      "for",
      "item",
      "in",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "queryresult",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "emaillist",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      3,
      59,
      2,
      33,
      26,
      8,
      3,
      14,
      63
    ],
    "code_indx_copy": [
      91,
      19,
      133,
      22,
      23,
      1,
      387,
      12,
      43,
      16,
      7,
      387,
      9,
      34,
      17
    ],
    "code_indx_nocopy": [
      91,
      19,
      133,
      22,
      23,
      1,
      387,
      12,
      43,
      16,
      7,
      387,
      9,
      34,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "set",
      "of",
      "tuples",
      "var_0",
      "to",
      "a",
      "list",
      "of",
      "strings"
    ],
    "code": [
      "[",
      "item",
      "[",
      "0",
      "]",
      "for",
      "item",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "queryresult",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      3,
      59,
      2,
      33,
      26,
      8,
      3,
      4,
      2,
      259
    ],
    "code_indx_copy": [
      12,
      387,
      12,
      43,
      16,
      7,
      387,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      12,
      387,
      12,
      43,
      16,
      7,
      387,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "list",
      "of",
      "tuples",
      "var_0",
      "to",
      "a",
      "string",
      "from",
      "the",
      "first",
      "indexes",
      "."
    ],
    "code": [
      "emaillist",
      "=",
      "'\\n'",
      ".",
      "join",
      "(",
      "[",
      "item",
      "[",
      "0",
      "]",
      "for",
      "item",
      "in",
      "var_0",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "queryresult",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      3,
      4,
      2,
      33,
      26,
      8,
      3,
      14,
      58,
      18,
      151,
      235,
      159
    ],
    "code_indx_copy": [
      524,
      19,
      133,
      22,
      23,
      1,
      12,
      387,
      12,
      43,
      16,
      7,
      387,
      9,
      34,
      16,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      133,
      22,
      23,
      1,
      12,
      387,
      12,
      43,
      16,
      7,
      387,
      9,
      34,
      16,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "widget",
      "which",
      "has",
      "currently",
      "the",
      "focus",
      "in",
      "tkinter",
      "instance",
      "var_0"
    ],
    "code": [
      "print",
      "(",
      "(",
      "'focus object class:'",
      ",",
      "var_0",
      ".",
      "focus_get",
      "(",
      ")",
      ".",
      "__class__",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "window2",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      18,
      465,
      205,
      337,
      465,
      18,
      465,
      24,
      223,
      465,
      26
    ],
    "code_indx_copy": [
      49,
      1,
      1,
      524,
      8,
      34,
      22,
      524,
      1,
      17,
      22,
      524,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      1,
      524,
      8,
      34,
      22,
      524,
      1,
      17,
      22,
      524,
      17,
      17
    ]
  },
  {
    "intent": [
      "initialize",
      "a",
      "list",
      "var_0",
      "with",
      "str_0",
      "items",
      "and",
      "each",
      "item",
      "'s",
      "value",
      "str_1"
    ],
    "code": [
      "var_0",
      "=",
      "[",
      "0",
      "]",
      "*",
      "10000"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "10000",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": "0",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      3,
      4,
      26,
      79,
      5,
      39,
      31,
      22,
      156,
      266,
      143,
      32
    ],
    "code_indx_copy": [
      34,
      19,
      12,
      43,
      16,
      3,
      524
    ],
    "code_indx_nocopy": [
      34,
      19,
      12,
      43,
      16,
      3,
      524
    ]
  },
  {
    "intent": [
      "keep",
      "only",
      "unique",
      "words",
      "in",
      "list",
      "of",
      "words",
      "var_0",
      "and",
      "join",
      "into",
      "string"
    ],
    "code": [
      "print",
      "(",
      "' '",
      ".",
      "join",
      "(",
      "sorted",
      "(",
      "set",
      "(",
      "var_0",
      ")",
      ",",
      "key",
      "=",
      "var_0",
      ".",
      "index",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "words",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      352,
      204,
      41,
      24,
      4,
      2,
      41,
      26,
      31,
      281,
      12,
      14
    ],
    "code_indx_copy": [
      49,
      1,
      108,
      22,
      23,
      1,
      101,
      1,
      189,
      1,
      34,
      17,
      8,
      102,
      19,
      34,
      22,
      160,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      108,
      22,
      23,
      1,
      101,
      1,
      189,
      1,
      34,
      17,
      8,
      102,
      19,
      34,
      22,
      160,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "generate",
      "6",
      "random",
      "numbers",
      "between",
      "1",
      "and",
      "50"
    ],
    "code": [
      "random",
      ".",
      "sample",
      "(",
      "range",
      "(",
      "1",
      ",",
      "50",
      ")",
      ",",
      "6",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      56,
      393,
      190,
      97,
      278,
      237,
      31,
      465
    ],
    "code_indx_copy": [
      148,
      22,
      266,
      1,
      104,
      1,
      15,
      8,
      401,
      17,
      8,
      249,
      17
    ],
    "code_indx_nocopy": [
      148,
      22,
      266,
      1,
      104,
      1,
      15,
      8,
      401,
      17,
      8,
      249,
      17
    ]
  },
  {
    "intent": [
      "generate",
      "six",
      "unique",
      "random",
      "numbers",
      "in",
      "the",
      "range",
      "of",
      "1",
      "to",
      "49",
      "."
    ],
    "code": [
      "random",
      ".",
      "sample",
      "(",
      "range",
      "(",
      "1",
      ",",
      "50",
      ")",
      ",",
      "6",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      56,
      465,
      204,
      190,
      97,
      24,
      18,
      123,
      2,
      237,
      8,
      465,
      159
    ],
    "code_indx_copy": [
      148,
      22,
      266,
      1,
      104,
      1,
      15,
      8,
      401,
      17,
      8,
      249,
      17
    ],
    "code_indx_nocopy": [
      148,
      22,
      266,
      1,
      104,
      1,
      15,
      8,
      401,
      17,
      8,
      249,
      17
    ]
  },
  {
    "intent": [
      "lowercase",
      "keys",
      "and",
      "values",
      "in",
      "dictionary",
      "str_0"
    ],
    "code": [
      "{",
      "k",
      ".",
      "lower",
      "(",
      ")",
      ":",
      "v",
      ".",
      "lower",
      "(",
      ")",
      "for",
      "k",
      ",",
      "v",
      "in",
      "list",
      "(",
      "{",
      "str_0",
      "}",
      ".",
      "items",
      "(",
      ")",
      ")",
      "}"
    ],
    "slot_map": {
      "str_0": {
        "value": "{'My Key': 'My Value'}",
        "quote": "`",
        "type": "str"
      },
      "{str_0}": {
        "value": "{'My Key': 'My Value'}",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      207,
      206,
      31,
      20,
      24,
      25,
      5
    ],
    "code_indx_copy": [
      52,
      89,
      22,
      152,
      1,
      17,
      13,
      90,
      22,
      152,
      1,
      17,
      7,
      89,
      8,
      90,
      9,
      33,
      1,
      52,
      11,
      53,
      22,
      35,
      1,
      17,
      17,
      53
    ],
    "code_indx_nocopy": [
      52,
      89,
      22,
      152,
      1,
      17,
      13,
      90,
      22,
      152,
      1,
      17,
      7,
      89,
      8,
      90,
      9,
      33,
      1,
      52,
      11,
      53,
      22,
      35,
      1,
      17,
      17,
      53
    ]
  },
  {
    "intent": [
      "lowercase",
      "all",
      "keys",
      "and",
      "values",
      "in",
      "dictionary",
      "str_0"
    ],
    "code": [
      "dict",
      "(",
      "(",
      "k",
      ".",
      "lower",
      "(",
      ")",
      ",",
      "v",
      ")",
      "for",
      "k",
      ",",
      "v",
      "in",
      "{",
      "str_0",
      "}",
      ".",
      "items",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "{'My Key': 'My Value'}",
        "quote": "`",
        "type": "str"
      },
      "{str_0}": {
        "value": "{'My Key': 'My Value'}",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      207,
      38,
      206,
      31,
      20,
      24,
      25,
      5
    ],
    "code_indx_copy": [
      70,
      1,
      1,
      89,
      22,
      152,
      1,
      17,
      8,
      90,
      17,
      7,
      89,
      8,
      90,
      9,
      52,
      11,
      53,
      22,
      35,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      70,
      1,
      1,
      89,
      22,
      152,
      1,
      17,
      8,
      90,
      17,
      7,
      89,
      8,
      90,
      9,
      52,
      11,
      53,
      22,
      35,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "each",
      "key",
      ",",
      "value",
      "pair",
      "in",
      "a",
      "dictionary",
      "str_0",
      "to",
      "lowercase"
    ],
    "code": [
      "dict",
      "(",
      "(",
      "k",
      ".",
      "lower",
      "(",
      ")",
      ",",
      "v",
      ".",
      "lower",
      "(",
      ")",
      ")",
      "for",
      "k",
      ",",
      "v",
      "in",
      "{",
      "str_0",
      "}",
      ".",
      "items",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "{'My Key': 'My Value'}",
        "quote": "`",
        "type": "str"
      },
      "{str_0}": {
        "value": "{'My Key': 'My Value'}",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      22,
      23,
      62,
      143,
      89,
      24,
      3,
      25,
      5,
      8,
      207
    ],
    "code_indx_copy": [
      70,
      1,
      1,
      89,
      22,
      152,
      1,
      17,
      8,
      90,
      22,
      152,
      1,
      17,
      17,
      7,
      89,
      8,
      90,
      9,
      52,
      11,
      53,
      22,
      35,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      70,
      1,
      1,
      89,
      22,
      152,
      1,
      17,
      8,
      90,
      22,
      152,
      1,
      17,
      17,
      7,
      89,
      8,
      90,
      9,
      52,
      11,
      53,
      22,
      35,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "sorting",
      "the",
      "lists",
      "in",
      "list",
      "of",
      "lists",
      "var_0"
    ],
    "code": [
      "[",
      "sorted",
      "(",
      "item",
      ")",
      "for",
      "item",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "data",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      283,
      18,
      30,
      24,
      4,
      2,
      30,
      26
    ],
    "code_indx_copy": [
      12,
      101,
      1,
      387,
      17,
      7,
      387,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      12,
      101,
      1,
      387,
      17,
      7,
      387,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "sqlite",
      "get",
      "a",
      "list",
      "of",
      "column",
      "names",
      "from",
      "cursor",
      "object",
      "var_0"
    ],
    "code": [
      "names",
      "=",
      "list",
      "(",
      "map",
      "(",
      "lambda",
      "x",
      ":",
      "x",
      "[",
      "0",
      "]",
      ",",
      "var_0",
      ".",
      "description",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "cursor",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      17,
      3,
      4,
      2,
      147,
      321,
      58,
      465,
      15,
      26
    ],
    "code_indx_copy": [
      534,
      19,
      33,
      1,
      24,
      1,
      44,
      26,
      13,
      26,
      12,
      43,
      16,
      8,
      34,
      22,
      524,
      17,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      33,
      1,
      24,
      1,
      44,
      26,
      13,
      26,
      12,
      43,
      16,
      8,
      34,
      22,
      524,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "absolute",
      "path",
      "of",
      "a",
      "running",
      "python",
      "script"
    ],
    "code": [
      "os",
      ".",
      "path",
      ".",
      "abspath",
      "(",
      "__file__",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      17,
      18,
      465,
      199,
      2,
      3,
      465,
      50,
      246
    ],
    "code_indx_copy": [
      113,
      22,
      114,
      22,
      377,
      1,
      383,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      114,
      22,
      377,
      1,
      383,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "2d",
      "array",
      "var_0",
      "by",
      "row",
      "with",
      "index",
      "1"
    ],
    "code": [
      "sorted",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "itemgetter",
      "(",
      "1",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "matrix",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      236,
      85,
      26,
      44,
      45,
      79,
      37,
      237
    ],
    "code_indx_copy": [
      101,
      1,
      34,
      8,
      102,
      19,
      128,
      1,
      15,
      17,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      34,
      8,
      102,
      19,
      128,
      1,
      15,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "all",
      "indexes",
      "of",
      "a",
      "letter",
      "var_0",
      "from",
      "a",
      "string",
      "var_1"
    ],
    "code": [
      "[",
      "index",
      "for",
      "index",
      ",",
      "letter",
      "in",
      "enumerate",
      "(",
      "var_1",
      ")",
      "if",
      "letter",
      "==",
      "'var_0'",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "e",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "word",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      38,
      235,
      2,
      3,
      433,
      26,
      58,
      3,
      14,
      63
    ],
    "code_indx_copy": [
      12,
      160,
      7,
      160,
      8,
      423,
      9,
      10,
      1,
      91,
      17,
      67,
      423,
      76,
      56,
      16
    ],
    "code_indx_nocopy": [
      12,
      160,
      7,
      160,
      8,
      423,
      9,
      10,
      1,
      91,
      17,
      67,
      423,
      76,
      56,
      16
    ]
  },
  {
    "intent": [
      "decode",
      "utf-8",
      "code",
      "var_0",
      "into",
      "a",
      "raw",
      "unicode",
      "literal"
    ],
    "code": [
      "print",
      "(",
      "str",
      "(",
      "var_0",
      ")",
      ".",
      "decode",
      "(",
      "'raw_unicode_escape'",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "x",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      182,
      183,
      293,
      26,
      12,
      3,
      465,
      230,
      314
    ],
    "code_indx_copy": [
      49,
      1,
      25,
      1,
      34,
      17,
      22,
      99,
      1,
      524,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      25,
      1,
      34,
      17,
      22,
      99,
      1,
      524,
      17,
      17
    ]
  },
  {
    "intent": [
      "split",
      "string",
      "str_0",
      "into",
      "a",
      "list",
      "of",
      "characters"
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'\\\\w'",
      ",",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "abcdefg",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      138,
      14,
      5,
      12,
      3,
      4,
      2,
      98
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      524,
      8,
      29,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      524,
      8,
      29,
      17
    ]
  },
  {
    "intent": [
      "check",
      "whether",
      "a",
      "file",
      "var_0",
      "exists"
    ],
    "code": [
      "os",
      ".",
      "path",
      ".",
      "isfile",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "fname",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      234,
      359,
      3,
      126,
      26,
      274
    ],
    "code_indx_copy": [
      113,
      22,
      114,
      22,
      474,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      114,
      22,
      474,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "check",
      "whether",
      "file",
      "str_0",
      "exists"
    ],
    "code": [
      "my_file",
      "=",
      "Path",
      "(",
      "'str_0'",
      ")",
      "\n",
      "if",
      "my_file",
      ".",
      "is_file",
      "(",
      ")",
      ":",
      "\n",
      "    ",
      "pass",
      ""
    ],
    "slot_map": {
      "str_0": {
        "value": "/path/to/file",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      234,
      359,
      126,
      5,
      274
    ],
    "code_indx_copy": [
      524,
      19,
      524,
      1,
      29,
      17,
      161,
      67,
      524,
      22,
      524,
      1,
      17,
      13,
      161,
      216,
      217,
      218
    ],
    "code_indx_nocopy": [
      524,
      19,
      524,
      1,
      29,
      17,
      161,
      67,
      524,
      22,
      524,
      1,
      17,
      13,
      161,
      216,
      217,
      218
    ]
  },
  {
    "intent": [
      "check",
      "whether",
      "file",
      "var_0",
      "exists"
    ],
    "code": [
      "os",
      ".",
      "path",
      ".",
      "exists",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "file_path",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      234,
      359,
      126,
      26,
      274
    ],
    "code_indx_copy": [
      113,
      22,
      114,
      22,
      434,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      114,
      22,
      434,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "check",
      "whether",
      "a",
      "file",
      "str_0",
      "exists"
    ],
    "code": [
      "print",
      "(",
      "os",
      ".",
      "path",
      ".",
      "isfile",
      "(",
      "'str_0'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "/etc/password.txt",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      234,
      359,
      3,
      126,
      5,
      274
    ],
    "code_indx_copy": [
      49,
      1,
      113,
      22,
      114,
      22,
      474,
      1,
      29,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      113,
      22,
      114,
      22,
      474,
      1,
      29,
      17,
      17
    ]
  },
  {
    "intent": [
      "check",
      "whether",
      "a",
      "file",
      "str_0",
      "exists"
    ],
    "code": [
      "print",
      "(",
      "os",
      ".",
      "path",
      ".",
      "isfile",
      "(",
      "'str_0'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "/etc",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      234,
      359,
      3,
      126,
      5,
      274
    ],
    "code_indx_copy": [
      49,
      1,
      113,
      22,
      114,
      22,
      474,
      1,
      29,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      113,
      22,
      114,
      22,
      474,
      1,
      29,
      17,
      17
    ]
  },
  {
    "intent": [
      "check",
      "whether",
      "a",
      "path",
      "str_0",
      "exists"
    ],
    "code": [
      "print",
      "(",
      "os",
      ".",
      "path",
      ".",
      "exists",
      "(",
      "'str_0'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "/does/not/exist",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      234,
      359,
      3,
      199,
      5,
      274
    ],
    "code_indx_copy": [
      49,
      1,
      113,
      22,
      114,
      22,
      434,
      1,
      29,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      113,
      22,
      114,
      22,
      434,
      1,
      29,
      17,
      17
    ]
  },
  {
    "intent": [
      "check",
      "whether",
      "a",
      "file",
      "str_0",
      "exists"
    ],
    "code": [
      "print",
      "(",
      "os",
      ".",
      "path",
      ".",
      "isfile",
      "(",
      "'str_0'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "/does/not/exist",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      234,
      359,
      3,
      126,
      5,
      274
    ],
    "code_indx_copy": [
      49,
      1,
      113,
      22,
      114,
      22,
      474,
      1,
      29,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      113,
      22,
      114,
      22,
      474,
      1,
      29,
      17,
      17
    ]
  },
  {
    "intent": [
      "check",
      "whether",
      "a",
      "path",
      "str_0",
      "exists"
    ],
    "code": [
      "print",
      "(",
      "os",
      ".",
      "path",
      ".",
      "exists",
      "(",
      "'str_0'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "/etc",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      234,
      359,
      3,
      199,
      5,
      274
    ],
    "code_indx_copy": [
      49,
      1,
      113,
      22,
      114,
      22,
      434,
      1,
      29,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      113,
      22,
      114,
      22,
      434,
      1,
      29,
      17,
      17
    ]
  },
  {
    "intent": [
      "check",
      "whether",
      "a",
      "path",
      "str_0",
      "exists"
    ],
    "code": [
      "print",
      "(",
      "os",
      ".",
      "path",
      ".",
      "exists",
      "(",
      "'str_0'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "/etc/password.txt",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      234,
      359,
      3,
      199,
      5,
      274
    ],
    "code_indx_copy": [
      49,
      1,
      113,
      22,
      114,
      22,
      434,
      1,
      29,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      113,
      22,
      114,
      22,
      434,
      1,
      29,
      17,
      17
    ]
  },
  {
    "intent": [
      "split",
      "string",
      "str_0",
      "on",
      "delimiters",
      "str_1",
      "and",
      "str_2"
    ],
    "code": [
      "\"\"\"str_0\"\"\"",
      ".",
      "replace",
      "(",
      "'str_1'",
      ",",
      "' '",
      ")",
      ".",
      "replace",
      "(",
      "'str_2'",
      ",",
      "' '",
      ")",
      ".",
      "split",
      "(",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "a;bcd,ef g",
        "quote": "\"",
        "type": "str"
      },
      "str_1": {
        "value": ";",
        "quote": "'",
        "type": "str"
      },
      "str_2": {
        "value": ",",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      138,
      14,
      5,
      139,
      465,
      32,
      31,
      194
    ],
    "code_indx_copy": [
      212,
      22,
      107,
      1,
      63,
      8,
      108,
      17,
      22,
      107,
      1,
      150,
      8,
      108,
      17,
      22,
      71,
      1,
      17
    ],
    "code_indx_nocopy": [
      212,
      22,
      107,
      1,
      63,
      8,
      108,
      17,
      22,
      107,
      1,
      150,
      8,
      108,
      17,
      22,
      71,
      1,
      17
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "list",
      "each",
      "value",
      "var_0",
      "in",
      "the",
      "implicit",
      "tuple",
      "str_0"
    ],
    "code": [
      "list",
      "(",
      "var_0",
      "for",
      "var_0",
      "in",
      "range",
      "(",
      "3",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "i",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "range(3)",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      3,
      4,
      22,
      143,
      26,
      24,
      18,
      465,
      113,
      5
    ],
    "code_indx_copy": [
      33,
      1,
      34,
      7,
      34,
      9,
      104,
      1,
      54,
      17,
      17
    ],
    "code_indx_nocopy": [
      33,
      1,
      34,
      7,
      34,
      9,
      104,
      1,
      54,
      17,
      17
    ]
  },
  {
    "intent": [
      "add",
      "field",
      "names",
      "as",
      "headers",
      "in",
      "csv",
      "constructor",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "writeheader",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "writer",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      60,
      312,
      321,
      90,
      465,
      24,
      287,
      465,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      524,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      524,
      1,
      17
    ]
  },
  {
    "intent": [
      "flatten",
      "a",
      "tuple",
      "var_0"
    ],
    "code": [
      "[",
      "(",
      "a",
      ",",
      "b",
      ",",
      "c",
      ")",
      "for",
      "a",
      ",",
      "(",
      "b",
      ",",
      "c",
      ")",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "l",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      3,
      113,
      26
    ],
    "code_indx_copy": [
      12,
      1,
      95,
      8,
      97,
      8,
      66,
      17,
      7,
      95,
      8,
      1,
      97,
      8,
      66,
      17,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      12,
      1,
      95,
      8,
      97,
      8,
      66,
      17,
      7,
      95,
      8,
      1,
      97,
      8,
      66,
      17,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "convert",
      "3652458",
      "to",
      "string",
      "represent",
      "a",
      "32bit",
      "hex",
      "number"
    ],
    "code": [
      "\"\"\"0x{0:08X}\"\"\"",
      ".",
      "format",
      "(",
      "3652458",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      11,
      465,
      8,
      14,
      465,
      3,
      465,
      116,
      76
    ],
    "code_indx_copy": [
      524,
      22,
      38,
      1,
      529,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      38,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "python",
      "dictionary",
      "var_0",
      "to",
      "a",
      "list",
      "of",
      "tuples"
    ],
    "code": [
      "[",
      "(",
      "v",
      ",",
      "k",
      ")",
      "for",
      "k",
      ",",
      "v",
      "in",
      "list",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "d",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      3,
      50,
      25,
      26,
      8,
      3,
      4,
      2,
      33
    ],
    "code_indx_copy": [
      12,
      1,
      90,
      8,
      89,
      17,
      7,
      89,
      8,
      90,
      9,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      1,
      90,
      8,
      89,
      17,
      7,
      89,
      8,
      90,
      9,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      16
    ]
  },
  {
    "intent": [
      "convert",
      "dictionary",
      "of",
      "pairs",
      "var_0",
      "to",
      "a",
      "list",
      "of",
      "tuples"
    ],
    "code": [
      "[",
      "(",
      "v",
      ",",
      "k",
      ")",
      "for",
      "k",
      ",",
      "v",
      "in",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "d",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      25,
      2,
      187,
      26,
      8,
      3,
      4,
      2,
      33
    ],
    "code_indx_copy": [
      12,
      1,
      90,
      8,
      89,
      17,
      7,
      89,
      8,
      90,
      9,
      34,
      22,
      35,
      1,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      1,
      90,
      8,
      89,
      17,
      7,
      89,
      8,
      90,
      9,
      34,
      22,
      35,
      1,
      17,
      16
    ]
  },
  {
    "intent": [
      "convert",
      "python",
      "2",
      "dictionary",
      "var_0",
      "to",
      "a",
      "list",
      "of",
      "tuples",
      "where",
      "the",
      "value",
      "is",
      "the",
      "first",
      "tuple",
      "element",
      "and",
      "the",
      "key",
      "is",
      "the",
      "second",
      "tuple",
      "element"
    ],
    "code": [
      "[",
      "(",
      "v",
      ",",
      "k",
      ")",
      "for",
      "k",
      ",",
      "v",
      "in",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      50,
      82,
      25,
      26,
      8,
      3,
      4,
      2,
      33,
      155,
      18,
      143,
      152,
      18,
      151,
      113,
      49,
      31,
      18,
      23,
      152,
      18,
      118,
      113,
      49
    ],
    "code_indx_copy": [
      12,
      1,
      90,
      8,
      89,
      17,
      7,
      89,
      8,
      90,
      9,
      34,
      22,
      35,
      1,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      1,
      90,
      8,
      89,
      17,
      7,
      89,
      8,
      90,
      9,
      34,
      22,
      35,
      1,
      17,
      16
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "python",
      "dictionary",
      "str_0",
      "to",
      "a",
      "list",
      "of",
      "tuples"
    ],
    "code": [
      "[",
      "(",
      "k",
      ",",
      "v",
      ")",
      "for",
      "k",
      ",",
      "v",
      "in",
      "str_0",
      ".",
      "items",
      "(",
      ")",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "a",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      3,
      50,
      25,
      5,
      8,
      3,
      4,
      2,
      33
    ],
    "code_indx_copy": [
      12,
      1,
      89,
      8,
      90,
      17,
      7,
      89,
      8,
      90,
      9,
      11,
      22,
      35,
      1,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      1,
      89,
      8,
      90,
      17,
      7,
      89,
      8,
      90,
      9,
      11,
      22,
      35,
      1,
      17,
      16
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "list",
      "of",
      "hex",
      "byte",
      "strings",
      "str_0",
      "to",
      "a",
      "list",
      "of",
      "hex",
      "integers"
    ],
    "code": [
      "[",
      "int",
      "(",
      "x",
      ",",
      "16",
      ")",
      "for",
      "x",
      "in",
      "[",
      "str_0",
      "]",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "['BB', 'A7', 'F6', '9E']",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "['BB', 'A7', 'F6', '9E']",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      3,
      4,
      2,
      116,
      229,
      259,
      5,
      8,
      3,
      4,
      2,
      116,
      7
    ],
    "code_indx_copy": [
      12,
      20,
      1,
      26,
      8,
      271,
      17,
      7,
      26,
      9,
      12,
      11,
      16,
      16
    ],
    "code_indx_nocopy": [
      12,
      20,
      1,
      26,
      8,
      271,
      17,
      7,
      26,
      9,
      12,
      11,
      16,
      16
    ]
  },
  {
    "intent": [
      "convert",
      "the",
      "elements",
      "of",
      "list",
      "var_0",
      "from",
      "hex",
      "byte",
      "strings",
      "to",
      "hex",
      "integers"
    ],
    "code": [
      "[",
      "int",
      "(",
      "x",
      ",",
      "16",
      ")",
      "for",
      "x",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "L",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      18,
      1,
      2,
      4,
      26,
      58,
      116,
      229,
      259,
      8,
      116,
      7
    ],
    "code_indx_copy": [
      12,
      20,
      1,
      26,
      8,
      271,
      17,
      7,
      26,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      12,
      20,
      1,
      26,
      8,
      271,
      17,
      7,
      26,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "assign",
      "values",
      "to",
      "two",
      "variables",
      ",",
      "var_0",
      "and",
      "var_1",
      "from",
      "user",
      "input",
      "response",
      "to",
      "str_0",
      "split",
      "on",
      "whitespace"
    ],
    "code": [
      "var_0",
      ",",
      "var_1",
      "=",
      "input",
      "(",
      "'Enter two numbers here: '",
      ")",
      ".",
      "split",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "var1",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "var2",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "'Enter two numbers here:",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      93,
      20,
      8,
      29,
      306,
      62,
      26,
      31,
      63,
      58,
      174,
      452,
      465,
      8,
      5,
      138,
      139,
      211
    ],
    "code_indx_copy": [
      34,
      8,
      91,
      19,
      251,
      1,
      524,
      17,
      22,
      71,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      8,
      91,
      19,
      251,
      1,
      524,
      17,
      22,
      71,
      1,
      17
    ]
  },
  {
    "intent": [
      "filter",
      "a",
      "json",
      "from",
      "a",
      "key-value",
      "pair",
      "as",
      "str_0",
      "in",
      "django"
    ],
    "code": [
      "Test",
      ".",
      "objects",
      ".",
      "filter",
      "(",
      "actions__contains",
      "=",
      "[",
      "{",
      "str_0",
      "}",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "{'fixed_key_1': 'foo2'}",
        "quote": "`",
        "type": "str"
      },
      "{str_0}": {
        "value": "{'fixed_key_1': 'foo2'}",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      217,
      3,
      181,
      58,
      3,
      422,
      89,
      90,
      5,
      24,
      87
    ],
    "code_indx_copy": [
      524,
      22,
      78,
      22,
      79,
      1,
      524,
      19,
      12,
      52,
      11,
      53,
      16,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      78,
      22,
      79,
      1,
      524,
      19,
      12,
      52,
      11,
      53,
      16,
      17
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "list",
      "containing",
      "a",
      "four",
      "elements",
      "long",
      "tuples",
      "of",
      "permutations",
      "of",
      "binary",
      "values"
    ],
    "code": [
      "itertools",
      ".",
      "product",
      "(",
      "list",
      "(",
      "range",
      "(",
      "2",
      ")",
      ")",
      ",",
      "repeat",
      "=",
      "4",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      148,
      3,
      4,
      34,
      3,
      465,
      1,
      465,
      33,
      2,
      153,
      2,
      276,
      20
    ],
    "code_indx_copy": [
      50,
      22,
      328,
      1,
      33,
      1,
      104,
      1,
      82,
      17,
      17,
      8,
      490,
      19,
      184,
      17
    ],
    "code_indx_nocopy": [
      50,
      22,
      328,
      1,
      33,
      1,
      104,
      1,
      82,
      17,
      17,
      8,
      490,
      19,
      184,
      17
    ]
  },
  {
    "intent": [
      "get",
      "yesterday",
      "'s",
      "date",
      "as",
      "a",
      "string",
      "in",
      "str_0",
      "format",
      "using",
      "timedelta"
    ],
    "code": [
      "(",
      "datetime",
      ".",
      "now",
      "(",
      ")",
      "-",
      "timedelta",
      "(",
      "1",
      ")",
      ")",
      ".",
      "strftime",
      "(",
      "'%Y-%m-%d'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "YYYY-MM-DD",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      465,
      266,
      133,
      90,
      3,
      14,
      24,
      5,
      16,
      109,
      465
    ],
    "code_indx_copy": [
      1,
      27,
      22,
      294,
      1,
      17,
      14,
      295,
      1,
      15,
      17,
      17,
      22,
      65,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      1,
      27,
      22,
      294,
      1,
      17,
      14,
      295,
      1,
      15,
      17,
      17,
      22,
      65,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "dot",
      "product",
      "of",
      "matrix",
      "str_0",
      "and",
      "matrix",
      "str_1"
    ],
    "code": [
      "np",
      ".",
      "dot",
      "(",
      "[",
      "1",
      ",",
      "0",
      ",",
      "0",
      ",",
      "1",
      ",",
      "0",
      ",",
      "0",
      "]",
      ",",
      "[",
      "[",
      "0",
      ",",
      "1",
      "]",
      ",",
      "[",
      "1",
      ",",
      "1",
      "]",
      ",",
      "[",
      "1",
      ",",
      "0",
      "]",
      ",",
      "[",
      "1",
      ",",
      "0",
      "]",
      ",",
      "[",
      "1",
      ",",
      "1",
      "]",
      ",",
      "[",
      "0",
      ",",
      "1",
      "]",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "[1,0,0,1,0,0]",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": "[[0,1],[1,1],[1,0],[1,0],[1,1],[0,1]]",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "[1,0,0,1,0,0]",
        "quote": "`",
        "type": "str"
      },
      "[str_1]": {
        "value": "[[0,1],[1,1],[1,0],[1,0],[1,1],[0,1]]",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      18,
      409,
      163,
      2,
      189,
      5,
      31,
      189,
      32
    ],
    "code_indx_copy": [
      74,
      22,
      305,
      1,
      12,
      15,
      8,
      43,
      8,
      43,
      8,
      15,
      8,
      43,
      8,
      43,
      16,
      8,
      12,
      12,
      43,
      8,
      15,
      16,
      8,
      12,
      15,
      8,
      15,
      16,
      8,
      12,
      15,
      8,
      43,
      16,
      8,
      12,
      15,
      8,
      43,
      16,
      8,
      12,
      15,
      8,
      15,
      16,
      8,
      12,
      43,
      8,
      15,
      16,
      16,
      17
    ],
    "code_indx_nocopy": [
      74,
      22,
      305,
      1,
      12,
      15,
      8,
      43,
      8,
      43,
      8,
      15,
      8,
      43,
      8,
      43,
      16,
      8,
      12,
      12,
      43,
      8,
      15,
      16,
      8,
      12,
      15,
      8,
      15,
      16,
      8,
      12,
      15,
      8,
      43,
      16,
      8,
      12,
      15,
      8,
      43,
      16,
      8,
      12,
      15,
      8,
      15,
      16,
      8,
      12,
      43,
      8,
      15,
      16,
      16,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "date",
      "strings",
      "in",
      "pandas",
      "dataframe",
      "columnstr_0",
      "to",
      "pandas",
      "timestamps",
      "using",
      "the",
      "format",
      "str_1"
    ],
    "code": [
      "df",
      "[",
      "'date'",
      "]",
      "=",
      "pd",
      ".",
      "to_datetime",
      "(",
      "df",
      "[",
      "'date'",
      "]",
      ",",
      "format",
      "=",
      "'str_1'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "df['date']",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": "%d%b%Y",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      133,
      259,
      24,
      42,
      43,
      465,
      8,
      42,
      465,
      109,
      18,
      16,
      32
    ],
    "code_indx_copy": [
      149,
      12,
      524,
      16,
      19,
      162,
      22,
      466,
      1,
      149,
      12,
      524,
      16,
      8,
      38,
      19,
      63,
      17
    ],
    "code_indx_nocopy": [
      149,
      12,
      524,
      16,
      19,
      162,
      22,
      466,
      1,
      149,
      12,
      524,
      16,
      8,
      38,
      19,
      63,
      17
    ]
  },
  {
    "intent": [
      "importing",
      "file",
      "var_0",
      "from",
      "folder",
      "str_0"
    ],
    "code": [
      "sys",
      ".",
      "path",
      ".",
      "insert",
      "(",
      "0",
      ",",
      "'str_0'",
      ")",
      "\n",
      "import",
      "var_0"
    ],
    "slot_map": {
      "var_0": {
        "value": "file",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "/path/to/application/app/folder",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      126,
      26,
      58,
      406,
      5
    ],
    "code_indx_copy": [
      153,
      22,
      114,
      22,
      319,
      1,
      43,
      8,
      29,
      17,
      161,
      393,
      34
    ],
    "code_indx_nocopy": [
      153,
      22,
      114,
      22,
      319,
      1,
      43,
      8,
      29,
      17,
      161,
      393,
      34
    ]
  },
  {
    "intent": [
      "do",
      "a",
      "var_0",
      "merge",
      "of",
      "dataframes",
      "var_1",
      "and",
      "var_2",
      "on",
      "the",
      "column",
      "var_3",
      "and",
      "sort",
      "by",
      "var_4"
    ],
    "code": [
      "var_1",
      ".",
      "reset_index",
      "(",
      ")",
      ".",
      "merge",
      "(",
      "var_2",
      ",",
      "how",
      "=",
      "'var_0'",
      ",",
      "on",
      "=",
      "'var_3'",
      ",",
      "sort",
      "=",
      "False",
      ")",
      ".",
      "sort",
      "(",
      "\n",
      "'var_4'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "left",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "x",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "y",
        "quote": "`",
        "type": "var"
      },
      "var_3": {
        "value": "state",
        "quote": "`",
        "type": "var"
      },
      "var_4": {
        "value": "index",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      327,
      3,
      26,
      247,
      2,
      248,
      63,
      31,
      64,
      139,
      18,
      147,
      67,
      31,
      117,
      44,
      465
    ],
    "code_indx_copy": [
      91,
      22,
      186,
      1,
      17,
      22,
      220,
      1,
      94,
      8,
      243,
      19,
      56,
      8,
      244,
      19,
      221,
      8,
      124,
      19,
      87,
      17,
      22,
      124,
      1,
      161,
      524,
      17
    ],
    "code_indx_nocopy": [
      91,
      22,
      186,
      1,
      17,
      22,
      220,
      1,
      94,
      8,
      243,
      19,
      56,
      8,
      244,
      19,
      221,
      8,
      124,
      19,
      87,
      17,
      22,
      124,
      1,
      161,
      524,
      17
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "default",
      "empty",
      "json",
      "object",
      "if",
      "no",
      "json",
      "is",
      "available",
      "in",
      "request",
      "parameter",
      "var_0"
    ],
    "code": [
      "json",
      ".",
      "loads",
      "(",
      "request",
      ".",
      "POST",
      ".",
      "get",
      "(",
      "'var_0'",
      ",",
      "'{}'",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "mydata",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      148,
      3,
      233,
      146,
      181,
      15,
      150,
      465,
      181,
      152,
      465,
      24,
      101,
      372,
      26
    ],
    "code_indx_copy": [
      140,
      22,
      204,
      1,
      233,
      22,
      484,
      22,
      86,
      1,
      56,
      8,
      524,
      17,
      17
    ],
    "code_indx_nocopy": [
      140,
      22,
      204,
      1,
      233,
      22,
      484,
      22,
      86,
      1,
      56,
      8,
      524,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "list",
      "of",
      "tuples",
      "of",
      "every",
      "three",
      "consecutive",
      "items",
      "in",
      "list",
      "str_0"
    ],
    "code": [
      "list",
      "(",
      "zip",
      "(",
      "*",
      "(",
      "(",
      "iter",
      "(",
      "[",
      "str_0",
      "]",
      ")",
      ",",
      ")",
      "*",
      "3",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "[1, 2, 3, 4, 5, 6, 7, 8, 9]",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "[1, 2, 3, 4, 5, 6, 7, 8, 9]",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      3,
      4,
      2,
      33,
      2,
      279,
      240,
      434,
      39,
      24,
      4,
      5
    ],
    "code_indx_copy": [
      33,
      1,
      36,
      1,
      3,
      1,
      1,
      165,
      1,
      12,
      11,
      16,
      17,
      8,
      17,
      3,
      54,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      33,
      1,
      36,
      1,
      3,
      1,
      1,
      165,
      1,
      12,
      11,
      16,
      17,
      8,
      17,
      3,
      54,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "slice",
      "list",
      "str_0",
      "into",
      "lists",
      "of",
      "two",
      "elements",
      "each"
    ],
    "code": [
      "list",
      "(",
      "grouper",
      "(",
      "2",
      ",",
      "[",
      "str_0",
      "]",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "[1, 2, 3, 4, 5, 6, 7]",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "[1, 2, 3, 4, 5, 6, 7]",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      4,
      5,
      12,
      30,
      2,
      29,
      1,
      22
    ],
    "code_indx_copy": [
      33,
      1,
      524,
      1,
      82,
      8,
      12,
      11,
      16,
      17,
      17
    ],
    "code_indx_nocopy": [
      33,
      1,
      524,
      1,
      82,
      8,
      12,
      11,
      16,
      17,
      17
    ]
  },
  {
    "intent": [
      "slicing",
      "a",
      "list",
      "into",
      "a",
      "list",
      "of",
      "sub-lists"
    ],
    "code": [
      "[",
      "input",
      "[",
      "i",
      ":",
      "i",
      "+",
      "n",
      "]",
      "for",
      "i",
      "in",
      "range",
      "(",
      "0",
      ",",
      "len",
      "(",
      "input",
      ")",
      ",",
      "n",
      ")",
      "]"
    ],
    "slot_map": {},
    "intent_indx": [
      465,
      3,
      4,
      12,
      3,
      4,
      2,
      465
    ],
    "code_indx_copy": [
      12,
      251,
      12,
      6,
      13,
      6,
      96,
      307,
      16,
      7,
      6,
      9,
      104,
      1,
      43,
      8,
      32,
      1,
      251,
      17,
      8,
      307,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      251,
      12,
      6,
      13,
      6,
      96,
      307,
      16,
      7,
      6,
      9,
      104,
      1,
      43,
      8,
      32,
      1,
      251,
      17,
      8,
      307,
      17,
      16
    ]
  },
  {
    "intent": [
      "sort",
      "list",
      "var_0",
      "based",
      "on",
      "its",
      "elements",
      "'",
      "dot-seperated",
      "numbers"
    ],
    "code": [
      "var_0",
      ".",
      "sort",
      "(",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "map",
      "(",
      "int",
      ",",
      "x",
      ".",
      "split",
      "(",
      "'.'",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "keys",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      4,
      26,
      208,
      139,
      91,
      1,
      310,
      465,
      97
    ],
    "code_indx_copy": [
      34,
      22,
      124,
      1,
      102,
      19,
      44,
      26,
      13,
      24,
      1,
      20,
      8,
      26,
      22,
      71,
      1,
      260,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      124,
      1,
      102,
      19,
      44,
      26,
      13,
      24,
      1,
      20,
      8,
      26,
      22,
      71,
      1,
      260,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "list",
      "of",
      "integers",
      "var_0",
      "where",
      "each",
      "value",
      "is",
      "in",
      "string",
      "format"
    ],
    "code": [
      "var_0",
      ".",
      "sort",
      "(",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "[",
      "int",
      "(",
      "y",
      ")",
      "for",
      "y",
      "in",
      "x",
      ".",
      "split",
      "(",
      "'.'",
      ")",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "keys",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      3,
      4,
      2,
      7,
      26,
      155,
      22,
      143,
      152,
      24,
      14,
      16
    ],
    "code_indx_copy": [
      34,
      22,
      124,
      1,
      102,
      19,
      44,
      26,
      13,
      12,
      20,
      1,
      103,
      17,
      7,
      103,
      9,
      26,
      22,
      71,
      1,
      260,
      17,
      16,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      124,
      1,
      102,
      19,
      44,
      26,
      13,
      12,
      20,
      1,
      103,
      17,
      7,
      103,
      9,
      26,
      22,
      71,
      1,
      260,
      17,
      16,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "3d",
      "array",
      "var_0",
      "of",
      "dimensions",
      "4x2x3",
      "to",
      "a",
      "2d",
      "array",
      "of",
      "dimensions",
      "3x8"
    ],
    "code": [
      "var_0",
      ".",
      "transpose",
      "(",
      "2",
      ",",
      "0",
      ",",
      "1",
      ")",
      ".",
      "reshape",
      "(",
      "3",
      ",",
      "-",
      "1",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "img",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      3,
      164,
      85,
      26,
      2,
      419,
      465,
      8,
      3,
      236,
      85,
      2,
      419,
      465
    ],
    "code_indx_copy": [
      34,
      22,
      524,
      1,
      82,
      8,
      43,
      8,
      15,
      17,
      22,
      361,
      1,
      54,
      8,
      14,
      15,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      524,
      1,
      82,
      8,
      43,
      8,
      15,
      17,
      22,
      361,
      1,
      54,
      8,
      14,
      15,
      17
    ]
  },
  {
    "intent": [
      "replacing",
      "str_0",
      "and",
      "str_1",
      "values",
      "in",
      "column",
      "str_2",
      "of",
      "dataframe",
      "var_0",
      "with",
      "str_3"
    ],
    "code": [
      "var_0",
      "[",
      "'str_2'",
      "]",
      ".",
      "replace",
      "(",
      "[",
      "'str_0'",
      ",",
      "'str_1'",
      "]",
      ",",
      "'str_3'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "ABC",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "AB",
        "quote": "'",
        "type": "str"
      },
      "str_2": {
        "value": "BrandName",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "str_3": {
        "value": "A",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      5,
      31,
      32,
      20,
      24,
      147,
      194,
      2,
      43,
      26,
      79,
      219
    ],
    "code_indx_copy": [
      34,
      12,
      150,
      16,
      22,
      107,
      1,
      12,
      29,
      8,
      63,
      16,
      8,
      173,
      17
    ],
    "code_indx_nocopy": [
      34,
      12,
      150,
      16,
      22,
      107,
      1,
      12,
      29,
      8,
      63,
      16,
      8,
      173,
      17
    ]
  },
  {
    "intent": [
      "replace",
      "values",
      "str_0",
      "in",
      "a",
      "column",
      "str_1",
      "of",
      "pandas",
      "dataframe",
      "var_0",
      "with",
      "another",
      "value",
      "str_2"
    ],
    "code": [
      "var_0",
      "[",
      "'str_1'",
      "]",
      "=",
      "var_0",
      "[",
      "'str_1'",
      "]",
      ".",
      "replace",
      "(",
      "[",
      "str_0",
      "]",
      ",",
      "'str_2'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "['ABC', 'AB']",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": "BrandName",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "str_2": {
        "value": "A",
        "quote": "'",
        "type": "str"
      },
      "[str_0]": {
        "value": "['ABC', 'AB']",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      130,
      20,
      5,
      24,
      3,
      147,
      32,
      2,
      42,
      43,
      26,
      79,
      176,
      143,
      194
    ],
    "code_indx_copy": [
      34,
      12,
      63,
      16,
      19,
      34,
      12,
      63,
      16,
      22,
      107,
      1,
      12,
      11,
      16,
      8,
      150,
      17
    ],
    "code_indx_nocopy": [
      34,
      12,
      63,
      16,
      19,
      34,
      12,
      63,
      16,
      22,
      107,
      1,
      12,
      11,
      16,
      8,
      150,
      17
    ]
  },
  {
    "intent": [
      "subtract",
      "the",
      "mean",
      "of",
      "each",
      "row",
      "in",
      "dataframe",
      "var_0",
      "from",
      "the",
      "corresponding",
      "row",
      "'s",
      "elements"
    ],
    "code": [
      "var_0",
      ".",
      "sub",
      "(",
      "var_0",
      ".",
      "mean",
      "(",
      "axis",
      "=",
      "1",
      ")",
      ",",
      "axis",
      "=",
      "0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      418,
      18,
      412,
      2,
      22,
      45,
      24,
      43,
      26,
      58,
      18,
      347,
      45,
      266,
      1
    ],
    "code_indx_copy": [
      34,
      22,
      40,
      1,
      34,
      22,
      390,
      1,
      42,
      19,
      15,
      17,
      8,
      42,
      19,
      43,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      40,
      1,
      34,
      22,
      390,
      1,
      42,
      19,
      15,
      17,
      8,
      42,
      19,
      43,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "all",
      "non-alphabet",
      "chars",
      "from",
      "string",
      "var_0"
    ],
    "code": [
      "\"\"\"\"\"\"",
      ".",
      "join",
      "(",
      "[",
      "i",
      "for",
      "i",
      "in",
      "var_0",
      "if",
      "i",
      ".",
      "isalpha",
      "(",
      ")",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      38,
      465,
      465,
      58,
      14,
      26
    ],
    "code_indx_copy": [
      287,
      22,
      23,
      1,
      12,
      6,
      7,
      6,
      9,
      34,
      67,
      6,
      22,
      524,
      1,
      17,
      16,
      17
    ],
    "code_indx_nocopy": [
      287,
      22,
      23,
      1,
      12,
      6,
      7,
      6,
      9,
      34,
      67,
      6,
      22,
      524,
      1,
      17,
      16,
      17
    ]
  },
  {
    "intent": [
      "split",
      "a",
      "string",
      "var_0",
      "into",
      "integers"
    ],
    "code": [
      "l",
      "=",
      "(",
      "int",
      "(",
      "x",
      ")",
      "for",
      "x",
      "in",
      "var_0",
      ".",
      "split",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      138,
      3,
      14,
      26,
      12,
      7
    ],
    "code_indx_copy": [
      431,
      19,
      1,
      20,
      1,
      26,
      17,
      7,
      26,
      9,
      34,
      22,
      71,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      431,
      19,
      1,
      20,
      1,
      26,
      17,
      7,
      26,
      9,
      34,
      22,
      71,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "split",
      "a",
      "string",
      "str_0",
      "by",
      "white",
      "spaces",
      "."
    ],
    "code": [
      "\"\"\"str_0\"\"\"",
      ".",
      "split",
      "(",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "42 0",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      138,
      3,
      14,
      5,
      44,
      131,
      132,
      159
    ],
    "code_indx_copy": [
      212,
      22,
      71,
      1,
      17
    ],
    "code_indx_nocopy": [
      212,
      22,
      71,
      1,
      17
    ]
  },
  {
    "intent": [
      "how",
      "to",
      "split",
      "a",
      "string",
      "into",
      "integers",
      "in",
      "python",
      "?"
    ],
    "code": [
      "map",
      "(",
      "int",
      ",",
      "'42 0'",
      ".",
      "split",
      "(",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      77,
      8,
      138,
      3,
      14,
      12,
      7,
      24,
      50,
      52
    ],
    "code_indx_copy": [
      24,
      1,
      20,
      8,
      524,
      22,
      71,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      24,
      1,
      20,
      8,
      524,
      22,
      71,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "indexes",
      "of",
      "all",
      "true",
      "boolean",
      "values",
      "from",
      "a",
      "list",
      "var_0"
    ],
    "code": [
      "[",
      "i",
      "for",
      "i",
      ",",
      "elem",
      "in",
      "enumerate",
      "(",
      "var_0",
      ",",
      "1",
      ")",
      "if",
      "elem",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "bool_list",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      235,
      2,
      38,
      367,
      366,
      20,
      58,
      3,
      4,
      26
    ],
    "code_indx_copy": [
      12,
      6,
      7,
      6,
      8,
      333,
      9,
      10,
      1,
      34,
      8,
      15,
      17,
      67,
      333,
      16
    ],
    "code_indx_nocopy": [
      12,
      6,
      7,
      6,
      8,
      333,
      9,
      10,
      1,
      34,
      8,
      15,
      17,
      67,
      333,
      16
    ]
  },
  {
    "intent": [
      "group",
      "dataframe",
      "var_0",
      "entries",
      "by",
      "year",
      "value",
      "of",
      "the",
      "date",
      "in",
      "column",
      "str_0"
    ],
    "code": [
      "var_0",
      ".",
      "groupby",
      "(",
      "var_0",
      "[",
      "'str_0'",
      "]",
      ".",
      "map",
      "(",
      "lambda",
      "x",
      ":",
      "x",
      ".",
      "year",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "data",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "date",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      383,
      43,
      26,
      254,
      44,
      416,
      143,
      2,
      18,
      133,
      24,
      147,
      5
    ],
    "code_indx_copy": [
      34,
      22,
      157,
      1,
      34,
      12,
      29,
      16,
      22,
      24,
      1,
      44,
      26,
      13,
      26,
      22,
      494,
      17,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      157,
      1,
      34,
      12,
      29,
      16,
      22,
      24,
      1,
      44,
      26,
      13,
      26,
      22,
      494,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "indices",
      "in",
      "array",
      "var_0",
      "of",
      "each",
      "element",
      "appearing",
      "in",
      "array",
      "var_1"
    ],
    "code": [
      "np",
      ".",
      "in1d",
      "(",
      "var_0",
      ",",
      "var_1",
      ")",
      ".",
      "nonzero",
      "(",
      ")",
      "[",
      "0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "b",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      18,
      326,
      24,
      85,
      26,
      2,
      22,
      49,
      465,
      24,
      85,
      63
    ],
    "code_indx_copy": [
      74,
      22,
      261,
      1,
      34,
      8,
      91,
      17,
      22,
      524,
      1,
      17,
      12,
      43,
      16
    ],
    "code_indx_nocopy": [
      74,
      22,
      261,
      1,
      34,
      8,
      91,
      17,
      22,
      524,
      1,
      17,
      12,
      43,
      16
    ]
  },
  {
    "intent": [
      "display",
      "current",
      "time",
      "in",
      "readable",
      "format"
    ],
    "code": [
      "time",
      ".",
      "strftime",
      "(",
      "'%l:%M%p %z on %b %d, %Y'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      363,
      179,
      134,
      24,
      465,
      16
    ],
    "code_indx_copy": [
      84,
      22,
      65,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      84,
      22,
      65,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "rotate",
      "x-axis",
      "text",
      "labels",
      "of",
      "plot",
      "var_0",
      "45",
      "degrees"
    ],
    "code": [
      "var_0",
      ".",
      "set_xticklabels",
      "(",
      "var_0",
      ".",
      "xaxis",
      ".",
      "get_majorticklabels",
      "(",
      ")",
      ",",
      "rotation",
      "=",
      "45",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "ax",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      317,
      267,
      322,
      2,
      244,
      26,
      465,
      465
    ],
    "code_indx_copy": [
      34,
      22,
      524,
      1,
      34,
      22,
      409,
      22,
      524,
      1,
      17,
      8,
      524,
      19,
      535,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      524,
      1,
      34,
      22,
      409,
      22,
      524,
      1,
      17,
      8,
      524,
      19,
      524,
      17
    ]
  },
  {
    "intent": [
      "append",
      "array",
      "of",
      "strings",
      "str_0",
      "into",
      "one",
      "string"
    ],
    "code": [
      "\"\"\"\"\"\"",
      ".",
      "join",
      "(",
      "[",
      "str_0",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "['x', 'x', 'x']",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "['x', 'x', 'x']",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      111,
      85,
      2,
      259,
      5,
      12,
      303,
      14
    ],
    "code_indx_copy": [
      287,
      22,
      23,
      1,
      12,
      11,
      16,
      17
    ],
    "code_indx_nocopy": [
      287,
      22,
      23,
      1,
      12,
      11,
      16,
      17
    ]
  },
  {
    "intent": [
      "retrieve",
      "all",
      "items",
      "in",
      "an",
      "numpy",
      "array",
      "str_0",
      "except",
      "the",
      "item",
      "of",
      "the",
      "index",
      "1"
    ],
    "code": [
      "str_0",
      "[",
      "(",
      "np",
      ".",
      "arange",
      "(",
      "str_0",
      ".",
      "shape",
      "[",
      "0",
      "]",
      ")",
      "!=",
      "1",
      ")",
      ",",
      ":",
      ",",
      ":",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "x",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      371,
      38,
      39,
      24,
      225,
      84,
      85,
      5,
      465,
      18,
      156,
      2,
      18,
      37,
      237
    ],
    "code_indx_copy": [
      11,
      12,
      1,
      74,
      22,
      193,
      1,
      11,
      22,
      223,
      12,
      43,
      16,
      17,
      88,
      15,
      17,
      8,
      13,
      8,
      13,
      16
    ],
    "code_indx_nocopy": [
      11,
      12,
      1,
      74,
      22,
      193,
      1,
      11,
      22,
      223,
      12,
      43,
      16,
      17,
      88,
      15,
      17,
      8,
      13,
      8,
      13,
      16
    ]
  },
  {
    "intent": [
      "pull",
      "a",
      "value",
      "with",
      "key",
      "str_0",
      "from",
      "a",
      "json",
      "object",
      "var_0"
    ],
    "code": [
      "print",
      "(",
      "var_0",
      "[",
      "'str_0'",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "name",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "item",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      3,
      143,
      79,
      23,
      5,
      58,
      3,
      181,
      15,
      26
    ],
    "code_indx_copy": [
      49,
      1,
      34,
      12,
      29,
      16,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      34,
      12,
      29,
      16,
      17
    ]
  },
  {
    "intent": [
      "read",
      "a",
      "file",
      "from",
      "redirected",
      "stdin",
      "and",
      "save",
      "to",
      "variable",
      "var_0"
    ],
    "code": [
      "var_0",
      "=",
      "sys",
      ".",
      "stdin",
      ".",
      "read",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "result",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      124,
      3,
      126,
      58,
      465,
      446,
      31,
      333,
      8,
      95,
      26
    ],
    "code_indx_copy": [
      34,
      19,
      153,
      22,
      473,
      22,
      106,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      153,
      22,
      473,
      22,
      106,
      1,
      17
    ]
  },
  {
    "intent": [
      "get",
      "all",
      "the",
      "texts",
      "without",
      "tags",
      "from",
      "beautiful",
      "soup",
      "object",
      "var_0"
    ],
    "code": [
      "\"\"\"\"\"\"",
      ".",
      "join",
      "(",
      "var_0",
      ".",
      "findAll",
      "(",
      "text",
      "=",
      "True",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "soup",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      38,
      18,
      465,
      103,
      392,
      58,
      465,
      465,
      15,
      26
    ],
    "code_indx_copy": [
      287,
      22,
      23,
      1,
      34,
      22,
      254,
      1,
      355,
      19,
      109,
      17,
      17
    ],
    "code_indx_nocopy": [
      287,
      22,
      23,
      1,
      34,
      22,
      254,
      1,
      355,
      19,
      109,
      17,
      17
    ]
  },
  {
    "intent": [
      "extract",
      "all",
      "rows",
      "from",
      "dataframe",
      "var_0",
      "where",
      "the",
      "value",
      "of",
      "column",
      "str_0",
      "is",
      "true"
    ],
    "code": [
      "var_0",
      "[",
      "var_0",
      "[",
      "'str_0'",
      "]",
      "==",
      "True",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "data",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "Value",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      104,
      38,
      80,
      58,
      43,
      26,
      155,
      18,
      143,
      2,
      147,
      5,
      152,
      367
    ],
    "code_indx_copy": [
      34,
      12,
      34,
      12,
      29,
      16,
      76,
      109,
      16
    ],
    "code_indx_nocopy": [
      34,
      12,
      34,
      12,
      29,
      16,
      76,
      109,
      16
    ]
  },
  {
    "intent": [
      "removing",
      "duplicate",
      "characters",
      "from",
      "a",
      "string",
      "variable",
      "str_0"
    ],
    "code": [
      "\"\"\"\"\"\"",
      ".",
      "join",
      "(",
      "set",
      "(",
      "str_0",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "foo",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      99,
      411,
      98,
      58,
      3,
      14,
      95,
      5
    ],
    "code_indx_copy": [
      287,
      22,
      23,
      1,
      189,
      1,
      11,
      17,
      17
    ],
    "code_indx_nocopy": [
      287,
      22,
      23,
      1,
      189,
      1,
      11,
      17,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "objects",
      "in",
      "model",
      "var_0",
      "based",
      "on",
      "theirs",
      "var_1",
      "attribute"
    ],
    "code": [
      "sorted",
      "(",
      "var_0",
      ".",
      "objects",
      ".",
      "all",
      "(",
      ")",
      ",",
      "key",
      "=",
      "lambda",
      "p",
      ":",
      "p",
      ".",
      "var_1",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "Profile",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "reputation",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      178,
      24,
      313,
      26,
      208,
      139,
      465,
      63,
      341
    ],
    "code_indx_copy": [
      101,
      1,
      34,
      22,
      78,
      22,
      77,
      1,
      17,
      8,
      102,
      19,
      44,
      435,
      13,
      435,
      22,
      91,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      34,
      22,
      78,
      22,
      77,
      1,
      17,
      8,
      102,
      19,
      44,
      435,
      13,
      435,
      22,
      91,
      17
    ]
  },
  {
    "intent": [
      "flatten",
      "a",
      "dataframe",
      "df",
      "to",
      "a",
      "list"
    ],
    "code": [
      "df",
      ".",
      "values",
      ".",
      "flatten",
      "(",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      465,
      3,
      43,
      465,
      8,
      3,
      4
    ],
    "code_indx_copy": [
      149,
      22,
      166,
      22,
      528,
      1,
      17
    ],
    "code_indx_nocopy": [
      149,
      22,
      166,
      22,
      524,
      1,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "list",
      "var_0",
      "using",
      "values",
      "associated",
      "with",
      "key",
      "str_0",
      "according",
      "to",
      "elements",
      "in",
      "list",
      "var_1"
    ],
    "code": [
      "var_0",
      ".",
      "sort",
      "(",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "var_1",
      ".",
      "index",
      "(",
      "x",
      "[",
      "'str_0'",
      "]",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "users",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "id",
        "quote": "'",
        "type": "str"
      },
      "var_1": {
        "value": "order",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      4,
      26,
      109,
      20,
      286,
      79,
      23,
      5,
      378,
      8,
      1,
      24,
      4,
      63
    ],
    "code_indx_copy": [
      34,
      22,
      124,
      1,
      102,
      19,
      44,
      26,
      13,
      91,
      22,
      160,
      1,
      26,
      12,
      29,
      16,
      17,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      124,
      1,
      102,
      19,
      44,
      26,
      13,
      91,
      22,
      160,
      1,
      26,
      12,
      29,
      16,
      17,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "python",
      "list",
      "of",
      "dictionaries",
      "var_0",
      "by",
      "a",
      "given",
      "list",
      "var_1",
      "of",
      "ids",
      "str_0",
      "with",
      "the",
      "desired",
      "order"
    ],
    "code": [
      "var_0",
      ".",
      "sort",
      "(",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "var_1",
      ".",
      "index",
      "(",
      "x",
      "[",
      "'str_0'",
      "]",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "users",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "order",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "id",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      117,
      3,
      50,
      4,
      2,
      188,
      26,
      44,
      3,
      273,
      4,
      63,
      2,
      465,
      5,
      79,
      18,
      465,
      162
    ],
    "code_indx_copy": [
      34,
      22,
      124,
      1,
      102,
      19,
      44,
      26,
      13,
      91,
      22,
      160,
      1,
      26,
      12,
      29,
      16,
      17,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      124,
      1,
      102,
      19,
      44,
      26,
      13,
      91,
      22,
      160,
      1,
      26,
      12,
      29,
      16,
      17,
      17
    ]
  },
  {
    "intent": [
      "request",
      "uri",
      "str_0",
      "and",
      "pass",
      "authorization",
      "token",
      "str_1",
      "to",
      "the",
      "header"
    ],
    "code": [
      "r",
      "=",
      "requests",
      ".",
      "get",
      "(",
      "'str_0'",
      ",",
      "headers",
      "=",
      "{",
      "'Authorization'",
      ":",
      "'str_1'",
      "}",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "<MY_URI>",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "TOK:<MY_TOKEN>",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      101,
      465,
      5,
      31,
      465,
      465,
      465,
      32,
      8,
      18,
      427
    ],
    "code_indx_copy": [
      18,
      19,
      85,
      22,
      86,
      1,
      29,
      8,
      289,
      19,
      52,
      524,
      13,
      63,
      53,
      17
    ],
    "code_indx_nocopy": [
      18,
      19,
      85,
      22,
      86,
      1,
      29,
      8,
      289,
      19,
      52,
      524,
      13,
      63,
      53,
      17
    ]
  },
  {
    "intent": [
      "un-escape",
      "a",
      "backslash-escaped",
      "string",
      "in",
      "str_0"
    ],
    "code": [
      "print",
      "(",
      "'\"Hello,\\\\nworld!\"'",
      ".",
      "decode",
      "(",
      "'string_escape'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "Hello,\\nworld!",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      3,
      465,
      14,
      24,
      5
    ],
    "code_indx_copy": [
      49,
      1,
      524,
      22,
      99,
      1,
      256,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      524,
      22,
      99,
      1,
      256,
      17,
      17
    ]
  },
  {
    "intent": [
      "match",
      "regex",
      "pattern",
      "str_0",
      "on",
      "string",
      "str_1",
      "with",
      "dotall",
      "enabled"
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'str_0'",
      ",",
      "'str_1'",
      ",",
      "re",
      ".",
      "DOTALL",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "a*?bc*?",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "aabcc",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      144,
      40,
      54,
      5,
      139,
      14,
      32,
      79,
      465,
      465
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      29,
      8,
      63,
      8,
      39,
      22,
      524,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      29,
      8,
      63,
      8,
      39,
      22,
      524,
      17
    ]
  },
  {
    "intent": [
      "get",
      "second",
      "array",
      "column",
      "length",
      "of",
      "array",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "shape",
      "[",
      "1",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      118,
      85,
      147,
      209,
      2,
      85,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      223,
      12,
      15,
      16
    ],
    "code_indx_nocopy": [
      34,
      22,
      223,
      12,
      15,
      16
    ]
  },
  {
    "intent": [
      "use",
      "operations",
      "like",
      "max/min",
      "within",
      "a",
      "row",
      "to",
      "a",
      "dataframe",
      "str_0",
      "in",
      "pandas"
    ],
    "code": [
      "str_0",
      ".",
      "apply",
      "(",
      "lambda",
      "row",
      ":",
      "min",
      "(",
      "[",
      "row",
      "[",
      "'A'",
      "]",
      ",",
      "row",
      "[",
      "'B'",
      "]",
      "]",
      ")",
      "-",
      "row",
      "[",
      "'C'",
      "]",
      ",",
      "axis",
      "=",
      "1",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "d",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      309,
      465,
      465,
      465,
      55,
      3,
      45,
      8,
      3,
      43,
      5,
      24,
      42
    ],
    "code_indx_copy": [
      11,
      22,
      59,
      1,
      44,
      262,
      13,
      111,
      1,
      12,
      262,
      12,
      247,
      16,
      8,
      262,
      12,
      327,
      16,
      16,
      17,
      14,
      262,
      12,
      326,
      16,
      8,
      42,
      19,
      15,
      17
    ],
    "code_indx_nocopy": [
      11,
      22,
      59,
      1,
      44,
      262,
      13,
      111,
      1,
      12,
      262,
      12,
      247,
      16,
      8,
      262,
      12,
      327,
      16,
      16,
      17,
      14,
      262,
      12,
      326,
      16,
      8,
      42,
      19,
      15,
      17
    ]
  },
  {
    "intent": [
      "count",
      "number",
      "of",
      "occurrences",
      "of",
      "a",
      "substring",
      "str_0",
      "in",
      "a",
      "string",
      "str_1"
    ],
    "code": [
      "\"\"\"str_1\"\"\"",
      ".",
      "count",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "ab",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "abcdabcva",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      203,
      76,
      2,
      53,
      2,
      3,
      354,
      5,
      24,
      3,
      14,
      32
    ],
    "code_indx_copy": [
      439,
      22,
      386,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      439,
      22,
      386,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "list",
      "of",
      "values",
      "with",
      "key",
      "str_0",
      "from",
      "a",
      "list",
      "of",
      "dictionaries",
      "var_0"
    ],
    "code": [
      "[",
      "d",
      "[",
      "'str_0'",
      "]",
      "for",
      "d",
      "in",
      "var_0",
      "if",
      "'str_0'",
      "in",
      "d",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "key",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "l",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      3,
      4,
      2,
      20,
      79,
      23,
      5,
      58,
      3,
      4,
      2,
      188,
      26
    ],
    "code_indx_copy": [
      12,
      2,
      12,
      29,
      16,
      7,
      2,
      9,
      34,
      67,
      29,
      9,
      2,
      16
    ],
    "code_indx_nocopy": [
      12,
      2,
      12,
      29,
      16,
      7,
      2,
      9,
      34,
      67,
      29,
      9,
      2,
      16
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "list",
      "of",
      "values",
      "for",
      "key",
      "str_0",
      "from",
      "a",
      "list",
      "of",
      "dictionaries",
      "var_0"
    ],
    "code": [
      "[",
      "d",
      "[",
      "'str_0'",
      "]",
      "for",
      "d",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "key",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "l",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      3,
      4,
      2,
      20,
      21,
      23,
      5,
      58,
      3,
      4,
      2,
      188,
      26
    ],
    "code_indx_copy": [
      12,
      2,
      12,
      29,
      16,
      7,
      2,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      12,
      2,
      12,
      29,
      16,
      7,
      2,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "list",
      "of",
      "values",
      "for",
      "key",
      "str_0",
      "from",
      "a",
      "list",
      "of",
      "dictionaries",
      "in",
      "var_0"
    ],
    "code": [
      "[",
      "d",
      "[",
      "'str_0'",
      "]",
      "for",
      "d",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "key",
        "quote": "\"",
        "type": "str"
      },
      "var_0": {
        "value": "l",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      3,
      4,
      2,
      20,
      21,
      23,
      5,
      58,
      3,
      4,
      2,
      188,
      24,
      26
    ],
    "code_indx_copy": [
      12,
      2,
      12,
      29,
      16,
      7,
      2,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      12,
      2,
      12,
      29,
      16,
      7,
      2,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "order",
      "a",
      "list",
      "of",
      "lists",
      "var_0",
      "by",
      "the",
      "first",
      "value"
    ],
    "code": [
      "var_0",
      ".",
      "sort",
      "(",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "int",
      "(",
      "x",
      "[",
      "0",
      "]",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "l1",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      162,
      3,
      4,
      2,
      30,
      26,
      44,
      18,
      151,
      143
    ],
    "code_indx_copy": [
      34,
      22,
      124,
      1,
      102,
      19,
      44,
      26,
      13,
      20,
      1,
      26,
      12,
      43,
      16,
      17,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      124,
      1,
      102,
      19,
      44,
      26,
      13,
      20,
      1,
      26,
      12,
      43,
      16,
      17,
      17
    ]
  },
  {
    "intent": [
      "order",
      "a",
      "list",
      "of",
      "lists",
      "str_0",
      "by",
      "the",
      "first",
      "value",
      "of",
      "individual",
      "list"
    ],
    "code": [
      "sorted",
      "(",
      "[",
      "str_0",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "[[1, 'mike'], [1, 'bob']]",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "[[1, 'mike'], [1, 'bob']]",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      162,
      3,
      4,
      2,
      30,
      5,
      44,
      18,
      151,
      143,
      2,
      465,
      4
    ],
    "code_indx_copy": [
      101,
      1,
      12,
      11,
      16,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      12,
      11,
      16,
      17
    ]
  },
  {
    "intent": [
      "replace",
      "a",
      "string",
      "var_0",
      "in",
      "case",
      "sensitive",
      "way",
      "using",
      "maketrans"
    ],
    "code": [
      "\"\"\"var_0\"\"\"",
      ".",
      "translate",
      "(",
      "maketrans",
      "(",
      "'abcABC'",
      ",",
      "'defDEF'",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "Abc",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      130,
      3,
      14,
      26,
      24,
      197,
      465,
      449,
      109,
      465
    ],
    "code_indx_copy": [
      524,
      22,
      421,
      1,
      537,
      1,
      524,
      8,
      524,
      17,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      421,
      1,
      524,
      1,
      524,
      8,
      524,
      17,
      17
    ]
  },
  {
    "intent": [
      "dictionary",
      "var_0",
      "to",
      "string",
      ",",
      "custom",
      "format"
    ],
    "code": [
      "\"\"\"<br/>\"\"\"",
      ".",
      "join",
      "(",
      "[",
      "(",
      "'%s:: %s'",
      "%",
      "(",
      "key",
      ",",
      "value",
      ")",
      ")",
      "for",
      "key",
      ",",
      "value",
      "in",
      "list",
      "(",
      "var_0",
      ".",
      "\n",
      "items",
      "(",
      ")",
      ")",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "d",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      25,
      26,
      8,
      14,
      62,
      465,
      16
    ],
    "code_indx_copy": [
      524,
      22,
      23,
      1,
      12,
      1,
      524,
      117,
      1,
      102,
      8,
      151,
      17,
      17,
      7,
      102,
      8,
      151,
      9,
      33,
      1,
      34,
      22,
      161,
      35,
      1,
      17,
      17,
      16,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      23,
      1,
      12,
      1,
      524,
      117,
      1,
      102,
      8,
      151,
      17,
      17,
      7,
      102,
      8,
      151,
      9,
      33,
      1,
      34,
      22,
      161,
      35,
      1,
      17,
      17,
      16,
      17
    ]
  },
  {
    "intent": [
      "how",
      "to",
      "write",
      "a",
      "unicode",
      "csv",
      "in",
      "python",
      "2.7"
    ],
    "code": [
      "self",
      ".",
      "writer",
      ".",
      "writerow",
      "(",
      "[",
      "str",
      "(",
      "s",
      ")",
      ".",
      "encode",
      "(",
      "'utf-8'",
      ")",
      "for",
      "s",
      "in",
      "row",
      "]",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      77,
      8,
      168,
      3,
      230,
      287,
      24,
      50,
      465
    ],
    "code_indx_copy": [
      310,
      22,
      508,
      22,
      427,
      1,
      12,
      25,
      1,
      181,
      17,
      22,
      239,
      1,
      143,
      17,
      7,
      181,
      9,
      262,
      16,
      17
    ],
    "code_indx_nocopy": [
      310,
      22,
      508,
      22,
      427,
      1,
      12,
      25,
      1,
      181,
      17,
      22,
      239,
      1,
      143,
      17,
      7,
      181,
      9,
      262,
      16,
      17
    ]
  },
  {
    "intent": [
      "clear",
      "terminal",
      "screen",
      "on",
      "windows"
    ],
    "code": [
      "os",
      ".",
      "system",
      "(",
      "'cls'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      426,
      465,
      465,
      139,
      435
    ],
    "code_indx_copy": [
      113,
      22,
      119,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      119,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "clear",
      "the",
      "terminal",
      "screen",
      "in",
      "linux"
    ],
    "code": [
      "os",
      ".",
      "system",
      "(",
      "'clear'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      426,
      18,
      465,
      465,
      24,
      465
    ],
    "code_indx_copy": [
      113,
      22,
      119,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      119,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "execute",
      "external",
      "commands/script",
      "var_0",
      "with",
      "csh",
      "instead",
      "of",
      "bash"
    ],
    "code": [
      "os",
      ".",
      "system",
      "(",
      "'tcsh your_own_script'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "your_own_script",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      135,
      460,
      465,
      26,
      79,
      465,
      465,
      2,
      361
    ],
    "code_indx_copy": [
      113,
      22,
      119,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      119,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "execute",
      "command",
      "str_0",
      "in",
      "z",
      "shell"
    ],
    "code": [
      "os",
      ".",
      "system",
      "(",
      "\"zsh -c 'echo $0'\"",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "echo $0",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      135,
      137,
      5,
      24,
      465,
      292
    ],
    "code_indx_copy": [
      113,
      22,
      119,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      119,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "update",
      "a",
      "list",
      "var_0",
      "dictionaries",
      "with",
      "a",
      "key",
      "var_1",
      "and",
      "value",
      "from",
      "list",
      "var_2"
    ],
    "code": [
      "[",
      "dict",
      "(",
      "d",
      ",",
      "var_1",
      "=",
      "n",
      ")",
      "for",
      "d",
      ",",
      "n",
      "in",
      "zip",
      "(",
      "var_0",
      ",",
      "var_2",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "l1",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "count",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "l2",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      242,
      3,
      4,
      26,
      188,
      79,
      3,
      23,
      63,
      31,
      143,
      58,
      4,
      64
    ],
    "code_indx_copy": [
      12,
      70,
      1,
      2,
      8,
      91,
      19,
      307,
      17,
      7,
      2,
      8,
      307,
      9,
      36,
      1,
      34,
      8,
      94,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      70,
      1,
      2,
      8,
      91,
      19,
      307,
      17,
      7,
      2,
      8,
      307,
      9,
      36,
      1,
      34,
      8,
      94,
      17,
      16
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "list",
      "with",
      "the",
      "sum",
      "of",
      "respective",
      "elements",
      "of",
      "the",
      "tuples",
      "of",
      "list",
      "var_0"
    ],
    "code": [
      "[",
      "sum",
      "(",
      "x",
      ")",
      "for",
      "x",
      "in",
      "zip",
      "(",
      "*",
      "var_0",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "l",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      148,
      3,
      4,
      79,
      18,
      112,
      2,
      355,
      1,
      2,
      18,
      33,
      2,
      4,
      26
    ],
    "code_indx_copy": [
      12,
      0,
      1,
      26,
      17,
      7,
      26,
      9,
      36,
      1,
      3,
      34,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      0,
      1,
      26,
      17,
      7,
      26,
      9,
      36,
      1,
      3,
      34,
      17,
      16
    ]
  },
  {
    "intent": [
      "sum",
      "each",
      "value",
      "in",
      "a",
      "list",
      "var_0",
      "of",
      "tuples"
    ],
    "code": [
      "map",
      "(",
      "sum",
      ",",
      "zip",
      "(",
      "*",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "l",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      112,
      22,
      143,
      24,
      3,
      4,
      26,
      2,
      33
    ],
    "code_indx_copy": [
      24,
      1,
      0,
      8,
      36,
      1,
      3,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      24,
      1,
      0,
      8,
      36,
      1,
      3,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "count",
      "the",
      "number",
      "of",
      "non-nan",
      "elements",
      "in",
      "a",
      "numpy",
      "ndarray",
      "matrix",
      "var_0"
    ],
    "code": [
      "np",
      ".",
      "count_nonzero",
      "(",
      "~",
      "np",
      ".",
      "isnan",
      "(",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "data",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      203,
      18,
      76,
      2,
      465,
      1,
      24,
      3,
      84,
      465,
      189,
      26
    ],
    "code_indx_copy": [
      74,
      22,
      524,
      1,
      360,
      74,
      22,
      222,
      1,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      74,
      22,
      524,
      1,
      360,
      74,
      22,
      222,
      1,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "each",
      "list",
      "in",
      "list",
      "var_0",
      "into",
      "a",
      "tuple"
    ],
    "code": [
      "map",
      "(",
      "list",
      ",",
      "zip",
      "(",
      "*",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "main_list",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      22,
      4,
      24,
      4,
      26,
      12,
      3,
      113
    ],
    "code_indx_copy": [
      24,
      1,
      33,
      8,
      36,
      1,
      3,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      24,
      1,
      33,
      8,
      36,
      1,
      3,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "django",
      "get",
      "the",
      "value",
      "of",
      "key",
      "str_0",
      "from",
      "post",
      "request",
      "var_0",
      "if",
      "exists",
      ",",
      "else",
      "return",
      "empty",
      "string",
      "str_1"
    ],
    "code": [
      "var_0",
      ".",
      "POST",
      ".",
      "get",
      "(",
      "'str_0'",
      ",",
      "'str_1'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "title",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "request",
        "quote": "`",
        "type": "var"
      },
      "str_1": {
        "value": "",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      87,
      17,
      18,
      143,
      2,
      23,
      5,
      58,
      407,
      101,
      26,
      150,
      274,
      62,
      465,
      160,
      146,
      14,
      32
    ],
    "code_indx_copy": [
      34,
      22,
      484,
      22,
      86,
      1,
      29,
      8,
      63,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      484,
      22,
      86,
      1,
      29,
      8,
      63,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "string",
      "str_0",
      "ends",
      "with",
      "one",
      "of",
      "the",
      "strings",
      "from",
      "a",
      "tuple",
      "str_1"
    ],
    "code": [
      "\"\"\"str_0\"\"\"",
      ".",
      "endswith",
      "(",
      "(",
      "str_1",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "test.mp3",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": "('.mp3', '.avi')",
        "quote": "`",
        "type": "str"
      },
      "(str_1)": {
        "value": "('.mp3', '.avi')",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      234,
      150,
      14,
      5,
      173,
      79,
      303,
      2,
      18,
      259,
      58,
      3,
      113,
      32
    ],
    "code_indx_copy": [
      212,
      22,
      199,
      1,
      1,
      37,
      17,
      17
    ],
    "code_indx_nocopy": [
      212,
      22,
      199,
      1,
      1,
      37,
      17,
      17
    ]
  },
  {
    "intent": [
      "split",
      "a",
      "string",
      "str_0",
      "by",
      "space",
      "while",
      "ignoring",
      "spaces",
      "within",
      "square",
      "braces",
      "and",
      "quotes",
      "."
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'\\\\[[^\\\\]]*\\\\]|\"[^\"]*\"|\\\\S+'",
      ",",
      "str_0",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "s",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      138,
      3,
      14,
      5,
      44,
      400,
      430,
      465,
      132,
      55,
      465,
      465,
      31,
      465,
      159
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      524,
      8,
      11,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      524,
      8,
      11,
      17
    ]
  },
  {
    "intent": [
      "get",
      "biggest",
      "3",
      "values",
      "from",
      "each",
      "column",
      "of",
      "the",
      "pandas",
      "dataframe",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "apply",
      "(",
      "lambda",
      "x",
      ":",
      "sorted",
      "(",
      "x",
      ",",
      "3",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "data",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      465,
      57,
      20,
      58,
      22,
      147,
      2,
      18,
      42,
      43,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      59,
      1,
      44,
      26,
      13,
      101,
      1,
      26,
      8,
      54,
      17,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      59,
      1,
      44,
      26,
      13,
      101,
      1,
      26,
      8,
      54,
      17,
      17
    ]
  },
  {
    "intent": [
      "permanently",
      "set",
      "the",
      "current",
      "directory",
      "to",
      "the",
      "str_0"
    ],
    "code": [
      "os",
      ".",
      "chdir",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "C:/Users/Name/Desktop",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      59,
      18,
      179,
      175,
      8,
      18,
      5
    ],
    "code_indx_copy": [
      113,
      22,
      445,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      445,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "get",
      "all",
      "characters",
      "between",
      "two",
      "str_0",
      "characters",
      "in",
      "string",
      "var_0"
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'\\\\$([^$]*)\\\\$'",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "$",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "string",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      38,
      98,
      278,
      29,
      5,
      98,
      24,
      14,
      26
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      524,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      524,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "getting",
      "the",
      "string",
      "between",
      "2",
      "str_0",
      "characters",
      "in",
      "str_1"
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'\\\\$(.*?)\\\\$'",
      ",",
      "'str_1'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "$",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "$sin (x)$ is an function of x",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      402,
      18,
      14,
      278,
      82,
      5,
      98,
      24,
      32
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      524,
      8,
      63,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      524,
      8,
      63,
      17
    ]
  },
  {
    "intent": [
      "format",
      "a",
      "date",
      "object",
      "var_0",
      "into",
      "iso",
      "fomrat"
    ],
    "code": [
      "datetime",
      ".",
      "datetime",
      ".",
      "strptime",
      "(",
      "str_date",
      ",",
      "'%m/%d/%Y'",
      ")",
      ".",
      "date",
      "(",
      ")",
      ".",
      "isoformat",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "str_data",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      16,
      3,
      133,
      15,
      26,
      12,
      465,
      465
    ],
    "code_indx_copy": [
      27,
      22,
      27,
      22,
      28,
      1,
      524,
      8,
      524,
      17,
      22,
      139,
      1,
      17,
      22,
      349,
      1,
      17
    ],
    "code_indx_nocopy": [
      27,
      22,
      27,
      22,
      28,
      1,
      524,
      8,
      524,
      17,
      22,
      139,
      1,
      17,
      22,
      349,
      1,
      17
    ]
  },
  {
    "intent": [
      "get",
      "element",
      "at",
      "index",
      "0",
      "of",
      "first",
      "row",
      "and",
      "element",
      "at",
      "index",
      "1",
      "of",
      "second",
      "row",
      "in",
      "array",
      "var_0"
    ],
    "code": [
      "var_0",
      "[",
      "[",
      "0",
      ",",
      "1",
      "]",
      ",",
      "[",
      "0",
      ",",
      "1",
      "]",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "A",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      49,
      35,
      37,
      107,
      2,
      151,
      45,
      31,
      49,
      35,
      37,
      237,
      2,
      118,
      45,
      24,
      85,
      26
    ],
    "code_indx_copy": [
      34,
      12,
      12,
      43,
      8,
      15,
      16,
      8,
      12,
      43,
      8,
      15,
      16,
      16
    ],
    "code_indx_nocopy": [
      34,
      12,
      12,
      43,
      8,
      15,
      16,
      8,
      12,
      43,
      8,
      15,
      16,
      16
    ]
  },
  {
    "intent": [
      "subset",
      "numpy",
      "array",
      "var_0",
      "by",
      "column",
      "and",
      "row",
      ",",
      "returning",
      "the",
      "values",
      "from",
      "the",
      "first",
      "row",
      ",",
      "first",
      "column",
      "and",
      "the",
      "second",
      "row",
      ",",
      "second",
      "column",
      "and",
      "the",
      "third",
      "row",
      ",",
      "first",
      "column",
      "."
    ],
    "code": [
      "var_0",
      "[",
      "np",
      ".",
      "arange",
      "(",
      "3",
      ")",
      ",",
      "(",
      "0",
      ",",
      "1",
      ",",
      "0",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      443,
      84,
      85,
      26,
      44,
      147,
      31,
      45,
      62,
      465,
      18,
      20,
      58,
      18,
      151,
      45,
      62,
      151,
      147,
      31,
      18,
      118,
      45,
      62,
      118,
      147,
      31,
      18,
      120,
      45,
      62,
      151,
      147,
      159
    ],
    "code_indx_copy": [
      34,
      12,
      74,
      22,
      193,
      1,
      54,
      17,
      8,
      1,
      43,
      8,
      15,
      8,
      43,
      17,
      16
    ],
    "code_indx_nocopy": [
      34,
      12,
      74,
      22,
      193,
      1,
      54,
      17,
      8,
      1,
      43,
      8,
      15,
      8,
      43,
      17,
      16
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "list",
      "of",
      "all",
      "keys",
      "from",
      "dictionary",
      "var_0",
      "where",
      "the",
      "number",
      "of",
      "occurrences",
      "of",
      "value",
      "var_1",
      "in",
      "that",
      "key",
      "is",
      "more",
      "than",
      "str_0"
    ],
    "code": [
      "[",
      "k",
      "for",
      "k",
      ",",
      "v",
      "in",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      "if",
      "v",
      ".",
      "count",
      "(",
      "'var_1'",
      ")",
      ">",
      "1",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "dictA",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "duck",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "1",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      3,
      4,
      2,
      38,
      206,
      58,
      25,
      26,
      155,
      18,
      76,
      2,
      53,
      2,
      143,
      63,
      24,
      195,
      23,
      152,
      425,
      264,
      5
    ],
    "code_indx_copy": [
      12,
      89,
      7,
      89,
      8,
      90,
      9,
      34,
      22,
      35,
      1,
      17,
      67,
      90,
      22,
      386,
      1,
      57,
      17,
      214,
      15,
      16
    ],
    "code_indx_nocopy": [
      12,
      89,
      7,
      89,
      8,
      90,
      9,
      34,
      22,
      35,
      1,
      17,
      67,
      90,
      22,
      386,
      1,
      57,
      17,
      214,
      15,
      16
    ]
  },
  {
    "intent": [
      "create",
      "sub",
      "matrix",
      "of",
      "a",
      "list",
      "of",
      "lists",
      "str_0",
      "(",
      "without",
      "numpy",
      ")"
    ],
    "code": [
      "[",
      "str_0",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "[[2, 3, 4], [2, 3, 4], [2, 3, 4]]",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "[[2, 3, 4], [2, 3, 4], [2, 3, 4]]",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      148,
      431,
      189,
      2,
      3,
      4,
      2,
      30,
      5,
      212,
      103,
      84,
      27
    ],
    "code_indx_copy": [
      12,
      11,
      16
    ],
    "code_indx_nocopy": [
      12,
      11,
      16
    ]
  },
  {
    "intent": [
      "get",
      "an",
      "element",
      "at",
      "index",
      "str_0in",
      "a",
      "numpy",
      "array",
      "var_0"
    ],
    "code": [
      "print",
      "(",
      "var_0",
      "[",
      "1",
      ",",
      "1",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "[1,1]",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "arr",
        "quote": "`",
        "type": "var"
      },
      "[str_0]": {
        "value": "[1,1]",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      225,
      49,
      35,
      37,
      465,
      3,
      84,
      85,
      26
    ],
    "code_indx_copy": [
      49,
      1,
      34,
      12,
      15,
      8,
      15,
      16,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      34,
      12,
      15,
      8,
      15,
      16,
      17
    ]
  },
  {
    "intent": [
      "set",
      "colorbar",
      "range",
      "from",
      "str_0",
      "to",
      "str_1",
      "for",
      "pyplot",
      "object",
      "var_0",
      "in",
      "matplotlib"
    ],
    "code": [
      "var_0",
      ".",
      "set_clim",
      "(",
      "vmin",
      "=",
      "0",
      ",",
      "vmax",
      "=",
      "15",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "0",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": "15",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "quadmesh",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      59,
      465,
      123,
      58,
      5,
      8,
      32,
      21,
      319,
      15,
      26,
      24,
      350
    ],
    "code_indx_copy": [
      34,
      22,
      524,
      1,
      524,
      19,
      43,
      8,
      524,
      19,
      400,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      524,
      1,
      524,
      19,
      43,
      8,
      524,
      19,
      400,
      17
    ]
  },
  {
    "intent": [
      "read",
      "csv",
      "file",
      "str_0",
      "into",
      "numpy",
      "array"
    ],
    "code": [
      "my_data",
      "=",
      "genfromtxt",
      "(",
      "'str_0'",
      ",",
      "delimiter",
      "=",
      "','",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "my_file.csv",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      124,
      287,
      126,
      5,
      12,
      84,
      85
    ],
    "code_indx_copy": [
      524,
      19,
      509,
      1,
      29,
      8,
      263,
      19,
      73,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      509,
      1,
      29,
      8,
      263,
      19,
      73,
      17
    ]
  },
  {
    "intent": [
      "read",
      "csv",
      "file",
      "str_0",
      "into",
      "array"
    ],
    "code": [
      "df",
      "=",
      "pd",
      ".",
      "read_csv",
      "(",
      "'str_0'",
      ",",
      "sep",
      "=",
      "','",
      ",",
      "header",
      "=",
      "None",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "myfile.csv",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      124,
      287,
      126,
      5,
      12,
      85
    ],
    "code_indx_copy": [
      149,
      19,
      162,
      22,
      452,
      1,
      29,
      8,
      264,
      19,
      73,
      8,
      524,
      19,
      209,
      17
    ],
    "code_indx_nocopy": [
      149,
      19,
      162,
      22,
      452,
      1,
      29,
      8,
      264,
      19,
      73,
      8,
      524,
      19,
      209,
      17
    ]
  },
  {
    "intent": [
      "read",
      "csv",
      "file",
      "str_0",
      "into",
      "array"
    ],
    "code": [
      "np",
      ".",
      "genfromtxt",
      "(",
      "'str_0'",
      ",",
      "delimiter",
      "=",
      "','",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "myfile.csv",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      124,
      287,
      126,
      5,
      12,
      85
    ],
    "code_indx_copy": [
      74,
      22,
      509,
      1,
      29,
      8,
      263,
      19,
      73,
      17
    ],
    "code_indx_nocopy": [
      74,
      22,
      509,
      1,
      29,
      8,
      263,
      19,
      73,
      17
    ]
  },
  {
    "intent": [
      "read",
      "csv",
      "file",
      "str_0",
      "into",
      "array"
    ],
    "code": [
      "np",
      ".",
      "genfromtxt",
      "(",
      "'str_0'",
      ",",
      "delimiter",
      "=",
      "','",
      ",",
      "dtype",
      "=",
      "None",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "myfile.csv",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      124,
      287,
      126,
      5,
      12,
      85
    ],
    "code_indx_copy": [
      74,
      22,
      509,
      1,
      29,
      8,
      263,
      19,
      73,
      8,
      177,
      19,
      209,
      17
    ],
    "code_indx_nocopy": [
      74,
      22,
      509,
      1,
      29,
      8,
      263,
      19,
      73,
      8,
      177,
      19,
      209,
      17
    ]
  },
  {
    "intent": [
      "read",
      "the",
      "first",
      "line",
      "of",
      "a",
      "string",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "splitlines",
      "(",
      ")",
      "[",
      "0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "my_string",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      124,
      18,
      151,
      172,
      2,
      3,
      14,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      524,
      1,
      17,
      12,
      43,
      16
    ],
    "code_indx_nocopy": [
      34,
      22,
      524,
      1,
      17,
      12,
      43,
      16
    ]
  },
  {
    "intent": [
      "how",
      "do",
      "i",
      "read",
      "the",
      "first",
      "line",
      "of",
      "a",
      "string",
      "?"
    ],
    "code": [
      "my_string",
      ".",
      "split",
      "(",
      "'\\n'",
      ",",
      "1",
      ")",
      "[",
      "0",
      "]"
    ],
    "slot_map": {},
    "intent_indx": [
      77,
      327,
      328,
      124,
      18,
      151,
      172,
      2,
      3,
      14,
      52
    ],
    "code_indx_copy": [
      524,
      22,
      71,
      1,
      133,
      8,
      15,
      17,
      12,
      43,
      16
    ],
    "code_indx_nocopy": [
      524,
      22,
      71,
      1,
      133,
      8,
      15,
      17,
      12,
      43,
      16
    ]
  },
  {
    "intent": [
      "generate",
      "a",
      "list",
      "from",
      "a",
      "pandas",
      "dataframe",
      "var_0",
      "with",
      "the",
      "column",
      "name",
      "and",
      "column",
      "values"
    ],
    "code": [
      "var_0",
      ".",
      "values",
      ".",
      "tolist",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      56,
      3,
      4,
      58,
      3,
      42,
      43,
      26,
      79,
      18,
      147,
      129,
      31,
      147,
      20
    ],
    "code_indx_copy": [
      34,
      22,
      166,
      22,
      306,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      166,
      22,
      306,
      1,
      17
    ]
  },
  {
    "intent": [
      "replace",
      "repeated",
      "instances",
      "of",
      "a",
      "character",
      "str_0",
      "with",
      "a",
      "single",
      "instance",
      "in",
      "a",
      "string",
      "str_1"
    ],
    "code": [
      "re",
      ".",
      "sub",
      "(",
      "'\\\\*\\\\*+'",
      ",",
      "'str_0'",
      ",",
      "str_1",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "*",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "text",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      130,
      465,
      358,
      2,
      3,
      202,
      5,
      79,
      3,
      9,
      465,
      24,
      3,
      14,
      32
    ],
    "code_indx_copy": [
      39,
      22,
      40,
      1,
      524,
      8,
      29,
      8,
      37,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      40,
      1,
      524,
      8,
      29,
      8,
      37,
      17
    ]
  },
  {
    "intent": [
      "replace",
      "repeated",
      "instances",
      "of",
      "str_0",
      "with",
      "a",
      "single",
      "instance",
      "of",
      "str_0"
    ],
    "code": [
      "re",
      ".",
      "sub",
      "(",
      "'\\\\*+'",
      ",",
      "'str_1'",
      ",",
      "text",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "*",
        "quote": "\"",
        "type": "str"
      },
      "str_1": {
        "value": "*",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      130,
      465,
      358,
      2,
      5,
      79,
      3,
      9,
      465,
      2,
      5
    ],
    "code_indx_copy": [
      39,
      22,
      40,
      1,
      524,
      8,
      63,
      8,
      355,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      40,
      1,
      524,
      8,
      63,
      8,
      355,
      17
    ]
  },
  {
    "intent": [
      "multiply",
      "values",
      "of",
      "dictionary",
      "var_0",
      "with",
      "their",
      "respective",
      "values",
      "in",
      "dictionary",
      "var_1"
    ],
    "code": [
      "var_0",
      "(",
      "(",
      "k",
      ",",
      "v",
      "*",
      "var_1",
      "[",
      "k",
      "]",
      ")",
      "for",
      "k",
      ",",
      "v",
      "in",
      "list",
      "(",
      "dict1",
      ".",
      "items",
      "(",
      ")",
      ")",
      "if",
      "k",
      "in",
      "var_1",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "dict",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "dict2",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      396,
      20,
      2,
      25,
      26,
      79,
      294,
      355,
      20,
      24,
      25,
      63
    ],
    "code_indx_copy": [
      34,
      1,
      1,
      89,
      8,
      90,
      3,
      91,
      12,
      89,
      16,
      17,
      7,
      89,
      8,
      90,
      9,
      33,
      1,
      524,
      22,
      35,
      1,
      17,
      17,
      67,
      89,
      9,
      91,
      17
    ],
    "code_indx_nocopy": [
      34,
      1,
      1,
      89,
      8,
      90,
      3,
      91,
      12,
      89,
      16,
      17,
      7,
      89,
      8,
      90,
      9,
      33,
      1,
      524,
      22,
      35,
      1,
      17,
      17,
      67,
      89,
      9,
      91,
      17
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "random",
      "string",
      "of",
      "length",
      "var_0"
    ],
    "code": [
      "return",
      "''",
      ".",
      "join",
      "(",
      "random",
      ".",
      "choice",
      "(",
      "string",
      ".",
      "lowercase",
      ")",
      "for",
      "i",
      "in",
      "range",
      "(",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "length",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      3,
      190,
      14,
      2,
      209,
      26
    ],
    "code_indx_copy": [
      118,
      21,
      22,
      23,
      1,
      148,
      22,
      210,
      1,
      64,
      22,
      524,
      17,
      7,
      6,
      9,
      104,
      1,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      118,
      21,
      22,
      23,
      1,
      148,
      22,
      210,
      1,
      64,
      22,
      524,
      17,
      7,
      6,
      9,
      104,
      1,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "total",
      "number",
      "of",
      "values",
      "in",
      "a",
      "nested",
      "dictionary",
      "var_0"
    ],
    "code": [
      "sum",
      "(",
      "len",
      "(",
      "x",
      ")",
      "for",
      "x",
      "in",
      "list",
      "(",
      "var_0",
      ".",
      "values",
      "(",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "food_colors",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      465,
      76,
      2,
      20,
      24,
      3,
      154,
      25,
      26
    ],
    "code_indx_copy": [
      0,
      1,
      32,
      1,
      26,
      17,
      7,
      26,
      9,
      33,
      1,
      34,
      22,
      166,
      1,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      0,
      1,
      32,
      1,
      26,
      17,
      7,
      26,
      9,
      33,
      1,
      34,
      22,
      166,
      1,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "count",
      "all",
      "elements",
      "in",
      "a",
      "nested",
      "dictionary",
      "var_0"
    ],
    "code": [
      "sum",
      "(",
      "len",
      "(",
      "v",
      ")",
      "for",
      "v",
      "in",
      "var_0",
      ".",
      "values",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "food_colors",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      203,
      38,
      1,
      24,
      3,
      154,
      25,
      26
    ],
    "code_indx_copy": [
      0,
      1,
      32,
      1,
      90,
      17,
      7,
      90,
      9,
      34,
      22,
      166,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      0,
      1,
      32,
      1,
      90,
      17,
      7,
      90,
      9,
      34,
      22,
      166,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "apply",
      "logical",
      "operator",
      "str_0",
      "to",
      "all",
      "elements",
      "in",
      "list",
      "var_0"
    ],
    "code": [
      "all",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "AND",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "a_list",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      401,
      457,
      465,
      5,
      8,
      38,
      1,
      24,
      4,
      26
    ],
    "code_indx_copy": [
      77,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      77,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "removing",
      "vowel",
      "characters",
      "str_0",
      "from",
      "string",
      "var_0"
    ],
    "code": [
      "\"\"\"\"\"\"",
      ".",
      "join",
      "(",
      "c",
      "for",
      "c",
      "in",
      "var_0",
      "if",
      "c",
      "not",
      "in",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "aeiouAEIOU",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "text",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      99,
      465,
      98,
      5,
      58,
      14,
      26
    ],
    "code_indx_copy": [
      287,
      22,
      23,
      1,
      66,
      7,
      66,
      9,
      34,
      67,
      66,
      281,
      9,
      29,
      17
    ],
    "code_indx_nocopy": [
      287,
      22,
      23,
      1,
      66,
      7,
      66,
      9,
      34,
      67,
      66,
      281,
      9,
      29,
      17
    ]
  },
  {
    "intent": [
      "divide",
      "elements",
      "in",
      "list",
      "var_0",
      "from",
      "elements",
      "at",
      "the",
      "same",
      "index",
      "in",
      "list",
      "var_1"
    ],
    "code": [
      "[",
      "(",
      "x",
      "/",
      "y",
      ")",
      "for",
      "x",
      ",",
      "y",
      "in",
      "zip",
      "(",
      "var_0",
      ",",
      "var_1",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "b",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      127,
      1,
      24,
      4,
      26,
      58,
      1,
      35,
      18,
      36,
      37,
      24,
      4,
      63
    ],
    "code_indx_copy": [
      12,
      1,
      26,
      31,
      103,
      17,
      7,
      26,
      8,
      103,
      9,
      36,
      1,
      34,
      8,
      91,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      1,
      26,
      31,
      103,
      17,
      7,
      26,
      8,
      103,
      9,
      36,
      1,
      34,
      8,
      91,
      17,
      16
    ]
  },
  {
    "intent": [
      "match",
      "regex",
      "str_0",
      "on",
      "string",
      "str_1"
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'str_0'",
      ",",
      "'str_1'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "abc(de)fg(123)",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "abcdefg123 and again abcdefg123",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      144,
      40,
      5,
      139,
      14,
      32
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      29,
      8,
      63,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      29,
      8,
      63,
      17
    ]
  },
  {
    "intent": [
      "apply",
      "function",
      "var_0",
      "to",
      "the",
      "grouped",
      "values",
      "by",
      "str_0",
      "in",
      "dataframe",
      "var_1"
    ],
    "code": [
      "var_1",
      ".",
      "groupby",
      "(",
      "'str_0'",
      ")",
      ".",
      "apply",
      "(",
      "lambda",
      "x",
      ":",
      "np",
      ".",
      "mean",
      "(",
      "np",
      ".",
      "var_0",
      "(",
      "x",
      "[",
      "'v'",
      "]",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "log2",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "type",
        "quote": "'",
        "type": "str"
      },
      "var_1": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      401,
      69,
      26,
      8,
      18,
      114,
      20,
      44,
      5,
      24,
      43,
      63
    ],
    "code_indx_copy": [
      91,
      22,
      157,
      1,
      29,
      17,
      22,
      59,
      1,
      44,
      26,
      13,
      74,
      22,
      390,
      1,
      74,
      22,
      34,
      1,
      26,
      12,
      524,
      16,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      91,
      22,
      157,
      1,
      29,
      17,
      22,
      59,
      1,
      44,
      26,
      13,
      74,
      22,
      390,
      1,
      74,
      22,
      34,
      1,
      26,
      12,
      524,
      16,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "geys",
      "of",
      "dictionary",
      "var_0",
      "that",
      "contain",
      "any",
      "values",
      "from",
      "list",
      "var_1"
    ],
    "code": [
      "[",
      "key",
      "for",
      "key",
      ",",
      "value",
      "in",
      "list",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      "if",
      "set",
      "(",
      "value",
      ")",
      ".",
      "intersection",
      "(",
      "var_1",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "my_dict",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "lst",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      465,
      2,
      25,
      26,
      195,
      325,
      272,
      20,
      58,
      4,
      63
    ],
    "code_indx_copy": [
      12,
      102,
      7,
      102,
      8,
      151,
      9,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      67,
      189,
      1,
      151,
      17,
      22,
      270,
      1,
      91,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      102,
      7,
      102,
      8,
      151,
      9,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      67,
      189,
      1,
      151,
      17,
      22,
      270,
      1,
      91,
      17,
      16
    ]
  },
  {
    "intent": [
      "get",
      "list",
      "of",
      "keys",
      "in",
      "dictionary",
      "var_0",
      "whose",
      "values",
      "contain",
      "values",
      "from",
      "list",
      "var_1"
    ],
    "code": [
      "[",
      "key",
      "for",
      "item",
      "in",
      "var_1",
      "for",
      "key",
      ",",
      "value",
      "in",
      "list",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      "if",
      "item",
      "in",
      "value",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "my_dict",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "lst",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      4,
      2,
      206,
      24,
      25,
      26,
      228,
      20,
      325,
      20,
      58,
      4,
      63
    ],
    "code_indx_copy": [
      12,
      102,
      7,
      387,
      9,
      91,
      7,
      102,
      8,
      151,
      9,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      67,
      387,
      9,
      151,
      16
    ],
    "code_indx_nocopy": [
      12,
      102,
      7,
      387,
      9,
      91,
      7,
      102,
      8,
      151,
      9,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      67,
      387,
      9,
      151,
      16
    ]
  },
  {
    "intent": [
      "sum",
      "elements",
      "of",
      "tuple",
      "var_0",
      "to",
      "their",
      "respective",
      "elements",
      "of",
      "each",
      "tuple",
      "in",
      "list",
      "var_1"
    ],
    "code": [
      "c",
      "=",
      "[",
      "[",
      "(",
      "i",
      "+",
      "j",
      ")",
      "for",
      "i",
      ",",
      "j",
      "in",
      "zip",
      "(",
      "e",
      ",",
      "var_0",
      ")",
      "]",
      "for",
      "e",
      "in",
      "var_1",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "b",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      112,
      1,
      2,
      113,
      26,
      8,
      294,
      355,
      1,
      2,
      22,
      113,
      24,
      4,
      63
    ],
    "code_indx_copy": [
      66,
      19,
      12,
      12,
      1,
      6,
      96,
      30,
      17,
      7,
      6,
      8,
      30,
      9,
      36,
      1,
      420,
      8,
      34,
      17,
      16,
      7,
      420,
      9,
      91,
      16
    ],
    "code_indx_nocopy": [
      66,
      19,
      12,
      12,
      1,
      6,
      96,
      30,
      17,
      7,
      6,
      8,
      30,
      9,
      36,
      1,
      420,
      8,
      34,
      17,
      16,
      7,
      420,
      9,
      91,
      16
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "common",
      "prefix",
      "from",
      "comparing",
      "two",
      "absolute",
      "paths",
      "str_0",
      "and",
      "str_1"
    ],
    "code": [
      "os",
      ".",
      "path",
      ".",
      "commonprefix",
      "(",
      "[",
      "'str_0'",
      ",",
      "'str_1'",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "/usr/var",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "/usr/var2/log",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      18,
      465,
      465,
      58,
      465,
      29,
      465,
      465,
      5,
      31,
      32
    ],
    "code_indx_copy": [
      113,
      22,
      114,
      22,
      524,
      1,
      12,
      29,
      8,
      63,
      16,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      114,
      22,
      524,
      1,
      12,
      29,
      8,
      63,
      16,
      17
    ]
  },
  {
    "intent": [
      "get",
      "relative",
      "path",
      "of",
      "path",
      "str_0",
      "regarding",
      "path",
      "str_1"
    ],
    "code": [
      "print",
      "(",
      "os",
      ".",
      "path",
      ".",
      "relpath",
      "(",
      "'str_1'",
      ",",
      "'str_0'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "/usr/var",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "/usr/var/log/",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      465,
      199,
      2,
      199,
      5,
      465,
      199,
      32
    ],
    "code_indx_copy": [
      49,
      1,
      113,
      22,
      114,
      22,
      524,
      1,
      63,
      8,
      29,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      113,
      22,
      114,
      22,
      524,
      1,
      63,
      8,
      29,
      17,
      17
    ]
  },
  {
    "intent": [
      "filter",
      "dataframe",
      "var_0",
      "where",
      "the",
      "length",
      "of",
      "each",
      "group",
      "var_1",
      "is",
      "bigger",
      "than",
      "1"
    ],
    "code": [
      "var_0",
      ".",
      "filter",
      "(",
      "lambda",
      "var_1",
      ":",
      "len",
      "(",
      "var_1",
      ")",
      ">",
      "1",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "grouped",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "x",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      217,
      43,
      26,
      155,
      18,
      209,
      2,
      22,
      383,
      63,
      152,
      263,
      264,
      237
    ],
    "code_indx_copy": [
      34,
      22,
      79,
      1,
      44,
      91,
      13,
      32,
      1,
      91,
      17,
      214,
      15,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      79,
      1,
      44,
      91,
      13,
      32,
      1,
      91,
      17,
      214,
      15,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "dictionary",
      "of",
      "lists",
      "var_0",
      "by",
      "the",
      "third",
      "item",
      "in",
      "each",
      "list"
    ],
    "code": [
      "sorted",
      "(",
      "list",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      ",",
      "key",
      "=",
      "lambda",
      "e",
      ":",
      "e",
      "[",
      "1",
      "]",
      "[",
      "2",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "myDict",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      25,
      2,
      30,
      26,
      44,
      18,
      120,
      156,
      24,
      22,
      4
    ],
    "code_indx_copy": [
      101,
      1,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      8,
      102,
      19,
      44,
      420,
      13,
      420,
      12,
      15,
      16,
      12,
      82,
      16,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      8,
      102,
      19,
      44,
      420,
      13,
      420,
      12,
      15,
      16,
      12,
      82,
      16,
      17
    ]
  },
  {
    "intent": [
      "format",
      "string",
      "str_0",
      "to",
      "be",
      "interspersed",
      "by",
      "var_0",
      "three",
      "times",
      ",",
      "specifying",
      "the",
      "value",
      "as",
      "var_1",
      "only",
      "once"
    ],
    "code": [
      "\"\"\"str_0\"\"\"",
      ".",
      "format",
      "(",
      "var_0",
      "=",
      "'var_1'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "hello {name}, how are you {name}, welcome {name}",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "name",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "john",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      16,
      14,
      5,
      8,
      362,
      465,
      44,
      26,
      240,
      442,
      62,
      465,
      18,
      143,
      90,
      63,
      352,
      465
    ],
    "code_indx_copy": [
      212,
      22,
      38,
      1,
      34,
      19,
      57,
      17
    ],
    "code_indx_nocopy": [
      212,
      22,
      38,
      1,
      34,
      19,
      57,
      17
    ]
  },
  {
    "intent": [
      "reorder",
      "indexed",
      "rows",
      "str_0",
      "based",
      "on",
      "a",
      "list",
      "in",
      "pandas",
      "data",
      "frame",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "reindex",
      "(",
      "[",
      "str_0",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "['Z', 'C', 'A']",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "[str_0]": {
        "value": "['Z', 'C', 'A']",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      465,
      80,
      5,
      208,
      139,
      3,
      4,
      24,
      42,
      65,
      66,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      524,
      1,
      12,
      11,
      16,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      524,
      1,
      12,
      11,
      16,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "any",
      "values",
      "in",
      "a",
      "list",
      "var_0",
      "is",
      "a",
      "list"
    ],
    "code": [
      "any",
      "(",
      "isinstance",
      "(",
      "el",
      ",",
      "list",
      ")",
      "for",
      "el",
      "in",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "input_list",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      234,
      150,
      272,
      20,
      24,
      3,
      4,
      26,
      152,
      3,
      4
    ],
    "code_indx_copy": [
      269,
      1,
      206,
      1,
      329,
      8,
      33,
      17,
      7,
      329,
      9,
      34,
      17
    ],
    "code_indx_nocopy": [
      269,
      1,
      206,
      1,
      329,
      8,
      33,
      17,
      7,
      329,
      9,
      34,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "size",
      "of",
      "list",
      "var_0"
    ],
    "code": [
      "len",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "items",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      18,
      334,
      2,
      4,
      26
    ],
    "code_indx_copy": [
      32,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      32,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "size",
      "of",
      "a",
      "list",
      "str_0"
    ],
    "code": [
      "len",
      "(",
      "[",
      "1",
      ",",
      "2",
      ",",
      "3",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "[1,2,3]",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "[1,2,3]",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      18,
      334,
      2,
      3,
      4,
      5
    ],
    "code_indx_copy": [
      32,
      1,
      12,
      15,
      8,
      82,
      8,
      54,
      16,
      17
    ],
    "code_indx_nocopy": [
      32,
      1,
      12,
      15,
      8,
      82,
      8,
      54,
      16,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "size",
      "of",
      "object",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "__len__",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "items",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      18,
      334,
      2,
      15,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      524,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      524,
      1,
      17
    ]
  },
  {
    "intent": [
      "function",
      "to",
      "get",
      "the",
      "size",
      "of",
      "object"
    ],
    "code": [
      "len",
      "(",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      69,
      8,
      17,
      18,
      334,
      2,
      15
    ],
    "code_indx_copy": [
      32,
      1,
      17
    ],
    "code_indx_nocopy": [
      32,
      1,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "size",
      "of",
      "list",
      "var_0"
    ],
    "code": [
      "len",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      18,
      334,
      2,
      4,
      26
    ],
    "code_indx_copy": [
      32,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      32,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "each",
      "row",
      "in",
      "a",
      "pandas",
      "dataframe",
      "var_0",
      "in",
      "descending",
      "order"
    ],
    "code": [
      "var_0",
      ".",
      "sort",
      "(",
      "axis",
      "=",
      "1",
      ",",
      "ascending",
      "=",
      "False",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      22,
      45,
      24,
      3,
      42,
      43,
      26,
      24,
      121,
      162
    ],
    "code_indx_copy": [
      34,
      22,
      124,
      1,
      42,
      19,
      15,
      8,
      278,
      19,
      87,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      124,
      1,
      42,
      19,
      15,
      8,
      278,
      19,
      87,
      17
    ]
  },
  {
    "intent": [
      "fastest",
      "way",
      "to",
      "sort",
      "each",
      "row",
      "in",
      "a",
      "pandas",
      "dataframe"
    ],
    "code": [
      "df",
      ".",
      "sort",
      "(",
      "df",
      ".",
      "columns",
      ",",
      "axis",
      "=",
      "1",
      ",",
      "ascending",
      "=",
      "False",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      465,
      449,
      8,
      117,
      22,
      45,
      24,
      3,
      42,
      43
    ],
    "code_indx_copy": [
      149,
      22,
      124,
      1,
      149,
      22,
      192,
      8,
      42,
      19,
      15,
      8,
      278,
      19,
      87,
      17
    ],
    "code_indx_nocopy": [
      149,
      22,
      124,
      1,
      149,
      22,
      192,
      8,
      42,
      19,
      15,
      8,
      278,
      19,
      87,
      17
    ]
  },
  {
    "intent": [
      "get",
      "count",
      "of",
      "rows",
      "in",
      "each",
      "series",
      "grouped",
      "by",
      "column",
      "str_0",
      "and",
      "column",
      "str_1",
      "of",
      "dataframe",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "groupby",
      "(",
      "[",
      "'str_0'",
      ",",
      "'str_1'",
      "]",
      ")",
      ".",
      "size",
      "(",
      ")",
      ".",
      "groupby",
      "(",
      "level",
      "=",
      "1",
      ")",
      ".",
      "max",
      "(",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "col5",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "col2",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      203,
      2,
      80,
      24,
      22,
      339,
      114,
      44,
      147,
      5,
      31,
      147,
      32,
      2,
      43,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      157,
      1,
      12,
      29,
      8,
      63,
      16,
      17,
      22,
      374,
      1,
      17,
      22,
      157,
      1,
      158,
      19,
      15,
      17,
      22,
      179,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      157,
      1,
      12,
      29,
      8,
      63,
      16,
      17,
      22,
      374,
      1,
      17,
      22,
      157,
      1,
      158,
      19,
      15,
      17,
      22,
      179,
      1,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "string",
      "str_0",
      "is",
      "in",
      "list",
      "`",
      "[",
      "str_0",
      ",",
      "'d",
      "'",
      ",",
      "'a",
      "'",
      ",",
      "'s",
      "'",
      ",",
      "'d",
      "'",
      ",",
      "'s",
      "'",
      "]",
      "`"
    ],
    "code": [
      "'str_0'",
      "in",
      "[",
      "'str_0'",
      ",",
      "'d'",
      ",",
      "'a'",
      ",",
      "'s'",
      ",",
      "'d'",
      ",",
      "'s'",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "x",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "['x', 'd', 'a', 's', 'd', 's']",
        "quote": "`",
        "type": "str"
      },
      "[str_1]": {
        "value": "['x', 'd', 'a', 's', 'd', 's']",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      234,
      150,
      14,
      5,
      152,
      24,
      4,
      345,
      218,
      5,
      62,
      465,
      310,
      62,
      465,
      310,
      62,
      266,
      310,
      62,
      465,
      310,
      62,
      266,
      310,
      220,
      345
    ],
    "code_indx_copy": [
      29,
      9,
      12,
      29,
      8,
      438,
      8,
      413,
      8,
      469,
      8,
      438,
      8,
      469,
      16
    ],
    "code_indx_nocopy": [
      29,
      9,
      12,
      29,
      8,
      438,
      8,
      413,
      8,
      469,
      8,
      438,
      8,
      469,
      16
    ]
  },
  {
    "intent": [
      "delete",
      "an",
      "item",
      "with",
      "key",
      "str_0",
      "from",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "pop",
      "(",
      "'str_0'",
      ",",
      "None",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "key",
        "quote": "\"",
        "type": "str"
      },
      "var_0": {
        "value": "mydict",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      86,
      225,
      156,
      79,
      23,
      5,
      58,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      228,
      1,
      29,
      8,
      209,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      228,
      1,
      29,
      8,
      209,
      17
    ]
  },
  {
    "intent": [
      "delete",
      "an",
      "item",
      "with",
      "key",
      "var_0",
      "from",
      "var_1"
    ],
    "code": [
      "del",
      "var_1",
      "[",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "key",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "mydict",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      86,
      225,
      156,
      79,
      23,
      26,
      58,
      63
    ],
    "code_indx_copy": [
      283,
      91,
      12,
      34,
      16
    ],
    "code_indx_nocopy": [
      283,
      91,
      12,
      34,
      16
    ]
  },
  {
    "intent": [
      "delete",
      "an",
      "item",
      "with",
      "key",
      "var_0",
      "from",
      "var_1"
    ],
    "code": [
      "try",
      ":",
      "\n",
      "    ",
      "del",
      "var_1",
      "[",
      "var_0",
      "]",
      "\n",
      "",
      "except",
      "KeyError",
      ":",
      "\n",
      "    ",
      "pass",
      "\n",
      "",
      "try",
      ":",
      "\n",
      "    ",
      "del",
      "var_1",
      "[",
      "var_0",
      "]",
      "\n",
      "",
      "except",
      "KeyError",
      ":",
      "\n",
      "    ",
      "pass",
      ""
    ],
    "slot_map": {
      "var_0": {
        "value": "key",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "mydict",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      86,
      225,
      156,
      79,
      23,
      26,
      58,
      63
    ],
    "code_indx_copy": [
      338,
      13,
      161,
      216,
      283,
      91,
      12,
      34,
      16,
      161,
      218,
      339,
      524,
      13,
      161,
      216,
      217,
      161,
      218,
      338,
      13,
      161,
      216,
      283,
      91,
      12,
      34,
      16,
      161,
      218,
      339,
      524,
      13,
      161,
      216,
      217,
      218
    ],
    "code_indx_nocopy": [
      338,
      13,
      161,
      216,
      283,
      91,
      12,
      34,
      16,
      161,
      218,
      339,
      524,
      13,
      161,
      216,
      217,
      161,
      218,
      338,
      13,
      161,
      216,
      283,
      91,
      12,
      34,
      16,
      161,
      218,
      339,
      524,
      13,
      161,
      216,
      217,
      218
    ]
  },
  {
    "intent": [
      "specify",
      "multiple",
      "positional",
      "arguments",
      "with",
      "argparse"
    ],
    "code": [
      "parser",
      ".",
      "add_argument",
      "(",
      "'input'",
      ",",
      "nargs",
      "=",
      "'+'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      465,
      6,
      465,
      305,
      79,
      465
    ],
    "code_indx_copy": [
      376,
      22,
      460,
      1,
      524,
      8,
      461,
      19,
      524,
      17
    ],
    "code_indx_nocopy": [
      376,
      22,
      460,
      1,
      524,
      8,
      461,
      19,
      524,
      17
    ]
  },
  {
    "intent": [
      "plot",
      "using",
      "the",
      "color",
      "code",
      "str_0",
      "in",
      "matplotlib",
      "pyplot"
    ],
    "code": [
      "pyplot",
      ".",
      "plot",
      "(",
      "x",
      ",",
      "y",
      ",",
      "color",
      "=",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "#112233",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      244,
      109,
      18,
      222,
      293,
      5,
      24,
      350,
      319
    ],
    "code_indx_copy": [
      536,
      22,
      290,
      1,
      26,
      8,
      103,
      8,
      292,
      19,
      29,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      290,
      1,
      26,
      8,
      103,
      8,
      292,
      19,
      29,
      17
    ]
  },
  {
    "intent": [
      "strip",
      "html",
      "from",
      "strings"
    ],
    "code": [
      "re",
      ".",
      "sub",
      "(",
      "'<[^<]+?>'",
      ",",
      "''",
      ",",
      "text",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      331,
      307,
      58,
      259
    ],
    "code_indx_copy": [
      39,
      22,
      40,
      1,
      524,
      8,
      21,
      8,
      355,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      40,
      1,
      524,
      8,
      21,
      8,
      355,
      17
    ]
  },
  {
    "intent": [
      "align",
      "values",
      "in",
      "array",
      "var_0",
      "to",
      "the",
      "order",
      "of",
      "corresponding",
      "values",
      "in",
      "array",
      "var_1"
    ],
    "code": [
      "var_1",
      "[",
      "np",
      ".",
      "in1d",
      "(",
      "var_1",
      ",",
      "var_0",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "b",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      20,
      24,
      85,
      26,
      8,
      18,
      162,
      2,
      347,
      20,
      24,
      85,
      63
    ],
    "code_indx_copy": [
      91,
      12,
      74,
      22,
      261,
      1,
      91,
      8,
      34,
      17,
      16
    ],
    "code_indx_nocopy": [
      91,
      12,
      74,
      22,
      261,
      1,
      91,
      8,
      34,
      17,
      16
    ]
  },
  {
    "intent": [
      "split",
      "string",
      "str_0",
      "on",
      "the",
      "first",
      "occurrence",
      "of",
      "delimiter",
      "str_1"
    ],
    "code": [
      "\"\"\"str_0\"\"\"",
      ".",
      "split",
      "(",
      "'str_1'",
      ",",
      "1",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "jvm.args= -Dappdynamics.com=true, -Dsomeotherparam=false,",
        "quote": "\"",
        "type": "str"
      },
      "str_1": {
        "value": "=",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      138,
      14,
      5,
      139,
      18,
      151,
      364,
      2,
      329,
      32
    ],
    "code_indx_copy": [
      212,
      22,
      71,
      1,
      63,
      8,
      15,
      17
    ],
    "code_indx_nocopy": [
      212,
      22,
      71,
      1,
      63,
      8,
      15,
      17
    ]
  },
  {
    "intent": [
      "print",
      "numbers",
      "in",
      "list",
      "var_0",
      "with",
      "precision",
      "of",
      "3",
      "decimal",
      "places"
    ],
    "code": [
      "print",
      "(",
      "'[%s]'",
      "%",
      "', '",
      ".",
      "join",
      "(",
      "'%.3f'",
      "%",
      "val",
      "for",
      "val",
      "in",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "list",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      166,
      97,
      24,
      4,
      26,
      79,
      465,
      2,
      57,
      255,
      256
    ],
    "code_indx_copy": [
      49,
      1,
      524,
      117,
      419,
      22,
      23,
      1,
      524,
      117,
      176,
      7,
      176,
      9,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      524,
      117,
      419,
      22,
      23,
      1,
      524,
      117,
      176,
      7,
      176,
      9,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "format",
      "print",
      "output",
      "of",
      "list",
      "of",
      "floats",
      "var_0",
      "to",
      "print",
      "only",
      "up",
      "to",
      "3",
      "decimal",
      "points"
    ],
    "code": [
      "print",
      "(",
      "'['",
      "+",
      "', '",
      ".",
      "join",
      "(",
      "'%5.3f'",
      "%",
      "v",
      "for",
      "v",
      "in",
      "var_0",
      ")",
      "+",
      "']'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "l",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      16,
      166,
      257,
      2,
      4,
      2,
      301,
      26,
      8,
      166,
      352,
      379,
      8,
      57,
      255,
      318
    ],
    "code_indx_copy": [
      49,
      1,
      524,
      96,
      419,
      22,
      23,
      1,
      524,
      117,
      90,
      7,
      90,
      9,
      34,
      17,
      96,
      524,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      524,
      96,
      419,
      22,
      23,
      1,
      524,
      117,
      90,
      7,
      90,
      9,
      34,
      17,
      96,
      524,
      17
    ]
  },
  {
    "intent": [
      "print",
      "a",
      "list",
      "of",
      "floating",
      "numbers",
      "var_0",
      "using",
      "string",
      "formatting"
    ],
    "code": [
      "print",
      "(",
      "[",
      "(",
      "'%5.3f'",
      "%",
      "val",
      ")",
      "for",
      "val",
      "in",
      "var_0",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "l",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      166,
      3,
      4,
      2,
      270,
      97,
      26,
      109,
      14,
      167
    ],
    "code_indx_copy": [
      49,
      1,
      12,
      1,
      524,
      117,
      176,
      17,
      7,
      176,
      9,
      34,
      16,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      12,
      1,
      524,
      117,
      176,
      17,
      7,
      176,
      9,
      34,
      16,
      17
    ]
  },
  {
    "intent": [
      "change",
      "the",
      "current",
      "directory",
      "one",
      "level",
      "up"
    ],
    "code": [
      "os",
      ".",
      "chdir",
      "(",
      "'..'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      221,
      18,
      179,
      175,
      303,
      238,
      379
    ],
    "code_indx_copy": [
      113,
      22,
      445,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      445,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "print",
      "a",
      "unicode",
      "string",
      "var_0"
    ],
    "code": [
      "print",
      "(",
      "var_0",
      ".",
      "encode",
      "(",
      "'windows-1252'",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "text",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      166,
      3,
      230,
      14,
      26
    ],
    "code_indx_copy": [
      49,
      1,
      34,
      22,
      239,
      1,
      524,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      34,
      22,
      239,
      1,
      524,
      17,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "string",
      "representation",
      "var_0",
      "of",
      "binary",
      "string",
      "rep",
      "of",
      "integer",
      "to",
      "floating",
      "point",
      "number"
    ],
    "code": [
      "struct",
      ".",
      "unpack",
      "(",
      "'d'",
      ",",
      "struct",
      ".",
      "pack",
      "(",
      "'Q'",
      ",",
      "int",
      "(",
      "var_0",
      ",",
      "0",
      ")",
      ")",
      ")",
      "[",
      "0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "s2",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      14,
      465,
      26,
      2,
      276,
      14,
      465,
      2,
      10,
      8,
      270,
      271,
      76
    ],
    "code_indx_copy": [
      317,
      22,
      406,
      1,
      438,
      8,
      317,
      22,
      318,
      1,
      524,
      8,
      20,
      1,
      34,
      8,
      43,
      17,
      17,
      17,
      12,
      43,
      16
    ],
    "code_indx_nocopy": [
      317,
      22,
      406,
      1,
      438,
      8,
      317,
      22,
      318,
      1,
      524,
      8,
      20,
      1,
      34,
      8,
      43,
      17,
      17,
      17,
      12,
      43,
      16
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "binary",
      "str_0",
      "to",
      "a",
      "float",
      "number"
    ],
    "code": [
      "float",
      "(",
      "int",
      "(",
      "'str_0'",
      ",",
      "0",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "-0b1110",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      3,
      276,
      5,
      8,
      3,
      94,
      76
    ],
    "code_indx_copy": [
      225,
      1,
      20,
      1,
      29,
      8,
      43,
      17,
      17
    ],
    "code_indx_nocopy": [
      225,
      1,
      20,
      1,
      29,
      8,
      43,
      17,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "binary",
      "var_0",
      "to",
      "a",
      "float",
      "number"
    ],
    "code": [
      "struct",
      ".",
      "unpack",
      "(",
      "'d'",
      ",",
      "var_0",
      ")",
      "[",
      "0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "b8",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      3,
      276,
      26,
      8,
      3,
      94,
      76
    ],
    "code_indx_copy": [
      317,
      22,
      406,
      1,
      438,
      8,
      34,
      17,
      12,
      43,
      16
    ],
    "code_indx_nocopy": [
      317,
      22,
      406,
      1,
      438,
      8,
      34,
      17,
      12,
      43,
      16
    ]
  },
  {
    "intent": [
      "plot",
      "a",
      "bar",
      "graph",
      "from",
      "the",
      "column",
      "str_0",
      "in",
      "the",
      "dataframe",
      "str_1"
    ],
    "code": [
      "str_1",
      ".",
      "colour",
      ".",
      "value_counts",
      "(",
      ")",
      ".",
      "plot",
      "(",
      "kind",
      "=",
      "'bar'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "color",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "df",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      244,
      3,
      465,
      465,
      58,
      18,
      147,
      5,
      24,
      18,
      43,
      32
    ],
    "code_indx_copy": [
      37,
      22,
      524,
      22,
      524,
      1,
      17,
      22,
      290,
      1,
      524,
      19,
      485,
      17
    ],
    "code_indx_nocopy": [
      37,
      22,
      524,
      22,
      524,
      1,
      17,
      22,
      290,
      1,
      524,
      19,
      485,
      17
    ]
  },
  {
    "intent": [
      "plot",
      "categorical",
      "data",
      "in",
      "series",
      "var_0",
      "with",
      "kind",
      "var_1",
      "using",
      "pandas",
      "and",
      "matplotlib"
    ],
    "code": [
      "var_0",
      ".",
      "groupby",
      "(",
      "'colour'",
      ")",
      ".",
      "size",
      "(",
      ")",
      ".",
      "plot",
      "(",
      "kind",
      "=",
      "'var_1'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "bar",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      244,
      465,
      65,
      24,
      339,
      26,
      79,
      465,
      63,
      109,
      42,
      31,
      350
    ],
    "code_indx_copy": [
      34,
      22,
      157,
      1,
      524,
      17,
      22,
      374,
      1,
      17,
      22,
      290,
      1,
      535,
      19,
      57,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      157,
      1,
      524,
      17,
      22,
      374,
      1,
      17,
      22,
      290,
      1,
      524,
      19,
      57,
      17
    ]
  },
  {
    "intent": [
      "strip",
      "and",
      "split",
      "each",
      "line",
      "var_0",
      "on",
      "white",
      "spaces"
    ],
    "code": [
      "var_0",
      ".",
      "strip",
      "(",
      ")",
      ".",
      "split",
      "(",
      "' '",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "line",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      331,
      31,
      138,
      22,
      172,
      26,
      139,
      131,
      132
    ],
    "code_indx_copy": [
      34,
      22,
      170,
      1,
      17,
      22,
      71,
      1,
      108,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      170,
      1,
      17,
      22,
      71,
      1,
      108,
      17
    ]
  },
  {
    "intent": [
      "apply",
      "functions",
      "var_0",
      "and",
      "var_1",
      "to",
      "each",
      "column",
      "in",
      "dataframe",
      "var_2"
    ],
    "code": [
      "var_2",
      ".",
      "groupby",
      "(",
      "lambda",
      "idx",
      ":",
      "0",
      ")",
      ".",
      "agg",
      "(",
      "[",
      "'var_0'",
      ",",
      "'var_1'",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "mean",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "std",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      401,
      465,
      26,
      31,
      63,
      8,
      22,
      147,
      24,
      43,
      64
    ],
    "code_indx_copy": [
      94,
      22,
      157,
      1,
      44,
      524,
      13,
      43,
      17,
      22,
      159,
      1,
      12,
      56,
      8,
      57,
      16,
      17
    ],
    "code_indx_nocopy": [
      94,
      22,
      157,
      1,
      44,
      524,
      13,
      43,
      17,
      22,
      159,
      1,
      12,
      56,
      8,
      57,
      16,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "dictionary",
      "var_0",
      "in",
      "reverse",
      "order",
      "by",
      "values",
      "cast",
      "to",
      "integers"
    ],
    "code": [
      "sorted",
      "(",
      "list",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      ",",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "int",
      "(",
      "x",
      "[",
      "1",
      "]",
      ")",
      ",",
      "reverse",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "tag_weight",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      25,
      26,
      24,
      282,
      162,
      44,
      20,
      465,
      8,
      7
    ],
    "code_indx_copy": [
      101,
      1,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      8,
      102,
      19,
      44,
      26,
      13,
      20,
      1,
      26,
      12,
      15,
      16,
      17,
      8,
      129,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      8,
      102,
      19,
      44,
      26,
      13,
      20,
      1,
      26,
      12,
      15,
      16,
      17,
      8,
      129,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "find",
      "the",
      "largest",
      "integer",
      "less",
      "than",
      "var_0"
    ],
    "code": [
      "int",
      "(",
      "math",
      ".",
      "ceil",
      "(",
      "var_0",
      ")",
      ")",
      "-",
      "1"
    ],
    "slot_map": {
      "var_0": {
        "value": "x",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      47,
      18,
      438,
      10,
      465,
      264,
      26
    ],
    "code_indx_copy": [
      20,
      1,
      205,
      22,
      524,
      1,
      34,
      17,
      17,
      14,
      15
    ],
    "code_indx_nocopy": [
      20,
      1,
      205,
      22,
      524,
      1,
      34,
      17,
      17,
      14,
      15
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "the",
      "string",
      "var_0",
      "is",
      "empty"
    ],
    "code": [
      "if",
      "not",
      "var_0",
      ":",
      "\n",
      "    ",
      "pass",
      ""
    ],
    "slot_map": {
      "var_0": {
        "value": "myString",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      234,
      150,
      18,
      14,
      26,
      152,
      146
    ],
    "code_indx_copy": [
      67,
      281,
      34,
      13,
      161,
      216,
      217,
      218
    ],
    "code_indx_nocopy": [
      67,
      281,
      34,
      13,
      161,
      216,
      217,
      218
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "string",
      "var_0",
      "is",
      "empty"
    ],
    "code": [
      "if",
      "not",
      "var_0",
      ":",
      "\n",
      "    ",
      "pass",
      ""
    ],
    "slot_map": {
      "var_0": {
        "value": "some_string",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      234,
      150,
      14,
      26,
      152,
      146
    ],
    "code_indx_copy": [
      67,
      281,
      34,
      13,
      161,
      216,
      217,
      218
    ],
    "code_indx_nocopy": [
      67,
      281,
      34,
      13,
      161,
      216,
      217,
      218
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "string",
      "var_0",
      "is",
      "empty"
    ],
    "code": [
      "if",
      "not",
      "var_0",
      ":",
      "\n",
      "    ",
      "pass",
      ""
    ],
    "slot_map": {
      "var_0": {
        "value": "my_string",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      234,
      150,
      14,
      26,
      152,
      146
    ],
    "code_indx_copy": [
      67,
      281,
      34,
      13,
      161,
      216,
      217,
      218
    ],
    "code_indx_nocopy": [
      67,
      281,
      34,
      13,
      161,
      216,
      217,
      218
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "string",
      "var_0",
      "is",
      "empty"
    ],
    "code": [
      "if",
      "some_string",
      ":",
      "\n",
      "    ",
      "pass",
      ""
    ],
    "slot_map": {
      "var_0": {
        "value": "my_string",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      234,
      150,
      14,
      26,
      152,
      146
    ],
    "code_indx_copy": [
      67,
      524,
      13,
      161,
      216,
      217,
      218
    ],
    "code_indx_nocopy": [
      67,
      524,
      13,
      161,
      216,
      217,
      218
    ]
  },
  {
    "intent": [
      "iterate",
      "over",
      "a",
      "dictionary",
      "var_0",
      "in",
      "sorted",
      "order"
    ],
    "code": [
      "it",
      "=",
      "iter",
      "(",
      "sorted",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "d",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      454,
      408,
      3,
      25,
      26,
      24,
      224,
      162
    ],
    "code_indx_copy": [
      524,
      19,
      165,
      1,
      101,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      165,
      1,
      101,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "iterate",
      "over",
      "a",
      "dictionary",
      "var_0",
      "in",
      "sorted",
      "order"
    ],
    "code": [
      "for",
      "key",
      ",",
      "value",
      "in",
      "sorted",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      ":",
      "\n",
      "    ",
      "pass",
      ""
    ],
    "slot_map": {
      "var_0": {
        "value": "d",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      454,
      408,
      3,
      25,
      26,
      24,
      224,
      162
    ],
    "code_indx_copy": [
      7,
      102,
      8,
      151,
      9,
      101,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      13,
      161,
      216,
      217,
      218
    ],
    "code_indx_nocopy": [
      7,
      102,
      8,
      151,
      9,
      101,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      13,
      161,
      216,
      217,
      218
    ]
  },
  {
    "intent": [
      "iterate",
      "over",
      "a",
      "dictionary",
      "var_0",
      "in",
      "sorted",
      "order"
    ],
    "code": [
      "return",
      "sorted",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "dict",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      454,
      408,
      3,
      25,
      26,
      24,
      224,
      162
    ],
    "code_indx_copy": [
      118,
      101,
      1,
      34,
      22,
      35,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      118,
      101,
      1,
      34,
      22,
      35,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "iterate",
      "over",
      "a",
      "dictionary",
      "var_0",
      "in",
      "sorted",
      "order"
    ],
    "code": [
      "return",
      "iter",
      "(",
      "sorted",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "dict",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      454,
      408,
      3,
      25,
      26,
      24,
      224,
      162
    ],
    "code_indx_copy": [
      118,
      165,
      1,
      101,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      118,
      165,
      1,
      101,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "iterate",
      "over",
      "a",
      "dictionary",
      "var_0",
      "in",
      "sorted",
      "order"
    ],
    "code": [
      "for",
      "k",
      ",",
      "v",
      "in",
      "sorted",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      ":",
      "\n",
      "    ",
      "pass",
      ""
    ],
    "slot_map": {
      "var_0": {
        "value": "foo",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      454,
      408,
      3,
      25,
      26,
      24,
      224,
      162
    ],
    "code_indx_copy": [
      7,
      89,
      8,
      90,
      9,
      101,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      13,
      161,
      216,
      217,
      218
    ],
    "code_indx_nocopy": [
      7,
      89,
      8,
      90,
      9,
      101,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      13,
      161,
      216,
      217,
      218
    ]
  },
  {
    "intent": [
      "iterate",
      "over",
      "a",
      "dictionary",
      "var_0",
      "sorted",
      "by",
      "the",
      "key"
    ],
    "code": [
      "for",
      "k",
      "in",
      "sorted",
      "(",
      "var_0",
      ".",
      "keys",
      "(",
      ")",
      ")",
      ":",
      "\n",
      "    ",
      "pass",
      ""
    ],
    "slot_map": {
      "var_0": {
        "value": "foo",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      454,
      408,
      3,
      25,
      26,
      224,
      44,
      18,
      23
    ],
    "code_indx_copy": [
      7,
      89,
      9,
      101,
      1,
      34,
      22,
      167,
      1,
      17,
      17,
      13,
      161,
      216,
      217,
      218
    ],
    "code_indx_nocopy": [
      7,
      89,
      9,
      101,
      1,
      34,
      22,
      167,
      1,
      17,
      17,
      13,
      161,
      216,
      217,
      218
    ]
  },
  {
    "intent": [
      "assign",
      "the",
      "index",
      "of",
      "the",
      "last",
      "occurence",
      "of",
      "var_0",
      "in",
      "list",
      "var_1",
      "to",
      "the",
      "variable",
      "var_2"
    ],
    "code": [
      "var_2",
      "=",
      "len",
      "(",
      "var_1",
      ")",
      "-",
      "var_1",
      "[",
      ":",
      ":",
      "-",
      "1",
      "]",
      ".",
      "index",
      "(",
      "var_0",
      ")",
      "-",
      "1"
    ],
    "slot_map": {
      "var_0": {
        "value": "x",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "s",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "last",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      93,
      18,
      37,
      2,
      18,
      170,
      465,
      2,
      26,
      24,
      4,
      63,
      8,
      18,
      95,
      64
    ],
    "code_indx_copy": [
      94,
      19,
      32,
      1,
      91,
      17,
      14,
      91,
      12,
      13,
      13,
      14,
      15,
      16,
      22,
      160,
      1,
      34,
      17,
      14,
      15
    ],
    "code_indx_nocopy": [
      94,
      19,
      32,
      1,
      91,
      17,
      14,
      91,
      12,
      13,
      13,
      14,
      15,
      16,
      22,
      160,
      1,
      34,
      17,
      14,
      15
    ]
  },
  {
    "intent": [
      "concatenating",
      "values",
      "in",
      "var_0",
      "to",
      "a",
      "string"
    ],
    "code": [
      "str1",
      "=",
      "''",
      ".",
      "join",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "list1",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      461,
      20,
      24,
      26,
      8,
      3,
      14
    ],
    "code_indx_copy": [
      417,
      19,
      21,
      22,
      23,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      417,
      19,
      21,
      22,
      23,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "concatenating",
      "values",
      "in",
      "list",
      "var_0",
      "to",
      "a",
      "string",
      ",",
      "separate",
      "by",
      "space"
    ],
    "code": [
      "\"\"\" \"\"\"",
      ".",
      "join",
      "(",
      "str",
      "(",
      "x",
      ")",
      "for",
      "x",
      "in",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "L",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      461,
      20,
      24,
      4,
      26,
      8,
      3,
      14,
      62,
      96,
      44,
      400
    ],
    "code_indx_copy": [
      215,
      22,
      23,
      1,
      25,
      1,
      26,
      17,
      7,
      26,
      9,
      34,
      17
    ],
    "code_indx_nocopy": [
      215,
      22,
      23,
      1,
      25,
      1,
      26,
      17,
      7,
      26,
      9,
      34,
      17
    ]
  },
  {
    "intent": [
      "concatenating",
      "values",
      "in",
      "var_0",
      "to",
      "a",
      "string"
    ],
    "code": [
      "str1",
      "=",
      "''",
      ".",
      "join",
      "(",
      "str",
      "(",
      "e",
      ")",
      "for",
      "e",
      "in",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "list1",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      461,
      20,
      24,
      26,
      8,
      3,
      14
    ],
    "code_indx_copy": [
      417,
      19,
      21,
      22,
      23,
      1,
      25,
      1,
      420,
      17,
      7,
      420,
      9,
      34,
      17
    ],
    "code_indx_nocopy": [
      417,
      19,
      21,
      22,
      23,
      1,
      25,
      1,
      420,
      17,
      7,
      420,
      9,
      34,
      17
    ]
  },
  {
    "intent": [
      "concatenating",
      "values",
      "in",
      "list",
      "var_0",
      "to",
      "a",
      "string"
    ],
    "code": [
      "makeitastring",
      "=",
      "''",
      ".",
      "join",
      "(",
      "map",
      "(",
      "str",
      ",",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "L",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      461,
      20,
      24,
      4,
      26,
      8,
      3,
      14
    ],
    "code_indx_copy": [
      524,
      19,
      21,
      22,
      23,
      1,
      24,
      1,
      25,
      8,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      21,
      22,
      23,
      1,
      24,
      1,
      25,
      8,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "none",
      "value",
      "from",
      "list",
      "var_0"
    ],
    "code": [
      "[",
      "x",
      "for",
      "x",
      "in",
      "var_0",
      "if",
      "x",
      "is",
      "not",
      "None",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "L",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      465,
      143,
      58,
      4,
      26
    ],
    "code_indx_copy": [
      12,
      26,
      7,
      26,
      9,
      34,
      67,
      26,
      335,
      281,
      209,
      16
    ],
    "code_indx_nocopy": [
      12,
      26,
      7,
      26,
      9,
      34,
      67,
      26,
      335,
      281,
      209,
      16
    ]
  },
  {
    "intent": [
      "select",
      "a",
      "random",
      "element",
      "from",
      "array",
      "str_0"
    ],
    "code": [
      "random",
      ".",
      "choice",
      "(",
      "[",
      "str_0",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "[1, 2, 3]",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "[1, 2, 3]",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      78,
      3,
      190,
      49,
      58,
      85,
      5
    ],
    "code_indx_copy": [
      148,
      22,
      210,
      1,
      12,
      11,
      16,
      17
    ],
    "code_indx_nocopy": [
      148,
      22,
      210,
      1,
      12,
      11,
      16,
      17
    ]
  },
  {
    "intent": [
      "creating",
      "a",
      "5x6",
      "matrix",
      "filled",
      "with",
      "var_0",
      "and",
      "save",
      "it",
      "as",
      "var_1"
    ],
    "code": [
      "var_1",
      "=",
      "[",
      "[",
      "None",
      "for",
      "_",
      "in",
      "range",
      "(",
      "5",
      ")",
      "]",
      "for",
      "_",
      "in",
      "range",
      "(",
      "6",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "None",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "x",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      381,
      3,
      465,
      189,
      465,
      79,
      26,
      31,
      333,
      145,
      90,
      63
    ],
    "code_indx_copy": [
      91,
      19,
      12,
      12,
      209,
      7,
      470,
      9,
      104,
      1,
      185,
      17,
      16,
      7,
      470,
      9,
      104,
      1,
      249,
      17,
      16
    ],
    "code_indx_nocopy": [
      91,
      19,
      12,
      12,
      209,
      7,
      470,
      9,
      104,
      1,
      185,
      17,
      16,
      7,
      470,
      9,
      104,
      1,
      249,
      17,
      16
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "new",
      "2d",
      "array",
      "with",
      "2",
      "random",
      "rows",
      "from",
      "array",
      "var_0"
    ],
    "code": [
      "var_0",
      "[",
      "(",
      "np",
      ".",
      "random",
      ".",
      "choice",
      "(",
      "var_0",
      ".",
      "shape",
      "[",
      "0",
      "]",
      ",",
      "2",
      ",",
      "replace",
      "=",
      "False",
      ")",
      ")",
      ",",
      ":",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "A",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      148,
      3,
      192,
      236,
      85,
      79,
      82,
      190,
      80,
      58,
      85,
      26
    ],
    "code_indx_copy": [
      34,
      12,
      1,
      74,
      22,
      148,
      22,
      210,
      1,
      34,
      22,
      223,
      12,
      43,
      16,
      8,
      82,
      8,
      107,
      19,
      87,
      17,
      17,
      8,
      13,
      16
    ],
    "code_indx_nocopy": [
      34,
      12,
      1,
      74,
      22,
      148,
      22,
      210,
      1,
      34,
      22,
      223,
      12,
      43,
      16,
      8,
      82,
      8,
      107,
      19,
      87,
      17,
      17,
      8,
      13,
      16
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "new",
      "2",
      "dimensional",
      "array",
      "containing",
      "two",
      "random",
      "rows",
      "from",
      "array",
      "var_0"
    ],
    "code": [
      "var_0",
      "[",
      "(",
      "np",
      ".",
      "random",
      ".",
      "randint",
      "(",
      "var_0",
      ".",
      "shape",
      "[",
      "0",
      "]",
      ",",
      "size",
      "=",
      "2",
      ")",
      ")",
      ",",
      ":",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "A",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      148,
      3,
      192,
      82,
      83,
      85,
      34,
      29,
      190,
      80,
      58,
      85,
      26
    ],
    "code_indx_copy": [
      34,
      12,
      1,
      74,
      22,
      148,
      22,
      299,
      1,
      34,
      22,
      223,
      12,
      43,
      16,
      8,
      374,
      19,
      82,
      17,
      17,
      8,
      13,
      16
    ],
    "code_indx_nocopy": [
      34,
      12,
      1,
      74,
      22,
      148,
      22,
      299,
      1,
      34,
      22,
      223,
      12,
      43,
      16,
      8,
      374,
      19,
      82,
      17,
      17,
      8,
      13,
      16
    ]
  },
  {
    "intent": [
      "combining",
      "rows",
      "in",
      "pandas",
      "by",
      "adding",
      "their",
      "values"
    ],
    "code": [
      "df",
      ".",
      "groupby",
      "(",
      "df",
      ".",
      "index",
      ")",
      ".",
      "sum",
      "(",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      465,
      80,
      24,
      42,
      44,
      465,
      294,
      20
    ],
    "code_indx_copy": [
      149,
      22,
      157,
      1,
      149,
      22,
      160,
      17,
      22,
      0,
      1,
      17
    ],
    "code_indx_nocopy": [
      149,
      22,
      157,
      1,
      149,
      22,
      160,
      17,
      22,
      0,
      1,
      17
    ]
  },
  {
    "intent": [
      "find",
      "all",
      "str_0",
      "tags",
      "by",
      "parsing",
      "xml",
      "with",
      "namespace"
    ],
    "code": [
      "root",
      ".",
      "findall",
      "(",
      "'{http://www.w3.org/2002/07/owl#}Class'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "owl:Class",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      47,
      38,
      5,
      392,
      44,
      465,
      465,
      79,
      465
    ],
    "code_indx_copy": [
      174,
      22,
      48,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      174,
      22,
      48,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "generate",
      "a",
      "random",
      "string",
      "of",
      "length",
      "var_0",
      "containing",
      "lower",
      "cased",
      "ascii",
      "letters"
    ],
    "code": [
      "\"\"\"\"\"\"",
      ".",
      "join",
      "(",
      "random",
      ".",
      "choice",
      "(",
      "string",
      ".",
      "lowercase",
      ")",
      "for",
      "var_0",
      "in",
      "range",
      "(",
      "X",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "x",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      56,
      3,
      190,
      14,
      2,
      209,
      26,
      34,
      465,
      465,
      384,
      360
    ],
    "code_indx_copy": [
      287,
      22,
      23,
      1,
      148,
      22,
      210,
      1,
      64,
      22,
      524,
      17,
      7,
      34,
      9,
      104,
      1,
      524,
      17,
      17
    ],
    "code_indx_nocopy": [
      287,
      22,
      23,
      1,
      148,
      22,
      210,
      1,
      64,
      22,
      524,
      17,
      7,
      34,
      9,
      104,
      1,
      524,
      17,
      17
    ]
  },
  {
    "intent": [
      "add",
      "a",
      "path",
      "str_0",
      "to",
      "system",
      "path"
    ],
    "code": [
      "sys",
      ".",
      "path",
      ".",
      "append",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "/path/to/2014_07_13_test",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      60,
      3,
      199,
      5,
      8,
      465,
      199
    ],
    "code_indx_copy": [
      153,
      22,
      114,
      22,
      146,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      153,
      22,
      114,
      22,
      146,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "round",
      "number",
      "var_0",
      "to",
      "nearest",
      "integer"
    ],
    "code": [
      "int",
      "(",
      "round",
      "(",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "x",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      253,
      76,
      26,
      8,
      465,
      10
    ],
    "code_indx_copy": [
      20,
      1,
      208,
      1,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      20,
      1,
      208,
      1,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "round",
      "number",
      "var_0",
      "to",
      "nearest",
      "integer"
    ],
    "code": [
      "var_0",
      "=",
      "int",
      "(",
      "round",
      "(",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "h",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      253,
      76,
      26,
      8,
      465,
      10
    ],
    "code_indx_copy": [
      34,
      19,
      20,
      1,
      208,
      1,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      20,
      1,
      208,
      1,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "round",
      "number",
      "32.268907563",
      "up",
      "to",
      "3",
      "decimal",
      "points"
    ],
    "code": [
      "round",
      "(",
      "32.268907563",
      ",",
      "3",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      253,
      76,
      465,
      379,
      8,
      57,
      255,
      318
    ],
    "code_indx_copy": [
      208,
      1,
      530,
      8,
      54,
      17
    ],
    "code_indx_nocopy": [
      208,
      1,
      524,
      8,
      54,
      17
    ]
  },
  {
    "intent": [
      "round",
      "number",
      "var_0",
      "up",
      "to",
      "var_1",
      "decimal",
      "places"
    ],
    "code": [
      "round",
      "(",
      "var_0",
      ",",
      "var_1",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "value",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "significantDigit",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      253,
      76,
      26,
      379,
      8,
      63,
      255,
      256
    ],
    "code_indx_copy": [
      208,
      1,
      34,
      8,
      91,
      17
    ],
    "code_indx_nocopy": [
      208,
      1,
      34,
      8,
      91,
      17
    ]
  },
  {
    "intent": [
      "round",
      "number",
      "1.0005",
      "up",
      "to",
      "3",
      "decimal",
      "places"
    ],
    "code": [
      "round",
      "(",
      "1.0005",
      ",",
      "3",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      253,
      76,
      465,
      379,
      8,
      57,
      255,
      256
    ],
    "code_indx_copy": [
      208,
      1,
      530,
      8,
      54,
      17
    ],
    "code_indx_nocopy": [
      208,
      1,
      524,
      8,
      54,
      17
    ]
  },
  {
    "intent": [
      "round",
      "number",
      "2.0005",
      "up",
      "to",
      "3",
      "decimal",
      "places"
    ],
    "code": [
      "round",
      "(",
      "2.0005",
      ",",
      "3",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      253,
      76,
      465,
      379,
      8,
      57,
      255,
      256
    ],
    "code_indx_copy": [
      208,
      1,
      530,
      8,
      54,
      17
    ],
    "code_indx_nocopy": [
      208,
      1,
      524,
      8,
      54,
      17
    ]
  },
  {
    "intent": [
      "round",
      "number",
      "3.0005",
      "up",
      "to",
      "3",
      "decimal",
      "places"
    ],
    "code": [
      "round",
      "(",
      "3.0005",
      ",",
      "3",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      253,
      76,
      465,
      379,
      8,
      57,
      255,
      256
    ],
    "code_indx_copy": [
      208,
      1,
      530,
      8,
      54,
      17
    ],
    "code_indx_nocopy": [
      208,
      1,
      524,
      8,
      54,
      17
    ]
  },
  {
    "intent": [
      "round",
      "number",
      "4.0005",
      "up",
      "to",
      "3",
      "decimal",
      "places"
    ],
    "code": [
      "round",
      "(",
      "4.0005",
      ",",
      "3",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      253,
      76,
      465,
      379,
      8,
      57,
      255,
      256
    ],
    "code_indx_copy": [
      208,
      1,
      530,
      8,
      54,
      17
    ],
    "code_indx_nocopy": [
      208,
      1,
      524,
      8,
      54,
      17
    ]
  },
  {
    "intent": [
      "round",
      "number",
      "8.005",
      "up",
      "to",
      "2",
      "decimal",
      "places"
    ],
    "code": [
      "round",
      "(",
      "8.005",
      ",",
      "2",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      253,
      76,
      465,
      379,
      8,
      82,
      255,
      256
    ],
    "code_indx_copy": [
      208,
      1,
      530,
      8,
      82,
      17
    ],
    "code_indx_nocopy": [
      208,
      1,
      524,
      8,
      82,
      17
    ]
  },
  {
    "intent": [
      "round",
      "number",
      "7.005",
      "up",
      "to",
      "2",
      "decimal",
      "places"
    ],
    "code": [
      "round",
      "(",
      "7.005",
      ",",
      "2",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      253,
      76,
      465,
      379,
      8,
      82,
      255,
      256
    ],
    "code_indx_copy": [
      208,
      1,
      530,
      8,
      82,
      17
    ],
    "code_indx_nocopy": [
      208,
      1,
      524,
      8,
      82,
      17
    ]
  },
  {
    "intent": [
      "round",
      "number",
      "6.005",
      "up",
      "to",
      "2",
      "decimal",
      "places"
    ],
    "code": [
      "round",
      "(",
      "6.005",
      ",",
      "2",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      253,
      76,
      465,
      379,
      8,
      82,
      255,
      256
    ],
    "code_indx_copy": [
      208,
      1,
      530,
      8,
      82,
      17
    ],
    "code_indx_nocopy": [
      208,
      1,
      524,
      8,
      82,
      17
    ]
  },
  {
    "intent": [
      "round",
      "number",
      "1.005",
      "up",
      "to",
      "2",
      "decimal",
      "places"
    ],
    "code": [
      "round",
      "(",
      "1.005",
      ",",
      "2",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      253,
      76,
      465,
      379,
      8,
      82,
      255,
      256
    ],
    "code_indx_copy": [
      208,
      1,
      530,
      8,
      82,
      17
    ],
    "code_indx_nocopy": [
      208,
      1,
      524,
      8,
      82,
      17
    ]
  },
  {
    "intent": [
      "fill",
      "missing",
      "value",
      "in",
      "one",
      "column",
      "str_0",
      "with",
      "the",
      "value",
      "of",
      "another",
      "column",
      "str_1"
    ],
    "code": [
      "df",
      "[",
      "'str_0'",
      "]",
      ".",
      "fillna",
      "(",
      "df",
      "[",
      "'str_1'",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "Cat1",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "Cat2",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      465,
      143,
      24,
      303,
      147,
      5,
      79,
      18,
      143,
      2,
      176,
      147,
      32
    ],
    "code_indx_copy": [
      149,
      12,
      29,
      16,
      22,
      352,
      1,
      149,
      12,
      63,
      16,
      17
    ],
    "code_indx_nocopy": [
      149,
      12,
      29,
      16,
      22,
      352,
      1,
      149,
      12,
      63,
      16,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "the",
      "argument",
      "var_0",
      "with",
      "string",
      "formatting",
      "in",
      "logging"
    ],
    "code": [
      "logging",
      ".",
      "info",
      "(",
      "'date=%s'",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "date",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      18,
      465,
      26,
      79,
      14,
      167,
      24,
      465
    ],
    "code_indx_copy": [
      125,
      22,
      126,
      1,
      524,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      125,
      22,
      126,
      1,
      524,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "log",
      "message",
      "of",
      "level",
      "str_0",
      "with",
      "value",
      "of",
      "var_0",
      "in",
      "the",
      "message"
    ],
    "code": [
      "logging",
      ".",
      "str_0",
      "(",
      "'date={}'",
      ".",
      "format",
      "(",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "info",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "date",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      157,
      2,
      238,
      5,
      79,
      143,
      2,
      26,
      24,
      18,
      157
    ],
    "code_indx_copy": [
      125,
      22,
      11,
      1,
      524,
      22,
      38,
      1,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      125,
      22,
      11,
      1,
      524,
      22,
      38,
      1,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "values",
      "in",
      "dictionary",
      "var_0",
      "into",
      "integers"
    ],
    "code": [
      "{",
      "k",
      ":",
      "int",
      "(",
      "v",
      ")",
      "for",
      "k",
      ",",
      "v",
      "in",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      "}"
    ],
    "slot_map": {
      "var_0": {
        "value": "d",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      20,
      24,
      25,
      26,
      12,
      7
    ],
    "code_indx_copy": [
      52,
      89,
      13,
      20,
      1,
      90,
      17,
      7,
      89,
      8,
      90,
      9,
      34,
      22,
      35,
      1,
      17,
      53
    ],
    "code_indx_nocopy": [
      52,
      89,
      13,
      20,
      1,
      90,
      17,
      7,
      89,
      8,
      90,
      9,
      34,
      22,
      35,
      1,
      17,
      53
    ]
  },
  {
    "intent": [
      "sum",
      "elements",
      "at",
      "the",
      "same",
      "index",
      "of",
      "each",
      "list",
      "in",
      "list",
      "var_0"
    ],
    "code": [
      "map",
      "(",
      "sum",
      ",",
      "zip",
      "(",
      "*",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "lists",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      112,
      1,
      35,
      18,
      36,
      37,
      2,
      22,
      4,
      24,
      4,
      26
    ],
    "code_indx_copy": [
      24,
      1,
      0,
      8,
      36,
      1,
      3,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      24,
      1,
      0,
      8,
      36,
      1,
      3,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "string",
      "var_0",
      "containing",
      "hex",
      "bytes",
      "to",
      "a",
      "hex",
      "string"
    ],
    "code": [
      "var_0",
      ".",
      "decode",
      "(",
      "'hex'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      3,
      14,
      26,
      34,
      116,
      420,
      8,
      3,
      116,
      14
    ],
    "code_indx_copy": [
      34,
      22,
      99,
      1,
      100,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      99,
      1,
      100,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "string",
      "var_0",
      "containing",
      "hex",
      "bytes",
      "to",
      "a",
      "hex",
      "string"
    ],
    "code": [
      "binascii",
      ".",
      "a2b_hex",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      3,
      14,
      26,
      34,
      116,
      420,
      8,
      3,
      116,
      14
    ],
    "code_indx_copy": [
      524,
      22,
      524,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      524,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "send",
      "data",
      "str_0",
      "to",
      "socket",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "send",
      "(",
      "'HTTP/1.0 200 established\\r\\n\\r\\n'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "HTTP/1.0 200 OK\r\n\r\n",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "connection",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      65,
      5,
      8,
      465,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      528,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      524,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "send",
      "data",
      "str_0",
      "to",
      "socket",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "send",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "HTTP/1.0 200 OK\r\n\r\n",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "connection",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      65,
      5,
      8,
      465,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      528,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      524,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "set",
      "the",
      "value",
      "of",
      "cell",
      "str_0",
      "equal",
      "to",
      "10",
      "in",
      "dataframe",
      "var_0"
    ],
    "code": [
      "var_0",
      "[",
      "str_0",
      "]",
      "=",
      "10"
    ],
    "slot_map": {
      "str_0": {
        "value": "['x']['C']",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "[str_0]": {
        "value": "['x']['C']",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      59,
      18,
      143,
      2,
      465,
      5,
      106,
      8,
      351,
      24,
      43,
      26
    ],
    "code_indx_copy": [
      34,
      12,
      11,
      16,
      19,
      4
    ],
    "code_indx_nocopy": [
      34,
      12,
      11,
      16,
      19,
      4
    ]
  },
  {
    "intent": [
      "normalize",
      "the",
      "dataframe",
      "var_0",
      "along",
      "the",
      "rows"
    ],
    "code": [
      "np",
      ".",
      "sqrt",
      "(",
      "np",
      ".",
      "square",
      "(",
      "var_0",
      ")",
      ".",
      "sum",
      "(",
      "axis",
      "=",
      "1",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      18,
      43,
      26,
      465,
      18,
      80
    ],
    "code_indx_copy": [
      74,
      22,
      524,
      1,
      74,
      22,
      524,
      1,
      34,
      17,
      22,
      0,
      1,
      42,
      19,
      15,
      17,
      17
    ],
    "code_indx_nocopy": [
      74,
      22,
      524,
      1,
      74,
      22,
      524,
      1,
      34,
      17,
      22,
      0,
      1,
      42,
      19,
      15,
      17,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "identical",
      "items",
      "from",
      "list",
      "var_0",
      "and",
      "sort",
      "it",
      "alphabetically"
    ],
    "code": [
      "sorted",
      "(",
      "set",
      "(",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "my_list",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      465,
      39,
      58,
      4,
      26,
      31,
      117,
      145,
      465
    ],
    "code_indx_copy": [
      101,
      1,
      189,
      1,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      189,
      1,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "find",
      "the",
      "index",
      "of",
      "the",
      "element",
      "with",
      "the",
      "maximum",
      "value",
      "from",
      "a",
      "list",
      "str_0",
      "."
    ],
    "code": [
      "max",
      "(",
      "enumerate",
      "(",
      "str_0",
      ")",
      ",",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "x",
      "[",
      "1",
      "]",
      ")",
      "[",
      "0",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "a",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      47,
      18,
      37,
      2,
      18,
      49,
      79,
      18,
      227,
      143,
      58,
      3,
      4,
      5,
      159
    ],
    "code_indx_copy": [
      179,
      1,
      10,
      1,
      11,
      17,
      8,
      102,
      19,
      44,
      26,
      13,
      26,
      12,
      15,
      16,
      17,
      12,
      43,
      16
    ],
    "code_indx_nocopy": [
      179,
      1,
      10,
      1,
      11,
      17,
      8,
      102,
      19,
      44,
      26,
      13,
      26,
      12,
      15,
      16,
      17,
      12,
      43,
      16
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "list",
      "where",
      "each",
      "element",
      "is",
      "a",
      "value",
      "of",
      "the",
      "key",
      "str_0",
      "for",
      "each",
      "dictionary",
      "var_0",
      "in",
      "the",
      "list",
      "var_1"
    ],
    "code": [
      "[",
      "var_0",
      "[",
      "'str_0'",
      "]",
      "for",
      "var_0",
      "in",
      "var_1",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "Name",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "d",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "thisismylist",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      148,
      3,
      4,
      155,
      22,
      49,
      152,
      3,
      143,
      2,
      18,
      23,
      5,
      21,
      22,
      25,
      26,
      24,
      18,
      4,
      63
    ],
    "code_indx_copy": [
      12,
      34,
      12,
      29,
      16,
      7,
      34,
      9,
      91,
      16
    ],
    "code_indx_nocopy": [
      12,
      34,
      12,
      29,
      16,
      7,
      34,
      9,
      91,
      16
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "list",
      "of",
      "tuples",
      "with",
      "the",
      "values",
      "of",
      "keys",
      "str_0",
      "and",
      "str_1",
      "from",
      "each",
      "dictionary",
      "var_0",
      "in",
      "the",
      "list",
      "var_1"
    ],
    "code": [
      "[",
      "(",
      "var_0",
      "[",
      "'str_0'",
      "]",
      ",",
      "var_0",
      "[",
      "'str_1'",
      "]",
      ")",
      "for",
      "var_0",
      "in",
      "var_1",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "Name",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "Age",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "d",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "thisismylist",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      148,
      3,
      4,
      2,
      33,
      79,
      18,
      20,
      2,
      206,
      5,
      31,
      32,
      58,
      22,
      25,
      26,
      24,
      18,
      4,
      63
    ],
    "code_indx_copy": [
      12,
      1,
      34,
      12,
      29,
      16,
      8,
      34,
      12,
      63,
      16,
      17,
      7,
      34,
      9,
      91,
      16
    ],
    "code_indx_nocopy": [
      12,
      1,
      34,
      12,
      29,
      16,
      8,
      34,
      12,
      63,
      16,
      17,
      7,
      34,
      9,
      91,
      16
    ]
  },
  {
    "intent": [
      "grab",
      "one",
      "random",
      "item",
      "from",
      "a",
      "database",
      "var_0",
      "in",
      "django/postgresql"
    ],
    "code": [
      "var_0",
      ".",
      "objects",
      ".",
      "all",
      "(",
      ")",
      ".",
      "order_by",
      "(",
      "'?'",
      ")",
      "[",
      "0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "model",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      303,
      190,
      156,
      58,
      3,
      465,
      26,
      24,
      465
    ],
    "code_indx_copy": [
      34,
      22,
      78,
      22,
      77,
      1,
      17,
      22,
      136,
      1,
      241,
      17,
      12,
      43,
      16
    ],
    "code_indx_nocopy": [
      34,
      22,
      78,
      22,
      77,
      1,
      17,
      22,
      136,
      1,
      241,
      17,
      12,
      43,
      16
    ]
  },
  {
    "intent": [
      "run",
      "python",
      "script",
      "str_0",
      "from",
      "another",
      "python",
      "script",
      ",",
      "passing",
      "in",
      "1",
      "as",
      "an",
      "argument"
    ],
    "code": [
      "os",
      ".",
      "system",
      "(",
      "'script2.py 1'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "script2.py",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      251,
      50,
      246,
      5,
      58,
      176,
      50,
      246,
      62,
      465,
      24,
      237,
      90,
      225,
      465
    ],
    "code_indx_copy": [
      113,
      22,
      119,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      119,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "python",
      "regex",
      "for",
      "hyphenated",
      "words",
      "in",
      "var_0"
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'\\\\w+(?:-\\\\w+)+'",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "text",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      50,
      40,
      21,
      465,
      41,
      24,
      26
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      524,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      524,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "create",
      "variable",
      "key/value",
      "pairs",
      "with",
      "argparse"
    ],
    "code": [
      "parser",
      ".",
      "add_argument",
      "(",
      "'--conf'",
      ",",
      "nargs",
      "=",
      "2",
      ",",
      "action",
      "=",
      "'append'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      148,
      95,
      88,
      187,
      79,
      465
    ],
    "code_indx_copy": [
      376,
      22,
      460,
      1,
      524,
      8,
      461,
      19,
      82,
      8,
      524,
      19,
      524,
      17
    ],
    "code_indx_nocopy": [
      376,
      22,
      460,
      1,
      524,
      8,
      461,
      19,
      82,
      8,
      524,
      19,
      524,
      17
    ]
  },
  {
    "intent": [
      "get",
      "str_0",
      "unique",
      "items",
      "from",
      "a",
      "list"
    ],
    "code": [
      "random",
      ".",
      "sample",
      "(",
      "list",
      "(",
      "range",
      "(",
      "1",
      ",",
      "16",
      ")",
      ")",
      ",",
      "3",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "3",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      5,
      204,
      39,
      58,
      3,
      4
    ],
    "code_indx_copy": [
      148,
      22,
      266,
      1,
      33,
      1,
      104,
      1,
      15,
      8,
      271,
      17,
      17,
      8,
      54,
      17
    ],
    "code_indx_nocopy": [
      148,
      22,
      266,
      1,
      33,
      1,
      104,
      1,
      15,
      8,
      271,
      17,
      17,
      8,
      54,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "list",
      "var_0",
      "in",
      "alphabetical",
      "order",
      "based",
      "on",
      "the",
      "letter",
      "after",
      "percent",
      "character",
      "str_0",
      "in",
      "each",
      "element"
    ],
    "code": [
      "var_0",
      ".",
      "sort",
      "(",
      "key",
      "=",
      "lambda",
      "str",
      ":",
      "re",
      ".",
      "sub",
      "(",
      "'.*%(.).*'",
      ",",
      "'\\\\1'",
      ",",
      "str",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "strings",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "%",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      117,
      4,
      26,
      24,
      465,
      162,
      208,
      139,
      18,
      433,
      201,
      465,
      202,
      5,
      24,
      22,
      49
    ],
    "code_indx_copy": [
      34,
      22,
      124,
      1,
      102,
      19,
      44,
      25,
      13,
      39,
      22,
      40,
      1,
      524,
      8,
      41,
      8,
      25,
      17,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      124,
      1,
      102,
      19,
      44,
      25,
      13,
      39,
      22,
      40,
      1,
      524,
      8,
      41,
      8,
      25,
      17,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "list",
      "of",
      "strings",
      "var_0",
      "based",
      "on",
      "regex",
      "match"
    ],
    "code": [
      "var_0",
      ".",
      "sort",
      "(",
      "key",
      "=",
      "lambda",
      "str",
      ":",
      "re",
      ".",
      "sub",
      "(",
      "'.*%'",
      ",",
      "''",
      ",",
      "str",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "strings",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      3,
      4,
      2,
      259,
      26,
      208,
      139,
      40,
      144
    ],
    "code_indx_copy": [
      34,
      22,
      124,
      1,
      102,
      19,
      44,
      25,
      13,
      39,
      22,
      40,
      1,
      524,
      8,
      21,
      8,
      25,
      17,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      124,
      1,
      102,
      19,
      44,
      25,
      13,
      39,
      22,
      40,
      1,
      524,
      8,
      21,
      8,
      25,
      17,
      17
    ]
  },
  {
    "intent": [
      "create",
      "list",
      "var_0",
      "containing",
      "3",
      "empty",
      "lists"
    ],
    "code": [
      "var_0",
      "=",
      "[",
      "[",
      "]",
      "for",
      "i",
      "in",
      "range",
      "(",
      "3",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "listy",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      148,
      4,
      26,
      34,
      57,
      146,
      30
    ],
    "code_indx_copy": [
      34,
      19,
      12,
      12,
      16,
      7,
      6,
      9,
      104,
      1,
      54,
      17,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      12,
      12,
      16,
      7,
      6,
      9,
      104,
      1,
      54,
      17,
      16
    ]
  },
  {
    "intent": [
      "sort",
      "numpy",
      "float",
      "array",
      "var_0",
      "column",
      "by",
      "column"
    ],
    "code": [
      "var_0",
      "=",
      "np",
      ".",
      "array",
      "(",
      "sorted",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "tuple",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "A",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      84,
      94,
      85,
      26,
      147,
      44,
      147
    ],
    "code_indx_copy": [
      34,
      19,
      74,
      22,
      175,
      1,
      101,
      1,
      34,
      8,
      102,
      19,
      432,
      17,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      74,
      22,
      175,
      1,
      101,
      1,
      34,
      8,
      102,
      19,
      432,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "list",
      "from",
      "two",
      "strings",
      "str_0",
      "and",
      "var_0",
      "with",
      "values",
      "as",
      "each",
      "character",
      "concatenated"
    ],
    "code": [
      "[",
      "(",
      "x",
      "+",
      "y",
      ")",
      "for",
      "x",
      "in",
      "'str_0'",
      "for",
      "y",
      "in",
      "'var_0'",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "12345",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "ab",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      3,
      4,
      58,
      29,
      259,
      5,
      31,
      26,
      79,
      20,
      90,
      22,
      202,
      465
    ],
    "code_indx_copy": [
      12,
      1,
      26,
      96,
      103,
      17,
      7,
      26,
      9,
      29,
      7,
      103,
      9,
      56,
      16
    ],
    "code_indx_nocopy": [
      12,
      1,
      26,
      96,
      103,
      17,
      7,
      26,
      9,
      29,
      7,
      103,
      9,
      56,
      16
    ]
  },
  {
    "intent": [
      "trim",
      "string",
      "str_0"
    ],
    "code": [
      "\"\"\" Hello \"\"\"",
      ".",
      "strip",
      "(",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "Hello",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      210,
      14,
      5
    ],
    "code_indx_copy": [
      524,
      22,
      170,
      1,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      170,
      1,
      17
    ]
  },
  {
    "intent": [
      "trim",
      "string",
      "str_0"
    ],
    "code": [
      "str_0",
      ".",
      "strip",
      "(",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "myString",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      210,
      14,
      5
    ],
    "code_indx_copy": [
      11,
      22,
      170,
      1,
      17
    ],
    "code_indx_nocopy": [
      11,
      22,
      170,
      1,
      17
    ]
  },
  {
    "intent": [
      "trimming",
      "a",
      "string",
      "str_0"
    ],
    "code": [
      "\"\"\" Hello \"\"\"",
      ".",
      "strip",
      "(",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "Hello",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      462,
      3,
      14,
      5
    ],
    "code_indx_copy": [
      524,
      22,
      170,
      1,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      170,
      1,
      17
    ]
  },
  {
    "intent": [
      "trimming",
      "a",
      "string",
      "str_0"
    ],
    "code": [
      "\"\"\" Hello\"\"\"",
      ".",
      "strip",
      "(",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "Hello",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      462,
      3,
      14,
      5
    ],
    "code_indx_copy": [
      524,
      22,
      170,
      1,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      170,
      1,
      17
    ]
  },
  {
    "intent": [
      "trimming",
      "a",
      "string",
      "str_0"
    ],
    "code": [
      "\"\"\"str_0\"\"\"",
      ".",
      "strip",
      "(",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "Bob has a cat",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      462,
      3,
      14,
      5
    ],
    "code_indx_copy": [
      212,
      22,
      170,
      1,
      17
    ],
    "code_indx_nocopy": [
      212,
      22,
      170,
      1,
      17
    ]
  },
  {
    "intent": [
      "trimming",
      "a",
      "string",
      "str_0"
    ],
    "code": [
      "\"\"\"          Hello        \"\"\"",
      ".",
      "strip",
      "(",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "Hello",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      462,
      3,
      14,
      5
    ],
    "code_indx_copy": [
      524,
      22,
      170,
      1,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      170,
      1,
      17
    ]
  },
  {
    "intent": [
      "trimming",
      "a",
      "string",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "strip",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "str",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      462,
      3,
      14,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      170,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      170,
      1,
      17
    ]
  },
  {
    "intent": [
      "trimming",
      "str_0",
      "from",
      "string",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "strip",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "\n",
        "quote": "\"",
        "type": "str"
      },
      "var_0": {
        "value": "myString",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      462,
      5,
      58,
      14,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      170,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      170,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "left",
      "trimming",
      "str_0",
      "from",
      "string",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "lstrip",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "\n\r",
        "quote": "\"",
        "type": "str"
      },
      "var_0": {
        "value": "myString",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      214,
      462,
      5,
      58,
      14,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      171,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      171,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "right",
      "trimming",
      "str_0",
      "from",
      "string",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "rstrip",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "\n\t",
        "quote": "\"",
        "type": "str"
      },
      "var_0": {
        "value": "myString",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      216,
      462,
      5,
      58,
      14,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      172,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      172,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "trimming",
      "a",
      "string",
      "str_0",
      "by",
      "space"
    ],
    "code": [
      "\"\"\"  Hello\n\"\"\"",
      ".",
      "strip",
      "(",
      "' '",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "Hello\n",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      462,
      3,
      14,
      5,
      44,
      400
    ],
    "code_indx_copy": [
      524,
      22,
      170,
      1,
      108,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      170,
      1,
      108,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "list",
      "of",
      "tuples",
      "str_0",
      "based",
      "on",
      "two",
      "elements",
      ",",
      "second",
      "and",
      "third"
    ],
    "code": [
      "sorted",
      "(",
      "str_0",
      ",",
      "key",
      "=",
      "lambda",
      "element",
      ":",
      "(",
      "element",
      "[",
      "1",
      "]",
      ",",
      "element",
      "[",
      "2",
      "]",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "unsorted",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      117,
      3,
      4,
      2,
      33,
      5,
      208,
      139,
      29,
      1,
      62,
      118,
      31,
      120
    ],
    "code_indx_copy": [
      101,
      1,
      11,
      8,
      102,
      19,
      44,
      510,
      13,
      1,
      510,
      12,
      15,
      16,
      8,
      510,
      12,
      82,
      16,
      17,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      11,
      8,
      102,
      19,
      44,
      510,
      13,
      1,
      510,
      12,
      15,
      16,
      8,
      510,
      12,
      82,
      16,
      17,
      17
    ]
  },
  {
    "intent": [
      "decode",
      "string",
      "var_0",
      "to",
      "utf-8",
      "code"
    ],
    "code": [
      "print",
      "(",
      "var_0",
      ".",
      "decode",
      "(",
      "'utf8'",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "content",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      182,
      14,
      26,
      8,
      183,
      293
    ],
    "code_indx_copy": [
      49,
      1,
      34,
      22,
      99,
      1,
      200,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      34,
      22,
      99,
      1,
      200,
      17,
      17
    ]
  },
  {
    "intent": [
      "find",
      "the",
      "index",
      "of",
      "the",
      "maximum",
      "value",
      "in",
      "the",
      "array",
      "var_0",
      "where",
      "the",
      "boolean",
      "condition",
      "in",
      "array",
      "var_1",
      "is",
      "true"
    ],
    "code": [
      "np",
      ".",
      "ma",
      ".",
      "array",
      "(",
      "np",
      ".",
      "tile",
      "(",
      "var_0",
      ",",
      "2",
      ")",
      ".",
      "reshape",
      "(",
      "2",
      ",",
      "3",
      ")",
      ",",
      "mask",
      "=",
      "~",
      "var_1",
      ")",
      ".",
      "argmax",
      "(",
      "axis",
      "=",
      "1",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "arr",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "cond",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      47,
      18,
      37,
      2,
      18,
      227,
      143,
      24,
      18,
      85,
      26,
      155,
      18,
      366,
      465,
      24,
      85,
      63,
      152,
      367
    ],
    "code_indx_copy": [
      74,
      22,
      524,
      22,
      175,
      1,
      74,
      22,
      524,
      1,
      34,
      8,
      82,
      17,
      22,
      361,
      1,
      82,
      8,
      54,
      17,
      8,
      524,
      19,
      360,
      91,
      17,
      22,
      524,
      1,
      42,
      19,
      15,
      17
    ],
    "code_indx_nocopy": [
      74,
      22,
      524,
      22,
      175,
      1,
      74,
      22,
      524,
      1,
      34,
      8,
      82,
      17,
      22,
      361,
      1,
      82,
      8,
      54,
      17,
      8,
      524,
      19,
      360,
      91,
      17,
      22,
      524,
      1,
      42,
      19,
      15,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "dataframe",
      "var_0",
      "'s",
      "column",
      "var_1",
      "into",
      "datetime",
      ",",
      "after",
      "removing",
      "the",
      "first",
      "and",
      "last",
      "3",
      "letters"
    ],
    "code": [
      "pd",
      ".",
      "to_datetime",
      "(",
      "var_0",
      ".",
      "var_1",
      ".",
      "str",
      "[",
      "1",
      ":",
      "-",
      "3",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "ID",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      3,
      43,
      26,
      266,
      147,
      63,
      12,
      13,
      62,
      201,
      99,
      18,
      151,
      31,
      170,
      57,
      360
    ],
    "code_indx_copy": [
      162,
      22,
      466,
      1,
      34,
      22,
      91,
      22,
      25,
      12,
      15,
      13,
      14,
      54,
      16,
      17
    ],
    "code_indx_nocopy": [
      162,
      22,
      466,
      1,
      34,
      22,
      91,
      22,
      25,
      12,
      15,
      13,
      14,
      54,
      16,
      17
    ]
  },
  {
    "intent": [
      "read",
      "csv",
      "file",
      "str_0",
      "into",
      "a",
      "dataframe",
      "var_0",
      "with",
      "datatype",
      "of",
      "float",
      "for",
      "column",
      "str_1",
      "considering",
      "character",
      "str_2",
      "as",
      "nan",
      "value"
    ],
    "code": [
      "var_0",
      "=",
      "pd",
      ".",
      "read_csv",
      "(",
      "'str_0'",
      ",",
      "dtype",
      "=",
      "{",
      "'str_1'",
      ":",
      "np",
      ".",
      "float64",
      "}",
      ",",
      "na_values",
      "=",
      "[",
      "'str_2'",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "my.csv",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "str_1": {
        "value": "my_column",
        "quote": "'",
        "type": "str"
      },
      "str_2": {
        "value": "n/a",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      124,
      287,
      126,
      5,
      12,
      3,
      43,
      26,
      79,
      465,
      2,
      94,
      21,
      147,
      32,
      465,
      202,
      194,
      90,
      289,
      143
    ],
    "code_indx_copy": [
      34,
      19,
      162,
      22,
      452,
      1,
      29,
      8,
      177,
      19,
      52,
      63,
      13,
      74,
      22,
      524,
      53,
      8,
      524,
      19,
      12,
      150,
      16,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      162,
      22,
      452,
      1,
      29,
      8,
      177,
      19,
      52,
      63,
      13,
      74,
      22,
      524,
      53,
      8,
      524,
      19,
      12,
      150,
      16,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "nan",
      "values",
      "to",
      "\u2018",
      "n/a",
      "\u2019",
      "while",
      "reading",
      "rows",
      "from",
      "a",
      "csv",
      "var_0",
      "with",
      "pandas"
    ],
    "code": [
      "df",
      "=",
      "pd",
      ".",
      "var_0",
      "(",
      "'my.csv'",
      ",",
      "na_values",
      "=",
      "[",
      "'n/a'",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "read_csv",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      289,
      20,
      8,
      398,
      465,
      399,
      430,
      465,
      80,
      58,
      3,
      287,
      26,
      79,
      42
    ],
    "code_indx_copy": [
      149,
      19,
      162,
      22,
      34,
      1,
      524,
      8,
      524,
      19,
      12,
      524,
      16,
      17
    ],
    "code_indx_nocopy": [
      149,
      19,
      162,
      22,
      34,
      1,
      524,
      8,
      524,
      19,
      12,
      524,
      16,
      17
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "list",
      "containing",
      "all",
      "cartesian",
      "products",
      "of",
      "elements",
      "in",
      "list",
      "var_0"
    ],
    "code": [
      "list",
      "(",
      "itertools",
      ".",
      "product",
      "(",
      "*",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      148,
      3,
      4,
      34,
      38,
      465,
      465,
      2,
      1,
      24,
      4,
      26
    ],
    "code_indx_copy": [
      33,
      1,
      50,
      22,
      328,
      1,
      3,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      33,
      1,
      50,
      22,
      328,
      1,
      3,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "uppercased",
      "characters",
      "in",
      "string",
      "var_0"
    ],
    "code": [
      "re",
      ".",
      "sub",
      "(",
      "'[^A-Z]'",
      ",",
      "''",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      465,
      98,
      24,
      14,
      26
    ],
    "code_indx_copy": [
      39,
      22,
      40,
      1,
      524,
      8,
      21,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      40,
      1,
      524,
      8,
      21,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "string",
      "str_0",
      "into",
      "a",
      "datetime",
      "object",
      "using",
      "format",
      "str_1"
    ],
    "code": [
      "datetime",
      ".",
      "strptime",
      "(",
      "'str_0'",
      ",",
      "'str_1'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "2011221",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "%Y%W%w",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      14,
      5,
      12,
      3,
      13,
      15,
      109,
      16,
      32
    ],
    "code_indx_copy": [
      27,
      22,
      28,
      1,
      29,
      8,
      63,
      17
    ],
    "code_indx_nocopy": [
      27,
      22,
      28,
      1,
      29,
      8,
      63,
      17
    ]
  },
  {
    "intent": [
      "read",
      "file",
      "str_0",
      "using",
      "encoding",
      "str_1"
    ],
    "code": [
      "codecs",
      ".",
      "open",
      "(",
      "'str_0'",
      ",",
      "'r'",
      ",",
      "'str_1'",
      ")",
      ".",
      "read",
      "(",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "myfile",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "iso-8859-1",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      124,
      126,
      5,
      109,
      298,
      32
    ],
    "code_indx_copy": [
      524,
      22,
      105,
      1,
      29,
      8,
      365,
      8,
      63,
      17,
      22,
      106,
      1,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      105,
      1,
      29,
      8,
      365,
      8,
      63,
      17,
      22,
      106,
      1,
      17
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "list",
      "containing",
      "elements",
      "from",
      "list",
      "var_0",
      "that",
      "are",
      "predicate",
      "to",
      "function",
      "var_1"
    ],
    "code": [
      "[",
      "var_1",
      "(",
      "x",
      ")",
      "for",
      "x",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "list",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "f",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      148,
      3,
      4,
      34,
      1,
      58,
      4,
      26,
      195,
      243,
      465,
      8,
      69,
      63
    ],
    "code_indx_copy": [
      12,
      91,
      1,
      26,
      17,
      7,
      26,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      12,
      91,
      1,
      26,
      17,
      7,
      26,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "regex",
      "matching",
      "5-digit",
      "substrings",
      "not",
      "enclosed",
      "with",
      "digits",
      "in",
      "var_0"
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'(?<!\\\\d)\\\\d{5}(?!\\\\d)'",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      40,
      81,
      465,
      410,
      105,
      465,
      79,
      200,
      24,
      26
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      524,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      524,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "list",
      "containing",
      "elements",
      "of",
      "list",
      "var_0",
      "if",
      "the",
      "sum",
      "of",
      "the",
      "element",
      "is",
      "greater",
      "than",
      "10"
    ],
    "code": [
      "[",
      "item",
      "for",
      "item",
      "in",
      "var_0",
      "if",
      "sum",
      "(",
      "item",
      ")",
      ">",
      "10",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      148,
      3,
      4,
      34,
      1,
      2,
      4,
      26,
      150,
      18,
      112,
      2,
      18,
      49,
      152,
      349,
      264,
      351
    ],
    "code_indx_copy": [
      12,
      387,
      7,
      387,
      9,
      34,
      67,
      0,
      1,
      387,
      17,
      214,
      4,
      16
    ],
    "code_indx_nocopy": [
      12,
      387,
      7,
      387,
      9,
      34,
      67,
      0,
      1,
      387,
      17,
      214,
      4,
      16
    ]
  },
  {
    "intent": [
      "convert",
      "currency",
      "string",
      "var_0",
      "to",
      "decimal",
      "var_1"
    ],
    "code": [
      "var_1",
      "=",
      "int",
      "(",
      "round",
      "(",
      "float",
      "(",
      "var_0",
      ".",
      "strip",
      "(",
      "'$'",
      ")",
      ")",
      "*",
      "100",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "dollars",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "cents_int",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      465,
      14,
      26,
      8,
      255,
      63
    ],
    "code_indx_copy": [
      91,
      19,
      20,
      1,
      208,
      1,
      225,
      1,
      34,
      22,
      170,
      1,
      524,
      17,
      17,
      3,
      267,
      17,
      17
    ],
    "code_indx_nocopy": [
      91,
      19,
      20,
      1,
      208,
      1,
      225,
      1,
      34,
      22,
      170,
      1,
      524,
      17,
      17,
      3,
      267,
      17,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "letters",
      "from",
      "string",
      "var_0",
      "if",
      "the",
      "letter",
      "exist",
      "in",
      "list",
      "var_1"
    ],
    "code": [
      "\"\"\"\"\"\"",
      ".",
      "join",
      "(",
      "dropwhile",
      "(",
      "lambda",
      "x",
      ":",
      "x",
      "in",
      "var_1",
      ",",
      "var_0",
      "[",
      ":",
      ":",
      "-",
      "1",
      "]",
      ")",
      ")",
      "[",
      ":",
      ":",
      "-",
      "1",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "example_line",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "bad_chars",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      360,
      58,
      14,
      26,
      150,
      18,
      433,
      185,
      24,
      4,
      63
    ],
    "code_indx_copy": [
      287,
      22,
      23,
      1,
      524,
      1,
      44,
      26,
      13,
      26,
      9,
      91,
      8,
      34,
      12,
      13,
      13,
      14,
      15,
      16,
      17,
      17,
      12,
      13,
      13,
      14,
      15,
      16
    ],
    "code_indx_nocopy": [
      287,
      22,
      23,
      1,
      524,
      1,
      44,
      26,
      13,
      26,
      9,
      91,
      8,
      34,
      12,
      13,
      13,
      14,
      15,
      16,
      17,
      17,
      12,
      13,
      13,
      14,
      15,
      16
    ]
  },
  {
    "intent": [
      "creating",
      "an",
      "empty",
      "list",
      "var_0"
    ],
    "code": [
      "var_0",
      "=",
      "[",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "l",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      381,
      225,
      146,
      4,
      26
    ],
    "code_indx_copy": [
      34,
      19,
      12,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      12,
      16
    ]
  },
  {
    "intent": [
      "creating",
      "an",
      "empty",
      "list",
      "var_0"
    ],
    "code": [
      "var_0",
      "=",
      "list",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "l",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      381,
      225,
      146,
      4,
      26
    ],
    "code_indx_copy": [
      34,
      19,
      33,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      33,
      1,
      17
    ]
  },
  {
    "intent": [
      "creating",
      "an",
      "empty",
      "list"
    ],
    "code": [
      "list",
      "(",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      381,
      225,
      146,
      4
    ],
    "code_indx_copy": [
      33,
      1,
      17
    ],
    "code_indx_nocopy": [
      33,
      1,
      17
    ]
  },
  {
    "intent": [
      "creating",
      "an",
      "empty",
      "list"
    ],
    "code": [
      "[",
      "]"
    ],
    "slot_map": {},
    "intent_indx": [
      381,
      225,
      146,
      4
    ],
    "code_indx_copy": [
      12,
      16
    ],
    "code_indx_nocopy": [
      12,
      16
    ]
  },
  {
    "intent": [
      "properly",
      "quit",
      "a",
      "program"
    ],
    "code": [
      "sys",
      ".",
      "exit",
      "(",
      "0",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      465,
      465,
      3,
      424
    ],
    "code_indx_copy": [
      153,
      22,
      416,
      1,
      43,
      17
    ],
    "code_indx_nocopy": [
      153,
      22,
      416,
      1,
      43,
      17
    ]
  },
  {
    "intent": [
      "add",
      "string",
      "str_0",
      "in",
      "str_1",
      "position",
      "of",
      "a",
      "string",
      "var_0"
    ],
    "code": [
      "var_0",
      "[",
      ":",
      "4",
      "]",
      "+",
      "'str_0'",
      "+",
      "var_0",
      "[",
      "4",
      ":",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "-",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": "4th",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      60,
      14,
      5,
      24,
      32,
      323,
      2,
      3,
      14,
      26
    ],
    "code_indx_copy": [
      34,
      12,
      13,
      184,
      16,
      96,
      29,
      96,
      34,
      12,
      184,
      13,
      16
    ],
    "code_indx_nocopy": [
      34,
      12,
      13,
      184,
      16,
      96,
      29,
      96,
      34,
      12,
      184,
      13,
      16
    ]
  },
  {
    "intent": [
      "append",
      "3",
      "lists",
      "in",
      "one",
      "list"
    ],
    "code": [
      "[",
      "[",
      "]",
      "for",
      "i",
      "in",
      "range",
      "(",
      "3",
      ")",
      "]"
    ],
    "slot_map": {},
    "intent_indx": [
      111,
      57,
      30,
      24,
      303,
      4
    ],
    "code_indx_copy": [
      12,
      12,
      16,
      7,
      6,
      9,
      104,
      1,
      54,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      12,
      16,
      7,
      6,
      9,
      104,
      1,
      54,
      17,
      16
    ]
  },
  {
    "intent": [
      "initialize",
      "a",
      "list",
      "of",
      "empty",
      "lists",
      "var_0",
      "of",
      "size",
      "3"
    ],
    "code": [
      "var_0",
      "=",
      "[",
      "[",
      "]",
      "for",
      "i",
      "in",
      "range",
      "(",
      "3",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      3,
      4,
      2,
      146,
      30,
      26,
      2,
      334,
      57
    ],
    "code_indx_copy": [
      34,
      19,
      12,
      12,
      16,
      7,
      6,
      9,
      104,
      1,
      54,
      17,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      12,
      12,
      16,
      7,
      6,
      9,
      104,
      1,
      54,
      17,
      16
    ]
  },
  {
    "intent": [
      "request",
      "url",
      "var_0",
      "using",
      "http",
      "header",
      "str_0"
    ],
    "code": [
      "requests",
      ".",
      "get",
      "(",
      "var_0",
      ",",
      "headers",
      "=",
      "{",
      "str_0",
      "}",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "url",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "{'referer': my_referer}",
        "quote": "`",
        "type": "str"
      },
      "{str_0}": {
        "value": "{'referer': my_referer}",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      101,
      102,
      26,
      109,
      343,
      427,
      5
    ],
    "code_indx_copy": [
      85,
      22,
      86,
      1,
      34,
      8,
      289,
      19,
      52,
      11,
      53,
      17
    ],
    "code_indx_nocopy": [
      85,
      22,
      86,
      1,
      34,
      8,
      289,
      19,
      52,
      11,
      53,
      17
    ]
  },
  {
    "intent": [
      "set",
      "the",
      "y",
      "axis",
      "range",
      "to",
      "str_0",
      "in",
      "subplot",
      "using",
      "pylab"
    ],
    "code": [
      "pylab",
      ".",
      "ylim",
      "(",
      "[",
      "0",
      ",",
      "1000",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "0, 1000",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      59,
      18,
      465,
      450,
      123,
      8,
      5,
      24,
      465,
      109,
      465
    ],
    "code_indx_copy": [
      538,
      22,
      524,
      1,
      12,
      43,
      8,
      274,
      16,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      524,
      1,
      12,
      43,
      8,
      274,
      16,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "column",
      "of",
      "list",
      "in",
      "series",
      "var_0",
      "to",
      "dummies"
    ],
    "code": [
      "pd",
      ".",
      "get_dummies",
      "(",
      "var_0",
      ".",
      "apply",
      "(",
      "pd",
      ".",
      "Series",
      ")",
      ".",
      "stack",
      "(",
      ")",
      ")",
      ".",
      "sum",
      "(",
      "level",
      "=",
      "0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      3,
      147,
      2,
      4,
      24,
      339,
      26,
      8,
      465
    ],
    "code_indx_copy": [
      162,
      22,
      524,
      1,
      34,
      22,
      59,
      1,
      162,
      22,
      467,
      17,
      22,
      168,
      1,
      17,
      17,
      22,
      0,
      1,
      158,
      19,
      43,
      17
    ],
    "code_indx_nocopy": [
      162,
      22,
      524,
      1,
      34,
      22,
      59,
      1,
      162,
      22,
      467,
      17,
      22,
      168,
      1,
      17,
      17,
      22,
      0,
      1,
      158,
      19,
      43,
      17
    ]
  },
  {
    "intent": [
      "finding",
      "the",
      "largest",
      "delta",
      "between",
      "two",
      "integers",
      "in",
      "a",
      "list",
      "in",
      "python"
    ],
    "code": [
      "max",
      "(",
      "abs",
      "(",
      "x",
      "-",
      "y",
      ")",
      "for",
      "x",
      ",",
      "y",
      "in",
      "zip",
      "(",
      "values",
      "[",
      "1",
      ":",
      "]",
      ",",
      "values",
      "[",
      ":",
      "-",
      "1",
      "]",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      465,
      18,
      438,
      465,
      278,
      29,
      7,
      24,
      3,
      4,
      24,
      50
    ],
    "code_indx_copy": [
      179,
      1,
      359,
      1,
      26,
      14,
      103,
      17,
      7,
      26,
      8,
      103,
      9,
      36,
      1,
      166,
      12,
      15,
      13,
      16,
      8,
      166,
      12,
      13,
      14,
      15,
      16,
      17,
      17
    ],
    "code_indx_nocopy": [
      179,
      1,
      359,
      1,
      26,
      14,
      103,
      17,
      7,
      26,
      8,
      103,
      9,
      36,
      1,
      166,
      12,
      15,
      13,
      16,
      8,
      166,
      12,
      13,
      14,
      15,
      16,
      17,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "hex",
      "string",
      "var_0",
      "to",
      "string"
    ],
    "code": [
      "y",
      "=",
      "str",
      "(",
      "int",
      "(",
      "var_0",
      ",",
      "16",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "x",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      3,
      116,
      14,
      26,
      8,
      14
    ],
    "code_indx_copy": [
      103,
      19,
      25,
      1,
      20,
      1,
      34,
      8,
      271,
      17,
      17
    ],
    "code_indx_nocopy": [
      103,
      19,
      25,
      1,
      20,
      1,
      34,
      8,
      271,
      17,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "string",
      "var_0",
      "is",
      "an",
      "integer"
    ],
    "code": [
      "var_0",
      ".",
      "isdigit",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      234,
      150,
      14,
      26,
      152,
      225,
      10
    ],
    "code_indx_copy": [
      34,
      22,
      68,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      68,
      1,
      17
    ]
  },
  {
    "intent": [
      "function",
      "to",
      "check",
      "if",
      "a",
      "string",
      "is",
      "a",
      "number"
    ],
    "code": [
      "isdigit",
      "(",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      69,
      8,
      234,
      150,
      3,
      14,
      152,
      3,
      76
    ],
    "code_indx_copy": [
      68,
      1,
      17
    ],
    "code_indx_nocopy": [
      68,
      1,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "string",
      "var_0",
      "is",
      "a",
      "number"
    ],
    "code": [
      "var_0",
      ".",
      "isdigit",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "b",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      234,
      150,
      14,
      26,
      152,
      3,
      76
    ],
    "code_indx_copy": [
      34,
      22,
      68,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      68,
      1,
      17
    ]
  },
  {
    "intent": [
      "pandas",
      "read",
      "comma-separated",
      "csv",
      "file",
      "var_0",
      "and",
      "skip",
      "commented",
      "lines",
      "starting",
      "with",
      "str_0"
    ],
    "code": [
      "pd",
      ".",
      "read_csv",
      "(",
      "StringIO",
      "(",
      "var_0",
      ")",
      ",",
      "sep",
      "=",
      "','",
      ",",
      "comment",
      "=",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "#",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      42,
      124,
      465,
      287,
      126,
      26,
      31,
      465,
      465,
      395,
      316,
      79,
      5
    ],
    "code_indx_copy": [
      162,
      22,
      452,
      1,
      524,
      1,
      34,
      17,
      8,
      264,
      19,
      73,
      8,
      524,
      19,
      29,
      17
    ],
    "code_indx_nocopy": [
      162,
      22,
      452,
      1,
      524,
      1,
      34,
      17,
      8,
      264,
      19,
      73,
      8,
      524,
      19,
      29,
      17
    ]
  },
  {
    "intent": [
      "pandas",
      ":",
      "change",
      "all",
      "the",
      "values",
      "of",
      "a",
      "column",
      "str_0",
      "into",
      "str_1"
    ],
    "code": [
      "df",
      "[",
      "'str_0'",
      "]",
      "=",
      "df",
      "[",
      "'str_0'",
      "]",
      ".",
      "apply",
      "(",
      "lambda",
      "x",
      ":",
      "int",
      "(",
      "str",
      "(",
      "x",
      ")",
      "[",
      "-",
      "4",
      ":",
      "]",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "Date",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "int(str(x)[-4:])",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      42,
      128,
      221,
      38,
      18,
      20,
      2,
      3,
      147,
      5,
      12,
      32
    ],
    "code_indx_copy": [
      149,
      12,
      29,
      16,
      19,
      149,
      12,
      29,
      16,
      22,
      59,
      1,
      44,
      26,
      13,
      20,
      1,
      25,
      1,
      26,
      17,
      12,
      14,
      184,
      13,
      16,
      17,
      17
    ],
    "code_indx_nocopy": [
      149,
      12,
      29,
      16,
      19,
      149,
      12,
      29,
      16,
      22,
      59,
      1,
      44,
      26,
      13,
      20,
      1,
      25,
      1,
      26,
      17,
      12,
      14,
      184,
      13,
      16,
      17,
      17
    ]
  },
  {
    "intent": [
      "sum",
      "a",
      "list",
      "of",
      "numbers",
      "var_0"
    ],
    "code": [
      "sum",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "list_of_nums",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      112,
      3,
      4,
      2,
      97,
      26
    ],
    "code_indx_copy": [
      0,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      0,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "get",
      "an",
      "item",
      "from",
      "a",
      "list",
      "of",
      "dictionary",
      "var_0",
      "which",
      "has",
      "maximum",
      "value",
      "in",
      "the",
      "key",
      "var_1",
      "using",
      "lambda",
      "function"
    ],
    "code": [
      "max",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "x",
      "[",
      "'var_1'",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "lst",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "score",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      225,
      156,
      58,
      3,
      4,
      2,
      25,
      26,
      205,
      337,
      227,
      143,
      24,
      18,
      23,
      63,
      109,
      68,
      69
    ],
    "code_indx_copy": [
      179,
      1,
      34,
      8,
      102,
      19,
      44,
      26,
      13,
      26,
      12,
      57,
      16,
      17
    ],
    "code_indx_nocopy": [
      179,
      1,
      34,
      8,
      102,
      19,
      44,
      26,
      13,
      26,
      12,
      57,
      16,
      17
    ]
  },
  {
    "intent": [
      "beautifulsoup",
      "find",
      "all",
      "tags",
      "with",
      "attribute",
      "str_0",
      "equal",
      "to",
      "str_1"
    ],
    "code": [
      "soup",
      ".",
      "findAll",
      "(",
      "attrs",
      "=",
      "{",
      "'str_0'",
      ":",
      "'str_1'",
      "}",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "name",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "description",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      70,
      47,
      38,
      392,
      79,
      341,
      5,
      106,
      8,
      32
    ],
    "code_indx_copy": [
      61,
      22,
      254,
      1,
      524,
      19,
      52,
      29,
      13,
      63,
      53,
      17
    ],
    "code_indx_nocopy": [
      61,
      22,
      254,
      1,
      524,
      19,
      52,
      29,
      13,
      63,
      53,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "all",
      "spaces",
      "from",
      "a",
      "string",
      "converted",
      "from",
      "dictionary",
      "str_0"
    ],
    "code": [
      "str",
      "(",
      "{",
      "str_0",
      "}",
      ")",
      ".",
      "replace",
      "(",
      "': '",
      ",",
      "':'",
      ")",
      ".",
      "replace",
      "(",
      "', '",
      ",",
      "','",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "{'a': 1, 'b': 'as df'}",
        "quote": "`",
        "type": "str"
      },
      "{str_0}": {
        "value": "{'a': 1, 'b': 'as df'}",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      268,
      38,
      132,
      58,
      3,
      14,
      465,
      58,
      25,
      5
    ],
    "code_indx_copy": [
      25,
      1,
      52,
      11,
      53,
      17,
      22,
      107,
      1,
      524,
      8,
      72,
      17,
      22,
      107,
      1,
      419,
      8,
      73,
      17
    ],
    "code_indx_nocopy": [
      25,
      1,
      52,
      11,
      53,
      17,
      22,
      107,
      1,
      524,
      8,
      72,
      17,
      22,
      107,
      1,
      419,
      8,
      73,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "dictionary",
      "var_0",
      "into",
      "a",
      "string",
      "formatted",
      "object"
    ],
    "code": [
      "'{'",
      "+",
      "','",
      ".",
      "join",
      "(",
      "'{0!r}:{1!r}'",
      ".",
      "format",
      "(",
      "*",
      "x",
      ")",
      "for",
      "x",
      "in",
      "list",
      "(",
      "dct",
      ".",
      "items",
      "(",
      ")",
      ")",
      ")",
      "+",
      "'}'"
    ],
    "slot_map": {
      "var_0": {
        "value": "dict",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      25,
      26,
      12,
      3,
      14,
      288,
      15
    ],
    "code_indx_copy": [
      524,
      96,
      73,
      22,
      23,
      1,
      524,
      22,
      38,
      1,
      3,
      26,
      17,
      7,
      26,
      9,
      33,
      1,
      524,
      22,
      35,
      1,
      17,
      17,
      17,
      96,
      524
    ],
    "code_indx_nocopy": [
      524,
      96,
      73,
      22,
      23,
      1,
      524,
      22,
      38,
      1,
      3,
      26,
      17,
      7,
      26,
      9,
      33,
      1,
      524,
      22,
      35,
      1,
      17,
      17,
      17,
      96,
      524
    ]
  },
  {
    "intent": [
      "concatenate",
      "items",
      "from",
      "list",
      "var_0",
      "into",
      "a",
      "string",
      "starting",
      "from",
      "the",
      "second",
      "element"
    ],
    "code": [
      "\"\"\"\"\"\"",
      ".",
      "join",
      "(",
      "var_0",
      "[",
      "1",
      ":",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "parts",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      0,
      39,
      58,
      4,
      26,
      12,
      3,
      14,
      316,
      58,
      18,
      118,
      49
    ],
    "code_indx_copy": [
      287,
      22,
      23,
      1,
      34,
      12,
      15,
      13,
      16,
      17
    ],
    "code_indx_nocopy": [
      287,
      22,
      23,
      1,
      34,
      12,
      15,
      13,
      16,
      17
    ]
  },
  {
    "intent": [
      "insert",
      "a",
      "character",
      "str_0",
      "into",
      "a",
      "string",
      "in",
      "front",
      "of",
      "str_1",
      "character",
      "in",
      "second",
      "part",
      "of",
      "the",
      "string"
    ],
    "code": [
      "\"\"\",+\"\"\"",
      ".",
      "join",
      "(",
      "c",
      ".",
      "rsplit",
      "(",
      "'str_1'",
      ",",
      "1",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": ",",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "+",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      277,
      3,
      202,
      5,
      12,
      3,
      14,
      24,
      269,
      2,
      32,
      202,
      24,
      118,
      465,
      2,
      18,
      14
    ],
    "code_indx_copy": [
      524,
      22,
      23,
      1,
      66,
      22,
      268,
      1,
      63,
      8,
      15,
      17,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      23,
      1,
      66,
      22,
      268,
      1,
      63,
      8,
      15,
      17,
      17
    ]
  },
  {
    "intent": [
      "delete",
      "all",
      "rows",
      "in",
      "a",
      "numpy",
      "array",
      "var_0",
      "where",
      "any",
      "value",
      "in",
      "a",
      "row",
      "is",
      "zero",
      "str_0"
    ],
    "code": [
      "var_0",
      "[",
      "np",
      ".",
      "all",
      "(",
      "var_0",
      "!=",
      "0",
      ",",
      "axis",
      "=",
      "1",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "0",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      86,
      38,
      80,
      24,
      3,
      84,
      85,
      26,
      155,
      272,
      143,
      24,
      3,
      45,
      152,
      261,
      5
    ],
    "code_indx_copy": [
      34,
      12,
      74,
      22,
      77,
      1,
      34,
      88,
      43,
      8,
      42,
      19,
      15,
      17,
      16
    ],
    "code_indx_nocopy": [
      34,
      12,
      74,
      22,
      77,
      1,
      34,
      88,
      43,
      8,
      42,
      19,
      15,
      17,
      16
    ]
  },
  {
    "intent": [
      "extract",
      "only",
      "alphabetic",
      "characters",
      "from",
      "a",
      "string",
      "str_0"
    ],
    "code": [
      "\"\"\" \"\"\"",
      ".",
      "join",
      "(",
      "re",
      ".",
      "split",
      "(",
      "'[^a-zA-Z]*'",
      ",",
      "'str_0'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "your string",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      104,
      352,
      465,
      98,
      58,
      3,
      14,
      5
    ],
    "code_indx_copy": [
      215,
      22,
      23,
      1,
      39,
      22,
      71,
      1,
      524,
      8,
      29,
      17,
      17
    ],
    "code_indx_nocopy": [
      215,
      22,
      23,
      1,
      39,
      22,
      71,
      1,
      524,
      8,
      29,
      17,
      17
    ]
  },
  {
    "intent": [
      "extract",
      "only",
      "characters",
      "from",
      "a",
      "string",
      "as",
      "a",
      "list"
    ],
    "code": [
      "re",
      ".",
      "split",
      "(",
      "'[^a-zA-Z]*'",
      ",",
      "'your string'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      104,
      352,
      98,
      58,
      3,
      14,
      90,
      3,
      4
    ],
    "code_indx_copy": [
      39,
      22,
      71,
      1,
      524,
      8,
      524,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      71,
      1,
      524,
      8,
      524,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "union",
      "set",
      "from",
      "list",
      "of",
      "lists",
      "var_0"
    ],
    "code": [
      "results_union",
      "=",
      "set",
      "(",
      ")",
      ".",
      "union",
      "(",
      "*",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "results_list",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      18,
      465,
      59,
      58,
      4,
      2,
      30,
      26
    ],
    "code_indx_copy": [
      524,
      19,
      189,
      1,
      17,
      22,
      530,
      1,
      3,
      34,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      189,
      1,
      17,
      22,
      524,
      1,
      3,
      34,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "union",
      "of",
      "values",
      "in",
      "list",
      "of",
      "lists",
      "var_0"
    ],
    "code": [
      "return",
      "list",
      "(",
      "set",
      "(",
      "itertools",
      ".",
      "chain",
      "(",
      "*",
      "var_0",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "result_list",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      18,
      465,
      2,
      20,
      24,
      4,
      2,
      30,
      26
    ],
    "code_indx_copy": [
      118,
      33,
      1,
      189,
      1,
      50,
      22,
      450,
      1,
      3,
      34,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      118,
      33,
      1,
      189,
      1,
      50,
      22,
      450,
      1,
      3,
      34,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "a",
      "numpy",
      "array",
      "var_0",
      "contains",
      "any",
      "element",
      "of",
      "another",
      "array",
      "var_1"
    ],
    "code": [
      "np",
      ".",
      "any",
      "(",
      "np",
      ".",
      "in1d",
      "(",
      "var_0",
      ",",
      "var_1",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a1",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "a2",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      234,
      150,
      3,
      84,
      85,
      26,
      75,
      272,
      49,
      2,
      176,
      85,
      63
    ],
    "code_indx_copy": [
      74,
      22,
      269,
      1,
      74,
      22,
      261,
      1,
      34,
      8,
      91,
      17,
      17
    ],
    "code_indx_nocopy": [
      74,
      22,
      269,
      1,
      74,
      22,
      261,
      1,
      34,
      8,
      91,
      17,
      17
    ]
  },
  {
    "intent": [
      "removing",
      "control",
      "characters",
      "from",
      "a",
      "string",
      "var_0"
    ],
    "code": [
      "return",
      "''",
      ".",
      "join",
      "(",
      "ch",
      "for",
      "ch",
      "in",
      "var_0",
      "if",
      "unicodedata",
      ".",
      "category",
      "(",
      "ch",
      ")",
      "[",
      "0",
      "]",
      "!=",
      "'C'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      99,
      465,
      98,
      58,
      3,
      14,
      26
    ],
    "code_indx_copy": [
      118,
      21,
      22,
      23,
      1,
      511,
      7,
      511,
      9,
      34,
      67,
      275,
      22,
      524,
      1,
      511,
      17,
      12,
      43,
      16,
      88,
      326,
      17
    ],
    "code_indx_nocopy": [
      118,
      21,
      22,
      23,
      1,
      511,
      7,
      511,
      9,
      34,
      67,
      275,
      22,
      524,
      1,
      511,
      17,
      12,
      43,
      16,
      88,
      326,
      17
    ]
  },
  {
    "intent": [
      "compare",
      "if",
      "each",
      "value",
      "in",
      "list",
      "var_0",
      "is",
      "less",
      "than",
      "respective",
      "index",
      "value",
      "in",
      "list",
      "var_1"
    ],
    "code": [
      "all",
      "(",
      "i",
      "<",
      "j",
      "for",
      "i",
      ",",
      "j",
      "in",
      "zip",
      "(",
      "var_0",
      ",",
      "var_1",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "b",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      150,
      22,
      143,
      24,
      4,
      26,
      152,
      465,
      264,
      355,
      37,
      143,
      24,
      4,
      63
    ],
    "code_indx_copy": [
      77,
      1,
      6,
      344,
      30,
      7,
      6,
      8,
      30,
      9,
      36,
      1,
      34,
      8,
      91,
      17,
      17
    ],
    "code_indx_nocopy": [
      77,
      1,
      6,
      344,
      30,
      7,
      6,
      8,
      30,
      9,
      36,
      1,
      34,
      8,
      91,
      17,
      17
    ]
  },
  {
    "intent": [
      "python",
      "selenium",
      "click",
      "on",
      "button",
      "str_0"
    ],
    "code": [
      "driver",
      ".",
      "find_element_by_css_selector",
      "(",
      "'str_0'",
      ")",
      ".",
      "click",
      "(",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": ".button.c_button.s_button",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      50,
      51,
      465,
      139,
      455,
      5
    ],
    "code_indx_copy": [
      46,
      22,
      330,
      1,
      29,
      17,
      22,
      156,
      1,
      17
    ],
    "code_indx_nocopy": [
      46,
      22,
      330,
      1,
      29,
      17,
      22,
      156,
      1,
      17
    ]
  },
  {
    "intent": [
      "python",
      "selenium",
      "click",
      "on",
      "button"
    ],
    "code": [
      "driver",
      ".",
      "find_element_by_css_selector",
      "(",
      "'.button .c_button .s_button'",
      ")",
      ".",
      "click",
      "(",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      50,
      51,
      465,
      139,
      455
    ],
    "code_indx_copy": [
      46,
      22,
      330,
      1,
      524,
      17,
      22,
      156,
      1,
      17
    ],
    "code_indx_nocopy": [
      46,
      22,
      330,
      1,
      524,
      17,
      22,
      156,
      1,
      17
    ]
  },
  {
    "intent": [
      "kill",
      "a",
      "process",
      "str_0",
      "from",
      "python",
      "script",
      "on",
      "windows"
    ],
    "code": [
      "os",
      ".",
      "system",
      "(",
      "'taskkill /im make.exe'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "make.exe",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      3,
      444,
      5,
      58,
      50,
      246,
      139,
      435
    ],
    "code_indx_copy": [
      113,
      22,
      119,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      119,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "sqlalchemy",
      "select",
      "records",
      "of",
      "columns",
      "of",
      "table",
      "var_0",
      "in",
      "addition",
      "to",
      "current",
      "date",
      "column"
    ],
    "code": [
      "print",
      "(",
      "select",
      "(",
      "[",
      "var_0",
      ",",
      "func",
      ".",
      "current_date",
      "(",
      ")",
      "]",
      ")",
      ".",
      "execute",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "my_table",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      369,
      78,
      374,
      2,
      61,
      2,
      388,
      26,
      24,
      465,
      8,
      179,
      133,
      147
    ],
    "code_indx_copy": [
      49,
      1,
      358,
      1,
      12,
      34,
      8,
      524,
      22,
      524,
      1,
      17,
      16,
      17,
      22,
      411,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      358,
      1,
      12,
      34,
      8,
      524,
      22,
      524,
      1,
      17,
      16,
      17,
      22,
      411,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "duplicate",
      "characters",
      "from",
      "string",
      "str_0"
    ],
    "code": [
      "re",
      ".",
      "sub",
      "(",
      "'([a-z])\\\\1+'",
      ",",
      "'\\\\1'",
      ",",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "ffffffbbbbbbbqqq",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      268,
      411,
      98,
      58,
      14,
      5
    ],
    "code_indx_copy": [
      39,
      22,
      40,
      1,
      524,
      8,
      41,
      8,
      29,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      40,
      1,
      524,
      8,
      41,
      8,
      29,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "periods",
      "inbetween",
      "capital",
      "letters",
      "that",
      "are",
      "n't",
      "immediately",
      "preceeded",
      "by",
      "word",
      "character",
      "(",
      "s",
      ")",
      "in",
      "a",
      "string",
      "var_0",
      "using",
      "regular",
      "expressions"
    ],
    "code": [
      "re",
      ".",
      "sub",
      "(",
      "'(?<!\\\\w)([A-Z])\\\\.'",
      ",",
      "'\\\\1'",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      465,
      465,
      465,
      360,
      195,
      243,
      465,
      465,
      465,
      44,
      239,
      202,
      212,
      465,
      27,
      24,
      3,
      14,
      26,
      109,
      250,
      465
    ],
    "code_indx_copy": [
      39,
      22,
      40,
      1,
      524,
      8,
      41,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      40,
      1,
      524,
      8,
      41,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "list",
      "of",
      "strings",
      "var_0",
      "with",
      "fixed",
      "chunk",
      "size",
      "var_1",
      "from",
      "a",
      "string",
      "var_2"
    ],
    "code": [
      "split_list",
      "=",
      "[",
      "var_2",
      "[",
      "i",
      ":",
      "i",
      "+",
      "var_1",
      "]",
      "for",
      "i",
      "in",
      "range",
      "(",
      "0",
      ",",
      "len",
      "(",
      "var_2",
      ")",
      ",",
      "var_1",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "split_text",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "n",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "the_list",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      3,
      4,
      2,
      259,
      26,
      79,
      465,
      465,
      334,
      63,
      58,
      3,
      14,
      64
    ],
    "code_indx_copy": [
      524,
      19,
      12,
      94,
      12,
      6,
      13,
      6,
      96,
      91,
      16,
      7,
      6,
      9,
      104,
      1,
      43,
      8,
      32,
      1,
      94,
      17,
      8,
      91,
      17,
      16
    ],
    "code_indx_nocopy": [
      524,
      19,
      12,
      94,
      12,
      6,
      13,
      6,
      96,
      91,
      16,
      7,
      6,
      9,
      104,
      1,
      43,
      8,
      32,
      1,
      94,
      17,
      8,
      91,
      17,
      16
    ]
  },
  {
    "intent": [
      "match",
      "string",
      "str_0",
      "with",
      "regex",
      "str_1",
      "then",
      "replace",
      "it",
      "with",
      "regex",
      "str_2"
    ],
    "code": [
      "re",
      ".",
      "sub",
      "(",
      "'str_1'",
      ",",
      "'str_2'",
      ",",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "this is my string",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "\\b(this|string)\\b",
        "quote": "'",
        "type": "str"
      },
      "str_2": {
        "value": "<markup>\\1</markup>",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      144,
      14,
      5,
      79,
      40,
      32,
      260,
      130,
      145,
      79,
      40,
      194
    ],
    "code_indx_copy": [
      39,
      22,
      40,
      1,
      63,
      8,
      150,
      8,
      29,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      40,
      1,
      63,
      8,
      150,
      8,
      29,
      17
    ]
  },
  {
    "intent": [
      "output",
      "data",
      "of",
      "the",
      "first",
      "7",
      "columns",
      "of",
      "pandas",
      "dataframe"
    ],
    "code": [
      "pandas",
      ".",
      "set_option",
      "(",
      "'display.max_columns'",
      ",",
      "7",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      257,
      65,
      2,
      18,
      151,
      340,
      61,
      2,
      42,
      43
    ],
    "code_indx_copy": [
      276,
      22,
      524,
      1,
      524,
      8,
      219,
      17
    ],
    "code_indx_nocopy": [
      276,
      22,
      524,
      1,
      524,
      8,
      219,
      17
    ]
  },
  {
    "intent": [
      "display",
      "maximum",
      "output",
      "data",
      "of",
      "columns",
      "in",
      "dataframe",
      "var_0",
      "that",
      "will",
      "fit",
      "into",
      "the",
      "screen"
    ],
    "code": [
      "var_0",
      ".",
      "set_option",
      "(",
      "'display.max_columns'",
      ",",
      "None",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "pandas",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      363,
      227,
      257,
      65,
      2,
      61,
      24,
      43,
      26,
      195,
      465,
      465,
      12,
      18,
      465
    ],
    "code_indx_copy": [
      34,
      22,
      524,
      1,
      524,
      8,
      209,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      524,
      1,
      524,
      8,
      209,
      17
    ]
  },
  {
    "intent": [
      "set",
      "the",
      "value",
      "in",
      "column",
      "str_0",
      "to",
      "nan",
      "if",
      "the",
      "corresponding",
      "value",
      "in",
      "column",
      "str_1",
      "is",
      "equal",
      "to",
      "0",
      "in",
      "pandas",
      "dataframe",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "ix",
      "[",
      "var_0",
      ".",
      "str_1",
      "==",
      "0",
      ",",
      "'str_0'",
      "]",
      "=",
      "np",
      ".",
      "nan"
    ],
    "slot_map": {
      "str_0": {
        "value": "B",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "A",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      59,
      18,
      143,
      24,
      147,
      5,
      8,
      289,
      150,
      18,
      347,
      143,
      24,
      147,
      32,
      152,
      106,
      8,
      107,
      24,
      42,
      43,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      201,
      12,
      34,
      22,
      37,
      76,
      43,
      8,
      29,
      16,
      19,
      74,
      22,
      535
    ],
    "code_indx_nocopy": [
      34,
      22,
      201,
      12,
      34,
      22,
      37,
      76,
      43,
      8,
      29,
      16,
      19,
      74,
      22,
      524
    ]
  },
  {
    "intent": [
      "selecting",
      "element",
      "str_0",
      "followed",
      "by",
      "text",
      "str_1",
      "with",
      "selenium",
      "webdriver",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "find_element_by_xpath",
      "(",
      "\"//li/label/input[contains(..,'polishpottery')]\"",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "//li/label/input",
        "quote": "\"",
        "type": "str"
      },
      "str_1": {
        "value": "polishpottery",
        "quote": "\"",
        "type": "str"
      },
      "var_0": {
        "value": "driver",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      49,
      5,
      368,
      44,
      267,
      32,
      79,
      51,
      332,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      47,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      47,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "list",
      "of",
      "dictionaries",
      "var_0",
      "by",
      "keys",
      "str_0",
      "and",
      "str_1"
    ],
    "code": [
      "var_0",
      ".",
      "sort",
      "(",
      "key",
      "=",
      "operator",
      ".",
      "itemgetter",
      "(",
      "'str_0'",
      ",",
      "'str_1'",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "mylist",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "weight",
        "quote": "\"",
        "type": "str"
      },
      "str_1": {
        "value": "factor",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      117,
      3,
      4,
      2,
      188,
      26,
      44,
      206,
      5,
      31,
      32
    ],
    "code_indx_copy": [
      34,
      22,
      124,
      1,
      102,
      19,
      127,
      22,
      128,
      1,
      29,
      8,
      63,
      17,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      124,
      1,
      102,
      19,
      127,
      22,
      128,
      1,
      29,
      8,
      63,
      17,
      17
    ]
  },
  {
    "intent": [
      "ordering",
      "a",
      "list",
      "of",
      "dictionaries",
      "var_0",
      "by",
      "elements",
      "str_0",
      "and",
      "str_1"
    ],
    "code": [
      "var_0",
      ".",
      "sort",
      "(",
      "key",
      "=",
      "lambda",
      "d",
      ":",
      "(",
      "d",
      "[",
      "'str_0'",
      "]",
      ",",
      "d",
      "[",
      "'str_1'",
      "]",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "mylist",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "weight",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "factor",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      3,
      4,
      2,
      188,
      26,
      44,
      1,
      5,
      31,
      32
    ],
    "code_indx_copy": [
      34,
      22,
      124,
      1,
      102,
      19,
      44,
      2,
      13,
      1,
      2,
      12,
      29,
      16,
      8,
      2,
      12,
      63,
      16,
      17,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      124,
      1,
      102,
      19,
      44,
      2,
      13,
      1,
      2,
      12,
      29,
      16,
      8,
      2,
      12,
      63,
      16,
      17,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "list",
      "of",
      "lists",
      "var_0",
      "to",
      "a",
      "dictionary",
      "with",
      "key",
      "as",
      "second",
      "value",
      "of",
      "a",
      "list",
      "and",
      "value",
      "as",
      "list",
      "itself"
    ],
    "code": [
      "{",
      "x",
      "[",
      "1",
      "]",
      ":",
      "x",
      "for",
      "x",
      "in",
      "var_0",
      "}"
    ],
    "slot_map": {
      "var_0": {
        "value": "lol",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      3,
      4,
      2,
      30,
      26,
      8,
      3,
      25,
      79,
      23,
      90,
      118,
      143,
      2,
      3,
      4,
      31,
      143,
      90,
      4,
      465
    ],
    "code_indx_copy": [
      52,
      26,
      12,
      15,
      16,
      13,
      26,
      7,
      26,
      9,
      34,
      53
    ],
    "code_indx_nocopy": [
      52,
      26,
      12,
      15,
      16,
      13,
      26,
      7,
      26,
      9,
      34,
      53
    ]
  },
  {
    "intent": [
      "sort",
      "keys",
      "of",
      "dictionary",
      "str_0",
      "based",
      "on",
      "their",
      "values"
    ],
    "code": [
      "sorted",
      "(",
      "str_0",
      ",",
      "key",
      "=",
      "lambda",
      "k",
      ":",
      "str_0",
      "[",
      "k",
      "]",
      "[",
      "1",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "d",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      117,
      206,
      2,
      25,
      5,
      208,
      139,
      294,
      20
    ],
    "code_indx_copy": [
      101,
      1,
      11,
      8,
      102,
      19,
      44,
      89,
      13,
      11,
      12,
      89,
      16,
      12,
      15,
      16,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      11,
      8,
      102,
      19,
      44,
      89,
      13,
      11,
      12,
      89,
      16,
      12,
      15,
      16,
      17
    ]
  },
  {
    "intent": [
      "round",
      "123",
      "to",
      "100"
    ],
    "code": [
      "int",
      "(",
      "round",
      "(",
      "123",
      ",",
      "-",
      "2",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      253,
      465,
      8,
      373
    ],
    "code_indx_copy": [
      20,
      1,
      208,
      1,
      422,
      8,
      14,
      82,
      17,
      17
    ],
    "code_indx_nocopy": [
      20,
      1,
      208,
      1,
      422,
      8,
      14,
      82,
      17,
      17
    ]
  },
  {
    "intent": [
      "create",
      "file",
      "str_0",
      "if",
      "file",
      "str_0",
      "does",
      "not",
      "exist"
    ],
    "code": [
      "fd",
      "=",
      "os",
      ".",
      "open",
      "(",
      "'str_1'",
      ",",
      "os",
      ".",
      "O_WRONLY",
      "|",
      "os",
      ".",
      "O_CREAT",
      "|",
      "os",
      ".",
      "O_EXCL",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "x",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "x",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      148,
      126,
      5,
      150,
      126,
      5,
      184,
      105,
      185
    ],
    "code_indx_copy": [
      524,
      19,
      113,
      22,
      105,
      1,
      63,
      8,
      113,
      22,
      524,
      412,
      113,
      22,
      524,
      412,
      113,
      22,
      524,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      113,
      22,
      105,
      1,
      63,
      8,
      113,
      22,
      524,
      412,
      113,
      22,
      524,
      412,
      113,
      22,
      524,
      17
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "list",
      "of",
      "last",
      "trailing",
      "words",
      "from",
      "another",
      "list",
      "of",
      "stringsvar_0"
    ],
    "code": [
      "new_list",
      "=",
      "[",
      "x",
      ".",
      "split",
      "(",
      ")",
      "[",
      "-",
      "1",
      "]",
      "for",
      "x",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "Original_List",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      3,
      4,
      2,
      170,
      300,
      41,
      58,
      176,
      4,
      2,
      465
    ],
    "code_indx_copy": [
      524,
      19,
      12,
      26,
      22,
      71,
      1,
      17,
      12,
      14,
      15,
      16,
      7,
      26,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      524,
      19,
      12,
      26,
      22,
      71,
      1,
      17,
      12,
      14,
      15,
      16,
      7,
      26,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "reverse",
      "a",
      "string",
      "str_0"
    ],
    "code": [
      "\"\"\"str_0\"\"\"",
      "[",
      ":",
      ":",
      "-",
      "1",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "hello world",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      282,
      3,
      14,
      5
    ],
    "code_indx_copy": [
      212,
      12,
      13,
      13,
      14,
      15,
      16
    ],
    "code_indx_nocopy": [
      212,
      12,
      13,
      13,
      14,
      15,
      16
    ]
  },
  {
    "intent": [
      "reverse",
      "list",
      "var_0"
    ],
    "code": [
      "var_0",
      "[",
      ":",
      ":",
      "-",
      "1",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      282,
      4,
      26
    ],
    "code_indx_copy": [
      34,
      12,
      13,
      13,
      14,
      15,
      16
    ],
    "code_indx_nocopy": [
      34,
      12,
      13,
      13,
      14,
      15,
      16
    ]
  },
  {
    "intent": [
      "reverse",
      "string",
      "str_0"
    ],
    "code": [
      "\"\"\"\"\"\"",
      ".",
      "join",
      "(",
      "reversed",
      "(",
      "'str_0'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "foo",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      282,
      14,
      5
    ],
    "code_indx_copy": [
      287,
      22,
      23,
      1,
      246,
      1,
      29,
      17,
      17
    ],
    "code_indx_nocopy": [
      287,
      22,
      23,
      1,
      246,
      1,
      29,
      17,
      17
    ]
  },
  {
    "intent": [
      "reverse",
      "a",
      "string",
      "var_0"
    ],
    "code": [
      "\"\"\"\"\"\"",
      ".",
      "join",
      "(",
      "reversed",
      "(",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "string",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      282,
      3,
      14,
      26
    ],
    "code_indx_copy": [
      287,
      22,
      23,
      1,
      246,
      1,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      287,
      22,
      23,
      1,
      246,
      1,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "reverse",
      "a",
      "string",
      "str_0"
    ],
    "code": [
      "\"\"\"str_0\"\"\"",
      "[",
      ":",
      ":",
      "-",
      "1",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "foo",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      282,
      3,
      14,
      5
    ],
    "code_indx_copy": [
      212,
      12,
      13,
      13,
      14,
      15,
      16
    ],
    "code_indx_nocopy": [
      212,
      12,
      13,
      13,
      14,
      15,
      16
    ]
  },
  {
    "intent": [
      "reverse",
      "a",
      "string",
      "var_0"
    ],
    "code": [
      "var_0",
      "[",
      ":",
      ":",
      "-",
      "1",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "a_string",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      282,
      3,
      14,
      26
    ],
    "code_indx_copy": [
      34,
      12,
      13,
      13,
      14,
      15,
      16
    ],
    "code_indx_nocopy": [
      34,
      12,
      13,
      13,
      14,
      15,
      16
    ]
  },
  {
    "intent": [
      "reverse",
      "a",
      "string",
      "var_0"
    ],
    "code": [
      "def",
      "reversed_string",
      "(",
      "var_0",
      ")",
      ":",
      "\n",
      "    ",
      "return",
      "var_0",
      "[",
      ":",
      ":",
      "-",
      "1",
      "]",
      ""
    ],
    "slot_map": {
      "var_0": {
        "value": "a_string",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      282,
      3,
      14,
      26
    ],
    "code_indx_copy": [
      524,
      524,
      1,
      34,
      17,
      13,
      161,
      216,
      118,
      34,
      12,
      13,
      13,
      14,
      15,
      16,
      218
    ],
    "code_indx_nocopy": [
      524,
      524,
      1,
      34,
      17,
      13,
      161,
      216,
      118,
      34,
      12,
      13,
      13,
      14,
      15,
      16,
      218
    ]
  },
  {
    "intent": [
      "reverse",
      "a",
      "string",
      "var_0"
    ],
    "code": [
      "\"\"\"\"\"\"",
      ".",
      "join",
      "(",
      "reversed",
      "(",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      282,
      3,
      14,
      26
    ],
    "code_indx_copy": [
      287,
      22,
      23,
      1,
      246,
      1,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      287,
      22,
      23,
      1,
      246,
      1,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "generate",
      "a",
      "string",
      "of",
      "numbers",
      "separated",
      "by",
      "comma",
      "which",
      "is",
      "divisible",
      "by",
      "str_0",
      "with",
      "remainder",
      "str_1",
      "or",
      "str_2",
      "."
    ],
    "code": [
      "\"\"\",\"\"\"",
      ".",
      "join",
      "(",
      "str",
      "(",
      "i",
      ")",
      "for",
      "i",
      "in",
      "range",
      "(",
      "100",
      ")",
      "if",
      "i",
      "%",
      "4",
      "in",
      "(",
      "1",
      ",",
      "2",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "4",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": "1",
        "quote": "`",
        "type": "str"
      },
      "str_2": {
        "value": "2",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      56,
      3,
      14,
      2,
      97,
      338,
      44,
      417,
      205,
      152,
      465,
      44,
      5,
      79,
      465,
      32,
      344,
      194,
      159
    ],
    "code_indx_copy": [
      524,
      22,
      23,
      1,
      25,
      1,
      6,
      17,
      7,
      6,
      9,
      104,
      1,
      267,
      17,
      67,
      6,
      117,
      184,
      9,
      1,
      15,
      8,
      82,
      17,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      23,
      1,
      25,
      1,
      6,
      17,
      7,
      6,
      9,
      104,
      1,
      267,
      17,
      67,
      6,
      117,
      184,
      9,
      1,
      15,
      8,
      82,
      17,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "list",
      "var_0",
      "of",
      "key",
      ",",
      "value",
      "pairs",
      "into",
      "a",
      "dictionary"
    ],
    "code": [
      "dict",
      "(",
      "[",
      "(",
      "e",
      "[",
      "0",
      "]",
      ",",
      "int",
      "(",
      "e",
      "[",
      "1",
      "]",
      ")",
      ")",
      "for",
      "e",
      "in",
      "var_0",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "lst",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      4,
      26,
      2,
      23,
      62,
      143,
      187,
      12,
      3,
      25
    ],
    "code_indx_copy": [
      70,
      1,
      12,
      1,
      420,
      12,
      43,
      16,
      8,
      20,
      1,
      420,
      12,
      15,
      16,
      17,
      17,
      7,
      420,
      9,
      34,
      16,
      17
    ],
    "code_indx_nocopy": [
      70,
      1,
      12,
      1,
      420,
      12,
      43,
      16,
      8,
      20,
      1,
      420,
      12,
      15,
      16,
      17,
      17,
      7,
      420,
      9,
      34,
      16,
      17
    ]
  },
  {
    "intent": [
      "sorting",
      "a",
      "list",
      "of",
      "tuples",
      "var_0",
      "where",
      "each",
      "tuple",
      "is",
      "reversed"
    ],
    "code": [
      "sorted",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "lambda",
      "tup",
      ":",
      "tup",
      "[",
      ":",
      ":",
      "-",
      "1",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "list_of_tuples",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      283,
      3,
      4,
      2,
      33,
      26,
      155,
      22,
      113,
      152,
      465
    ],
    "code_indx_copy": [
      101,
      1,
      34,
      8,
      102,
      19,
      44,
      309,
      13,
      309,
      12,
      13,
      13,
      14,
      15,
      16,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      34,
      8,
      102,
      19,
      44,
      309,
      13,
      309,
      12,
      13,
      13,
      14,
      15,
      16,
      17
    ]
  },
  {
    "intent": [
      "sorting",
      "a",
      "list",
      "of",
      "tuples",
      "var_0",
      "by",
      "second",
      "key"
    ],
    "code": [
      "sorted",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "lambda",
      "tup",
      ":",
      "tup",
      "[",
      "1",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "list_of_tuples",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      283,
      3,
      4,
      2,
      33,
      26,
      44,
      118,
      23
    ],
    "code_indx_copy": [
      101,
      1,
      34,
      8,
      102,
      19,
      44,
      309,
      13,
      309,
      12,
      15,
      16,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      34,
      8,
      102,
      19,
      44,
      309,
      13,
      309,
      12,
      15,
      16,
      17
    ]
  },
  {
    "intent": [
      "concatenating",
      "two",
      "one-dimensional",
      "numpy",
      "arrays",
      "str_0",
      "and",
      "str_1",
      "."
    ],
    "code": [
      "numpy",
      ".",
      "concatenate",
      "(",
      "[",
      "str_0",
      ",",
      "str_1",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "a",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "b",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      461,
      29,
      465,
      84,
      165,
      5,
      31,
      32,
      159
    ],
    "code_indx_copy": [
      147,
      22,
      491,
      1,
      12,
      11,
      8,
      37,
      16,
      17
    ],
    "code_indx_nocopy": [
      147,
      22,
      491,
      1,
      12,
      11,
      8,
      37,
      16,
      17
    ]
  },
  {
    "intent": [
      "writing",
      "items",
      "in",
      "list",
      "var_0",
      "to",
      "file",
      "var_1"
    ],
    "code": [
      "for",
      "item",
      "in",
      "var_0",
      ":",
      "\n",
      "    ",
      "var_1",
      ".",
      "write",
      "(",
      "'%s\\n'",
      "%",
      "item",
      ")",
      ""
    ],
    "slot_map": {
      "var_0": {
        "value": "thelist",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "thefile",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      451,
      39,
      24,
      4,
      26,
      8,
      126,
      63
    ],
    "code_indx_copy": [
      7,
      387,
      9,
      34,
      13,
      161,
      216,
      91,
      22,
      131,
      1,
      524,
      117,
      387,
      17,
      218
    ],
    "code_indx_nocopy": [
      7,
      387,
      9,
      34,
      13,
      161,
      216,
      91,
      22,
      131,
      1,
      524,
      117,
      387,
      17,
      218
    ]
  },
  {
    "intent": [
      "writing",
      "items",
      "in",
      "list",
      "var_0",
      "to",
      "file",
      "var_1"
    ],
    "code": [
      "for",
      "item",
      "in",
      "var_0",
      ":",
      "\n",
      "    ",
      "pass",
      ""
    ],
    "slot_map": {
      "var_0": {
        "value": "thelist",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "thefile",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      451,
      39,
      24,
      4,
      26,
      8,
      126,
      63
    ],
    "code_indx_copy": [
      7,
      387,
      9,
      34,
      13,
      161,
      216,
      217,
      218
    ],
    "code_indx_nocopy": [
      7,
      387,
      9,
      34,
      13,
      161,
      216,
      217,
      218
    ]
  },
  {
    "intent": [
      "serialize",
      "var_0",
      "to",
      "file",
      "var_1"
    ],
    "code": [
      "pickle",
      ".",
      "dump",
      "(",
      "var_0",
      ",",
      "var_1",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "itemlist",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "outfile",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      26,
      8,
      126,
      63
    ],
    "code_indx_copy": [
      524,
      22,
      524,
      1,
      34,
      8,
      91,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      524,
      1,
      34,
      8,
      91,
      17
    ]
  },
  {
    "intent": [
      "writing",
      "items",
      "in",
      "list",
      "var_0",
      "to",
      "file",
      "var_1"
    ],
    "code": [
      "var_1",
      ".",
      "write",
      "(",
      "'\\n'",
      ".",
      "join",
      "(",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "itemlist",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "outfile",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      451,
      39,
      24,
      4,
      26,
      8,
      126,
      63
    ],
    "code_indx_copy": [
      91,
      22,
      131,
      1,
      133,
      22,
      23,
      1,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      91,
      22,
      131,
      1,
      133,
      22,
      23,
      1,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "update",
      "a",
      "user",
      "'s",
      "name",
      "as",
      "str_0",
      "having",
      "id",
      "str_1",
      "in",
      "sqlalchemy"
    ],
    "code": [
      "session",
      ".",
      "query",
      "(",
      "User",
      ")",
      ".",
      "filter_by",
      "(",
      "id",
      "=",
      "123",
      ")",
      ".",
      "update",
      "(",
      "{",
      "'name'",
      ":",
      "'str_0'",
      "}",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "Bob Marley",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": "123",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      242,
      3,
      174,
      266,
      129,
      90,
      5,
      92,
      440,
      32,
      24,
      369
    ],
    "code_indx_copy": [
      425,
      22,
      426,
      1,
      524,
      17,
      22,
      524,
      1,
      80,
      19,
      422,
      17,
      22,
      69,
      1,
      52,
      442,
      13,
      29,
      53,
      17
    ],
    "code_indx_nocopy": [
      425,
      22,
      426,
      1,
      524,
      17,
      22,
      524,
      1,
      80,
      19,
      422,
      17,
      22,
      69,
      1,
      52,
      442,
      13,
      29,
      53,
      17
    ]
  },
  {
    "intent": [
      "send",
      "cookies",
      "var_0",
      "in",
      "a",
      "post",
      "request",
      "to",
      "url",
      "str_0",
      "with",
      "the",
      "python",
      "requests",
      "library"
    ],
    "code": [
      "r",
      "=",
      "requests",
      ".",
      "post",
      "(",
      "'str_0'",
      ",",
      "cookies",
      "=",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "cookie",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "http://wikipedia.org",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      465,
      26,
      24,
      3,
      407,
      101,
      8,
      102,
      5,
      79,
      18,
      50,
      465,
      465
    ],
    "code_indx_copy": [
      18,
      19,
      85,
      22,
      379,
      1,
      29,
      8,
      529,
      19,
      34,
      17
    ],
    "code_indx_nocopy": [
      18,
      19,
      85,
      22,
      379,
      1,
      29,
      8,
      524,
      19,
      34,
      17
    ]
  },
  {
    "intent": [
      "insert",
      "directory",
      "str_0",
      "at",
      "the",
      "0th",
      "index",
      "of",
      "current",
      "directory"
    ],
    "code": [
      "sys",
      ".",
      "path",
      ".",
      "insert",
      "(",
      "0",
      ",",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "libs",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      277,
      175,
      5,
      35,
      18,
      465,
      37,
      2,
      179,
      175
    ],
    "code_indx_copy": [
      153,
      22,
      114,
      22,
      319,
      1,
      43,
      8,
      29,
      17
    ],
    "code_indx_nocopy": [
      153,
      22,
      114,
      22,
      319,
      1,
      43,
      8,
      29,
      17
    ]
  },
  {
    "intent": [
      "get",
      "current",
      "date",
      "and",
      "time"
    ],
    "code": [
      "datetime",
      ".",
      "datetime",
      ".",
      "now",
      "(",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      17,
      179,
      133,
      31,
      134
    ],
    "code_indx_copy": [
      27,
      22,
      27,
      22,
      294,
      1,
      17
    ],
    "code_indx_nocopy": [
      27,
      22,
      27,
      22,
      294,
      1,
      17
    ]
  },
  {
    "intent": [
      "get",
      "current",
      "time"
    ],
    "code": [
      "datetime",
      ".",
      "datetime",
      ".",
      "now",
      "(",
      ")",
      ".",
      "time",
      "(",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      17,
      179,
      134
    ],
    "code_indx_copy": [
      27,
      22,
      27,
      22,
      294,
      1,
      17,
      22,
      84,
      1,
      17
    ],
    "code_indx_nocopy": [
      27,
      22,
      27,
      22,
      294,
      1,
      17,
      22,
      84,
      1,
      17
    ]
  },
  {
    "intent": [
      "get",
      "current",
      "time",
      "in",
      "pretty",
      "format"
    ],
    "code": [
      "strftime",
      "(",
      "'%Y-%m-%d %H:%M:%S'",
      ",",
      "gmtime",
      "(",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      17,
      179,
      134,
      24,
      465,
      16
    ],
    "code_indx_copy": [
      65,
      1,
      524,
      8,
      524,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      65,
      1,
      524,
      8,
      524,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "current",
      "time",
      "in",
      "string",
      "format"
    ],
    "code": [
      "str",
      "(",
      "datetime",
      ".",
      "now",
      "(",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      17,
      179,
      134,
      24,
      14,
      16
    ],
    "code_indx_copy": [
      25,
      1,
      27,
      22,
      294,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      25,
      1,
      27,
      22,
      294,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "current",
      "time"
    ],
    "code": [
      "datetime",
      ".",
      "datetime",
      ".",
      "time",
      "(",
      "datetime",
      ".",
      "datetime",
      ".",
      "now",
      "(",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      17,
      179,
      134
    ],
    "code_indx_copy": [
      27,
      22,
      27,
      22,
      84,
      1,
      27,
      22,
      27,
      22,
      294,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      27,
      22,
      27,
      22,
      84,
      1,
      27,
      22,
      27,
      22,
      294,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "hex",
      "str_0",
      "to",
      "integer"
    ],
    "code": [
      "ord",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "\u00ff",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      116,
      5,
      8,
      10
    ],
    "code_indx_copy": [
      98,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      98,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "identify",
      "duplicated",
      "rows",
      "in",
      "columns",
      "str_0",
      "and",
      "str_1",
      "with",
      "additional",
      "column",
      "in",
      "dataframe",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "groupby",
      "(",
      "[",
      "'str_0'",
      ",",
      "'str_1'",
      "]",
      ")",
      ".",
      "cumcount",
      "(",
      ")",
      "+",
      "1"
    ],
    "slot_map": {
      "str_0": {
        "value": "PplNum",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "RoomNum",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      122,
      80,
      24,
      61,
      5,
      31,
      32,
      79,
      465,
      147,
      24,
      43,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      157,
      1,
      12,
      29,
      8,
      63,
      16,
      17,
      22,
      524,
      1,
      17,
      96,
      15
    ],
    "code_indx_nocopy": [
      34,
      22,
      157,
      1,
      12,
      29,
      8,
      63,
      16,
      17,
      22,
      524,
      1,
      17,
      96,
      15
    ]
  },
  {
    "intent": [
      "get",
      "current",
      "utc",
      "time"
    ],
    "code": [
      "datetime",
      ".",
      "utcnow",
      "(",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      17,
      179,
      180,
      134
    ],
    "code_indx_copy": [
      27,
      22,
      138,
      1,
      17
    ],
    "code_indx_nocopy": [
      27,
      22,
      138,
      1,
      17
    ]
  },
  {
    "intent": [
      "move",
      "last",
      "item",
      "of",
      "array",
      "var_0",
      "to",
      "the",
      "first",
      "position"
    ],
    "code": [
      "var_0",
      "[",
      "-",
      "1",
      ":",
      "]",
      "+",
      "var_0",
      "[",
      ":",
      "-",
      "1",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      169,
      170,
      156,
      2,
      85,
      26,
      8,
      18,
      151,
      323
    ],
    "code_indx_copy": [
      34,
      12,
      14,
      15,
      13,
      16,
      96,
      34,
      12,
      13,
      14,
      15,
      16
    ],
    "code_indx_nocopy": [
      34,
      12,
      14,
      15,
      13,
      16,
      96,
      34,
      12,
      13,
      14,
      15,
      16
    ]
  },
  {
    "intent": [
      "convert",
      "dataframe",
      "var_0",
      "to",
      "a",
      "pivot",
      "table",
      "using",
      "column",
      "str_0",
      ",",
      "str_1",
      ",",
      "and",
      "str_2",
      "as",
      "indexes"
    ],
    "code": [
      "var_0",
      ".",
      "set_index",
      "(",
      "[",
      "'str_0'",
      ",",
      "'str_1'",
      ",",
      "'str_2'",
      "]",
      ")",
      ".",
      "unstack",
      "(",
      "level",
      "=",
      "-",
      "1",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "year",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "month",
        "quote": "'",
        "type": "str"
      },
      "str_2": {
        "value": "item",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      43,
      26,
      8,
      3,
      387,
      388,
      109,
      147,
      5,
      62,
      32,
      62,
      31,
      194,
      90,
      235
    ],
    "code_indx_copy": [
      34,
      22,
      203,
      1,
      12,
      29,
      8,
      63,
      8,
      150,
      16,
      17,
      22,
      169,
      1,
      158,
      19,
      14,
      15,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      203,
      1,
      12,
      29,
      8,
      63,
      8,
      150,
      16,
      17,
      22,
      169,
      1,
      158,
      19,
      14,
      15,
      17
    ]
  },
  {
    "intent": [
      "run",
      "a",
      "pivot",
      "with",
      "a",
      "multi-index",
      "var_0",
      "and",
      "var_1",
      "in",
      "a",
      "pandas",
      "data",
      "frame"
    ],
    "code": [
      "df",
      ".",
      "pivot_table",
      "(",
      "values",
      "=",
      "'value'",
      ",",
      "index",
      "=",
      "[",
      "'var_0'",
      ",",
      "'var_1'",
      "]",
      ",",
      "columns",
      "=",
      "'item'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "year",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "month",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      251,
      3,
      387,
      79,
      3,
      465,
      26,
      31,
      63,
      24,
      3,
      42,
      65,
      66
    ],
    "code_indx_copy": [
      149,
      22,
      337,
      1,
      166,
      19,
      405,
      8,
      160,
      19,
      12,
      56,
      8,
      57,
      16,
      8,
      192,
      19,
      524,
      17
    ],
    "code_indx_nocopy": [
      149,
      22,
      337,
      1,
      166,
      19,
      405,
      8,
      160,
      19,
      12,
      56,
      8,
      57,
      16,
      8,
      192,
      19,
      524,
      17
    ]
  },
  {
    "intent": [
      "print",
      "a",
      "rational",
      "number",
      "str_0"
    ],
    "code": [
      "print",
      "(",
      "'\\n\\x1b[4m'",
      "+",
      "'3'",
      "+",
      "'\\x1b[0m'",
      "+",
      "'\\n2'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "3/2",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      166,
      3,
      465,
      76,
      5
    ],
    "code_indx_copy": [
      49,
      1,
      524,
      96,
      524,
      96,
      524,
      96,
      524,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      524,
      96,
      524,
      96,
      524,
      96,
      524,
      17
    ]
  },
  {
    "intent": [
      "what",
      "is",
      "the",
      "best",
      "way",
      "to",
      "sort",
      "list",
      "with",
      "custom",
      "sorting",
      "parameters",
      "in",
      "python",
      "?"
    ],
    "code": [
      "li1",
      ".",
      "sort",
      "(",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "not",
      "x",
      ".",
      "startswith",
      "(",
      "'b.'",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      465,
      152,
      18,
      465,
      449,
      8,
      117,
      4,
      79,
      465,
      283,
      370,
      24,
      50,
      52
    ],
    "code_indx_copy": [
      524,
      22,
      124,
      1,
      102,
      19,
      44,
      26,
      13,
      281,
      26,
      22,
      453,
      1,
      524,
      17,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      124,
      1,
      102,
      19,
      44,
      26,
      13,
      281,
      26,
      22,
      453,
      1,
      524,
      17,
      17
    ]
  },
  {
    "intent": [
      "iterate",
      "backwards",
      "from",
      "10",
      "to",
      "0"
    ],
    "code": [
      "range",
      "(",
      "10",
      ",",
      "0",
      ",",
      "-",
      "1",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      454,
      465,
      58,
      351,
      8,
      107
    ],
    "code_indx_copy": [
      104,
      1,
      4,
      8,
      43,
      8,
      14,
      15,
      17
    ],
    "code_indx_nocopy": [
      104,
      1,
      4,
      8,
      43,
      8,
      14,
      15,
      17
    ]
  },
  {
    "intent": [
      "get",
      "value",
      "of",
      "first",
      "child",
      "of",
      "xml",
      "node",
      "var_0"
    ],
    "code": [
      "var_0",
      "[",
      "0",
      "]",
      ".",
      "firstChild",
      ".",
      "nodeValue"
    ],
    "slot_map": {
      "var_0": {
        "value": "name",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      143,
      2,
      151,
      465,
      2,
      465,
      465,
      26
    ],
    "code_indx_copy": [
      34,
      12,
      43,
      16,
      22,
      524,
      22,
      524
    ],
    "code_indx_nocopy": [
      34,
      12,
      43,
      16,
      22,
      524,
      22,
      524
    ]
  },
  {
    "intent": [
      "start",
      "a",
      "new",
      "thread",
      "for",
      "var_0",
      "with",
      "parameters",
      "str_0",
      "and",
      "1"
    ],
    "code": [
      "thread",
      ".",
      "start_new_thread",
      "(",
      "var_0",
      ",",
      "(",
      "'str_0'",
      ",",
      "1",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "myfunction",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "MyStringHere",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      3,
      192,
      465,
      21,
      26,
      79,
      370,
      5,
      31,
      237
    ],
    "code_indx_copy": [
      531,
      22,
      524,
      1,
      34,
      8,
      1,
      29,
      8,
      15,
      17,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      524,
      1,
      34,
      8,
      1,
      29,
      8,
      15,
      17,
      17
    ]
  },
  {
    "intent": [
      "start",
      "a",
      "new",
      "thread",
      "for",
      "var_0",
      "with",
      "parameters",
      "str_0",
      "and",
      "1"
    ],
    "code": [
      "thread",
      ".",
      "start_new_thread",
      "(",
      "var_0",
      ",",
      "(",
      "'str_0'",
      ",",
      "1",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "myfunction",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "MyStringHere",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      3,
      192,
      465,
      21,
      26,
      79,
      370,
      5,
      31,
      237
    ],
    "code_indx_copy": [
      531,
      22,
      524,
      1,
      34,
      8,
      1,
      29,
      8,
      15,
      17,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      524,
      1,
      34,
      8,
      1,
      29,
      8,
      15,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "index",
      "of",
      "the",
      "first",
      "biggest",
      "element",
      "in",
      "list",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "index",
      "(",
      "max",
      "(",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      37,
      2,
      18,
      151,
      465,
      49,
      24,
      4,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      160,
      1,
      179,
      1,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      160,
      1,
      179,
      1,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "replace",
      "periods",
      "str_0",
      "that",
      "are",
      "not",
      "followed",
      "by",
      "periods",
      "or",
      "spaces",
      "with",
      "a",
      "period",
      "and",
      "a",
      "space",
      "str_1"
    ],
    "code": [
      "re",
      ".",
      "sub",
      "(",
      "'\\\\.(?=[^ .])'",
      ",",
      "'. '",
      ",",
      "para",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": ".",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": ".",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      130,
      465,
      5,
      195,
      243,
      105,
      368,
      44,
      465,
      344,
      132,
      79,
      3,
      465,
      31,
      3,
      400,
      32
    ],
    "code_indx_copy": [
      39,
      22,
      40,
      1,
      524,
      8,
      524,
      8,
      524,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      40,
      1,
      524,
      8,
      524,
      8,
      524,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "string",
      "var_0",
      "of",
      "letters",
      "embedded",
      "in",
      "squared",
      "brackets",
      "into",
      "embedded",
      "lists"
    ],
    "code": [
      "[",
      "i",
      ".",
      "split",
      "(",
      ")",
      "for",
      "i",
      "in",
      "re",
      ".",
      "findall",
      "(",
      "'\\\\[([^\\\\[\\\\]]+)\\\\]'",
      ",",
      "var_0",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      3,
      14,
      26,
      2,
      360,
      465,
      24,
      465,
      465,
      12,
      465,
      30
    ],
    "code_indx_copy": [
      12,
      6,
      22,
      71,
      1,
      17,
      7,
      6,
      9,
      39,
      22,
      48,
      1,
      524,
      8,
      34,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      6,
      22,
      71,
      1,
      17,
      7,
      6,
      9,
      39,
      22,
      48,
      1,
      524,
      8,
      34,
      17,
      16
    ]
  },
  {
    "intent": [
      "extract",
      "dictionary",
      "var_0",
      "from",
      "list",
      "var_1",
      "where",
      "the",
      "value",
      "associated",
      "with",
      "the",
      "key",
      "str_0",
      "of",
      "dictionary",
      "var_0",
      "is",
      "equal",
      "to",
      "str_1"
    ],
    "code": [
      "[",
      "var_2",
      "for",
      "var_2",
      "in",
      "var_1",
      "if",
      "var_2",
      "[",
      "'str_0'",
      "]",
      "==",
      "'str_1'",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "d",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "name",
        "quote": "'",
        "type": "str"
      },
      "var_2": {
        "value": "d",
        "quote": "`",
        "type": "var"
      },
      "str_1": {
        "value": "pluto",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      104,
      25,
      26,
      58,
      4,
      63,
      155,
      18,
      143,
      286,
      79,
      18,
      23,
      5,
      2,
      25,
      26,
      152,
      106,
      8,
      32
    ],
    "code_indx_copy": [
      12,
      94,
      7,
      94,
      9,
      91,
      67,
      94,
      12,
      29,
      16,
      76,
      63,
      16
    ],
    "code_indx_nocopy": [
      12,
      94,
      7,
      94,
      9,
      91,
      67,
      94,
      12,
      29,
      16,
      76,
      63,
      16
    ]
  },
  {
    "intent": [
      "extract",
      "dictionary",
      "from",
      "list",
      "of",
      "dictionaries",
      "based",
      "on",
      "a",
      "key",
      "'s",
      "value",
      "."
    ],
    "code": [
      "[",
      "d",
      "for",
      "d",
      "in",
      "a",
      "if",
      "d",
      "[",
      "'name'",
      "]",
      "==",
      "'pluto'",
      "]"
    ],
    "slot_map": {},
    "intent_indx": [
      104,
      25,
      58,
      4,
      2,
      188,
      208,
      139,
      3,
      23,
      266,
      143,
      159
    ],
    "code_indx_copy": [
      12,
      2,
      7,
      2,
      9,
      95,
      67,
      2,
      12,
      442,
      16,
      76,
      524,
      16
    ],
    "code_indx_nocopy": [
      12,
      2,
      7,
      2,
      9,
      95,
      67,
      2,
      12,
      442,
      16,
      76,
      524,
      16
    ]
  },
  {
    "intent": [
      "retrieve",
      "list",
      "of",
      "values",
      "from",
      "dictionary",
      "str_0"
    ],
    "code": [
      "list",
      "(",
      "str_0",
      ".",
      "values",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "d",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      371,
      4,
      2,
      20,
      58,
      25,
      5
    ],
    "code_indx_copy": [
      33,
      1,
      11,
      22,
      166,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      33,
      1,
      11,
      22,
      166,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "replace",
      "occurrences",
      "of",
      "two",
      "whitespaces",
      "or",
      "more",
      "with",
      "one",
      "whitespace",
      "str_0",
      "in",
      "string",
      "var_0"
    ],
    "code": [
      "re",
      ".",
      "sub",
      "(",
      "' +'",
      ",",
      "' '",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      130,
      53,
      2,
      29,
      140,
      344,
      425,
      79,
      303,
      211,
      5,
      24,
      14,
      26
    ],
    "code_indx_copy": [
      39,
      22,
      40,
      1,
      524,
      8,
      108,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      40,
      1,
      524,
      8,
      108,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "change",
      "the",
      "mode",
      "of",
      "file",
      "str_0",
      "to",
      "permission",
      "number",
      "484"
    ],
    "code": [
      "os",
      ".",
      "chmod",
      "(",
      "'str_0'",
      ",",
      "484",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "my_script.sh",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      221,
      18,
      285,
      2,
      126,
      5,
      8,
      465,
      76,
      465
    ],
    "code_indx_copy": [
      113,
      22,
      524,
      1,
      29,
      8,
      537,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      524,
      1,
      29,
      8,
      524,
      17
    ]
  },
  {
    "intent": [
      "write",
      "pandas",
      "dataframe",
      "var_0",
      "to",
      "the",
      "file",
      "str_0",
      "without",
      "row",
      "names"
    ],
    "code": [
      "var_0",
      ".",
      "to_csv",
      "(",
      "'str_0'",
      ",",
      "index",
      "=",
      "False",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "c:\\data\\t.csv",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      168,
      42,
      43,
      26,
      8,
      18,
      126,
      5,
      103,
      45,
      321
    ],
    "code_indx_copy": [
      34,
      22,
      227,
      1,
      29,
      8,
      160,
      19,
      87,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      227,
      1,
      29,
      8,
      160,
      19,
      87,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "all",
      "words",
      "which",
      "contains",
      "number",
      "from",
      "a",
      "string",
      "var_0",
      "using",
      "regex"
    ],
    "code": [
      "re",
      ".",
      "sub",
      "(",
      "'\\\\w*\\\\d\\\\w*'",
      ",",
      "''",
      ",",
      "var_0",
      ")",
      ".",
      "strip",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "words",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      38,
      41,
      205,
      75,
      76,
      58,
      3,
      14,
      26,
      109,
      40
    ],
    "code_indx_copy": [
      39,
      22,
      40,
      1,
      524,
      8,
      21,
      8,
      34,
      17,
      22,
      170,
      1,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      40,
      1,
      524,
      8,
      21,
      8,
      34,
      17,
      22,
      170,
      1,
      17
    ]
  },
  {
    "intent": [
      "control",
      "the",
      "keyboard",
      "and",
      "mouse",
      "with",
      "dogtail",
      "in",
      "linux"
    ],
    "code": [
      "dogtail",
      ".",
      "rawinput",
      ".",
      "click",
      "(",
      "100",
      ",",
      "100",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      465,
      18,
      465,
      31,
      465,
      79,
      465,
      24,
      465
    ],
    "code_indx_copy": [
      534,
      22,
      524,
      22,
      156,
      1,
      267,
      8,
      267,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      524,
      22,
      156,
      1,
      267,
      8,
      267,
      17
    ]
  },
  {
    "intent": [
      "parse",
      "date",
      "string",
      "str_0",
      "using",
      "format",
      "str_1"
    ],
    "code": [
      "datetime",
      ".",
      "strptime",
      "(",
      "'str_0'",
      ",",
      "'str_1'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "2009/05/13 19:19:30 -0400",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "%Y/%m/%d %H:%M:%S %z",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      73,
      133,
      14,
      5,
      109,
      16,
      32
    ],
    "code_indx_copy": [
      27,
      22,
      28,
      1,
      29,
      8,
      63,
      17
    ],
    "code_indx_nocopy": [
      27,
      22,
      28,
      1,
      29,
      8,
      63,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "position",
      "of",
      "a",
      "regex",
      "match",
      "for",
      "word",
      "var_0",
      "in",
      "a",
      "string",
      "var_1"
    ],
    "code": [
      "re",
      ".",
      "search",
      "(",
      "'\\\\bis\\\\b'",
      ",",
      "var_1",
      ")",
      ".",
      "start",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "is",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "String",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      18,
      323,
      2,
      3,
      40,
      144,
      21,
      239,
      26,
      24,
      3,
      14,
      63
    ],
    "code_indx_copy": [
      39,
      22,
      93,
      1,
      524,
      8,
      91,
      17,
      22,
      207,
      1,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      93,
      1,
      524,
      8,
      91,
      17,
      22,
      207,
      1,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "position",
      "of",
      "a",
      "regex",
      "match",
      "var_0",
      "in",
      "a",
      "string",
      "var_1"
    ],
    "code": [
      "re",
      ".",
      "search",
      "(",
      "'var_0'",
      ",",
      "var_1",
      ")",
      ".",
      "start",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "is",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "String",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      18,
      323,
      2,
      3,
      40,
      144,
      26,
      24,
      3,
      14,
      63
    ],
    "code_indx_copy": [
      39,
      22,
      93,
      1,
      56,
      8,
      91,
      17,
      22,
      207,
      1,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      93,
      1,
      56,
      8,
      91,
      17,
      22,
      207,
      1,
      17
    ]
  },
  {
    "intent": [
      "input",
      "an",
      "integer",
      "tuple",
      "from",
      "user"
    ],
    "code": [
      "tuple",
      "(",
      "map",
      "(",
      "int",
      ",",
      "input",
      "(",
      ")",
      ".",
      "split",
      "(",
      "','",
      ")",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      452,
      225,
      10,
      113,
      58,
      174
    ],
    "code_indx_copy": [
      432,
      1,
      24,
      1,
      20,
      8,
      251,
      1,
      17,
      22,
      71,
      1,
      73,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      432,
      1,
      24,
      1,
      20,
      8,
      251,
      1,
      17,
      22,
      71,
      1,
      73,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "input",
      "a",
      "tuple",
      "of",
      "integers",
      "from",
      "user"
    ],
    "code": [
      "tuple",
      "(",
      "int",
      "(",
      "x",
      ".",
      "strip",
      "(",
      ")",
      ")",
      "for",
      "x",
      "in",
      "input",
      "(",
      ")",
      ".",
      "split",
      "(",
      "','",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      452,
      3,
      113,
      2,
      7,
      58,
      174
    ],
    "code_indx_copy": [
      432,
      1,
      20,
      1,
      26,
      22,
      170,
      1,
      17,
      17,
      7,
      26,
      9,
      251,
      1,
      17,
      22,
      71,
      1,
      73,
      17,
      17
    ],
    "code_indx_nocopy": [
      432,
      1,
      20,
      1,
      26,
      22,
      170,
      1,
      17,
      17,
      7,
      26,
      9,
      251,
      1,
      17,
      22,
      71,
      1,
      73,
      17,
      17
    ]
  },
  {
    "intent": [
      "replace",
      "unicode",
      "character",
      "str_0",
      "in",
      "string",
      "str_1",
      "with",
      "str_2"
    ],
    "code": [
      "str_1",
      ".",
      "decode",
      "(",
      "'utf-8'",
      ")",
      ".",
      "replace",
      "(",
      "'str_0'",
      ",",
      "'str_2'",
      ")",
      ".",
      "encode",
      "(",
      "'utf-8'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "\u2022",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "str",
        "quote": "'",
        "type": "str"
      },
      "str_2": {
        "value": "*",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      130,
      230,
      202,
      5,
      24,
      14,
      32,
      79,
      194
    ],
    "code_indx_copy": [
      37,
      22,
      99,
      1,
      143,
      17,
      22,
      107,
      1,
      29,
      8,
      150,
      17,
      22,
      239,
      1,
      143,
      17
    ],
    "code_indx_nocopy": [
      37,
      22,
      99,
      1,
      143,
      17,
      22,
      107,
      1,
      29,
      8,
      150,
      17,
      22,
      239,
      1,
      143,
      17
    ]
  },
  {
    "intent": [
      "replace",
      "unicode",
      "characters",
      "str_0\\u2022str_1strstr_2*",
      "'"
    ],
    "code": [
      "str",
      ".",
      "decode",
      "(",
      "'utf-8'",
      ")",
      ".",
      "replace",
      "(",
      "'\u2022'",
      ",",
      "'*'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "in string",
        "quote": "'",
        "type": "str"
      },
      "str_2": {
        "value": "with",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      130,
      230,
      98,
      465,
      310
    ],
    "code_indx_copy": [
      25,
      22,
      99,
      1,
      143,
      17,
      22,
      107,
      1,
      524,
      8,
      429,
      17
    ],
    "code_indx_nocopy": [
      25,
      22,
      99,
      1,
      143,
      17,
      22,
      107,
      1,
      524,
      8,
      429,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "ndarray",
      "with",
      "shape",
      "3x3",
      "to",
      "array"
    ],
    "code": [
      "np",
      ".",
      "zeros",
      "(",
      "(",
      "3",
      ",",
      "3",
      ")",
      ")",
      ".",
      "ravel",
      "(",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      11,
      465,
      79,
      465,
      465,
      8,
      85
    ],
    "code_indx_copy": [
      74,
      22,
      512,
      1,
      1,
      54,
      8,
      54,
      17,
      17,
      22,
      524,
      1,
      17
    ],
    "code_indx_nocopy": [
      74,
      22,
      512,
      1,
      1,
      54,
      8,
      54,
      17,
      17,
      22,
      524,
      1,
      17
    ]
  },
  {
    "intent": [
      "get",
      "os",
      "name"
    ],
    "code": [
      "import",
      "platform",
      "\n",
      "platform",
      ".",
      "system",
      "(",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      17,
      136,
      129
    ],
    "code_indx_copy": [
      393,
      499,
      161,
      499,
      22,
      119,
      1,
      17
    ],
    "code_indx_nocopy": [
      393,
      499,
      161,
      499,
      22,
      119,
      1,
      17
    ]
  },
  {
    "intent": [
      "get",
      "os",
      "version"
    ],
    "code": [
      "import",
      "platform",
      "\n",
      "platform",
      ".",
      "release",
      "(",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      17,
      136,
      465
    ],
    "code_indx_copy": [
      393,
      499,
      161,
      499,
      22,
      524,
      1,
      17
    ],
    "code_indx_nocopy": [
      393,
      499,
      161,
      499,
      22,
      524,
      1,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "name",
      "of",
      "the",
      "os"
    ],
    "code": [
      "print",
      "(",
      "os",
      ".",
      "name",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      17,
      18,
      129,
      2,
      18,
      136
    ],
    "code_indx_copy": [
      49,
      1,
      113,
      22,
      316,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      113,
      22,
      316,
      17
    ]
  },
  {
    "intent": [
      "what",
      "is",
      "the",
      "most",
      "pythonic",
      "way",
      "to",
      "exclude",
      "elements",
      "of",
      "a",
      "list",
      "that",
      "start",
      "with",
      "a",
      "specific",
      "character",
      "?"
    ],
    "code": [
      "[",
      "x",
      "for",
      "x",
      "in",
      "my_list",
      "if",
      "not",
      "x",
      ".",
      "startswith",
      "(",
      "'#'",
      ")",
      "]"
    ],
    "slot_map": {},
    "intent_indx": [
      465,
      152,
      18,
      465,
      465,
      449,
      8,
      465,
      1,
      2,
      3,
      4,
      195,
      465,
      79,
      3,
      390,
      202,
      52
    ],
    "code_indx_copy": [
      12,
      26,
      7,
      26,
      9,
      240,
      67,
      281,
      26,
      22,
      453,
      1,
      524,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      26,
      7,
      26,
      9,
      240,
      67,
      281,
      26,
      22,
      453,
      1,
      524,
      17,
      16
    ]
  },
  {
    "intent": [
      "replace",
      "fields",
      "delimited",
      "by",
      "braces",
      "{",
      "}",
      "in",
      "string",
      "str_0",
      "with",
      "string",
      "str_1"
    ],
    "code": [
      "\"\"\"str_0\"\"\"",
      ".",
      "format",
      "(",
      "'str_1'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "Day old bread, 50% sale {0}",
        "quote": "\"",
        "type": "str"
      },
      "str_1": {
        "value": "today",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      130,
      385,
      465,
      44,
      465,
      465,
      465,
      24,
      14,
      5,
      79,
      14,
      32
    ],
    "code_indx_copy": [
      212,
      22,
      38,
      1,
      63,
      17
    ],
    "code_indx_nocopy": [
      212,
      22,
      38,
      1,
      63,
      17
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "minimum",
      "value",
      "from",
      "a",
      "list",
      "of",
      "tuples",
      "var_0",
      "with",
      "values",
      "of",
      "type",
      "var_1",
      "and",
      "var_2",
      "with",
      "nan"
    ],
    "code": [
      "min",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "var_2",
      "(",
      "'inf'",
      ")",
      "if",
      "math",
      ".",
      "isnan",
      "(",
      "x",
      "[",
      "1",
      "]",
      ")",
      "else",
      "x",
      "[",
      "1",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "list",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "string",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "float",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      3,
      465,
      143,
      58,
      3,
      4,
      2,
      33,
      26,
      79,
      20,
      2,
      330,
      63,
      31,
      64,
      79,
      289
    ],
    "code_indx_copy": [
      111,
      1,
      34,
      8,
      102,
      19,
      44,
      26,
      13,
      94,
      1,
      524,
      17,
      67,
      205,
      22,
      222,
      1,
      26,
      12,
      15,
      16,
      17,
      211,
      26,
      12,
      15,
      16,
      17
    ],
    "code_indx_nocopy": [
      111,
      1,
      34,
      8,
      102,
      19,
      44,
      26,
      13,
      94,
      1,
      524,
      17,
      67,
      205,
      22,
      222,
      1,
      26,
      12,
      15,
      16,
      17,
      211,
      26,
      12,
      15,
      16,
      17
    ]
  },
  {
    "intent": [
      "find",
      "average",
      "of",
      "a",
      "nested",
      "list",
      "var_0"
    ],
    "code": [
      "var_0",
      "=",
      "[",
      "(",
      "sum",
      "(",
      "x",
      ")",
      "/",
      "len",
      "(",
      "x",
      ")",
      ")",
      "for",
      "x",
      "in",
      "zip",
      "(",
      "*",
      "var_0",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      47,
      19,
      2,
      3,
      154,
      4,
      26
    ],
    "code_indx_copy": [
      34,
      19,
      12,
      1,
      0,
      1,
      26,
      17,
      31,
      32,
      1,
      26,
      17,
      17,
      7,
      26,
      9,
      36,
      1,
      3,
      34,
      17,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      12,
      1,
      0,
      1,
      26,
      17,
      31,
      32,
      1,
      26,
      17,
      17,
      7,
      26,
      9,
      36,
      1,
      3,
      34,
      17,
      16
    ]
  },
  {
    "intent": [
      "log",
      "info",
      "message",
      "str_0",
      "with",
      "attributes",
      "str_1"
    ],
    "code": [
      "logging",
      ".",
      "info",
      "(",
      "'str_0'",
      ",",
      "extra",
      "=",
      "{",
      "str_1",
      "}",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "Log message",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "{'app_name': 'myapp'}",
        "quote": "`",
        "type": "str"
      },
      "{str_1}": {
        "value": "{'app_name': 'myapp'}",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      465,
      157,
      5,
      79,
      459,
      32
    ],
    "code_indx_copy": [
      125,
      22,
      126,
      1,
      29,
      8,
      357,
      19,
      52,
      37,
      53,
      17
    ],
    "code_indx_nocopy": [
      125,
      22,
      126,
      1,
      29,
      8,
      357,
      19,
      52,
      37,
      53,
      17
    ]
  },
  {
    "intent": [
      "replace",
      "values",
      "of",
      "dataframe",
      "var_0",
      "with",
      "true",
      "if",
      "numeric"
    ],
    "code": [
      "var_0",
      ".",
      "applymap",
      "(",
      "lambda",
      "x",
      ":",
      "isinstance",
      "(",
      "x",
      ",",
      "(",
      "int",
      ",",
      "float",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      130,
      20,
      2,
      43,
      26,
      79,
      367,
      150,
      465
    ],
    "code_indx_copy": [
      34,
      22,
      524,
      1,
      44,
      26,
      13,
      206,
      1,
      26,
      8,
      1,
      20,
      8,
      225,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      524,
      1,
      44,
      26,
      13,
      206,
      1,
      26,
      8,
      1,
      20,
      8,
      225,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "list",
      "var_0",
      "based",
      "on",
      "its",
      "elements",
      "'",
      "digits"
    ],
    "code": [
      "sorted",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "int",
      "(",
      "re",
      ".",
      "search",
      "(",
      "'\\\\d+'",
      ",",
      "x",
      ")",
      ".",
      "group",
      "(",
      "0",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "l",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      4,
      26,
      208,
      139,
      91,
      1,
      310,
      200
    ],
    "code_indx_copy": [
      101,
      1,
      34,
      8,
      102,
      19,
      44,
      26,
      13,
      20,
      1,
      39,
      22,
      93,
      1,
      443,
      8,
      26,
      17,
      22,
      120,
      1,
      43,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      34,
      8,
      102,
      19,
      44,
      26,
      13,
      20,
      1,
      39,
      22,
      93,
      1,
      443,
      8,
      26,
      17,
      22,
      120,
      1,
      43,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "close",
      "the",
      "window",
      "in",
      "tkinter"
    ],
    "code": [
      "self",
      ".",
      "root",
      ".",
      "destroy",
      "(",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      465,
      18,
      302,
      24,
      223
    ],
    "code_indx_copy": [
      310,
      22,
      174,
      22,
      524,
      1,
      17
    ],
    "code_indx_nocopy": [
      310,
      22,
      174,
      22,
      524,
      1,
      17
    ]
  },
  {
    "intent": [
      "get",
      "mean",
      "of",
      "columns",
      "str_0",
      "for",
      "all",
      "rows",
      "in",
      "dataframe",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "iloc",
      "[",
      ":",
      ",",
      "(",
      "[",
      "2",
      ",",
      "5",
      ",",
      "6",
      ",",
      "7",
      ",",
      "8",
      "]",
      ")",
      "]",
      ".",
      "mean",
      "(",
      "axis",
      "=",
      "1",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "2, 5, 6, 7, 8",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      412,
      2,
      61,
      5,
      21,
      38,
      80,
      24,
      43,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      399,
      12,
      13,
      8,
      1,
      12,
      82,
      8,
      185,
      8,
      249,
      8,
      219,
      8,
      501,
      16,
      17,
      16,
      22,
      390,
      1,
      42,
      19,
      15,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      399,
      12,
      13,
      8,
      1,
      12,
      82,
      8,
      185,
      8,
      249,
      8,
      219,
      8,
      501,
      16,
      17,
      16,
      22,
      390,
      1,
      42,
      19,
      15,
      17
    ]
  },
  {
    "intent": [
      "filter",
      "dataframe",
      "var_0",
      "by",
      "sub-level",
      "index",
      "str_0",
      "in",
      "pandas"
    ],
    "code": [
      "var_0",
      "[",
      "var_0",
      ".",
      "index",
      ".",
      "map",
      "(",
      "lambda",
      "x",
      ":",
      "x",
      "[",
      "1",
      "]",
      ".",
      "endswith",
      "(",
      "'str_0'",
      ")",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "0630",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      217,
      43,
      26,
      44,
      465,
      37,
      5,
      24,
      42
    ],
    "code_indx_copy": [
      34,
      12,
      34,
      22,
      160,
      22,
      24,
      1,
      44,
      26,
      13,
      26,
      12,
      15,
      16,
      22,
      199,
      1,
      29,
      17,
      17,
      16
    ],
    "code_indx_nocopy": [
      34,
      12,
      34,
      22,
      160,
      22,
      24,
      1,
      44,
      26,
      13,
      26,
      12,
      15,
      16,
      22,
      199,
      1,
      29,
      17,
      17,
      16
    ]
  },
  {
    "intent": [
      "flask-sqlalchemy",
      "delete",
      "row",
      "var_0"
    ],
    "code": [
      "db",
      ".",
      "session",
      ".",
      "delete",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "page",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      86,
      45,
      26
    ],
    "code_indx_copy": [
      252,
      22,
      425,
      22,
      81,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      252,
      22,
      425,
      22,
      81,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "format",
      "a",
      "string",
      "str_0",
      "that",
      "has",
      "unicode",
      "characters"
    ],
    "code": [
      "\"\"\"\"\"\"",
      ".",
      "join",
      "(",
      "chr",
      "(",
      "ord",
      "(",
      "c",
      ")",
      ")",
      "for",
      "c",
      "in",
      "'Andr\u00c3\u00a9'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "u'Andr\u00c3\u00a9'",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      16,
      3,
      14,
      5,
      195,
      337,
      230,
      98
    ],
    "code_indx_copy": [
      287,
      22,
      23,
      1,
      455,
      1,
      98,
      1,
      66,
      17,
      17,
      7,
      66,
      9,
      524,
      17
    ],
    "code_indx_nocopy": [
      287,
      22,
      23,
      1,
      455,
      1,
      98,
      1,
      66,
      17,
      17,
      7,
      66,
      9,
      524,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "unicode",
      "str_0",
      "to",
      "a",
      "string"
    ],
    "code": [
      "\"\"\"\"\"\"",
      ".",
      "join",
      "(",
      "chr",
      "(",
      "ord",
      "(",
      "c",
      ")",
      ")",
      "for",
      "c",
      "in",
      "'str_0'",
      ")",
      ".",
      "decode",
      "(",
      "'utf8'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "Andr\u00c3\u00a9",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      3,
      230,
      5,
      8,
      3,
      14
    ],
    "code_indx_copy": [
      287,
      22,
      23,
      1,
      455,
      1,
      98,
      1,
      66,
      17,
      17,
      7,
      66,
      9,
      29,
      17,
      22,
      99,
      1,
      200,
      17
    ],
    "code_indx_nocopy": [
      287,
      22,
      23,
      1,
      455,
      1,
      98,
      1,
      66,
      17,
      17,
      7,
      66,
      9,
      29,
      17,
      22,
      99,
      1,
      200,
      17
    ]
  },
  {
    "intent": [
      "list",
      "all",
      "files",
      "in",
      "directory",
      "str_0"
    ],
    "code": [
      "for",
      "dirname",
      ",",
      "dirnames",
      ",",
      "filenames",
      "in",
      "os",
      ".",
      "walk",
      "(",
      "'str_0'",
      ")",
      ":",
      "\n",
      "    ",
      "for",
      "subdirname",
      "in",
      "dirnames",
      ":",
      "\n",
      "        ",
      "print",
      "(",
      "os",
      ".",
      "path",
      ".",
      "join",
      "(",
      "dirname",
      ",",
      "subdirname",
      ")",
      ")",
      "\n",
      "",
      "for",
      "filename",
      "in",
      "filenames",
      ":",
      "\n",
      "        ",
      "pass",
      "",
      ""
    ],
    "slot_map": {
      "str_0": {
        "value": ".",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      4,
      38,
      245,
      24,
      175,
      5
    ],
    "code_indx_copy": [
      7,
      378,
      8,
      475,
      8,
      476,
      9,
      113,
      22,
      477,
      1,
      29,
      17,
      13,
      161,
      216,
      7,
      524,
      9,
      475,
      13,
      161,
      368,
      49,
      1,
      113,
      22,
      114,
      22,
      23,
      1,
      378,
      8,
      524,
      17,
      17,
      161,
      218,
      7,
      402,
      9,
      476,
      13,
      161,
      368,
      217,
      218,
      218
    ],
    "code_indx_nocopy": [
      7,
      378,
      8,
      475,
      8,
      476,
      9,
      113,
      22,
      477,
      1,
      29,
      17,
      13,
      161,
      216,
      7,
      524,
      9,
      475,
      13,
      161,
      368,
      49,
      1,
      113,
      22,
      114,
      22,
      23,
      1,
      378,
      8,
      524,
      17,
      17,
      161,
      218,
      7,
      402,
      9,
      476,
      13,
      161,
      368,
      217,
      218,
      218
    ]
  },
  {
    "intent": [
      "list",
      "all",
      "files",
      "in",
      "directory",
      "var_0"
    ],
    "code": [
      "os",
      ".",
      "listdir",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "path",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      4,
      38,
      245,
      24,
      175,
      26
    ],
    "code_indx_copy": [
      113,
      22,
      198,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      198,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "rename",
      "file",
      "var_0",
      "to",
      "var_0",
      "+",
      "str_0"
    ],
    "code": [
      "os",
      ".",
      "rename",
      "(",
      "var_1",
      ",",
      "var_1",
      "+",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "dir",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "dir",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "!",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      391,
      126,
      26,
      8,
      26,
      465,
      5
    ],
    "code_indx_copy": [
      113,
      22,
      341,
      1,
      91,
      8,
      91,
      96,
      29,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      341,
      1,
      91,
      8,
      91,
      96,
      29,
      17
    ]
  },
  {
    "intent": [
      "insert",
      "a",
      "character",
      "str_0",
      "after",
      "every",
      "two",
      "elements",
      "in",
      "a",
      "string",
      "var_0"
    ],
    "code": [
      "\"\"\"str_0\"\"\"",
      ".",
      "join",
      "(",
      "a",
      "+",
      "b",
      "for",
      "a",
      ",",
      "b",
      "in",
      "zip",
      "(",
      "var_0",
      "[",
      ":",
      ":",
      "2",
      "]",
      ",",
      "var_0",
      "[",
      "1",
      ":",
      ":",
      "2",
      "]",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "-",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      277,
      3,
      202,
      5,
      201,
      279,
      29,
      1,
      24,
      3,
      14,
      26
    ],
    "code_indx_copy": [
      212,
      22,
      23,
      1,
      95,
      96,
      97,
      7,
      95,
      8,
      97,
      9,
      36,
      1,
      34,
      12,
      13,
      13,
      82,
      16,
      8,
      34,
      12,
      15,
      13,
      13,
      82,
      16,
      17,
      17
    ],
    "code_indx_nocopy": [
      212,
      22,
      23,
      1,
      95,
      96,
      97,
      7,
      95,
      8,
      97,
      9,
      36,
      1,
      34,
      12,
      13,
      13,
      82,
      16,
      8,
      34,
      12,
      15,
      13,
      13,
      82,
      16,
      17,
      17
    ]
  },
  {
    "intent": [
      "printing",
      "numbers",
      "rounding",
      "up",
      "to",
      "third",
      "decimal",
      "place"
    ],
    "code": [
      "print",
      "(",
      "'%.3f'",
      "%",
      "3.1415",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      465,
      97,
      465,
      379,
      8,
      120,
      255,
      465
    ],
    "code_indx_copy": [
      49,
      1,
      524,
      117,
      524,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      524,
      117,
      524,
      17
    ]
  },
  {
    "intent": [
      "add",
      "variable",
      "var_0",
      "to",
      "key",
      "str_0",
      "of",
      "first",
      "element",
      "in",
      "json",
      "data",
      "var_1"
    ],
    "code": [
      "var_1",
      "[",
      "0",
      "]",
      "[",
      "'str_0'",
      "]",
      "=",
      "var_0"
    ],
    "slot_map": {
      "var_0": {
        "value": "var",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "f",
        "quote": "'",
        "type": "str"
      },
      "var_1": {
        "value": "data",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      60,
      95,
      26,
      8,
      23,
      5,
      2,
      151,
      49,
      24,
      181,
      65,
      63
    ],
    "code_indx_copy": [
      91,
      12,
      43,
      16,
      12,
      29,
      16,
      19,
      34
    ],
    "code_indx_nocopy": [
      91,
      12,
      43,
      16,
      12,
      29,
      16,
      19,
      34
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "path",
      "of",
      "module",
      "var_0"
    ],
    "code": [
      "print",
      "(",
      "var_0",
      ".",
      "__file__",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a_module",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      18,
      199,
      2,
      342,
      26
    ],
    "code_indx_copy": [
      49,
      1,
      34,
      22,
      383,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      34,
      22,
      383,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "path",
      "of",
      "the",
      "current",
      "python",
      "module"
    ],
    "code": [
      "print",
      "(",
      "os",
      ".",
      "getcwd",
      "(",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      17,
      18,
      199,
      2,
      18,
      179,
      50,
      342
    ],
    "code_indx_copy": [
      49,
      1,
      113,
      22,
      382,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      113,
      22,
      382,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "path",
      "of",
      "the",
      "python",
      "module",
      "var_0"
    ],
    "code": [
      "path",
      "=",
      "os",
      ".",
      "path",
      ".",
      "abspath",
      "(",
      "var_0",
      ".",
      "__file__",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "amodule",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      18,
      199,
      2,
      18,
      50,
      342,
      26
    ],
    "code_indx_copy": [
      114,
      19,
      113,
      22,
      114,
      22,
      377,
      1,
      34,
      22,
      383,
      17
    ],
    "code_indx_nocopy": [
      114,
      19,
      113,
      22,
      114,
      22,
      377,
      1,
      34,
      22,
      383,
      17
    ]
  },
  {
    "intent": [
      "fill",
      "list",
      "var_0",
      "with",
      "4",
      "0",
      "'s"
    ],
    "code": [
      "self",
      ".",
      "var_0",
      ".",
      "extend",
      "(",
      "[",
      "0",
      "]",
      "*",
      "(",
      "4",
      "-",
      "len",
      "(",
      "self",
      ".",
      "var_0",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "myList",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      4,
      26,
      79,
      231,
      107,
      266
    ],
    "code_indx_copy": [
      310,
      22,
      34,
      22,
      524,
      1,
      12,
      43,
      16,
      3,
      1,
      184,
      14,
      32,
      1,
      310,
      22,
      34,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      310,
      22,
      34,
      22,
      524,
      1,
      12,
      43,
      16,
      3,
      1,
      184,
      14,
      32,
      1,
      310,
      22,
      34,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "drop",
      "duplicate",
      "indexes",
      "in",
      "a",
      "pandas",
      "data",
      "frame",
      "var_0"
    ],
    "code": [
      "var_0",
      "[",
      "~",
      "var_0",
      ".",
      "index",
      ".",
      "duplicated",
      "(",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      262,
      411,
      235,
      24,
      3,
      42,
      65,
      66,
      26
    ],
    "code_indx_copy": [
      34,
      12,
      360,
      34,
      22,
      160,
      22,
      524,
      1,
      17,
      16
    ],
    "code_indx_nocopy": [
      34,
      12,
      360,
      34,
      22,
      160,
      22,
      524,
      1,
      17,
      16
    ]
  },
  {
    "intent": [
      "unpack",
      "elements",
      "of",
      "list",
      "var_0",
      "as",
      "arguments",
      "into",
      "function",
      "var_1"
    ],
    "code": [
      "var_1",
      "(",
      "*",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "i",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "foo",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      142,
      1,
      2,
      4,
      26,
      90,
      305,
      12,
      69,
      63
    ],
    "code_indx_copy": [
      91,
      1,
      3,
      34,
      17
    ],
    "code_indx_nocopy": [
      91,
      1,
      3,
      34,
      17
    ]
  },
  {
    "intent": [
      "generate",
      "list",
      "of",
      "numbers",
      "in",
      "specific",
      "format",
      "using",
      "string",
      "formatting",
      "precision",
      "."
    ],
    "code": [
      "[",
      "(",
      "'%.2d'",
      "%",
      "i",
      ")",
      "for",
      "i",
      "in",
      "range",
      "(",
      "16",
      ")",
      "]"
    ],
    "slot_map": {},
    "intent_indx": [
      56,
      4,
      2,
      97,
      24,
      390,
      16,
      109,
      14,
      167,
      465,
      159
    ],
    "code_indx_copy": [
      12,
      1,
      524,
      117,
      6,
      17,
      7,
      6,
      9,
      104,
      1,
      271,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      1,
      524,
      117,
      6,
      17,
      7,
      6,
      9,
      104,
      1,
      271,
      17,
      16
    ]
  },
  {
    "intent": [
      "sort",
      "dictionary",
      "var_0",
      "in",
      "descending",
      "order",
      "based",
      "on",
      "the",
      "sum",
      "of",
      "each",
      "value",
      "in",
      "it"
    ],
    "code": [
      "sorted",
      "(",
      "iter",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      ",",
      "key",
      "=",
      "lambda",
      "tup",
      ":",
      "sum",
      "(",
      "tup",
      "[",
      "1",
      "]",
      ")",
      ",",
      "reverse",
      "=",
      "True",
      ")",
      "[",
      ":",
      "3",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "mydict",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      25,
      26,
      24,
      121,
      162,
      208,
      139,
      18,
      112,
      2,
      22,
      143,
      24,
      145
    ],
    "code_indx_copy": [
      101,
      1,
      165,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      8,
      102,
      19,
      44,
      309,
      13,
      0,
      1,
      309,
      12,
      15,
      16,
      17,
      8,
      129,
      19,
      109,
      17,
      12,
      13,
      54,
      16
    ],
    "code_indx_nocopy": [
      101,
      1,
      165,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      8,
      102,
      19,
      44,
      309,
      13,
      0,
      1,
      309,
      12,
      15,
      16,
      17,
      8,
      129,
      19,
      109,
      17,
      12,
      13,
      54,
      16
    ]
  },
  {
    "intent": [
      "get",
      "top",
      "str_0",
      "items",
      "from",
      "a",
      "dictionary",
      "var_0",
      "with",
      "largest",
      "sum",
      "of",
      "values"
    ],
    "code": [
      "heapq",
      ".",
      "nlargest",
      "(",
      "3",
      ",",
      "iter",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      ",",
      "key",
      "=",
      "lambda",
      "tup",
      ":",
      "sum",
      "(",
      "tup",
      "[",
      "1",
      "]",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "3",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "mydict",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      421,
      5,
      39,
      58,
      3,
      25,
      26,
      79,
      438,
      112,
      2,
      20
    ],
    "code_indx_copy": [
      524,
      22,
      524,
      1,
      54,
      8,
      165,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      8,
      102,
      19,
      44,
      309,
      13,
      0,
      1,
      309,
      12,
      15,
      16,
      17,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      524,
      1,
      54,
      8,
      165,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      8,
      102,
      19,
      44,
      309,
      13,
      0,
      1,
      309,
      12,
      15,
      16,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "index",
      "of",
      "character",
      "str_0",
      "in",
      "list",
      "str_1a",
      "'",
      ",",
      "str_0",
      "]",
      "'"
    ],
    "code": [
      "[",
      "'a'",
      ",",
      "'str_0'",
      "]",
      ".",
      "index",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "b",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "[",
        "quote": "'",
        "type": "str"
      },
      "str_2": {
        "value": ",",
        "quote": "'",
        "type": "str"
      },
      "str_3": {
        "value": "]",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      37,
      2,
      202,
      5,
      24,
      4,
      465,
      310,
      62,
      5,
      220,
      310
    ],
    "code_indx_copy": [
      12,
      413,
      8,
      29,
      16,
      22,
      160,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      12,
      413,
      8,
      29,
      16,
      22,
      160,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "set",
      "font",
      "size",
      "of",
      "axis",
      "legend",
      "of",
      "plot",
      "var_0",
      "to",
      "str_0"
    ],
    "code": [
      "var_0",
      ".",
      "setp",
      "(",
      "legend",
      ".",
      "get_title",
      "(",
      ")",
      ",",
      "fontsize",
      "=",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "plt",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "xx-small",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      59,
      465,
      334,
      2,
      450,
      415,
      2,
      244,
      26,
      8,
      5
    ],
    "code_indx_copy": [
      34,
      22,
      524,
      1,
      404,
      22,
      524,
      1,
      17,
      8,
      524,
      19,
      29,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      524,
      1,
      404,
      22,
      524,
      1,
      17,
      8,
      524,
      19,
      29,
      17
    ]
  },
  {
    "intent": [
      "python",
      ":",
      "convert",
      "a",
      "string",
      "to",
      "an",
      "integer"
    ],
    "code": [
      "int",
      "(",
      "'  23  '",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      50,
      128,
      11,
      3,
      14,
      8,
      225,
      10
    ],
    "code_indx_copy": [
      20,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      20,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "extract",
      "the",
      "2nd",
      "elements",
      "from",
      "a",
      "list",
      "of",
      "tuples"
    ],
    "code": [
      "[",
      "x",
      "[",
      "1",
      "]",
      "for",
      "x",
      "in",
      "elements",
      "]"
    ],
    "slot_map": {},
    "intent_indx": [
      104,
      18,
      465,
      1,
      58,
      3,
      4,
      2,
      33
    ],
    "code_indx_copy": [
      12,
      26,
      12,
      15,
      16,
      7,
      26,
      9,
      531,
      16
    ],
    "code_indx_nocopy": [
      12,
      26,
      12,
      15,
      16,
      7,
      26,
      9,
      524,
      16
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "opposite",
      "diagonal",
      "of",
      "a",
      "numpy",
      "array",
      "var_0"
    ],
    "code": [
      "np",
      ".",
      "diag",
      "(",
      "np",
      ".",
      "rot90",
      "(",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "array",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      18,
      465,
      465,
      2,
      3,
      84,
      85,
      26
    ],
    "code_indx_copy": [
      74,
      22,
      524,
      1,
      74,
      22,
      524,
      1,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      74,
      22,
      524,
      1,
      74,
      22,
      524,
      1,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "flatten",
      "list",
      "of",
      "tuples",
      "var_0"
    ],
    "code": [
      "list",
      "(",
      "chain",
      ".",
      "from_iterable",
      "(",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      4,
      2,
      33,
      26
    ],
    "code_indx_copy": [
      33,
      1,
      450,
      22,
      451,
      1,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      33,
      1,
      450,
      22,
      451,
      1,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "substitute",
      "two",
      "or",
      "more",
      "whitespace",
      "characters",
      "with",
      "character",
      "str_0",
      "in",
      "string",
      "var_0"
    ],
    "code": [
      "re",
      ".",
      "sub",
      "(",
      "'\\\\s{2,}'",
      ",",
      "'str_0'",
      ",",
      "var_0",
      ".",
      "strip",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "|",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "line",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      29,
      344,
      425,
      211,
      98,
      79,
      202,
      5,
      24,
      14,
      26
    ],
    "code_indx_copy": [
      39,
      22,
      40,
      1,
      524,
      8,
      29,
      8,
      34,
      22,
      170,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      40,
      1,
      524,
      8,
      29,
      8,
      34,
      22,
      170,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "print",
      "float",
      "var_0",
      "with",
      "two",
      "decimal",
      "points"
    ],
    "code": [
      "print",
      "(",
      "'%.2f'",
      "%",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      166,
      94,
      26,
      79,
      29,
      255,
      318
    ],
    "code_indx_copy": [
      49,
      1,
      513,
      117,
      34,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      513,
      117,
      34,
      17
    ]
  },
  {
    "intent": [
      "print",
      "float",
      "var_0",
      "with",
      "two",
      "decimal",
      "points"
    ],
    "code": [
      "print",
      "(",
      "'{0:.2f}'",
      ".",
      "format",
      "(",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      166,
      94,
      26,
      79,
      29,
      255,
      318
    ],
    "code_indx_copy": [
      49,
      1,
      472,
      22,
      38,
      1,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      472,
      22,
      38,
      1,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "print",
      "float",
      "var_0",
      "with",
      "two",
      "decimal",
      "points"
    ],
    "code": [
      "print",
      "(",
      "'{0:.2f}'",
      ".",
      "format",
      "(",
      "round",
      "(",
      "var_0",
      ",",
      "2",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      166,
      94,
      26,
      79,
      29,
      255,
      318
    ],
    "code_indx_copy": [
      49,
      1,
      472,
      22,
      38,
      1,
      208,
      1,
      34,
      8,
      82,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      472,
      22,
      38,
      1,
      208,
      1,
      34,
      8,
      82,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "print",
      "float",
      "var_0",
      "with",
      "two",
      "decimal",
      "points"
    ],
    "code": [
      "print",
      "(",
      "'%.2f'",
      "%",
      "round",
      "(",
      "var_0",
      ",",
      "2",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      166,
      94,
      26,
      79,
      29,
      255,
      318
    ],
    "code_indx_copy": [
      49,
      1,
      513,
      117,
      208,
      1,
      34,
      8,
      82,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      513,
      117,
      208,
      1,
      34,
      8,
      82,
      17,
      17
    ]
  },
  {
    "intent": [
      "limit",
      "float",
      "13.9499999",
      "to",
      "two",
      "decimal",
      "points"
    ],
    "code": [
      "'%.2f'",
      "%",
      "13.9499999"
    ],
    "slot_map": {},
    "intent_indx": [
      465,
      94,
      465,
      8,
      29,
      255,
      318
    ],
    "code_indx_copy": [
      513,
      117,
      530
    ],
    "code_indx_nocopy": [
      513,
      117,
      524
    ]
  },
  {
    "intent": [
      "limit",
      "float",
      "3.14159",
      "to",
      "two",
      "decimal",
      "points"
    ],
    "code": [
      "'%.2f'",
      "%",
      "3.14159"
    ],
    "slot_map": {},
    "intent_indx": [
      465,
      94,
      465,
      8,
      29,
      255,
      318
    ],
    "code_indx_copy": [
      513,
      117,
      530
    ],
    "code_indx_nocopy": [
      513,
      117,
      524
    ]
  },
  {
    "intent": [
      "limit",
      "float",
      "13.949999999999999",
      "to",
      "two",
      "decimal",
      "points"
    ],
    "code": [
      "float",
      "(",
      "'{0:.2f}'",
      ".",
      "format",
      "(",
      "13.95",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      465,
      94,
      465,
      8,
      29,
      255,
      318
    ],
    "code_indx_copy": [
      225,
      1,
      472,
      22,
      38,
      1,
      524,
      17,
      17
    ],
    "code_indx_nocopy": [
      225,
      1,
      472,
      22,
      38,
      1,
      524,
      17,
      17
    ]
  },
  {
    "intent": [
      "limit",
      "float",
      "13.949999999999999",
      "to",
      "two",
      "decimal",
      "points"
    ],
    "code": [
      "\"\"\"{0:.2f}\"\"\"",
      ".",
      "format",
      "(",
      "13.95",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      465,
      94,
      465,
      8,
      29,
      255,
      318
    ],
    "code_indx_copy": [
      524,
      22,
      38,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      38,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "load",
      "a",
      "tsv",
      "file",
      "str_0",
      "into",
      "a",
      "pandas",
      "data",
      "frame"
    ],
    "code": [
      "DataFrame",
      ".",
      "from_csv",
      "(",
      "'str_0'",
      ",",
      "sep",
      "=",
      "'\\t'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "c:/~/trainSetRel3.txt",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      249,
      3,
      465,
      126,
      5,
      12,
      3,
      42,
      65,
      66
    ],
    "code_indx_copy": [
      164,
      22,
      524,
      1,
      29,
      8,
      264,
      19,
      265,
      17
    ],
    "code_indx_nocopy": [
      164,
      22,
      524,
      1,
      29,
      8,
      264,
      19,
      265,
      17
    ]
  },
  {
    "intent": [
      "set",
      "utc",
      "offset",
      "by",
      "9",
      "hrs",
      "ahead",
      "for",
      "date",
      "str_0"
    ],
    "code": [
      "dateutil",
      ".",
      "parser",
      ".",
      "parse",
      "(",
      "'2013/09/11 00:17 +0900'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "2013/09/11 00:17",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      59,
      180,
      465,
      44,
      403,
      465,
      465,
      21,
      133,
      5
    ],
    "code_indx_copy": [
      524,
      22,
      376,
      22,
      236,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      376,
      22,
      236,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "pass",
      "a",
      "list",
      "of",
      "parameters",
      "`",
      "(",
      "(",
      "1",
      ",",
      "2",
      ",",
      "3",
      ")",
      ",",
      ")",
      "to",
      "sql",
      "queue",
      "str_0"
    ],
    "code": [
      "cur",
      ".",
      "mogrify",
      "(",
      "'str_0'",
      ",",
      "(",
      "(",
      "1",
      ",",
      "2",
      ",",
      "3",
      ")",
      ",",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "SELECT * FROM table WHERE column IN %s;",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      3,
      4,
      2,
      370,
      345,
      212,
      212,
      237,
      62,
      82,
      62,
      57,
      27,
      62,
      27,
      8,
      423,
      465,
      5
    ],
    "code_indx_copy": [
      524,
      22,
      524,
      1,
      29,
      8,
      1,
      1,
      15,
      8,
      82,
      8,
      54,
      17,
      8,
      17,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      524,
      1,
      29,
      8,
      1,
      1,
      15,
      8,
      82,
      8,
      54,
      17,
      8,
      17,
      17
    ]
  },
  {
    "intent": [
      "sum",
      "all",
      "elements",
      "of",
      "two-dimensions",
      "list",
      "str_0",
      "]"
    ],
    "code": [
      "sum",
      "(",
      "[",
      "sum",
      "(",
      "x",
      ")",
      "for",
      "x",
      "in",
      "[",
      "str_0",
      "]",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "[[1, 2, 3, 4], [2, 4, 5, 6]]",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "[[1, 2, 3, 4], [2, 4, 5, 6]]",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      112,
      38,
      1,
      2,
      465,
      4,
      5,
      220
    ],
    "code_indx_copy": [
      0,
      1,
      12,
      0,
      1,
      26,
      17,
      7,
      26,
      9,
      12,
      11,
      16,
      16,
      17
    ],
    "code_indx_nocopy": [
      0,
      1,
      12,
      0,
      1,
      26,
      17,
      7,
      26,
      9,
      12,
      11,
      16,
      16,
      17
    ]
  },
  {
    "intent": [
      "retrieve",
      "an",
      "arbitrary",
      "value",
      "from",
      "dictionary",
      "var_0"
    ],
    "code": [
      "next",
      "(",
      "iter",
      "(",
      "var_0",
      ".",
      "values",
      "(",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "dict",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      371,
      225,
      465,
      143,
      58,
      25,
      26
    ],
    "code_indx_copy": [
      496,
      1,
      165,
      1,
      34,
      22,
      166,
      1,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      496,
      1,
      165,
      1,
      34,
      22,
      166,
      1,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "access",
      "an",
      "arbitrary",
      "value",
      "from",
      "dictionary",
      "var_0"
    ],
    "code": [
      "next",
      "(",
      "iter",
      "(",
      "list",
      "(",
      "var_0",
      ".",
      "values",
      "(",
      ")",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "dict",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      225,
      465,
      143,
      58,
      25,
      26
    ],
    "code_indx_copy": [
      496,
      1,
      165,
      1,
      33,
      1,
      34,
      22,
      166,
      1,
      17,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      496,
      1,
      165,
      1,
      33,
      1,
      34,
      22,
      166,
      1,
      17,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "group",
      "dataframe",
      "var_0",
      "by",
      "columns",
      "str_0",
      "and",
      "str_1"
    ],
    "code": [
      "var_0",
      ".",
      "groupby",
      "(",
      "[",
      "'str_0'",
      ",",
      "'str_1'",
      "]",
      ")",
      ".",
      "sum",
      "(",
      ")",
      ".",
      "unstack",
      "(",
      "level",
      "=",
      "0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "Month",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "Fruit",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      383,
      43,
      26,
      44,
      61,
      5,
      31,
      32
    ],
    "code_indx_copy": [
      34,
      22,
      157,
      1,
      12,
      29,
      8,
      63,
      16,
      17,
      22,
      0,
      1,
      17,
      22,
      169,
      1,
      158,
      19,
      43,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      157,
      1,
      12,
      29,
      8,
      63,
      16,
      17,
      22,
      0,
      1,
      17,
      22,
      169,
      1,
      158,
      19,
      43,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "list",
      "var_0",
      "of",
      "tuples",
      "by",
      "arbitrary",
      "key",
      "from",
      "list",
      "var_1"
    ],
    "code": [
      "sorted",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "var_1",
      ".",
      "index",
      "(",
      "x",
      "[",
      "1",
      "]",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "mylist",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "order",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      4,
      26,
      2,
      33,
      44,
      465,
      23,
      58,
      4,
      63
    ],
    "code_indx_copy": [
      101,
      1,
      34,
      8,
      102,
      19,
      44,
      26,
      13,
      91,
      22,
      160,
      1,
      26,
      12,
      15,
      16,
      17,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      34,
      8,
      102,
      19,
      44,
      26,
      13,
      91,
      22,
      160,
      1,
      26,
      12,
      15,
      16,
      17,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "list",
      "of",
      "dictionary",
      "var_0",
      "according",
      "to",
      "the",
      "key",
      "str_0"
    ],
    "code": [
      "sorted",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "x",
      "[",
      "str_0",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "persons",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "['passport']['birth_info']['date']",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "['passport']['birth_info']['date']",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      117,
      3,
      4,
      2,
      25,
      26,
      378,
      8,
      18,
      23,
      5
    ],
    "code_indx_copy": [
      101,
      1,
      34,
      8,
      102,
      19,
      44,
      26,
      13,
      26,
      12,
      11,
      16,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      34,
      8,
      102,
      19,
      44,
      26,
      13,
      26,
      12,
      11,
      16,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "the",
      "fragment",
      "identifier",
      "str_0",
      "from",
      "a",
      "url",
      "str_1"
    ],
    "code": [
      "urlparse",
      ".",
      "urldefrag",
      "(",
      "'str_1'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "#something",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": "http://www.address.com/something#something",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      268,
      18,
      465,
      465,
      5,
      58,
      3,
      102,
      32
    ],
    "code_indx_copy": [
      524,
      22,
      524,
      1,
      63,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      524,
      1,
      63,
      17
    ]
  },
  {
    "intent": [
      "download",
      "to",
      "a",
      "directory",
      "str_0",
      "from",
      "source",
      "str_1"
    ],
    "code": [
      "urllib",
      ".",
      "request",
      ".",
      "urlretrieve",
      "(",
      "'str_1'",
      ",",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "/path/to/dir/filename.ext",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "http://example.com/file.ext",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      414,
      8,
      3,
      175,
      5,
      58,
      465,
      32
    ],
    "code_indx_copy": [
      232,
      22,
      233,
      22,
      353,
      1,
      63,
      8,
      29,
      17
    ],
    "code_indx_nocopy": [
      232,
      22,
      233,
      22,
      353,
      1,
      63,
      8,
      29,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "all",
      "duplicates",
      "from",
      "a",
      "list",
      "of",
      "sets",
      "var_0"
    ],
    "code": [
      "list",
      "(",
      "set",
      "(",
      "frozenset",
      "(",
      "item",
      ")",
      "for",
      "item",
      "in",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "L",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      38,
      336,
      58,
      3,
      4,
      2,
      465,
      26
    ],
    "code_indx_copy": [
      33,
      1,
      189,
      1,
      524,
      1,
      387,
      17,
      7,
      387,
      9,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      33,
      1,
      189,
      1,
      524,
      1,
      387,
      17,
      7,
      387,
      9,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "duplicates",
      "from",
      "a",
      "list",
      "of",
      "sets",
      "str_0"
    ],
    "code": [
      "[",
      "set",
      "(",
      "item",
      ")",
      "for",
      "item",
      "in",
      "set",
      "(",
      "frozenset",
      "(",
      "item",
      ")",
      "for",
      "item",
      "in",
      "str_0",
      ")",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "L",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      268,
      336,
      58,
      3,
      4,
      2,
      465,
      5
    ],
    "code_indx_copy": [
      12,
      189,
      1,
      387,
      17,
      7,
      387,
      9,
      189,
      1,
      524,
      1,
      387,
      17,
      7,
      387,
      9,
      11,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      189,
      1,
      387,
      17,
      7,
      387,
      9,
      189,
      1,
      524,
      1,
      387,
      17,
      7,
      387,
      9,
      11,
      17,
      16
    ]
  },
  {
    "intent": [
      "terminate",
      "process",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "terminate",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "p",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      444,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      528,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      524,
      1,
      17
    ]
  },
  {
    "intent": [
      "delete",
      "all",
      "values",
      "in",
      "a",
      "list",
      "var_0"
    ],
    "code": [
      "del",
      "var_0",
      "[",
      ":",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "mylist",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      86,
      38,
      20,
      24,
      3,
      4,
      26
    ],
    "code_indx_copy": [
      283,
      34,
      12,
      13,
      16
    ],
    "code_indx_nocopy": [
      283,
      34,
      12,
      13,
      16
    ]
  },
  {
    "intent": [
      "throw",
      "an",
      "error",
      "window",
      "in",
      "python",
      "in",
      "windows"
    ],
    "code": [
      "ctypes",
      ".",
      "windll",
      ".",
      "user32",
      ".",
      "MessageBoxW",
      "(",
      "0",
      ",",
      "'Error'",
      ",",
      "'Error'",
      ",",
      "0",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      463,
      225,
      110,
      302,
      24,
      50,
      24,
      435
    ],
    "code_indx_copy": [
      524,
      22,
      524,
      22,
      524,
      22,
      524,
      1,
      43,
      8,
      524,
      8,
      524,
      8,
      43,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      524,
      22,
      524,
      22,
      524,
      1,
      43,
      8,
      524,
      8,
      524,
      8,
      43,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "empty",
      "strings",
      "from",
      "list",
      "var_0"
    ],
    "code": [
      "var_0",
      "=",
      "list",
      "(",
      "[",
      "_f",
      "for",
      "_f",
      "in",
      "var_0",
      "if",
      "_f",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "str_list",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      146,
      259,
      58,
      4,
      26
    ],
    "code_indx_copy": [
      34,
      19,
      33,
      1,
      12,
      514,
      7,
      514,
      9,
      34,
      67,
      514,
      16,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      33,
      1,
      12,
      514,
      7,
      514,
      9,
      34,
      67,
      514,
      16,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "newlines",
      "and",
      "whitespace",
      "from",
      "string",
      "var_0"
    ],
    "code": [
      "re",
      ".",
      "sub",
      "(",
      "'[\\\\ \\\\n]{2,}'",
      ",",
      "''",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "yourstring",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      465,
      31,
      211,
      58,
      14,
      26
    ],
    "code_indx_copy": [
      39,
      22,
      40,
      1,
      524,
      8,
      21,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      40,
      1,
      524,
      8,
      21,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "the",
      "last",
      "dot",
      "and",
      "all",
      "text",
      "beyond",
      "it",
      "in",
      "string",
      "var_0"
    ],
    "code": [
      "re",
      ".",
      "sub",
      "(",
      "'\\\\.[^.]+$'",
      ",",
      "''",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      18,
      170,
      409,
      31,
      38,
      267,
      465,
      145,
      24,
      14,
      26
    ],
    "code_indx_copy": [
      39,
      22,
      40,
      1,
      524,
      8,
      21,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      40,
      1,
      524,
      8,
      21,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "elements",
      "from",
      "an",
      "array",
      "var_0",
      "that",
      "are",
      "in",
      "array",
      "var_1"
    ],
    "code": [
      "var_0",
      "[",
      "np",
      ".",
      "all",
      "(",
      "np",
      ".",
      "any",
      "(",
      "var_0",
      "-",
      "var_1",
      "[",
      ":",
      ",",
      "(",
      "None",
      ")",
      "]",
      ",",
      "axis",
      "=",
      "2",
      ")",
      ",",
      "axis",
      "=",
      "0",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "A",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "B",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      1,
      58,
      225,
      85,
      26,
      195,
      243,
      24,
      85,
      63
    ],
    "code_indx_copy": [
      34,
      12,
      74,
      22,
      77,
      1,
      74,
      22,
      269,
      1,
      34,
      14,
      91,
      12,
      13,
      8,
      1,
      209,
      17,
      16,
      8,
      42,
      19,
      82,
      17,
      8,
      42,
      19,
      43,
      17,
      16
    ],
    "code_indx_nocopy": [
      34,
      12,
      74,
      22,
      77,
      1,
      74,
      22,
      269,
      1,
      34,
      14,
      91,
      12,
      13,
      8,
      1,
      209,
      17,
      16,
      8,
      42,
      19,
      82,
      17,
      8,
      42,
      19,
      43,
      17,
      16
    ]
  },
  {
    "intent": [
      "write",
      "column",
      "str_0",
      "of",
      "dataframe",
      "var_0",
      "to",
      "csv",
      "file",
      "str_1"
    ],
    "code": [
      "var_0",
      ".",
      "to_csv",
      "(",
      "'str_1'",
      ",",
      "cols",
      "=",
      "[",
      "'str_0'",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "sum",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "str_1": {
        "value": "test.csv",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      168,
      147,
      5,
      2,
      43,
      26,
      8,
      287,
      126,
      32
    ],
    "code_indx_copy": [
      34,
      22,
      227,
      1,
      63,
      8,
      524,
      19,
      12,
      29,
      16,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      227,
      1,
      63,
      8,
      524,
      19,
      12,
      29,
      16,
      17
    ]
  },
  {
    "intent": [
      "call",
      "a",
      "python",
      "script",
      "str_0"
    ],
    "code": [
      "exec",
      "(",
      "compile",
      "(",
      "open",
      "(",
      "'str_0'",
      ")",
      ".",
      "read",
      "(",
      ")",
      ",",
      "'str_0'",
      ",",
      "'exec'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "test2.py",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      304,
      3,
      50,
      246,
      5
    ],
    "code_indx_copy": [
      436,
      1,
      83,
      1,
      105,
      1,
      29,
      17,
      22,
      106,
      1,
      17,
      8,
      29,
      8,
      437,
      17,
      17
    ],
    "code_indx_nocopy": [
      436,
      1,
      83,
      1,
      105,
      1,
      29,
      17,
      22,
      106,
      1,
      17,
      8,
      29,
      8,
      437,
      17,
      17
    ]
  },
  {
    "intent": [
      "call",
      "a",
      "python",
      "script",
      "str_0"
    ],
    "code": [
      "subprocess",
      ".",
      "call",
      "(",
      "'str_0'",
      ",",
      "shell",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "test1.py",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      304,
      3,
      50,
      246,
      5
    ],
    "code_indx_copy": [
      229,
      22,
      230,
      1,
      29,
      8,
      231,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      229,
      22,
      230,
      1,
      29,
      8,
      231,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "zipped",
      "list",
      "var_0",
      "using",
      "lambda",
      "function"
    ],
    "code": [
      "sorted",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "x",
      "[",
      "1",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "zipped",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      3,
      465,
      4,
      26,
      109,
      68,
      69
    ],
    "code_indx_copy": [
      101,
      1,
      34,
      8,
      102,
      19,
      44,
      26,
      13,
      26,
      12,
      15,
      16,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      34,
      8,
      102,
      19,
      44,
      26,
      13,
      26,
      12,
      15,
      16,
      17
    ]
  },
  {
    "intent": [
      "how",
      "do",
      "i",
      "sort",
      "a",
      "zipped",
      "list",
      "in",
      "python",
      "?"
    ],
    "code": [
      "zipped",
      ".",
      "sort",
      "(",
      "key",
      "=",
      "lambda",
      "t",
      ":",
      "t",
      "[",
      "1",
      "]",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      77,
      327,
      328,
      117,
      3,
      465,
      4,
      24,
      50,
      52
    ],
    "code_indx_copy": [
      533,
      22,
      124,
      1,
      102,
      19,
      44,
      45,
      13,
      45,
      12,
      15,
      16,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      124,
      1,
      102,
      19,
      44,
      45,
      13,
      45,
      12,
      15,
      16,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "dictionary",
      "var_0",
      "by",
      "value",
      "then",
      "by",
      "key"
    ],
    "code": [
      "sorted",
      "(",
      "list",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      ",",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "(",
      "x",
      "[",
      "1",
      "]",
      ",",
      "x",
      "[",
      "0",
      "]",
      ")",
      ",",
      "reverse",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "y",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      3,
      25,
      26,
      44,
      143,
      260,
      44,
      23
    ],
    "code_indx_copy": [
      101,
      1,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      8,
      102,
      19,
      44,
      26,
      13,
      1,
      26,
      12,
      15,
      16,
      8,
      26,
      12,
      43,
      16,
      17,
      8,
      129,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      8,
      102,
      19,
      44,
      26,
      13,
      1,
      26,
      12,
      15,
      16,
      8,
      26,
      12,
      43,
      16,
      17,
      8,
      129,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "using",
      "beautifulsoup",
      "to",
      "select",
      "div",
      "blocks",
      "within",
      "html",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "find_all",
      "(",
      "'div'",
      ",",
      "class_",
      "=",
      "'crBlock '",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "soup",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      109,
      70,
      8,
      78,
      465,
      465,
      55,
      307,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      62,
      1,
      524,
      8,
      524,
      19,
      524,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      62,
      1,
      524,
      8,
      524,
      19,
      524,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "elements",
      "from",
      "list",
      "var_0",
      "the",
      "indexes",
      "of",
      "which",
      "are",
      "in",
      "array",
      "var_1"
    ],
    "code": [
      "[",
      "element",
      "for",
      "i",
      ",",
      "element",
      "in",
      "enumerate",
      "(",
      "var_0",
      ")",
      "if",
      "i",
      "not",
      "in",
      "var_1",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "centroids",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "index",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      1,
      58,
      4,
      26,
      18,
      235,
      2,
      205,
      243,
      24,
      85,
      63
    ],
    "code_indx_copy": [
      12,
      510,
      7,
      6,
      8,
      510,
      9,
      10,
      1,
      34,
      17,
      67,
      6,
      281,
      9,
      91,
      16
    ],
    "code_indx_nocopy": [
      12,
      510,
      7,
      6,
      8,
      510,
      9,
      10,
      1,
      34,
      17,
      67,
      6,
      281,
      9,
      91,
      16
    ]
  },
  {
    "intent": [
      "list",
      "duplicated",
      "elements",
      "in",
      "two",
      "lists",
      "var_0",
      "and",
      "var_1"
    ],
    "code": [
      "list",
      "(",
      "set",
      "(",
      "var_0",
      ")",
      "&",
      "set",
      "(",
      "var_1",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "listA",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "listB",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      4,
      122,
      1,
      24,
      29,
      30,
      26,
      31,
      63
    ],
    "code_indx_copy": [
      33,
      1,
      189,
      1,
      34,
      17,
      226,
      189,
      1,
      91,
      17,
      17
    ],
    "code_indx_nocopy": [
      33,
      1,
      189,
      1,
      34,
      17,
      226,
      189,
      1,
      91,
      17,
      17
    ]
  },
  {
    "intent": [
      "download",
      "str_0",
      "from",
      "http",
      "and",
      "save",
      "as",
      "str_1"
    ],
    "code": [
      "testfile",
      "=",
      "urllib",
      ".",
      "request",
      ".",
      "URLopener",
      "(",
      ")",
      "\n",
      "testfile",
      ".",
      "retrieve",
      "(",
      "'str_0'",
      ",",
      "'str_1'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "http://randomsite.com/file.gz",
        "quote": "\"",
        "type": "str"
      },
      "str_1": {
        "value": "file.gz",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      414,
      5,
      58,
      343,
      31,
      333,
      90,
      32
    ],
    "code_indx_copy": [
      524,
      19,
      232,
      22,
      233,
      22,
      524,
      1,
      17,
      161,
      524,
      22,
      524,
      1,
      29,
      8,
      63,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      232,
      22,
      233,
      22,
      524,
      1,
      17,
      161,
      524,
      22,
      524,
      1,
      29,
      8,
      63,
      17
    ]
  },
  {
    "intent": [
      "download",
      "file",
      "from",
      "http",
      "url",
      "str_0",
      "and",
      "save",
      "as",
      "str_1"
    ],
    "code": [
      "urllib",
      ".",
      "request",
      ".",
      "urlretrieve",
      "(",
      "'str_0'",
      ",",
      "'str_1'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "http://randomsite.com/file.gz",
        "quote": "\"",
        "type": "str"
      },
      "str_1": {
        "value": "file.gz",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      414,
      126,
      58,
      343,
      102,
      5,
      31,
      333,
      90,
      32
    ],
    "code_indx_copy": [
      232,
      22,
      233,
      22,
      353,
      1,
      29,
      8,
      63,
      17
    ],
    "code_indx_nocopy": [
      232,
      22,
      233,
      22,
      353,
      1,
      29,
      8,
      63,
      17
    ]
  },
  {
    "intent": [
      "download",
      "file",
      "from",
      "http",
      "url",
      "var_0"
    ],
    "code": [
      "file_name",
      "=",
      "wget",
      ".",
      "download",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "file_url",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      414,
      126,
      58,
      343,
      102,
      26
    ],
    "code_indx_copy": [
      524,
      19,
      524,
      22,
      528,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      524,
      22,
      524,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "set",
      "an",
      "array",
      "of",
      "unicode",
      "characters",
      "str_0",
      "as",
      "labels",
      "in",
      "matplotlib",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "set_yticklabels",
      "(",
      "[",
      "'\u00e9'",
      ",",
      "'\u00e3'",
      ",",
      "'\u00e2'",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "[u'\u00e9', u'\u00e3', u'\u00e2']",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "ax",
        "quote": "`",
        "type": "var"
      },
      "[str_0]": {
        "value": "[u'\u00e9', u'\u00e3', u'\u00e2']",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      59,
      225,
      85,
      2,
      230,
      98,
      5,
      90,
      322,
      24,
      350,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      524,
      1,
      12,
      524,
      8,
      524,
      8,
      524,
      16,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      524,
      1,
      12,
      524,
      8,
      524,
      8,
      524,
      16,
      17
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "list",
      "of",
      "all",
      "integer",
      "points",
      "in",
      "a",
      "var_0",
      "dimensional",
      "hypercube",
      "with",
      "coordinates",
      "from",
      "str_0",
      "to",
      "var_1",
      "for",
      "all",
      "dimensions"
    ],
    "code": [
      "list",
      "(",
      "itertools",
      ".",
      "product",
      "(",
      "list",
      "(",
      "range",
      "(",
      "-",
      "x",
      ",",
      "var_1",
      ")",
      ")",
      ",",
      "repeat",
      "=",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "dim",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "-x",
        "quote": "`",
        "type": "str"
      },
      "var_1": {
        "value": "y",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      3,
      4,
      2,
      38,
      10,
      318,
      24,
      3,
      26,
      83,
      465,
      79,
      465,
      58,
      5,
      8,
      63,
      21,
      38,
      419
    ],
    "code_indx_copy": [
      33,
      1,
      50,
      22,
      328,
      1,
      33,
      1,
      104,
      1,
      14,
      26,
      8,
      91,
      17,
      17,
      8,
      490,
      19,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      33,
      1,
      50,
      22,
      328,
      1,
      33,
      1,
      104,
      1,
      14,
      26,
      8,
      91,
      17,
      17,
      8,
      490,
      19,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "unicode",
      "string",
      "var_0",
      "into",
      "string",
      "literals"
    ],
    "code": [
      "print",
      "(",
      "var_0",
      ".",
      "encode",
      "(",
      "'unicode_escape'",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      230,
      14,
      26,
      12,
      14,
      465
    ],
    "code_indx_copy": [
      49,
      1,
      34,
      22,
      239,
      1,
      182,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      34,
      22,
      239,
      1,
      182,
      17,
      17
    ]
  },
  {
    "intent": [
      "how",
      "to",
      "format",
      "a",
      "list",
      "of",
      "arguments",
      "var_0",
      "into",
      "a",
      "string"
    ],
    "code": [
      "'Hello %s'",
      "%",
      "', '",
      ".",
      "join",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "my_args",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      77,
      8,
      16,
      3,
      4,
      2,
      305,
      26,
      12,
      3,
      14
    ],
    "code_indx_copy": [
      524,
      117,
      419,
      22,
      23,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      524,
      117,
      419,
      22,
      23,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "search",
      "and",
      "split",
      "string",
      "str_0",
      "by",
      "delimiter",
      "str_1"
    ],
    "code": [
      "re",
      ".",
      "split",
      "(",
      "'str_1'",
      ",",
      "'str_0'",
      ",",
      "1",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "aaa bbb ccc ddd eee fff",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "(ddd)",
        "quote": "'",
        "type": "str"
      },
      "(str_1)": {
        "value": "(ddd)",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      71,
      31,
      138,
      14,
      5,
      44,
      329,
      32
    ],
    "code_indx_copy": [
      39,
      22,
      71,
      1,
      63,
      8,
      29,
      8,
      15,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      71,
      1,
      63,
      8,
      29,
      8,
      15,
      17
    ]
  },
  {
    "intent": [
      "regex",
      "search",
      "and",
      "split",
      "string",
      "str_0",
      "by",
      "delimiter",
      "str_1"
    ],
    "code": [
      "re",
      ".",
      "split",
      "(",
      "'str_1'",
      ",",
      "'str_0'",
      ",",
      "1",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "aaa bbb ccc ddd eee fff",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "(d(d)d)",
        "quote": "'",
        "type": "str"
      },
      "(str_1)": {
        "value": "(d(d)d)",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      40,
      71,
      31,
      138,
      14,
      5,
      44,
      329,
      32
    ],
    "code_indx_copy": [
      39,
      22,
      71,
      1,
      63,
      8,
      29,
      8,
      15,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      71,
      1,
      63,
      8,
      29,
      8,
      15,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "list",
      "of",
      "dictionaries",
      "var_0",
      "to",
      "pandas",
      "data",
      "frame"
    ],
    "code": [
      "pd",
      ".",
      "DataFrame",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "d",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      3,
      4,
      2,
      188,
      26,
      8,
      42,
      65,
      66
    ],
    "code_indx_copy": [
      162,
      22,
      164,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      162,
      22,
      164,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "split",
      "string",
      "str_0",
      "into",
      "words",
      "that",
      "do",
      "not",
      "contain",
      "whitespaces"
    ],
    "code": [
      "\"\"\"str_0\"\"\"",
      ".",
      "split",
      "(",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "This is a string",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      138,
      14,
      5,
      12,
      41,
      195,
      327,
      105,
      325,
      140
    ],
    "code_indx_copy": [
      212,
      22,
      71,
      1,
      17
    ],
    "code_indx_nocopy": [
      212,
      22,
      71,
      1,
      17
    ]
  },
  {
    "intent": [
      "split",
      "string",
      "str_0",
      "into",
      "words",
      "that",
      "does",
      "not",
      "contain",
      "whitespaces"
    ],
    "code": [
      "\"\"\"str_0\"\"\"",
      ".",
      "split",
      "(",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "This     is a     string",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      138,
      14,
      5,
      12,
      41,
      195,
      184,
      105,
      325,
      140
    ],
    "code_indx_copy": [
      212,
      22,
      71,
      1,
      17
    ],
    "code_indx_nocopy": [
      212,
      22,
      71,
      1,
      17
    ]
  },
  {
    "intent": [
      "python",
      "pandas",
      ":",
      "apply",
      "a",
      "function",
      "with",
      "arguments",
      "to",
      "a",
      "series"
    ],
    "code": [
      "my_series",
      ".",
      "apply",
      "(",
      "your_function",
      ",",
      "args",
      "=",
      "(",
      "2",
      ",",
      "3",
      ",",
      "4",
      ")",
      ",",
      "extra_kw",
      "=",
      "1",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      50,
      42,
      128,
      401,
      3,
      69,
      79,
      305,
      8,
      3,
      339
    ],
    "code_indx_copy": [
      524,
      22,
      59,
      1,
      524,
      8,
      311,
      19,
      1,
      82,
      8,
      54,
      8,
      184,
      17,
      8,
      524,
      19,
      15,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      59,
      1,
      524,
      8,
      311,
      19,
      1,
      82,
      8,
      54,
      8,
      184,
      17,
      8,
      524,
      19,
      15,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "all",
      "duplicate",
      "items",
      "from",
      "a",
      "list",
      "var_0"
    ],
    "code": [
      "woduplicates",
      "=",
      "list",
      "(",
      "set",
      "(",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "lseperatedOrblist",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      38,
      411,
      39,
      58,
      3,
      4,
      26
    ],
    "code_indx_copy": [
      524,
      19,
      33,
      1,
      189,
      1,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      33,
      1,
      189,
      1,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "sum",
      "of",
      "product",
      "of",
      "combinations",
      "in",
      "a",
      "list",
      "var_0"
    ],
    "code": [
      "sum",
      "(",
      "[",
      "(",
      "i",
      "*",
      "j",
      ")",
      "for",
      "i",
      ",",
      "j",
      "in",
      "list",
      "(",
      "itertools",
      ".",
      "combinations",
      "(",
      "var_0",
      ",",
      "2",
      ")",
      ")",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "l",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      112,
      2,
      163,
      2,
      465,
      24,
      3,
      4,
      26
    ],
    "code_indx_copy": [
      0,
      1,
      12,
      1,
      6,
      3,
      30,
      17,
      7,
      6,
      8,
      30,
      9,
      33,
      1,
      50,
      22,
      51,
      1,
      34,
      8,
      82,
      17,
      17,
      16,
      17
    ],
    "code_indx_nocopy": [
      0,
      1,
      12,
      1,
      6,
      3,
      30,
      17,
      7,
      6,
      8,
      30,
      9,
      33,
      1,
      50,
      22,
      51,
      1,
      34,
      8,
      82,
      17,
      17,
      16,
      17
    ]
  },
  {
    "intent": [
      "regular",
      "expression",
      "for",
      "validating",
      "string",
      "str_0",
      "containing",
      "a",
      "sequence",
      "of",
      "characters",
      "ending",
      "with",
      "str_1",
      "followed",
      "by",
      "any",
      "number",
      "of",
      "digits",
      "."
    ],
    "code": [
      "re",
      ".",
      "compile",
      "(",
      "'{}-\\\\d*'",
      ".",
      "format",
      "(",
      "str_0",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "user",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "-",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      250,
      226,
      21,
      465,
      14,
      5,
      34,
      3,
      445,
      2,
      98,
      432,
      79,
      32,
      368,
      44,
      272,
      76,
      2,
      200,
      159
    ],
    "code_indx_copy": [
      39,
      22,
      83,
      1,
      524,
      22,
      38,
      1,
      11,
      17,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      83,
      1,
      524,
      22,
      38,
      1,
      11,
      17,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "all",
      "of",
      "the",
      "items",
      "in",
      "a",
      "list",
      "var_0",
      "to",
      "float"
    ],
    "code": [
      "[",
      "float",
      "(",
      "i",
      ")",
      "for",
      "i",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "lst",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      38,
      2,
      18,
      39,
      24,
      3,
      4,
      26,
      8,
      94
    ],
    "code_indx_copy": [
      12,
      225,
      1,
      6,
      17,
      7,
      6,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      12,
      225,
      1,
      6,
      17,
      7,
      6,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "multiply",
      "all",
      "items",
      "in",
      "a",
      "list",
      "str_0",
      "together"
    ],
    "code": [
      "from",
      "functools",
      "import",
      "reduce",
      "\n",
      "reduce",
      "(",
      "lambda",
      "x",
      ",",
      "y",
      ":",
      "x",
      "*",
      "y",
      ",",
      "[",
      "str_0",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "[1, 2, 3, 4, 5, 6]",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "[1, 2, 3, 4, 5, 6]",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      396,
      38,
      39,
      24,
      3,
      4,
      5,
      465
    ],
    "code_indx_copy": [
      392,
      524,
      393,
      394,
      161,
      394,
      1,
      44,
      26,
      8,
      103,
      13,
      26,
      3,
      103,
      8,
      12,
      11,
      16,
      17
    ],
    "code_indx_nocopy": [
      392,
      524,
      393,
      394,
      161,
      394,
      1,
      44,
      26,
      8,
      103,
      13,
      26,
      3,
      103,
      8,
      12,
      11,
      16,
      17
    ]
  },
  {
    "intent": [
      "write",
      "a",
      "tuple",
      "of",
      "tuples",
      "var_0",
      "to",
      "a",
      "csv",
      "file",
      "using",
      "python"
    ],
    "code": [
      "writer",
      ".",
      "writerow",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "A",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      168,
      3,
      113,
      2,
      33,
      26,
      8,
      3,
      287,
      126,
      109,
      50
    ],
    "code_indx_copy": [
      508,
      22,
      427,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      508,
      22,
      427,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "write",
      "all",
      "tuple",
      "of",
      "tuples",
      "var_0",
      "at",
      "once",
      "into",
      "csv",
      "file"
    ],
    "code": [
      "writer",
      ".",
      "writerows",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "A",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      168,
      38,
      113,
      2,
      33,
      26,
      35,
      465,
      12,
      287,
      126
    ],
    "code_indx_copy": [
      508,
      22,
      524,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      508,
      22,
      524,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "python",
      ",",
      "format",
      "string",
      "str_0",
      "to",
      "have",
      "str_1",
      "and",
      "str_2",
      "in",
      "the",
      "first",
      "and",
      "second",
      "positions"
    ],
    "code": [
      "\"\"\"str_0\"\"\"",
      ".",
      "format",
      "(",
      "'str_1'",
      ",",
      "'str_2'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "{} %s {}",
        "quote": "\"",
        "type": "str"
      },
      "str_1": {
        "value": "foo",
        "quote": "'",
        "type": "str"
      },
      "str_2": {
        "value": "bar",
        "quote": "'",
        "type": "str"
      },
      "{str_0}": {
        "value": "{} %s {}",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      50,
      62,
      16,
      14,
      5,
      8,
      196,
      32,
      31,
      194,
      24,
      18,
      151,
      31,
      118,
      465
    ],
    "code_indx_copy": [
      212,
      22,
      38,
      1,
      63,
      8,
      150,
      17
    ],
    "code_indx_nocopy": [
      212,
      22,
      38,
      1,
      63,
      8,
      150,
      17
    ]
  },
  {
    "intent": [
      "truncate",
      "str_0",
      "from",
      "each",
      "string",
      "in",
      "a",
      "list",
      "of",
      "string",
      "var_0"
    ],
    "code": [
      "var_0",
      "=",
      "[",
      "x",
      ".",
      "replace",
      "(",
      "'str_0'",
      ",",
      "''",
      ")",
      "for",
      "x",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "\r\n",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "example",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      5,
      58,
      22,
      14,
      24,
      3,
      4,
      2,
      14,
      26
    ],
    "code_indx_copy": [
      34,
      19,
      12,
      26,
      22,
      107,
      1,
      29,
      8,
      21,
      17,
      7,
      26,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      12,
      26,
      22,
      107,
      1,
      29,
      8,
      21,
      17,
      7,
      26,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "split",
      "elements",
      "of",
      "a",
      "list",
      "var_0",
      "by",
      "str_0"
    ],
    "code": [
      "[",
      "i",
      ".",
      "partition",
      "(",
      "'str_0'",
      ")",
      "[",
      "-",
      "1",
      "]",
      "for",
      "i",
      "in",
      "var_0",
      "if",
      "'str_0'",
      "in",
      "i",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "l",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "\t",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      138,
      1,
      2,
      3,
      4,
      26,
      44,
      5
    ],
    "code_indx_copy": [
      12,
      6,
      22,
      524,
      1,
      29,
      17,
      12,
      14,
      15,
      16,
      7,
      6,
      9,
      34,
      67,
      29,
      9,
      6,
      16
    ],
    "code_indx_nocopy": [
      12,
      6,
      22,
      524,
      1,
      29,
      17,
      12,
      14,
      15,
      16,
      7,
      6,
      9,
      34,
      67,
      29,
      9,
      6,
      16
    ]
  },
  {
    "intent": [
      "search",
      "for",
      "regex",
      "pattern",
      "str_0",
      "in",
      "string",
      "var_0",
      "including",
      "new",
      "line",
      "character",
      "str_1"
    ],
    "code": [
      "re",
      ".",
      "search",
      "(",
      "'str_0'",
      ",",
      "var_0",
      ",",
      "re",
      ".",
      "DOTALL",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "Test(.*)print",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "testStr",
        "quote": "`",
        "type": "var"
      },
      "str_1": {
        "value": "\n",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      71,
      21,
      40,
      54,
      5,
      24,
      14,
      26,
      213,
      192,
      172,
      202,
      32
    ],
    "code_indx_copy": [
      39,
      22,
      93,
      1,
      29,
      8,
      34,
      8,
      39,
      22,
      524,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      93,
      1,
      29,
      8,
      34,
      8,
      39,
      22,
      524,
      17
    ]
  },
  {
    "intent": [
      "find",
      "button",
      "that",
      "is",
      "in",
      "li",
      "class",
      "var_0",
      "and",
      "assign",
      "it",
      "to",
      "variable",
      "var_0"
    ],
    "code": [
      "var_1",
      "=",
      "driver",
      ".",
      "find_element_by_css_selector",
      "(",
      "'li.next>a'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "next",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "next",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      47,
      455,
      195,
      152,
      24,
      465,
      311,
      26,
      31,
      93,
      145,
      8,
      95,
      26
    ],
    "code_indx_copy": [
      91,
      19,
      46,
      22,
      330,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      91,
      19,
      46,
      22,
      330,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "size",
      "of",
      "file",
      "str_0"
    ],
    "code": [
      "os",
      ".",
      "stat",
      "(",
      "'str_0'",
      ")",
      ".",
      "st_size"
    ],
    "slot_map": {
      "str_0": {
        "value": "C:\\Python27\\Lib\\genericpath.py",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      18,
      334,
      2,
      126,
      5
    ],
    "code_indx_copy": [
      113,
      22,
      459,
      1,
      29,
      17,
      22,
      524
    ],
    "code_indx_nocopy": [
      113,
      22,
      459,
      1,
      29,
      17,
      22,
      524
    ]
  },
  {
    "intent": [
      "return",
      "a",
      "string",
      "from",
      "a",
      "regex",
      "match",
      "with",
      "pattern",
      "str_0",
      "in",
      "string",
      "str_1"
    ],
    "code": [
      "imtag",
      "=",
      "re",
      ".",
      "match",
      "(",
      "'str_0'",
      ",",
      "str_1",
      ")",
      ".",
      "group",
      "(",
      "0",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "<img.*?>",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "line",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      160,
      3,
      14,
      58,
      3,
      40,
      144,
      79,
      54,
      5,
      24,
      14,
      32
    ],
    "code_indx_copy": [
      524,
      19,
      39,
      22,
      123,
      1,
      29,
      8,
      37,
      17,
      22,
      120,
      1,
      43,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      39,
      22,
      123,
      1,
      29,
      8,
      37,
      17,
      22,
      120,
      1,
      43,
      17
    ]
  },
  {
    "intent": [
      "rename",
      "a",
      "folder",
      "str_0",
      "to",
      "str_1"
    ],
    "code": [
      "os",
      ".",
      "rename",
      "(",
      "'str_0'",
      ",",
      "'str_1'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "Joe Blow",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": "Blow, Joe",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      391,
      3,
      406,
      5,
      8,
      32
    ],
    "code_indx_copy": [
      113,
      22,
      341,
      1,
      29,
      8,
      63,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      341,
      1,
      29,
      8,
      63,
      17
    ]
  },
  {
    "intent": [
      "find",
      "overlapping",
      "matches",
      "from",
      "a",
      "string",
      "var_0",
      "using",
      "regex"
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'(?=(\\\\w\\\\w))'",
      ",",
      "'var_0'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "hello",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      47,
      465,
      108,
      58,
      3,
      14,
      26,
      109,
      40
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      524,
      8,
      56,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      524,
      8,
      56,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "173",
      "to",
      "binary",
      "string"
    ],
    "code": [
      "bin",
      "(",
      "173",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      11,
      465,
      8,
      276,
      14
    ],
    "code_indx_copy": [
      418,
      1,
      529,
      17
    ],
    "code_indx_nocopy": [
      418,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "binary",
      "string",
      "str_0",
      "to",
      "integer"
    ],
    "code": [
      "int",
      "(",
      "'str_0'",
      ",",
      "2",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "01010101111",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      276,
      14,
      5,
      8,
      10
    ],
    "code_indx_copy": [
      20,
      1,
      29,
      8,
      82,
      17
    ],
    "code_indx_nocopy": [
      20,
      1,
      29,
      8,
      82,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "binary",
      "string",
      "str_0",
      "to",
      "integer"
    ],
    "code": [
      "int",
      "(",
      "'str_0'",
      ",",
      "2",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "010101",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      276,
      14,
      5,
      8,
      10
    ],
    "code_indx_copy": [
      20,
      1,
      29,
      8,
      82,
      17
    ],
    "code_indx_nocopy": [
      20,
      1,
      29,
      8,
      82,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "binary",
      "string",
      "str_0",
      "to",
      "integer"
    ],
    "code": [
      "int",
      "(",
      "'str_0'",
      ",",
      "2",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "0b0010101010",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      276,
      14,
      5,
      8,
      10
    ],
    "code_indx_copy": [
      20,
      1,
      29,
      8,
      82,
      17
    ],
    "code_indx_nocopy": [
      20,
      1,
      29,
      8,
      82,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "21",
      "to",
      "binary",
      "string"
    ],
    "code": [
      "bin",
      "(",
      "21",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      11,
      465,
      8,
      276,
      14
    ],
    "code_indx_copy": [
      418,
      1,
      529,
      17
    ],
    "code_indx_nocopy": [
      418,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "binary",
      "string",
      "str_0",
      "to",
      "integer"
    ],
    "code": [
      "int",
      "(",
      "'str_0'",
      ",",
      "2",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "11111111",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      276,
      14,
      5,
      8,
      10
    ],
    "code_indx_copy": [
      20,
      1,
      29,
      8,
      82,
      17
    ],
    "code_indx_nocopy": [
      20,
      1,
      29,
      8,
      82,
      17
    ]
  },
  {
    "intent": [
      "delete",
      "all",
      "digits",
      "in",
      "string",
      "var_0",
      "that",
      "are",
      "not",
      "directly",
      "attached",
      "to",
      "a",
      "word",
      "character"
    ],
    "code": [
      "re",
      ".",
      "sub",
      "(",
      "'$\\\\d+\\\\W+|\\\\b\\\\d+\\\\b|\\\\W+\\\\d+$'",
      ",",
      "''",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      86,
      38,
      200,
      24,
      14,
      26,
      195,
      243,
      105,
      465,
      465,
      8,
      3,
      239,
      202
    ],
    "code_indx_copy": [
      39,
      22,
      40,
      1,
      524,
      8,
      21,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      40,
      1,
      524,
      8,
      21,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "delete",
      "digits",
      "at",
      "the",
      "end",
      "of",
      "string",
      "var_0"
    ],
    "code": [
      "re",
      ".",
      "sub",
      "(",
      "'\\\\b\\\\d+\\\\b'",
      ",",
      "''",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      86,
      200,
      35,
      18,
      295,
      2,
      14,
      26
    ],
    "code_indx_copy": [
      39,
      22,
      40,
      1,
      524,
      8,
      21,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      40,
      1,
      524,
      8,
      21,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "delete",
      "self-contained",
      "digits",
      "from",
      "string",
      "var_0"
    ],
    "code": [
      "var_0",
      "=",
      "re",
      ".",
      "sub",
      "(",
      "'^\\\\d+\\\\s|\\\\s\\\\d+\\\\s|\\\\s\\\\d+$'",
      ",",
      "' '",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      86,
      465,
      200,
      58,
      14,
      26
    ],
    "code_indx_copy": [
      34,
      19,
      39,
      22,
      40,
      1,
      524,
      8,
      108,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      39,
      22,
      40,
      1,
      524,
      8,
      108,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "truncate",
      "string",
      "var_0",
      "up",
      "to",
      "character",
      "str_0"
    ],
    "code": [
      "var_0",
      ".",
      "split",
      "(",
      "'str_0'",
      ",",
      "1",
      ")",
      "[",
      "1",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": ":",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      14,
      26,
      379,
      8,
      202,
      5
    ],
    "code_indx_copy": [
      34,
      22,
      71,
      1,
      29,
      8,
      15,
      17,
      12,
      15,
      16
    ],
    "code_indx_nocopy": [
      34,
      22,
      71,
      1,
      29,
      8,
      15,
      17,
      12,
      15,
      16
    ]
  },
  {
    "intent": [
      "print",
      "a",
      "string",
      "var_0",
      "by",
      "splitting",
      "with",
      "comma",
      "str_0"
    ],
    "code": [
      "print",
      "(",
      "var_0",
      ".",
      "split",
      "(",
      "'str_0'",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": ",",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      166,
      3,
      14,
      26,
      44,
      429,
      79,
      417,
      5
    ],
    "code_indx_copy": [
      49,
      1,
      34,
      22,
      71,
      1,
      29,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      34,
      22,
      71,
      1,
      29,
      17,
      17
    ]
  },
  {
    "intent": [
      "create",
      "list",
      "by",
      "splitting",
      "string",
      "var_0",
      "using",
      "str_0",
      "as",
      "delimiter"
    ],
    "code": [
      "var_0",
      ".",
      "split",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "mystring",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": ",",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      148,
      4,
      44,
      429,
      14,
      26,
      109,
      5,
      90,
      329
    ],
    "code_indx_copy": [
      34,
      22,
      71,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      71,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "parentheses",
      "only",
      "around",
      "single",
      "words",
      "in",
      "a",
      "string",
      "var_0",
      "using",
      "regex"
    ],
    "code": [
      "re",
      ".",
      "sub",
      "(",
      "'\\\\((\\\\w+)\\\\)'",
      ",",
      "'\\\\1'",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      465,
      352,
      465,
      9,
      41,
      24,
      3,
      14,
      26,
      109,
      40
    ],
    "code_indx_copy": [
      39,
      22,
      40,
      1,
      524,
      8,
      41,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      40,
      1,
      524,
      8,
      41,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "webbrowser",
      "open",
      "url",
      "var_0"
    ],
    "code": [
      "webbrowser",
      ".",
      "open_new",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "url",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      284,
      102,
      26
    ],
    "code_indx_copy": [
      331,
      22,
      524,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      331,
      22,
      524,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "webbrowser",
      "open",
      "url",
      "str_0"
    ],
    "code": [
      "webbrowser",
      ".",
      "open",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "http://example.com",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      284,
      102,
      5
    ],
    "code_indx_copy": [
      331,
      22,
      105,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      331,
      22,
      105,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "change",
      "the",
      "background",
      "colour",
      "of",
      "the",
      "button",
      "var_0",
      "to",
      "red"
    ],
    "code": [
      "self",
      ".",
      "pushButton",
      ".",
      "setStyleSheet",
      "(",
      "'background-color: red'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "pushbutton",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      221,
      18,
      465,
      465,
      2,
      18,
      455,
      26,
      8,
      465
    ],
    "code_indx_copy": [
      310,
      22,
      524,
      22,
      524,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      310,
      22,
      524,
      22,
      524,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "apply",
      "a",
      "list",
      "of",
      "functions",
      "named",
      "str_0",
      "over",
      "a",
      "list",
      "of",
      "values",
      "named",
      "str_1"
    ],
    "code": [
      "[",
      "x",
      "(",
      "y",
      ")",
      "for",
      "x",
      ",",
      "y",
      "in",
      "zip",
      "(",
      "str_0",
      ",",
      "str_1",
      ")",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "functions",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "values",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      401,
      3,
      4,
      2,
      465,
      320,
      5,
      408,
      3,
      4,
      2,
      20,
      320,
      32
    ],
    "code_indx_copy": [
      12,
      26,
      1,
      103,
      17,
      7,
      26,
      8,
      103,
      9,
      36,
      1,
      11,
      8,
      37,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      26,
      1,
      103,
      17,
      7,
      26,
      8,
      103,
      9,
      36,
      1,
      11,
      8,
      37,
      17,
      16
    ]
  },
  {
    "intent": [
      "modify",
      "the",
      "width",
      "of",
      "a",
      "text",
      "control",
      "as",
      "str_0",
      "keeping",
      "default",
      "height",
      "in",
      "wxpython"
    ],
    "code": [
      "wx",
      ".",
      "TextCtrl",
      "(",
      "self",
      ",",
      "-",
      "1",
      ",",
      "size",
      "=",
      "(",
      "300",
      ",",
      "-",
      "1",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "300",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      18,
      465,
      2,
      3,
      267,
      465,
      90,
      5,
      465,
      233,
      465,
      24,
      465
    ],
    "code_indx_copy": [
      524,
      22,
      524,
      1,
      310,
      8,
      14,
      15,
      8,
      374,
      19,
      1,
      524,
      8,
      14,
      15,
      17,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      524,
      1,
      310,
      8,
      14,
      15,
      8,
      374,
      19,
      1,
      524,
      8,
      14,
      15,
      17,
      17
    ]
  },
  {
    "intent": [
      "display",
      "a",
      "grayscale",
      "image",
      "from",
      "array",
      "of",
      "pixels",
      "var_0"
    ],
    "code": [
      "imshow",
      "(",
      "var_0",
      ",",
      "cmap",
      "=",
      "'Greys_r'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "imageArray",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      363,
      3,
      465,
      299,
      58,
      85,
      2,
      465,
      26
    ],
    "code_indx_copy": [
      524,
      1,
      34,
      8,
      524,
      19,
      524,
      17
    ],
    "code_indx_nocopy": [
      524,
      1,
      34,
      8,
      524,
      19,
      524,
      17
    ]
  },
  {
    "intent": [
      "replace",
      "all",
      "the",
      "nan",
      "values",
      "with",
      "0",
      "in",
      "a",
      "pandas",
      "dataframe",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "fillna",
      "(",
      "0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      130,
      38,
      18,
      289,
      20,
      79,
      107,
      24,
      3,
      42,
      43,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      352,
      1,
      43,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      352,
      1,
      43,
      17
    ]
  },
  {
    "intent": [
      "export",
      "a",
      "table",
      "dataframe",
      "var_0",
      "in",
      "pyspark",
      "to",
      "csv",
      "str_0"
    ],
    "code": [
      "var_0",
      ".",
      "toPandas",
      "(",
      ")",
      ".",
      "to_csv",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "mycsv.csv",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      3,
      388,
      43,
      26,
      24,
      465,
      8,
      287,
      5
    ],
    "code_indx_copy": [
      34,
      22,
      524,
      1,
      17,
      22,
      227,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      524,
      1,
      17,
      22,
      227,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "write",
      "dataframe",
      "var_0",
      "to",
      "csv",
      "file",
      "str_0"
    ],
    "code": [
      "var_0",
      ".",
      "write",
      ".",
      "csv",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "mycsv.csv",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      168,
      43,
      26,
      8,
      287,
      126,
      5
    ],
    "code_indx_copy": [
      34,
      22,
      131,
      22,
      532,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      131,
      22,
      524,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "sum",
      "of",
      "each",
      "second",
      "value",
      "from",
      "a",
      "list",
      "of",
      "tuple",
      "var_0"
    ],
    "code": [
      "sum",
      "(",
      "x",
      "[",
      "1",
      "]",
      "for",
      "x",
      "in",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "structure",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      18,
      112,
      2,
      22,
      118,
      143,
      58,
      3,
      4,
      2,
      113,
      26
    ],
    "code_indx_copy": [
      0,
      1,
      26,
      12,
      15,
      16,
      7,
      26,
      9,
      34,
      17
    ],
    "code_indx_nocopy": [
      0,
      1,
      26,
      12,
      15,
      16,
      7,
      26,
      9,
      34,
      17
    ]
  },
  {
    "intent": [
      "sum",
      "the",
      "3",
      "largest",
      "integers",
      "in",
      "groupby",
      "by",
      "str_0",
      "and",
      "str_1"
    ],
    "code": [
      "df",
      ".",
      "groupby",
      "(",
      "'str_0'",
      ")",
      "[",
      "'str_1'",
      "]",
      ".",
      "agg",
      "(",
      "lambda",
      "x",
      ":",
      "x",
      ".",
      "nlargest",
      "(",
      "3",
      ")",
      ".",
      "sum",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "STNAME",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "COUNTY_POP",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      112,
      18,
      57,
      438,
      7,
      24,
      404,
      44,
      5,
      31,
      32
    ],
    "code_indx_copy": [
      149,
      22,
      157,
      1,
      29,
      17,
      12,
      63,
      16,
      22,
      159,
      1,
      44,
      26,
      13,
      26,
      22,
      524,
      1,
      54,
      17,
      22,
      0,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      149,
      22,
      157,
      1,
      29,
      17,
      12,
      63,
      16,
      22,
      159,
      1,
      44,
      26,
      13,
      26,
      22,
      524,
      1,
      54,
      17,
      22,
      0,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "parse",
      "string",
      "str_0",
      "according",
      "to",
      "format",
      "str_1"
    ],
    "code": [
      "datetime",
      ".",
      "strptime",
      "(",
      "'str_0'",
      ",",
      "'str_1'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "21/11/06 16:30",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "%d/%m/%y %H:%M",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      73,
      14,
      5,
      378,
      8,
      16,
      32
    ],
    "code_indx_copy": [
      27,
      22,
      28,
      1,
      29,
      8,
      63,
      17
    ],
    "code_indx_nocopy": [
      27,
      22,
      28,
      1,
      29,
      8,
      63,
      17
    ]
  },
  {
    "intent": [
      "get",
      "current",
      "script",
      "directory"
    ],
    "code": [
      "os",
      ".",
      "path",
      ".",
      "dirname",
      "(",
      "os",
      ".",
      "path",
      ".",
      "abspath",
      "(",
      "__file__",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      17,
      179,
      246,
      175
    ],
    "code_indx_copy": [
      113,
      22,
      114,
      22,
      378,
      1,
      113,
      22,
      114,
      22,
      377,
      1,
      383,
      17,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      114,
      22,
      378,
      1,
      113,
      22,
      114,
      22,
      377,
      1,
      383,
      17,
      17
    ]
  },
  {
    "intent": [
      "double",
      "each",
      "character",
      "in",
      "string",
      "str_0"
    ],
    "code": [
      "re",
      ".",
      "sub",
      "(",
      "'(.)'",
      ",",
      "'\\\\1\\\\1'",
      ",",
      "text",
      ".",
      "read",
      "(",
      ")",
      ",",
      "0",
      ",",
      "re",
      ".",
      "S",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "text.read()",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      22,
      202,
      24,
      14,
      5
    ],
    "code_indx_copy": [
      39,
      22,
      40,
      1,
      524,
      8,
      524,
      8,
      355,
      22,
      106,
      1,
      17,
      8,
      43,
      8,
      39,
      22,
      524,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      40,
      1,
      524,
      8,
      524,
      8,
      355,
      22,
      106,
      1,
      17,
      8,
      43,
      8,
      39,
      22,
      524,
      17
    ]
  },
  {
    "intent": [
      "concatenate",
      "strings",
      "in",
      "tuple",
      "str_0",
      "into",
      "a",
      "single",
      "string"
    ],
    "code": [
      "\"\"\"\"\"\"",
      ".",
      "join",
      "(",
      "(",
      "str_0",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "('a', 'b', 'c', 'd', 'g', 'x', 'r', 'e')",
        "quote": "`",
        "type": "str"
      },
      "(str_0)": {
        "value": "('a', 'b', 'c', 'd', 'g', 'x', 'r', 'e')",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      0,
      259,
      24,
      113,
      5,
      12,
      3,
      9,
      14
    ],
    "code_indx_copy": [
      287,
      22,
      23,
      1,
      1,
      11,
      17,
      17
    ],
    "code_indx_nocopy": [
      287,
      22,
      23,
      1,
      1,
      11,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "full",
      "path",
      "of",
      "current",
      "directory"
    ],
    "code": [
      "os",
      ".",
      "path",
      ".",
      "dirname",
      "(",
      "os",
      ".",
      "path",
      ".",
      "abspath",
      "(",
      "__file__",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      17,
      465,
      199,
      2,
      179,
      175
    ],
    "code_indx_copy": [
      113,
      22,
      114,
      22,
      378,
      1,
      113,
      22,
      114,
      22,
      377,
      1,
      383,
      17,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      114,
      22,
      378,
      1,
      113,
      22,
      114,
      22,
      377,
      1,
      383,
      17,
      17
    ]
  },
  {
    "intent": [
      "variable",
      "number",
      "of",
      "digits",
      "var_0",
      "in",
      "variable",
      "var_1",
      "in",
      "format",
      "string",
      "str_0"
    ],
    "code": [
      "\"\"\"str_0\"\"\"",
      ".",
      "format",
      "(",
      "var_1",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "digits",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "value",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "{0:.{1}%}",
        "quote": "\"",
        "type": "str"
      },
      "{str_0}": {
        "value": "{0:.{1}%}",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      95,
      76,
      2,
      200,
      26,
      24,
      95,
      63,
      24,
      16,
      14,
      5
    ],
    "code_indx_copy": [
      212,
      22,
      38,
      1,
      91,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      212,
      22,
      38,
      1,
      91,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "get",
      "current",
      "requested",
      "url"
    ],
    "code": [
      "self",
      ".",
      "request",
      ".",
      "url"
    ],
    "slot_map": {},
    "intent_indx": [
      17,
      179,
      465,
      102
    ],
    "code_indx_copy": [
      310,
      22,
      233,
      22,
      235
    ],
    "code_indx_nocopy": [
      310,
      22,
      233,
      22,
      235
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "random",
      "item",
      "from",
      "list",
      "var_0"
    ],
    "code": [
      "random_choice",
      "=",
      "random",
      ".",
      "choice",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "choices",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      3,
      190,
      156,
      58,
      4,
      26
    ],
    "code_indx_copy": [
      524,
      19,
      148,
      22,
      210,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      148,
      22,
      210,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "sum",
      "the",
      "length",
      "of",
      "all",
      "strings",
      "in",
      "a",
      "list",
      "var_0"
    ],
    "code": [
      "length",
      "=",
      "sum",
      "(",
      "len",
      "(",
      "s",
      ")",
      "for",
      "s",
      "in",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "strings",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      112,
      18,
      209,
      2,
      38,
      259,
      24,
      3,
      4,
      26
    ],
    "code_indx_copy": [
      530,
      19,
      0,
      1,
      32,
      1,
      181,
      17,
      7,
      181,
      9,
      34,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      0,
      1,
      32,
      1,
      181,
      17,
      7,
      181,
      9,
      34,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "list",
      "var_0",
      "by",
      "first",
      "and",
      "second",
      "attributes"
    ],
    "code": [
      "var_0",
      "=",
      "sorted",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "(",
      "x",
      "[",
      "1",
      "]",
      ",",
      "x",
      "[",
      "2",
      "]",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      3,
      4,
      26,
      44,
      151,
      31,
      118,
      459
    ],
    "code_indx_copy": [
      34,
      19,
      101,
      1,
      34,
      8,
      102,
      19,
      44,
      26,
      13,
      1,
      26,
      12,
      15,
      16,
      8,
      26,
      12,
      82,
      16,
      17,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      101,
      1,
      34,
      8,
      102,
      19,
      44,
      26,
      13,
      1,
      26,
      12,
      15,
      16,
      8,
      26,
      12,
      82,
      16,
      17,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "list",
      "of",
      "lists",
      "var_0",
      "by",
      "second",
      "and",
      "third",
      "element",
      "in",
      "each",
      "list",
      "."
    ],
    "code": [
      "var_0",
      ".",
      "sort",
      "(",
      "key",
      "=",
      "operator",
      ".",
      "itemgetter",
      "(",
      "1",
      ",",
      "2",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      3,
      4,
      2,
      30,
      26,
      44,
      118,
      31,
      120,
      49,
      24,
      22,
      4,
      159
    ],
    "code_indx_copy": [
      34,
      22,
      124,
      1,
      102,
      19,
      127,
      22,
      128,
      1,
      15,
      8,
      82,
      17,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      124,
      1,
      102,
      19,
      127,
      22,
      128,
      1,
      15,
      8,
      82,
      17,
      17
    ]
  },
  {
    "intent": [
      "mysql",
      "commit",
      "current",
      "transaction"
    ],
    "code": [
      "con",
      ".",
      "commit",
      "(",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      465,
      465,
      179,
      465
    ],
    "code_indx_copy": [
      524,
      22,
      529,
      1,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      524,
      1,
      17
    ]
  },
  {
    "intent": [
      "filtering",
      "out",
      "strings",
      "that",
      "contain",
      "str_0",
      "from",
      "a",
      "list",
      "of",
      "strings",
      "var_0"
    ],
    "code": [
      "[",
      "k",
      "for",
      "k",
      "in",
      "var_0",
      "if",
      "'str_0'",
      "in",
      "k",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "ab",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "lst",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      465,
      259,
      195,
      325,
      5,
      58,
      3,
      4,
      2,
      259,
      26
    ],
    "code_indx_copy": [
      12,
      89,
      7,
      89,
      9,
      34,
      67,
      29,
      9,
      89,
      16
    ],
    "code_indx_nocopy": [
      12,
      89,
      7,
      89,
      9,
      34,
      67,
      29,
      9,
      89,
      16
    ]
  },
  {
    "intent": [
      "find",
      "the",
      "first",
      "letter",
      "of",
      "each",
      "element",
      "in",
      "string",
      "var_0"
    ],
    "code": [
      "output",
      "=",
      "''",
      ".",
      "join",
      "(",
      "item",
      "[",
      "0",
      "]",
      ".",
      "upper",
      "(",
      ")",
      "for",
      "item",
      "in",
      "var_0",
      ".",
      "split",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "input",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      47,
      18,
      151,
      433,
      2,
      22,
      49,
      24,
      14,
      26
    ],
    "code_indx_copy": [
      480,
      19,
      21,
      22,
      23,
      1,
      387,
      12,
      43,
      16,
      22,
      298,
      1,
      17,
      7,
      387,
      9,
      34,
      22,
      71,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      480,
      19,
      21,
      22,
      23,
      1,
      387,
      12,
      43,
      16,
      22,
      298,
      1,
      17,
      7,
      387,
      9,
      34,
      22,
      71,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "name",
      "of",
      "primary",
      "field",
      "var_0",
      "of",
      "django",
      "model",
      "var_1"
    ],
    "code": [
      "var_1",
      ".",
      "_meta",
      ".",
      "pk",
      ".",
      "var_0"
    ],
    "slot_map": {
      "var_0": {
        "value": "name",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "CustomPK",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      129,
      2,
      465,
      312,
      26,
      2,
      87,
      313,
      63
    ],
    "code_indx_copy": [
      91,
      22,
      524,
      22,
      524,
      22,
      34
    ],
    "code_indx_nocopy": [
      91,
      22,
      524,
      22,
      524,
      22,
      34
    ]
  },
  {
    "intent": [
      "count",
      "the",
      "number",
      "of",
      "words",
      "in",
      "a",
      "string",
      "var_0"
    ],
    "code": [
      "len",
      "(",
      "var_0",
      ".",
      "split",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      203,
      18,
      76,
      2,
      41,
      24,
      3,
      14,
      26
    ],
    "code_indx_copy": [
      32,
      1,
      34,
      22,
      71,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      32,
      1,
      34,
      22,
      71,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "multiply",
      "array",
      "var_0",
      "and",
      "array",
      "var_1respective",
      "elements",
      "then",
      "sum",
      "each",
      "row",
      "of",
      "the",
      "new",
      "array"
    ],
    "code": [
      "np",
      ".",
      "einsum",
      "(",
      "'ji,i->j'",
      ",",
      "var_0",
      ",",
      "var_1",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "b",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      396,
      85,
      26,
      31,
      85,
      465,
      1,
      260,
      112,
      22,
      45,
      2,
      18,
      192,
      85
    ],
    "code_indx_copy": [
      74,
      22,
      130,
      1,
      524,
      8,
      34,
      8,
      91,
      17
    ],
    "code_indx_nocopy": [
      74,
      22,
      130,
      1,
      524,
      8,
      34,
      8,
      91,
      17
    ]
  },
  {
    "intent": [
      "check",
      "python",
      "version"
    ],
    "code": [
      "sys",
      ".",
      "version"
    ],
    "slot_map": {},
    "intent_indx": [
      234,
      50,
      465
    ],
    "code_indx_copy": [
      153,
      22,
      530
    ],
    "code_indx_nocopy": [
      153,
      22,
      524
    ]
  },
  {
    "intent": [
      "check",
      "python",
      "version"
    ],
    "code": [
      "sys",
      ".",
      "version_info"
    ],
    "slot_map": {},
    "intent_indx": [
      234,
      50,
      465
    ],
    "code_indx_copy": [
      153,
      22,
      524
    ],
    "code_indx_nocopy": [
      153,
      22,
      524
    ]
  },
  {
    "intent": [
      "format",
      "number",
      "1000000000.0",
      "using",
      "latex",
      "notation"
    ],
    "code": [
      "print",
      "(",
      "'\\\\num{{{0:.2g}}}'",
      ".",
      "format",
      "(",
      "1000000000.0",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      16,
      76,
      465,
      109,
      465,
      456
    ],
    "code_indx_copy": [
      49,
      1,
      524,
      22,
      38,
      1,
      530,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      524,
      22,
      38,
      1,
      524,
      17,
      17
    ]
  },
  {
    "intent": [
      "initialize",
      "a",
      "list",
      "of",
      "empty",
      "lists",
      "var_0",
      "of",
      "size",
      "3"
    ],
    "code": [
      "var_0",
      "=",
      "[",
      "[",
      "]",
      "for",
      "i",
      "in",
      "range",
      "(",
      "3",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "x",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      3,
      4,
      2,
      146,
      30,
      26,
      2,
      334,
      57
    ],
    "code_indx_copy": [
      34,
      19,
      12,
      12,
      16,
      7,
      6,
      9,
      104,
      1,
      54,
      17,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      12,
      12,
      16,
      7,
      6,
      9,
      104,
      1,
      54,
      17,
      16
    ]
  },
  {
    "intent": [
      "apply",
      "jinja2",
      "filters",
      "var_0",
      "and",
      "var_1",
      "on",
      "variable",
      "var_2"
    ],
    "code": [
      "{",
      "{",
      "var_2",
      "|",
      "var_0",
      "|",
      "var_1",
      "}",
      "}"
    ],
    "slot_map": {
      "var_0": {
        "value": "forceescape",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "linebreaks",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "my_variable",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      401,
      465,
      465,
      26,
      31,
      63,
      139,
      95,
      64
    ],
    "code_indx_copy": [
      52,
      52,
      94,
      412,
      34,
      412,
      91,
      53,
      53
    ],
    "code_indx_nocopy": [
      52,
      52,
      94,
      412,
      34,
      412,
      91,
      53,
      53
    ]
  },
  {
    "intent": [
      "zip",
      "a",
      "list",
      "of",
      "tuples",
      "str_0",
      "into",
      "a",
      "list",
      "of",
      "tuples",
      "according",
      "to",
      "original",
      "tuple",
      "index"
    ],
    "code": [
      "zip",
      "(",
      "*",
      "[",
      "str_0",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "[(1, 4), (2, 5), (3, 6)]",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "[(1, 4), (2, 5), (3, 6)]",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      28,
      3,
      4,
      2,
      33,
      5,
      12,
      3,
      4,
      2,
      33,
      378,
      8,
      465,
      113,
      37
    ],
    "code_indx_copy": [
      36,
      1,
      3,
      12,
      11,
      16,
      17
    ],
    "code_indx_nocopy": [
      36,
      1,
      3,
      12,
      11,
      16,
      17
    ]
  },
  {
    "intent": [
      "split",
      "a",
      "list",
      "of",
      "tuples",
      "var_0",
      "into",
      "sub-lists",
      "of",
      "the",
      "same",
      "tuple",
      "field",
      "using",
      "itertools"
    ],
    "code": [
      "[",
      "list",
      "(",
      "group",
      ")",
      "for",
      "key",
      ",",
      "group",
      "in",
      "itertools",
      ".",
      "groupby",
      "(",
      "var_0",
      ",",
      "operator",
      ".",
      "itemgetter",
      "(",
      "1",
      ")",
      ")",
      "\n",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "data",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      138,
      3,
      4,
      2,
      33,
      26,
      12,
      465,
      2,
      18,
      36,
      113,
      312,
      109,
      465
    ],
    "code_indx_copy": [
      12,
      33,
      1,
      120,
      17,
      7,
      102,
      8,
      120,
      9,
      50,
      22,
      157,
      1,
      34,
      8,
      127,
      22,
      128,
      1,
      15,
      17,
      17,
      161,
      16
    ],
    "code_indx_nocopy": [
      12,
      33,
      1,
      120,
      17,
      7,
      102,
      8,
      120,
      9,
      50,
      22,
      157,
      1,
      34,
      8,
      127,
      22,
      128,
      1,
      15,
      17,
      17,
      161,
      16
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "string",
      "into",
      "a",
      "list"
    ],
    "code": [
      "list",
      "(",
      "'hello'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      11,
      3,
      14,
      12,
      3,
      4
    ],
    "code_indx_copy": [
      33,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      33,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "create",
      "new",
      "column",
      "var_0",
      "in",
      "dataframe",
      "var_1",
      "with",
      "row",
      "values",
      "equal",
      "to",
      "the",
      "value",
      "in",
      "column",
      "var_2",
      "divided",
      "by",
      "the",
      "value",
      "in",
      "column",
      "var_3"
    ],
    "code": [
      "var_1",
      "[",
      "'var_0'",
      "]",
      "=",
      "var_1",
      "[",
      "'var_2'",
      "]",
      "/",
      "var_1",
      "[",
      "'var_3'",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "A_perc",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "A",
        "quote": "`",
        "type": "var"
      },
      "var_3": {
        "value": "sum",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      148,
      192,
      147,
      26,
      24,
      43,
      63,
      79,
      45,
      20,
      106,
      8,
      18,
      143,
      24,
      147,
      64,
      465,
      44,
      18,
      143,
      24,
      147,
      67
    ],
    "code_indx_copy": [
      91,
      12,
      56,
      16,
      19,
      91,
      12,
      58,
      16,
      31,
      91,
      12,
      221,
      16
    ],
    "code_indx_nocopy": [
      91,
      12,
      56,
      16,
      19,
      91,
      12,
      58,
      16,
      31,
      91,
      12,
      221,
      16
    ]
  },
  {
    "intent": [
      "getting",
      "a",
      "list",
      "of",
      "all",
      "subdirectories",
      "in",
      "the",
      "directory",
      "var_0"
    ],
    "code": [
      "os",
      ".",
      "walk",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "directory",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      402,
      3,
      4,
      2,
      38,
      465,
      24,
      18,
      175,
      26
    ],
    "code_indx_copy": [
      113,
      22,
      477,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      477,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "list",
      "of",
      "all",
      "subdirectories",
      "in",
      "the",
      "directory",
      "var_0"
    ],
    "code": [
      "[",
      "x",
      "[",
      "0",
      "]",
      "for",
      "x",
      "in",
      "os",
      ".",
      "walk",
      "(",
      "var_0",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "directory",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      3,
      4,
      2,
      38,
      465,
      24,
      18,
      175,
      26
    ],
    "code_indx_copy": [
      12,
      26,
      12,
      43,
      16,
      7,
      26,
      9,
      113,
      22,
      477,
      1,
      34,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      26,
      12,
      43,
      16,
      7,
      26,
      9,
      113,
      22,
      477,
      1,
      34,
      17,
      16
    ]
  },
  {
    "intent": [
      "update",
      "all",
      "values",
      "associated",
      "with",
      "key",
      "var_0",
      "to",
      "string",
      "str_0",
      "if",
      "value",
      "var_1",
      "is",
      "not",
      "equal",
      "to",
      "str_1",
      "in",
      "dictionary",
      "var_2"
    ],
    "code": [
      "{",
      "var_0",
      ":",
      "'str_0'",
      "for",
      "var_0",
      ",",
      "var_1",
      "in",
      "list",
      "(",
      "var_2",
      ".",
      "items",
      "(",
      ")",
      ")",
      "if",
      "var_1",
      "!=",
      "'str_1'",
      "}"
    ],
    "slot_map": {
      "var_0": {
        "value": "i",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "updated",
        "quote": "'",
        "type": "str"
      },
      "var_1": {
        "value": "j",
        "quote": "`",
        "type": "var"
      },
      "str_1": {
        "value": "None",
        "quote": "'",
        "type": "str"
      },
      "var_2": {
        "value": "d",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      242,
      38,
      20,
      286,
      79,
      23,
      26,
      8,
      14,
      5,
      150,
      143,
      63,
      152,
      105,
      106,
      8,
      32,
      24,
      25,
      64
    ],
    "code_indx_copy": [
      52,
      34,
      13,
      29,
      7,
      34,
      8,
      91,
      9,
      33,
      1,
      94,
      22,
      35,
      1,
      17,
      17,
      67,
      91,
      88,
      63,
      53
    ],
    "code_indx_nocopy": [
      52,
      34,
      13,
      29,
      7,
      34,
      8,
      91,
      9,
      33,
      1,
      94,
      22,
      35,
      1,
      17,
      17,
      67,
      91,
      88,
      63,
      53
    ]
  },
  {
    "intent": [
      "filter",
      "a",
      "dictionary",
      "var_0",
      "to",
      "remove",
      "keys",
      "with",
      "value",
      "none",
      "and",
      "replace",
      "other",
      "values",
      "with",
      "str_0"
    ],
    "code": [
      "dict",
      "(",
      "(",
      "k",
      ",",
      "'str_0'",
      ")",
      "for",
      "k",
      ",",
      "v",
      "in",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      "if",
      "v",
      "is",
      "None",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "d",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "updated",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      217,
      3,
      25,
      26,
      8,
      268,
      206,
      79,
      143,
      465,
      31,
      130,
      193,
      20,
      79,
      5
    ],
    "code_indx_copy": [
      70,
      1,
      1,
      89,
      8,
      29,
      17,
      7,
      89,
      8,
      90,
      9,
      34,
      22,
      35,
      1,
      17,
      67,
      90,
      335,
      209,
      17
    ],
    "code_indx_nocopy": [
      70,
      1,
      1,
      89,
      8,
      29,
      17,
      7,
      89,
      8,
      90,
      9,
      34,
      22,
      35,
      1,
      17,
      67,
      90,
      335,
      209,
      17
    ]
  },
  {
    "intent": [
      "filter",
      "a",
      "dictionary",
      "var_0",
      "to",
      "remove",
      "keys",
      "with",
      "value",
      "str_0",
      "and",
      "replace",
      "other",
      "values",
      "with",
      "str_1"
    ],
    "code": [
      "dict",
      "(",
      "(",
      "k",
      ",",
      "'str_1'",
      ")",
      "for",
      "k",
      ",",
      "v",
      "in",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      "if",
      "v",
      "!=",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "d",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "None",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "updated",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      217,
      3,
      25,
      26,
      8,
      268,
      206,
      79,
      143,
      5,
      31,
      130,
      193,
      20,
      79,
      32
    ],
    "code_indx_copy": [
      70,
      1,
      1,
      89,
      8,
      63,
      17,
      7,
      89,
      8,
      90,
      9,
      34,
      22,
      35,
      1,
      17,
      67,
      90,
      88,
      29,
      17
    ],
    "code_indx_nocopy": [
      70,
      1,
      1,
      89,
      8,
      63,
      17,
      7,
      89,
      8,
      90,
      9,
      34,
      22,
      35,
      1,
      17,
      67,
      90,
      88,
      29,
      17
    ]
  },
  {
    "intent": [
      "count",
      "number",
      "of",
      "rows",
      "in",
      "a",
      "group",
      "var_0",
      "in",
      "pandas",
      "groupby",
      "object",
      "var_1"
    ],
    "code": [
      "var_1",
      ".",
      "groupby",
      "(",
      "var_0",
      ")",
      ".",
      "size",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "key_columns",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      203,
      76,
      2,
      80,
      24,
      3,
      383,
      26,
      24,
      42,
      404,
      15,
      63
    ],
    "code_indx_copy": [
      91,
      22,
      157,
      1,
      34,
      17,
      22,
      374,
      1,
      17
    ],
    "code_indx_nocopy": [
      91,
      22,
      157,
      1,
      34,
      17,
      22,
      374,
      1,
      17
    ]
  },
  {
    "intent": [
      "return",
      "list",
      "var_0",
      "of",
      "sum",
      "of",
      "elements",
      "of",
      "each",
      "list",
      "var_1",
      "in",
      "list",
      "of",
      "lists",
      "var_2"
    ],
    "code": [
      "var_0",
      "=",
      "[",
      "sum",
      "(",
      "var_1",
      ")",
      "for",
      "var_1",
      "in",
      "var_2",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "result",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "b",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      160,
      4,
      26,
      2,
      112,
      2,
      1,
      2,
      22,
      4,
      63,
      24,
      4,
      2,
      30,
      64
    ],
    "code_indx_copy": [
      34,
      19,
      12,
      0,
      1,
      91,
      17,
      7,
      91,
      9,
      94,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      12,
      0,
      1,
      91,
      17,
      7,
      91,
      9,
      94,
      16
    ]
  },
  {
    "intent": [
      "what",
      "'s",
      "the",
      "best",
      "way",
      "to",
      "search",
      "for",
      "a",
      "python",
      "dictionary",
      "value",
      "in",
      "a",
      "list",
      "of",
      "dictionaries",
      "?"
    ],
    "code": [
      "any",
      "(",
      "d",
      "[",
      "'site'",
      "]",
      "==",
      "'Superuser'",
      "for",
      "d",
      "in",
      "data",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      465,
      266,
      18,
      465,
      449,
      8,
      71,
      21,
      3,
      50,
      25,
      143,
      24,
      3,
      4,
      2,
      188,
      52
    ],
    "code_indx_copy": [
      269,
      1,
      2,
      12,
      524,
      16,
      76,
      524,
      7,
      2,
      9,
      135,
      17
    ],
    "code_indx_nocopy": [
      269,
      1,
      2,
      12,
      524,
      16,
      76,
      524,
      7,
      2,
      9,
      135,
      17
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "2d",
      "array",
      "of",
      "var_0",
      "objects",
      "with",
      "dimensions",
      "var_1",
      "columns",
      "and",
      "var_2",
      "rows"
    ],
    "code": [
      "nodes",
      "=",
      "[",
      "[",
      "var_0",
      "(",
      ")",
      "for",
      "j",
      "in",
      "range",
      "(",
      "var_1",
      ")",
      "]",
      "for",
      "i",
      "in",
      "range",
      "(",
      "var_2",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "Node",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "cols",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "rows",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      148,
      3,
      236,
      85,
      2,
      26,
      178,
      79,
      419,
      63,
      61,
      31,
      64,
      80
    ],
    "code_indx_copy": [
      524,
      19,
      12,
      12,
      34,
      1,
      17,
      7,
      30,
      9,
      104,
      1,
      91,
      17,
      16,
      7,
      6,
      9,
      104,
      1,
      94,
      17,
      16
    ],
    "code_indx_nocopy": [
      524,
      19,
      12,
      12,
      34,
      1,
      17,
      7,
      30,
      9,
      104,
      1,
      91,
      17,
      16,
      7,
      6,
      9,
      104,
      1,
      94,
      17,
      16
    ]
  },
  {
    "intent": [
      "replace",
      "extension",
      "str_0",
      "in",
      "basename",
      "str_1",
      "with",
      "extension",
      "str_2"
    ],
    "code": [
      "print",
      "(",
      "os",
      ".",
      "path",
      ".",
      "splitext",
      "(",
      "'str_1'",
      ")",
      "[",
      "0",
      "]",
      "+",
      "'str_2'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": ".txt",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "/home/user/somefile.txt",
        "quote": "'",
        "type": "str"
      },
      "str_2": {
        "value": ".jpg",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      130,
      465,
      5,
      24,
      465,
      32,
      79,
      465,
      194
    ],
    "code_indx_copy": [
      49,
      1,
      113,
      22,
      114,
      22,
      524,
      1,
      63,
      17,
      12,
      43,
      16,
      96,
      150,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      113,
      22,
      114,
      22,
      524,
      1,
      63,
      17,
      12,
      43,
      16,
      96,
      150,
      17
    ]
  },
  {
    "intent": [
      "set",
      "the",
      "resolution",
      "of",
      "a",
      "monitor",
      "as",
      "var_0",
      "in",
      "pygame"
    ],
    "code": [
      "pygame",
      ".",
      "display",
      ".",
      "set_mode",
      "(",
      "(",
      "0",
      ",",
      "0",
      ")",
      ",",
      "pygame",
      ".",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "FULLSCREEN",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      59,
      18,
      465,
      2,
      3,
      465,
      90,
      26,
      24,
      465
    ],
    "code_indx_copy": [
      537,
      22,
      524,
      22,
      524,
      1,
      1,
      43,
      8,
      43,
      17,
      8,
      537,
      22,
      34,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      524,
      22,
      524,
      1,
      1,
      43,
      8,
      43,
      17,
      8,
      524,
      22,
      34,
      17
    ]
  },
  {
    "intent": [
      "format",
      "float",
      "str_0",
      "to",
      "str_1",
      "and",
      "set",
      "as",
      "title",
      "of",
      "matplotlib",
      "plot",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "set_title",
      "(",
      "'$%s \\\\times 10^{%s}$'",
      "%",
      "(",
      "'3.5'",
      ",",
      "'+20'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "3.5e+20",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": "$3.5 \\times 10^{20}$",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "ax",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      16,
      94,
      5,
      8,
      32,
      31,
      59,
      90,
      465,
      2,
      350,
      244,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      524,
      1,
      524,
      117,
      1,
      524,
      8,
      524,
      17,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      524,
      1,
      524,
      117,
      1,
      524,
      8,
      524,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "age",
      "of",
      "directory",
      "(",
      "or",
      "file",
      ")",
      "str_0",
      "in",
      "seconds",
      "."
    ],
    "code": [
      "print",
      "(",
      "os",
      ".",
      "path",
      ".",
      "getmtime",
      "(",
      "'str_0'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "/tmp",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      18,
      465,
      2,
      175,
      212,
      344,
      126,
      27,
      5,
      24,
      376,
      159
    ],
    "code_indx_copy": [
      49,
      1,
      113,
      22,
      114,
      22,
      115,
      1,
      29,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      113,
      22,
      114,
      22,
      115,
      1,
      29,
      17,
      17
    ]
  },
  {
    "intent": [
      "how",
      "to",
      "get",
      "month",
      "name",
      "of",
      "datetime",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "strftime",
      "(",
      "'%B'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "today",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      77,
      8,
      17,
      394,
      129,
      2,
      13,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      65,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      65,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "get",
      "month",
      "name",
      "from",
      "a",
      "datetime",
      "object",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "strftime",
      "(",
      "'%B'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "today",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      394,
      129,
      58,
      3,
      13,
      15,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      65,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      65,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "nested",
      "list",
      "var_0",
      "into",
      "a",
      "flat",
      "list"
    ],
    "code": [
      "[",
      "j",
      "for",
      "i",
      "in",
      "var_0",
      "for",
      "j",
      "in",
      "i",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "x",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      154,
      4,
      26,
      12,
      3,
      380,
      4
    ],
    "code_indx_copy": [
      12,
      30,
      7,
      6,
      9,
      34,
      7,
      30,
      9,
      6,
      16
    ],
    "code_indx_nocopy": [
      12,
      30,
      7,
      6,
      9,
      34,
      7,
      30,
      9,
      6,
      16
    ]
  },
  {
    "intent": [
      "get",
      "each",
      "value",
      "from",
      "a",
      "list",
      "of",
      "lists",
      "var_0",
      "using",
      "itertools"
    ],
    "code": [
      "print",
      "(",
      "list",
      "(",
      "itertools",
      ".",
      "chain",
      ".",
      "from_iterable",
      "(",
      "var_0",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      22,
      143,
      58,
      3,
      4,
      2,
      30,
      26,
      109,
      465
    ],
    "code_indx_copy": [
      49,
      1,
      33,
      1,
      50,
      22,
      450,
      22,
      451,
      1,
      34,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      33,
      1,
      50,
      22,
      450,
      22,
      451,
      1,
      34,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "date",
      "string",
      "str_0",
      "into",
      "day",
      "of",
      "week"
    ],
    "code": [
      "datetime",
      ".",
      "datetime",
      ".",
      "strptime",
      "(",
      "'str_0'",
      ",",
      "'%B %d, %Y'",
      ")",
      ".",
      "strftime",
      "(",
      "'%A'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "January 11, 2010",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      133,
      14,
      5,
      12,
      356,
      2,
      413
    ],
    "code_indx_copy": [
      27,
      22,
      27,
      22,
      28,
      1,
      29,
      8,
      524,
      17,
      22,
      65,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      27,
      22,
      27,
      22,
      28,
      1,
      29,
      8,
      524,
      17,
      22,
      65,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "date",
      "string",
      "to",
      "day",
      "of",
      "week"
    ],
    "code": [
      "datetime",
      ".",
      "datetime",
      ".",
      "strptime",
      "(",
      "'January 11, 2010'",
      ",",
      "'%B %d, %Y'",
      ")",
      ".",
      "strftime",
      "(",
      "'%a'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      11,
      133,
      14,
      8,
      356,
      2,
      413
    ],
    "code_indx_copy": [
      27,
      22,
      27,
      22,
      28,
      1,
      524,
      8,
      524,
      17,
      22,
      65,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      27,
      22,
      27,
      22,
      28,
      1,
      524,
      8,
      524,
      17,
      22,
      65,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "item",
      "str_0",
      "in",
      "list",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "remove",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "b",
        "quote": "\"",
        "type": "str"
      },
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      156,
      5,
      24,
      4,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      343,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      343,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "item",
      "var_0",
      "in",
      "list",
      "var_1"
    ],
    "code": [
      "var_1",
      ".",
      "remove",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "c",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      156,
      26,
      24,
      4,
      63
    ],
    "code_indx_copy": [
      91,
      22,
      343,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      91,
      22,
      343,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "delete",
      "the",
      "element",
      "6",
      "from",
      "list",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "remove",
      "(",
      "6",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      86,
      18,
      49,
      393,
      58,
      4,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      343,
      1,
      249,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      343,
      1,
      249,
      17
    ]
  },
  {
    "intent": [
      "delete",
      "the",
      "element",
      "6",
      "from",
      "list",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "remove",
      "(",
      "6",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      86,
      18,
      49,
      393,
      58,
      4,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      343,
      1,
      249,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      343,
      1,
      249,
      17
    ]
  },
  {
    "intent": [
      "delete",
      "the",
      "element",
      "var_0",
      "from",
      "list",
      "var_1"
    ],
    "code": [
      "if",
      "var_0",
      "in",
      "var_1",
      ":",
      "\n",
      "    ",
      "var_1",
      ".",
      "remove",
      "(",
      "var_0",
      ")",
      ""
    ],
    "slot_map": {
      "var_0": {
        "value": "c",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      86,
      18,
      49,
      26,
      58,
      4,
      63
    ],
    "code_indx_copy": [
      67,
      34,
      9,
      91,
      13,
      161,
      216,
      91,
      22,
      343,
      1,
      34,
      17,
      218
    ],
    "code_indx_nocopy": [
      67,
      34,
      9,
      91,
      13,
      161,
      216,
      91,
      22,
      343,
      1,
      34,
      17,
      218
    ]
  },
  {
    "intent": [
      "delete",
      "the",
      "element",
      "var_0",
      "from",
      "list",
      "var_1"
    ],
    "code": [
      "try",
      ":",
      "\n",
      "    ",
      "var_1",
      ".",
      "remove",
      "(",
      "var_0",
      ")",
      "\n",
      "",
      "except",
      "ValueError",
      ":",
      "\n",
      "    ",
      "pass",
      ""
    ],
    "slot_map": {
      "var_0": {
        "value": "c",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      86,
      18,
      49,
      26,
      58,
      4,
      63
    ],
    "code_indx_copy": [
      338,
      13,
      161,
      216,
      91,
      22,
      343,
      1,
      34,
      17,
      161,
      218,
      339,
      515,
      13,
      161,
      216,
      217,
      218
    ],
    "code_indx_nocopy": [
      338,
      13,
      161,
      216,
      91,
      22,
      343,
      1,
      34,
      17,
      161,
      218,
      339,
      515,
      13,
      161,
      216,
      217,
      218
    ]
  },
  {
    "intent": [
      "get",
      "all",
      "matching",
      "patterns",
      "str_0",
      "from",
      "a",
      "string",
      "str_1",
      "."
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'(?=(a.*?a))'",
      ",",
      "'str_1'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "a.*?a",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "a 1 a 2 a 3 a 4 a",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      38,
      81,
      465,
      5,
      58,
      3,
      14,
      32,
      159
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      524,
      8,
      63,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      524,
      8,
      63,
      17
    ]
  },
  {
    "intent": [
      "outer",
      "product",
      "of",
      "each",
      "column",
      "of",
      "a",
      "2d",
      "var_0",
      "array",
      "to",
      "form",
      "a",
      "3d",
      "array",
      "var_0"
    ],
    "code": [
      "np",
      ".",
      "einsum",
      "(",
      "'ij,kj->jik'",
      ",",
      "var_1",
      ",",
      "var_1",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "X",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "X",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      163,
      2,
      22,
      147,
      2,
      3,
      236,
      26,
      85,
      8,
      149,
      3,
      164,
      85,
      26
    ],
    "code_indx_copy": [
      74,
      22,
      130,
      1,
      524,
      8,
      91,
      8,
      91,
      17
    ],
    "code_indx_nocopy": [
      74,
      22,
      130,
      1,
      524,
      8,
      91,
      8,
      91,
      17
    ]
  },
  {
    "intent": [
      "getting",
      "the",
      "last",
      "element",
      "of",
      "list",
      "var_0"
    ],
    "code": [
      "var_0",
      "[",
      "-",
      "1",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "some_list",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      402,
      18,
      170,
      49,
      2,
      4,
      26
    ],
    "code_indx_copy": [
      34,
      12,
      14,
      15,
      16
    ],
    "code_indx_nocopy": [
      34,
      12,
      14,
      15,
      16
    ]
  },
  {
    "intent": [
      "getting",
      "the",
      "second",
      "to",
      "last",
      "element",
      "of",
      "list",
      "var_0"
    ],
    "code": [
      "var_0",
      "[",
      "-",
      "2",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "some_list",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      402,
      18,
      118,
      8,
      170,
      49,
      2,
      4,
      26
    ],
    "code_indx_copy": [
      34,
      12,
      14,
      82,
      16
    ],
    "code_indx_nocopy": [
      34,
      12,
      14,
      82,
      16
    ]
  },
  {
    "intent": [
      "gets",
      "the",
      "var_0",
      "th-to-last",
      "element",
      "in",
      "list",
      "var_1"
    ],
    "code": [
      "var_1",
      "[",
      "-",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "n",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "some_list",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      18,
      26,
      465,
      49,
      24,
      4,
      63
    ],
    "code_indx_copy": [
      91,
      12,
      14,
      34,
      16
    ],
    "code_indx_nocopy": [
      91,
      12,
      14,
      34,
      16
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "last",
      "element",
      "in",
      "list",
      "var_0"
    ],
    "code": [
      "var_0",
      "[",
      "-",
      "1",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "alist",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      18,
      170,
      49,
      24,
      4,
      26
    ],
    "code_indx_copy": [
      34,
      12,
      14,
      15,
      16
    ],
    "code_indx_nocopy": [
      34,
      12,
      14,
      15,
      16
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "last",
      "element",
      "in",
      "list",
      "var_0"
    ],
    "code": [
      "var_0",
      "[",
      "-",
      "1",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "astr",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      18,
      170,
      49,
      24,
      4,
      26
    ],
    "code_indx_copy": [
      34,
      12,
      14,
      15,
      16
    ],
    "code_indx_nocopy": [
      34,
      12,
      14,
      15,
      16
    ]
  },
  {
    "intent": [
      "make",
      "a",
      "list",
      "of",
      "integers",
      "from",
      "0",
      "to",
      "str_0",
      "where",
      "each",
      "second",
      "element",
      "is",
      "a",
      "duplicate",
      "of",
      "the",
      "previous",
      "element"
    ],
    "code": [
      "print",
      "(",
      "[",
      "u",
      "for",
      "v",
      "in",
      "[",
      "[",
      "i",
      ",",
      "i",
      "]",
      "for",
      "i",
      "in",
      "range",
      "(",
      "5",
      ")",
      "]",
      "for",
      "u",
      "in",
      "v",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "5",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      191,
      3,
      4,
      2,
      7,
      58,
      107,
      8,
      5,
      155,
      22,
      118,
      49,
      152,
      3,
      411,
      2,
      18,
      465,
      49
    ],
    "code_indx_copy": [
      49,
      1,
      12,
      524,
      7,
      90,
      9,
      12,
      12,
      6,
      8,
      6,
      16,
      7,
      6,
      9,
      104,
      1,
      185,
      17,
      16,
      7,
      524,
      9,
      90,
      16,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      12,
      524,
      7,
      90,
      9,
      12,
      12,
      6,
      8,
      6,
      16,
      7,
      6,
      9,
      104,
      1,
      185,
      17,
      16,
      7,
      524,
      9,
      90,
      16,
      17
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "list",
      "of",
      "integers",
      "with",
      "duplicate",
      "values",
      "str_0"
    ],
    "code": [
      "[",
      "str_0",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "[0, 0, 1, 1, 2, 2, 3, 3, 4, 4]",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "[0, 0, 1, 1, 2, 2, 3, 3, 4, 4]",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      148,
      3,
      4,
      2,
      7,
      79,
      411,
      20,
      5
    ],
    "code_indx_copy": [
      12,
      11,
      16
    ],
    "code_indx_nocopy": [
      12,
      11,
      16
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "list",
      "of",
      "integers",
      "from",
      "1",
      "to",
      "5",
      "with",
      "each",
      "value",
      "duplicated"
    ],
    "code": [
      "[",
      "(",
      "i",
      "//",
      "2",
      ")",
      "for",
      "i",
      "in",
      "range",
      "(",
      "10",
      ")",
      "]"
    ],
    "slot_map": {},
    "intent_indx": [
      148,
      3,
      4,
      2,
      7,
      58,
      237,
      8,
      232,
      79,
      22,
      143,
      122
    ],
    "code_indx_copy": [
      12,
      1,
      6,
      454,
      82,
      17,
      7,
      6,
      9,
      104,
      1,
      4,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      1,
      6,
      454,
      82,
      17,
      7,
      6,
      9,
      104,
      1,
      4,
      17,
      16
    ]
  },
  {
    "intent": [
      "remove",
      "first",
      "and",
      "last",
      "lines",
      "of",
      "string",
      "var_0"
    ],
    "code": [
      "var_0",
      "[",
      "var_0",
      ".",
      "find",
      "(",
      "'\\n'",
      ")",
      "+",
      "1",
      ":",
      "var_0",
      ".",
      "rfind",
      "(",
      "'\\n'",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      151,
      31,
      170,
      395,
      2,
      14,
      26
    ],
    "code_indx_copy": [
      34,
      12,
      34,
      22,
      282,
      1,
      133,
      17,
      96,
      15,
      13,
      34,
      22,
      440,
      1,
      133,
      17,
      16
    ],
    "code_indx_nocopy": [
      34,
      12,
      34,
      22,
      282,
      1,
      133,
      17,
      96,
      15,
      13,
      34,
      22,
      440,
      1,
      133,
      17,
      16
    ]
  },
  {
    "intent": [
      "create",
      "dict",
      "of",
      "squared",
      "int",
      "values",
      "in",
      "range",
      "of",
      "100"
    ],
    "code": [
      "{",
      "(",
      "x",
      "**",
      "2",
      ")",
      "for",
      "x",
      "in",
      "range",
      "(",
      "100",
      ")",
      "}"
    ],
    "slot_map": {},
    "intent_indx": [
      148,
      186,
      2,
      465,
      74,
      20,
      24,
      123,
      2,
      373
    ],
    "code_indx_copy": [
      52,
      1,
      26,
      5,
      82,
      17,
      7,
      26,
      9,
      104,
      1,
      267,
      17,
      53
    ],
    "code_indx_nocopy": [
      52,
      1,
      26,
      5,
      82,
      17,
      7,
      26,
      9,
      104,
      1,
      267,
      17,
      53
    ]
  },
  {
    "intent": [
      "zip",
      "lists",
      "str_0",
      "in",
      "a",
      "list"
    ],
    "code": [
      "zip",
      "(",
      "*",
      "[",
      "[",
      "str_0",
      "]",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "[1, 2], [3, 4], [5, 6]",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "[1, 2], [3, 4], [5, 6]",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      28,
      30,
      5,
      24,
      3,
      4
    ],
    "code_indx_copy": [
      36,
      1,
      3,
      12,
      12,
      11,
      16,
      16,
      17
    ],
    "code_indx_nocopy": [
      36,
      1,
      3,
      12,
      12,
      11,
      16,
      16,
      17
    ]
  },
  {
    "intent": [
      "zip",
      "lists",
      "in",
      "a",
      "list",
      "[",
      "[",
      "1",
      ",",
      "2",
      "]",
      ",",
      "[",
      "3",
      ",",
      "4",
      "]",
      ",",
      "[",
      "5",
      ",",
      "6",
      "]",
      "]"
    ],
    "code": [
      "zip",
      "(",
      "*",
      "[",
      "[",
      "1",
      ",",
      "2",
      "]",
      ",",
      "[",
      "3",
      ",",
      "4",
      "]",
      ",",
      "[",
      "5",
      ",",
      "6",
      "]",
      "]",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      28,
      30,
      24,
      3,
      4,
      218,
      218,
      237,
      62,
      82,
      220,
      62,
      218,
      57,
      62,
      231,
      220,
      62,
      218,
      232,
      62,
      393,
      220,
      220
    ],
    "code_indx_copy": [
      36,
      1,
      3,
      12,
      12,
      15,
      8,
      82,
      16,
      8,
      12,
      54,
      8,
      184,
      16,
      8,
      12,
      185,
      8,
      249,
      16,
      16,
      17
    ],
    "code_indx_nocopy": [
      36,
      1,
      3,
      12,
      12,
      15,
      8,
      82,
      16,
      8,
      12,
      54,
      8,
      184,
      16,
      8,
      12,
      185,
      8,
      249,
      16,
      16,
      17
    ]
  },
  {
    "intent": [
      "request",
      "page",
      "str_0",
      "with",
      "credentials",
      "of",
      "username",
      "str_1",
      "and",
      "password",
      "str_2"
    ],
    "code": [
      "requests",
      ".",
      "get",
      "(",
      "'str_0'",
      ",",
      "auth",
      "=",
      "(",
      "'str_1'",
      ",",
      "'str_2'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "https://www.mysite.com/",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "username",
        "quote": "'",
        "type": "str"
      },
      "str_2": {
        "value": "pwd",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      101,
      308,
      5,
      79,
      465,
      2,
      465,
      32,
      31,
      465,
      194
    ],
    "code_indx_copy": [
      85,
      22,
      86,
      1,
      29,
      8,
      524,
      19,
      1,
      63,
      8,
      150,
      17,
      17
    ],
    "code_indx_nocopy": [
      85,
      22,
      86,
      1,
      29,
      8,
      524,
      19,
      1,
      63,
      8,
      150,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "new",
      "string",
      "from",
      "the",
      "3rd",
      "character",
      "to",
      "the",
      "end",
      "of",
      "the",
      "string",
      "var_0"
    ],
    "code": [
      "var_0",
      "[",
      "2",
      ":",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "x",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      3,
      192,
      14,
      58,
      18,
      465,
      202,
      8,
      18,
      295,
      2,
      18,
      14,
      26
    ],
    "code_indx_copy": [
      34,
      12,
      82,
      13,
      16
    ],
    "code_indx_nocopy": [
      34,
      12,
      82,
      13,
      16
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "new",
      "string",
      "including",
      "the",
      "first",
      "two",
      "characters",
      "of",
      "string",
      "var_0"
    ],
    "code": [
      "var_0",
      "[",
      ":",
      "2",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "x",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      3,
      192,
      14,
      213,
      18,
      151,
      29,
      98,
      2,
      14,
      26
    ],
    "code_indx_copy": [
      34,
      12,
      13,
      82,
      16
    ],
    "code_indx_nocopy": [
      34,
      12,
      13,
      82,
      16
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "new",
      "string",
      "including",
      "all",
      "but",
      "the",
      "last",
      "character",
      "of",
      "string",
      "var_0"
    ],
    "code": [
      "var_0",
      "[",
      ":",
      "-",
      "2",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "x",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      3,
      192,
      14,
      213,
      38,
      465,
      18,
      170,
      202,
      2,
      14,
      26
    ],
    "code_indx_copy": [
      34,
      12,
      13,
      14,
      82,
      16
    ],
    "code_indx_nocopy": [
      34,
      12,
      13,
      14,
      82,
      16
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "new",
      "string",
      "including",
      "the",
      "last",
      "two",
      "characters",
      "of",
      "string",
      "var_0"
    ],
    "code": [
      "var_0",
      "[",
      "-",
      "2",
      ":",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "x",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      3,
      192,
      14,
      213,
      18,
      170,
      29,
      98,
      2,
      14,
      26
    ],
    "code_indx_copy": [
      34,
      12,
      14,
      82,
      13,
      16
    ],
    "code_indx_nocopy": [
      34,
      12,
      14,
      82,
      13,
      16
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "new",
      "string",
      "with",
      "the",
      "3rd",
      "to",
      "the",
      "second-to-last",
      "characters",
      "of",
      "string",
      "var_0"
    ],
    "code": [
      "var_0",
      "[",
      "2",
      ":",
      "-",
      "2",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "x",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      3,
      192,
      14,
      79,
      18,
      465,
      8,
      18,
      465,
      98,
      2,
      14,
      26
    ],
    "code_indx_copy": [
      34,
      12,
      82,
      13,
      14,
      82,
      16
    ],
    "code_indx_nocopy": [
      34,
      12,
      82,
      13,
      14,
      82,
      16
    ]
  },
  {
    "intent": [
      "reverse",
      "a",
      "string",
      "var_0"
    ],
    "code": [
      "var_0",
      "[",
      ":",
      ":",
      "-",
      "1",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "some_string",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      282,
      3,
      14,
      26
    ],
    "code_indx_copy": [
      34,
      12,
      13,
      13,
      14,
      15,
      16
    ],
    "code_indx_nocopy": [
      34,
      12,
      13,
      13,
      14,
      15,
      16
    ]
  },
  {
    "intent": [
      "select",
      "alternate",
      "characters",
      "of",
      "str_0"
    ],
    "code": [
      "\"\"\"str_0\"\"\"",
      "[",
      ":",
      ":",
      "2",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "H-e-l-l-o- -W-o-r-l-d",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      78,
      465,
      98,
      2,
      5
    ],
    "code_indx_copy": [
      212,
      12,
      13,
      13,
      82,
      16
    ],
    "code_indx_nocopy": [
      212,
      12,
      13,
      13,
      82,
      16
    ]
  },
  {
    "intent": [
      "select",
      "a",
      "substring",
      "of",
      "var_0",
      "beginning",
      "at",
      "var_1",
      "of",
      "length",
      "var_2"
    ],
    "code": [
      "var_0",
      "=",
      "var_0",
      "[",
      "var_1",
      ":",
      "var_1",
      "+",
      "var_2",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "beginning",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "LENGTH",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      78,
      3,
      354,
      2,
      26,
      171,
      35,
      63,
      2,
      209,
      64
    ],
    "code_indx_copy": [
      34,
      19,
      34,
      12,
      91,
      13,
      91,
      96,
      94,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      34,
      12,
      91,
      13,
      91,
      96,
      94,
      16
    ]
  },
  {
    "intent": [
      "terminate",
      "the",
      "program"
    ],
    "code": [
      "sys",
      ".",
      "exit",
      "(",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      465,
      18,
      424
    ],
    "code_indx_copy": [
      153,
      22,
      416,
      1,
      17
    ],
    "code_indx_nocopy": [
      153,
      22,
      416,
      1,
      17
    ]
  },
  {
    "intent": [
      "terminate",
      "the",
      "program"
    ],
    "code": [
      "quit",
      "(",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      465,
      18,
      424
    ],
    "code_indx_copy": [
      524,
      1,
      17
    ],
    "code_indx_nocopy": [
      524,
      1,
      17
    ]
  },
  {
    "intent": [
      "terminating",
      "a",
      "python",
      "script",
      "with",
      "error",
      "message",
      "str_0"
    ],
    "code": [
      "sys",
      ".",
      "exit",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "some error message",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      3,
      50,
      246,
      79,
      110,
      157,
      5
    ],
    "code_indx_copy": [
      153,
      22,
      416,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      153,
      22,
      416,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "encode",
      "value",
      "of",
      "key",
      "var_0",
      "in",
      "dictionary",
      "var_1",
      "as",
      "var_2",
      ",",
      "ignoring",
      "non-ascii",
      "characters"
    ],
    "code": [
      "var_1",
      "[",
      "'var_0'",
      "]",
      ".",
      "encode",
      "(",
      "'var_2'",
      ",",
      "'ignore'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "City",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "data",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "ascii",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      447,
      143,
      2,
      23,
      26,
      24,
      25,
      63,
      90,
      64,
      62,
      465,
      335,
      98
    ],
    "code_indx_copy": [
      91,
      12,
      56,
      16,
      22,
      239,
      1,
      58,
      8,
      144,
      17
    ],
    "code_indx_nocopy": [
      91,
      12,
      56,
      16,
      22,
      239,
      1,
      58,
      8,
      144,
      17
    ]
  },
  {
    "intent": [
      "get",
      "current",
      "cpu",
      "and",
      "ram",
      "usage"
    ],
    "code": [
      "psutil",
      ".",
      "cpu_percent",
      "(",
      ")",
      "\n",
      "psutil",
      ".",
      "virtual_memory",
      "(",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      17,
      179,
      465,
      31,
      465,
      465
    ],
    "code_indx_copy": [
      516,
      22,
      524,
      1,
      17,
      161,
      516,
      22,
      524,
      1,
      17
    ],
    "code_indx_nocopy": [
      516,
      22,
      524,
      1,
      17,
      161,
      516,
      22,
      524,
      1,
      17
    ]
  },
  {
    "intent": [
      "get",
      "current",
      "ram",
      "usage",
      "of",
      "current",
      "program"
    ],
    "code": [
      "pid",
      "=",
      "os",
      ".",
      "getpid",
      "(",
      ")",
      "\n",
      "py",
      "=",
      "psutil",
      ".",
      "Process",
      "(",
      "pid",
      ")",
      "\n",
      "memoryUse",
      "=",
      "py",
      ".",
      "memory_info",
      "(",
      ")",
      "[",
      "0",
      "]",
      "/",
      "2.0",
      "**",
      "30"
    ],
    "slot_map": {},
    "intent_indx": [
      17,
      179,
      465,
      465,
      2,
      179,
      424
    ],
    "code_indx_copy": [
      517,
      19,
      113,
      22,
      524,
      1,
      17,
      161,
      524,
      19,
      516,
      22,
      524,
      1,
      517,
      17,
      161,
      524,
      19,
      524,
      22,
      524,
      1,
      17,
      12,
      43,
      16,
      31,
      524,
      5,
      524
    ],
    "code_indx_nocopy": [
      517,
      19,
      113,
      22,
      524,
      1,
      17,
      161,
      524,
      19,
      516,
      22,
      524,
      1,
      517,
      17,
      161,
      524,
      19,
      524,
      22,
      524,
      1,
      17,
      12,
      43,
      16,
      31,
      524,
      5,
      524
    ]
  },
  {
    "intent": [
      "print",
      "cpu",
      "and",
      "memory",
      "usage"
    ],
    "code": [
      "print",
      "(",
      "psutil",
      ".",
      "cpu_percent",
      "(",
      ")",
      ")",
      "\n",
      "print",
      "(",
      "psutil",
      ".",
      "virtual_memory",
      "(",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      166,
      465,
      31,
      465,
      465
    ],
    "code_indx_copy": [
      49,
      1,
      516,
      22,
      524,
      1,
      17,
      17,
      161,
      49,
      1,
      516,
      22,
      524,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      516,
      22,
      524,
      1,
      17,
      17,
      161,
      49,
      1,
      516,
      22,
      524,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "read",
      "a",
      "ragged",
      "csv",
      "file",
      "str_0",
      "using",
      "var_0",
      "parameter",
      "in",
      "pandas"
    ],
    "code": [
      "pd",
      ".",
      "read_csv",
      "(",
      "'str_0'",
      ",",
      "var_0",
      "=",
      "list",
      "(",
      "'abcdef'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "D:/Temp/tt.csv",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "names",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      124,
      3,
      465,
      287,
      126,
      5,
      109,
      26,
      372,
      24,
      42
    ],
    "code_indx_copy": [
      162,
      22,
      452,
      1,
      29,
      8,
      34,
      19,
      33,
      1,
      524,
      17,
      17
    ],
    "code_indx_nocopy": [
      162,
      22,
      452,
      1,
      29,
      8,
      34,
      19,
      33,
      1,
      524,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "first",
      "non-null",
      "value",
      "per",
      "each",
      "row",
      "from",
      "dataframe",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "stack",
      "(",
      ")",
      ".",
      "groupby",
      "(",
      "level",
      "=",
      "0",
      ")",
      ".",
      "first",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      151,
      465,
      143,
      465,
      22,
      45,
      58,
      43,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      168,
      1,
      17,
      22,
      157,
      1,
      158,
      19,
      43,
      17,
      22,
      529,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      168,
      1,
      17,
      22,
      157,
      1,
      158,
      19,
      43,
      17,
      22,
      524,
      1,
      17
    ]
  },
  {
    "intent": [
      "print",
      "two",
      "numbers",
      "str_0",
      "and",
      "str_1",
      "using",
      "string",
      "formatting"
    ],
    "code": [
      "\"\"\"{0} {1}\"\"\"",
      ".",
      "format",
      "(",
      "10",
      ",",
      "20",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "10",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": "20",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      166,
      29,
      97,
      5,
      31,
      32,
      109,
      14,
      167
    ],
    "code_indx_copy": [
      524,
      22,
      38,
      1,
      4,
      8,
      351,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      38,
      1,
      4,
      8,
      351,
      17
    ]
  },
  {
    "intent": [
      "replace",
      "placeholders",
      "in",
      "string",
      "str_0",
      "with",
      "arguments",
      "str_1"
    ],
    "code": [
      "\"\"\"str_0\"\"\"",
      ".",
      "format",
      "(",
      "str_1",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "{1} {ham} {0} {foo} {1}",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "(10, 20, foo='bar', ham='spam')",
        "quote": "`",
        "type": "str"
      },
      "{str_0}": {
        "value": "{1} {ham} {0} {foo} {1}",
        "quote": "'",
        "type": "str"
      },
      "(str_1)": {
        "value": "(10, 20, foo='bar', ham='spam')",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      130,
      465,
      24,
      14,
      5,
      79,
      305,
      32
    ],
    "code_indx_copy": [
      212,
      22,
      38,
      1,
      37,
      17
    ],
    "code_indx_nocopy": [
      212,
      22,
      38,
      1,
      37,
      17
    ]
  },
  {
    "intent": [
      "create",
      "list",
      "str_0",
      "containing",
      "elements",
      "of",
      "list",
      "var_0",
      "whilst",
      "converting",
      "strings",
      "containing",
      "digits",
      "to",
      "integers"
    ],
    "code": [
      "str_0",
      "=",
      "[",
      "(",
      "int",
      "(",
      "f",
      ")",
      "if",
      "f",
      ".",
      "isdigit",
      "(",
      ")",
      "else",
      "f",
      ")",
      "for",
      "f",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "changed_list",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "original_list",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      148,
      4,
      5,
      34,
      1,
      2,
      4,
      26,
      465,
      115,
      259,
      34,
      200,
      8,
      7
    ],
    "code_indx_copy": [
      11,
      19,
      12,
      1,
      20,
      1,
      190,
      17,
      67,
      190,
      22,
      68,
      1,
      17,
      211,
      190,
      17,
      7,
      190,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      11,
      19,
      12,
      1,
      20,
      1,
      190,
      17,
      67,
      190,
      22,
      68,
      1,
      17,
      211,
      190,
      17,
      7,
      190,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "dictionary",
      "with",
      "keys",
      "from",
      "one",
      "list",
      "var_0",
      "and",
      "values",
      "from",
      "other",
      "list",
      "var_1"
    ],
    "code": [
      "dict",
      "(",
      "zip",
      "(",
      "var_0",
      ",",
      "zip",
      "(",
      "*",
      "var_1",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "keys",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "data",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      3,
      25,
      79,
      206,
      58,
      303,
      4,
      26,
      31,
      20,
      58,
      193,
      4,
      63
    ],
    "code_indx_copy": [
      70,
      1,
      36,
      1,
      34,
      8,
      36,
      1,
      3,
      91,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      70,
      1,
      36,
      1,
      34,
      8,
      36,
      1,
      3,
      91,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "string",
      "var_0",
      "from",
      "iso-8859-1/latin1",
      "to",
      "utf-8"
    ],
    "code": [
      "var_0",
      ".",
      "decode",
      "(",
      "'iso-8859-1'",
      ")",
      ".",
      "encode",
      "(",
      "'utf8'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "apple",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      14,
      26,
      58,
      465,
      8,
      183
    ],
    "code_indx_copy": [
      34,
      22,
      99,
      1,
      524,
      17,
      22,
      239,
      1,
      200,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      99,
      1,
      524,
      17,
      22,
      239,
      1,
      200,
      17
    ]
  },
  {
    "intent": [
      "exclude",
      "column",
      "names",
      "when",
      "writing",
      "dataframe",
      "var_0",
      "to",
      "a",
      "csv",
      "file",
      "str_0"
    ],
    "code": [
      "var_0",
      ".",
      "to_csv",
      "(",
      "'str_0'",
      ",",
      "header",
      "=",
      "False",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "filename.csv",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      147,
      321,
      465,
      451,
      43,
      26,
      8,
      3,
      287,
      126,
      5
    ],
    "code_indx_copy": [
      34,
      22,
      227,
      1,
      29,
      8,
      524,
      19,
      87,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      227,
      1,
      29,
      8,
      524,
      19,
      87,
      17
    ]
  },
  {
    "intent": [
      "escape",
      "character",
      "str_0",
      "in",
      "string",
      "str_1",
      "while",
      "using",
      "function",
      "var_0",
      "with",
      "arguments",
      "str_2"
    ],
    "code": [
      "print",
      "(",
      "'str_1'",
      ".",
      "var_0",
      "(",
      "str_2",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "}",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "{0}:<15}}{1}:<15}}{2}:<8}}",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "format",
        "quote": "`",
        "type": "var"
      },
      "str_2": {
        "value": "('1', '2', '3')",
        "quote": "`",
        "type": "str"
      },
      "{str_1}": {
        "value": "{0}:<15}}{1}:<15}}{2}:<8}}",
        "quote": "'",
        "type": "str"
      },
      "(str_2)": {
        "value": "('1', '2', '3')",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      297,
      202,
      5,
      24,
      14,
      32,
      430,
      109,
      69,
      26,
      79,
      305,
      194
    ],
    "code_indx_copy": [
      49,
      1,
      63,
      22,
      34,
      1,
      183,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      63,
      22,
      34,
      1,
      183,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "dictionary",
      "with",
      "max",
      "value",
      "of",
      "key",
      "str_0",
      "in",
      "list",
      "of",
      "dicts",
      "var_0"
    ],
    "code": [
      "max",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "lambda",
      "d",
      ":",
      "d",
      "[",
      "'str_0'",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "size",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "ld",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      25,
      79,
      258,
      143,
      2,
      23,
      5,
      24,
      4,
      2,
      465,
      26
    ],
    "code_indx_copy": [
      179,
      1,
      34,
      8,
      102,
      19,
      44,
      2,
      13,
      2,
      12,
      29,
      16,
      17
    ],
    "code_indx_nocopy": [
      179,
      1,
      34,
      8,
      102,
      19,
      44,
      2,
      13,
      2,
      12,
      29,
      16,
      17
    ]
  },
  {
    "intent": [
      "format",
      "parameters",
      "str_0",
      "and",
      "str_1",
      "into",
      "plcaeholders",
      "in",
      "string",
      "str_2"
    ],
    "code": [
      "\"\"\"str_2\"\"\"",
      ".",
      "format",
      "(",
      "'str_0'",
      ",",
      "'str_1'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "b",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "a",
        "quote": "'",
        "type": "str"
      },
      "str_2": {
        "value": "{0}\\w{{2}}b{1}\\w{{2}}quarter",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      16,
      370,
      5,
      31,
      32,
      12,
      465,
      24,
      14,
      194
    ],
    "code_indx_copy": [
      524,
      22,
      38,
      1,
      29,
      8,
      63,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      38,
      1,
      29,
      8,
      63,
      17
    ]
  },
  {
    "intent": [
      "django",
      "create",
      "a",
      "foreign",
      "key",
      "column",
      "var_0",
      "and",
      "link",
      "it",
      "to",
      "table",
      "str_0"
    ],
    "code": [
      "var_0",
      "=",
      "models",
      ".",
      "ForeignKey",
      "(",
      "'str_0'",
      ",",
      "unique",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "user",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "User",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      87,
      148,
      3,
      465,
      23,
      147,
      26,
      31,
      465,
      145,
      8,
      388,
      5
    ],
    "code_indx_copy": [
      34,
      19,
      524,
      22,
      524,
      1,
      29,
      8,
      277,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      524,
      22,
      524,
      1,
      29,
      8,
      277,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "write",
      "a",
      "regex",
      "pattern",
      "to",
      "match",
      "even",
      "number",
      "of",
      "letter",
      "var_0"
    ],
    "code": [
      "re",
      ".",
      "compile",
      "(",
      "'^([^A]*)AA([^A]|AA)*$'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "A",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      168,
      3,
      40,
      54,
      8,
      144,
      465,
      76,
      2,
      433,
      26
    ],
    "code_indx_copy": [
      39,
      22,
      83,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      83,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "join",
      "numpy",
      "array",
      "var_0",
      "with",
      "numpy",
      "array",
      "str_0",
      "along",
      "axis",
      "0"
    ],
    "code": [
      "var_0",
      "=",
      "np",
      ".",
      "concatenate",
      "(",
      "(",
      "str_0",
      ",",
      "str_0",
      ")",
      ",",
      "axis",
      "=",
      "0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "b",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "a",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      281,
      84,
      85,
      26,
      79,
      84,
      85,
      5,
      465,
      450,
      107
    ],
    "code_indx_copy": [
      34,
      19,
      74,
      22,
      491,
      1,
      1,
      11,
      8,
      11,
      17,
      8,
      42,
      19,
      43,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      74,
      22,
      491,
      1,
      1,
      11,
      8,
      11,
      17,
      8,
      42,
      19,
      43,
      17
    ]
  },
  {
    "intent": [
      "custom",
      "sort",
      "an",
      "alphanumeric",
      "list",
      "var_0"
    ],
    "code": [
      "sorted",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "x",
      ".",
      "replace",
      "(",
      "'0'",
      ",",
      "'Z'",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "l",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      117,
      225,
      465,
      4,
      26
    ],
    "code_indx_copy": [
      101,
      1,
      34,
      8,
      102,
      19,
      44,
      26,
      13,
      26,
      22,
      107,
      1,
      213,
      8,
      524,
      17,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      34,
      8,
      102,
      19,
      44,
      26,
      13,
      26,
      22,
      107,
      1,
      213,
      8,
      524,
      17,
      17
    ]
  },
  {
    "intent": [
      "plot",
      "logarithmic",
      "axes",
      "with",
      "matplotlib"
    ],
    "code": [
      "ax",
      ".",
      "set_yscale",
      "(",
      "'log'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      244,
      465,
      161,
      79,
      350
    ],
    "code_indx_copy": [
      408,
      22,
      524,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      408,
      22,
      524,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "access",
      "environment",
      "variable",
      "str_0"
    ],
    "code": [
      "os",
      ".",
      "environ",
      "[",
      "'str_0'",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "HOME",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      241,
      95,
      5
    ],
    "code_indx_copy": [
      113,
      22,
      194,
      12,
      29,
      16
    ],
    "code_indx_nocopy": [
      113,
      22,
      194,
      12,
      29,
      16
    ]
  },
  {
    "intent": [
      "get",
      "value",
      "of",
      "environment",
      "variable",
      "str_0"
    ],
    "code": [
      "os",
      ".",
      "environ",
      "[",
      "'str_0'",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "HOME",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      143,
      2,
      241,
      95,
      5
    ],
    "code_indx_copy": [
      113,
      22,
      194,
      12,
      29,
      16
    ],
    "code_indx_nocopy": [
      113,
      22,
      194,
      12,
      29,
      16
    ]
  },
  {
    "intent": [
      "print",
      "all",
      "environment",
      "variables"
    ],
    "code": [
      "print",
      "(",
      "os",
      ".",
      "environ",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      166,
      38,
      241,
      306
    ],
    "code_indx_copy": [
      49,
      1,
      113,
      22,
      194,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      113,
      22,
      194,
      17
    ]
  },
  {
    "intent": [
      "get",
      "all",
      "environment",
      "variables"
    ],
    "code": [
      "os",
      ".",
      "environ"
    ],
    "slot_map": {},
    "intent_indx": [
      17,
      38,
      241,
      306
    ],
    "code_indx_copy": [
      113,
      22,
      194
    ],
    "code_indx_nocopy": [
      113,
      22,
      194
    ]
  },
  {
    "intent": [
      "get",
      "value",
      "of",
      "the",
      "environment",
      "variable",
      "str_0"
    ],
    "code": [
      "print",
      "(",
      "os",
      ".",
      "environ",
      ".",
      "get",
      "(",
      "'str_0'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "KEY_THAT_MIGHT_EXIST",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      143,
      2,
      18,
      241,
      95,
      5
    ],
    "code_indx_copy": [
      49,
      1,
      113,
      22,
      194,
      22,
      86,
      1,
      29,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      113,
      22,
      194,
      22,
      86,
      1,
      29,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "value",
      "of",
      "the",
      "environment",
      "variable",
      "str_0",
      "with",
      "default",
      "value",
      "var_0"
    ],
    "code": [
      "print",
      "(",
      "os",
      ".",
      "getenv",
      "(",
      "'str_0'",
      ",",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "KEY_THAT_MIGHT_EXIST",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "default_value",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      143,
      2,
      18,
      241,
      95,
      5,
      79,
      233,
      143,
      26
    ],
    "code_indx_copy": [
      49,
      1,
      113,
      22,
      524,
      1,
      29,
      8,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      113,
      22,
      524,
      1,
      29,
      8,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "value",
      "of",
      "the",
      "environment",
      "variable",
      "str_0",
      "with",
      "default",
      "value",
      "str_1"
    ],
    "code": [
      "print",
      "(",
      "os",
      ".",
      "environ",
      ".",
      "get",
      "(",
      "'str_0'",
      ",",
      "'str_1'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "HOME",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "/home/username/",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      143,
      2,
      18,
      241,
      95,
      5,
      79,
      233,
      143,
      32
    ],
    "code_indx_copy": [
      49,
      1,
      113,
      22,
      194,
      22,
      86,
      1,
      29,
      8,
      63,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      113,
      22,
      194,
      22,
      86,
      1,
      29,
      8,
      63,
      17,
      17
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "dictionary",
      "containing",
      "each",
      "string",
      "in",
      "list",
      "var_0",
      "split",
      "by",
      "str_0",
      "as",
      "a",
      "key/value",
      "pairs"
    ],
    "code": [
      "print",
      "(",
      "dict",
      "(",
      "[",
      "s",
      ".",
      "split",
      "(",
      "'str_0'",
      ")",
      "for",
      "s",
      "in",
      "var_0",
      "]",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "my_list",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "=",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      148,
      3,
      25,
      34,
      22,
      14,
      24,
      4,
      26,
      138,
      44,
      5,
      90,
      3,
      88,
      187
    ],
    "code_indx_copy": [
      49,
      1,
      70,
      1,
      12,
      181,
      22,
      71,
      1,
      29,
      17,
      7,
      181,
      9,
      34,
      16,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      70,
      1,
      12,
      181,
      22,
      71,
      1,
      29,
      17,
      7,
      181,
      9,
      34,
      16,
      17,
      17
    ]
  },
  {
    "intent": [
      "find",
      "the",
      "index",
      "of",
      "element",
      "closest",
      "to",
      "number",
      "11.5",
      "in",
      "list",
      "var_0"
    ],
    "code": [
      "min",
      "(",
      "enumerate",
      "(",
      "var_0",
      ")",
      ",",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "abs",
      "(",
      "x",
      "[",
      "1",
      "]",
      "-",
      "11.5",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      47,
      18,
      37,
      2,
      49,
      465,
      8,
      76,
      465,
      24,
      4,
      26
    ],
    "code_indx_copy": [
      111,
      1,
      10,
      1,
      34,
      17,
      8,
      102,
      19,
      44,
      26,
      13,
      359,
      1,
      26,
      12,
      15,
      16,
      14,
      536,
      17,
      17
    ],
    "code_indx_nocopy": [
      111,
      1,
      10,
      1,
      34,
      17,
      8,
      102,
      19,
      44,
      26,
      13,
      359,
      1,
      26,
      12,
      15,
      16,
      14,
      524,
      17,
      17
    ]
  },
  {
    "intent": [
      "find",
      "element",
      "var_0",
      "that",
      "contains",
      "string",
      "str_0",
      "in",
      "file",
      "var_1"
    ],
    "code": [
      "e",
      "=",
      "var_1",
      ".",
      "xpath",
      "(",
      "'.//a[contains(text(),\"TEXT A\")]'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "TEXT A",
        "quote": "\"",
        "type": "str"
      },
      "var_1": {
        "value": "root",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      47,
      49,
      26,
      195,
      75,
      14,
      5,
      24,
      126,
      63
    ],
    "code_indx_copy": [
      420,
      19,
      91,
      22,
      446,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      420,
      19,
      91,
      22,
      446,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "find",
      "thevar_0",
      "tag",
      "in",
      "html",
      "var_1",
      "which",
      "starts",
      "with",
      "the",
      "text",
      "str_0",
      "and",
      "assign",
      "it",
      "to",
      "var_2"
    ],
    "code": [
      "var_2",
      "=",
      "var_1",
      ".",
      "xpath",
      "(",
      "'.//a[starts-with(text(),\"TEXT A\")]'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "root",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "TEXT A",
        "quote": "`",
        "type": "str"
      },
      "var_2": {
        "value": "e",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      47,
      465,
      72,
      24,
      307,
      63,
      205,
      439,
      79,
      18,
      267,
      5,
      31,
      93,
      145,
      8,
      64
    ],
    "code_indx_copy": [
      94,
      19,
      91,
      22,
      446,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      94,
      19,
      91,
      22,
      446,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "find",
      "the",
      "element",
      "that",
      "holds",
      "string",
      "str_0",
      "in",
      "file",
      "var_0"
    ],
    "code": [
      "e",
      "=",
      "var_0",
      ".",
      "xpath",
      "(",
      "'.//a[text()=\"TEXT A\"]'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "TEXT A",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "root",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      47,
      18,
      49,
      195,
      465,
      14,
      5,
      24,
      126,
      26
    ],
    "code_indx_copy": [
      420,
      19,
      34,
      22,
      446,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      420,
      19,
      34,
      22,
      446,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "create",
      "list",
      "var_0",
      "containing",
      "items",
      "from",
      "list",
      "var_1",
      "whose",
      "index",
      "is",
      "in",
      "list",
      "var_2"
    ],
    "code": [
      "var_0",
      "=",
      "[",
      "var_1",
      "[",
      "i",
      "]",
      "for",
      "i",
      "in",
      "var_2",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "c",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "b",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "index",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      148,
      4,
      26,
      34,
      39,
      58,
      4,
      63,
      228,
      37,
      152,
      24,
      4,
      64
    ],
    "code_indx_copy": [
      34,
      19,
      12,
      91,
      12,
      6,
      16,
      7,
      6,
      9,
      94,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      12,
      91,
      12,
      6,
      16,
      7,
      6,
      9,
      94,
      16
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "dot",
      "product",
      "of",
      "two",
      "one",
      "dimensional",
      "numpy",
      "arrays"
    ],
    "code": [
      "np",
      ".",
      "dot",
      "(",
      "a",
      "[",
      ":",
      ",",
      "(",
      "None",
      ")",
      "]",
      ",",
      "b",
      "[",
      "(",
      "None",
      ")",
      ",",
      ":",
      "]",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      17,
      18,
      409,
      163,
      2,
      29,
      303,
      83,
      84,
      165
    ],
    "code_indx_copy": [
      74,
      22,
      305,
      1,
      95,
      12,
      13,
      8,
      1,
      209,
      17,
      16,
      8,
      97,
      12,
      1,
      209,
      17,
      8,
      13,
      16,
      17
    ],
    "code_indx_nocopy": [
      74,
      22,
      305,
      1,
      95,
      12,
      13,
      8,
      1,
      209,
      17,
      16,
      8,
      97,
      12,
      1,
      209,
      17,
      8,
      13,
      16,
      17
    ]
  },
  {
    "intent": [
      "multiplication",
      "of",
      "two",
      "1-dimensional",
      "arrays",
      "in",
      "numpy"
    ],
    "code": [
      "np",
      ".",
      "outer",
      "(",
      "a",
      ",",
      "b",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      465,
      2,
      29,
      465,
      165,
      24,
      84
    ],
    "code_indx_copy": [
      74,
      22,
      524,
      1,
      95,
      8,
      97,
      17
    ],
    "code_indx_nocopy": [
      74,
      22,
      524,
      1,
      95,
      8,
      97,
      17
    ]
  },
  {
    "intent": [
      "execute",
      "a",
      "file",
      "str_0",
      "with",
      "arguments",
      "var_0",
      "and",
      "var_1",
      "in",
      "python",
      "shell"
    ],
    "code": [
      "subprocess",
      ".",
      "call",
      "(",
      "[",
      "'str_0'",
      ",",
      "var_0",
      ",",
      "var_1",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "./abc.py",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "arg1",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "arg2",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      135,
      3,
      126,
      5,
      79,
      305,
      26,
      31,
      63,
      24,
      50,
      292
    ],
    "code_indx_copy": [
      229,
      22,
      230,
      1,
      12,
      29,
      8,
      34,
      8,
      91,
      16,
      17
    ],
    "code_indx_nocopy": [
      229,
      22,
      230,
      1,
      12,
      29,
      8,
      34,
      8,
      91,
      16,
      17
    ]
  },
  {
    "intent": [
      "replace",
      "nan",
      "values",
      "in",
      "column",
      "str_0",
      "with",
      "the",
      "mean",
      "of",
      "data",
      "in",
      "column",
      "str_1",
      "of",
      "dataframe",
      "var_0"
    ],
    "code": [
      "var_0",
      "[",
      "[",
      "'str_0'",
      "]",
      "]",
      ".",
      "fillna",
      "(",
      "var_0",
      ".",
      "groupby",
      "(",
      "'str_1'",
      ")",
      ".",
      "transform",
      "(",
      "'mean'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "value",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "group",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      130,
      289,
      20,
      24,
      147,
      5,
      79,
      18,
      412,
      2,
      65,
      24,
      147,
      32,
      2,
      43,
      26
    ],
    "code_indx_copy": [
      34,
      12,
      12,
      29,
      16,
      16,
      22,
      352,
      1,
      34,
      22,
      157,
      1,
      63,
      17,
      22,
      518,
      1,
      524,
      17,
      17
    ],
    "code_indx_nocopy": [
      34,
      12,
      12,
      29,
      16,
      16,
      22,
      352,
      1,
      34,
      22,
      157,
      1,
      63,
      17,
      22,
      518,
      1,
      524,
      17,
      17
    ]
  },
  {
    "intent": [
      "separate",
      "each",
      "character",
      "in",
      "string",
      "var_0",
      "by",
      "str_0"
    ],
    "code": [
      "re",
      ".",
      "sub",
      "(",
      "'(.)(?=.)'",
      ",",
      "'\\\\1-'",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "-",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      96,
      22,
      202,
      24,
      14,
      26,
      44,
      5
    ],
    "code_indx_copy": [
      39,
      22,
      40,
      1,
      524,
      8,
      524,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      40,
      1,
      524,
      8,
      524,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "concatenate",
      "str_0",
      "in",
      "between",
      "characters",
      "of",
      "string",
      "var_0"
    ],
    "code": [
      "re",
      ".",
      "sub",
      "(",
      "'(?<=.)(?=.)'",
      ",",
      "'str_0'",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "-",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "str",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      0,
      5,
      24,
      278,
      98,
      2,
      14,
      26
    ],
    "code_indx_copy": [
      39,
      22,
      40,
      1,
      524,
      8,
      29,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      40,
      1,
      524,
      8,
      29,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "indexes",
      "of",
      "the",
      "x",
      "and",
      "y",
      "axes",
      "in",
      "numpy",
      "array",
      "var_0",
      "where",
      "variable",
      "var_1",
      "is",
      "equal",
      "to",
      "variable",
      "var_2"
    ],
    "code": [
      "i",
      ",",
      "j",
      "=",
      "var_0",
      ".",
      "where",
      "(",
      "var_1",
      "==",
      "var_2",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "np",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "value",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      18,
      235,
      2,
      18,
      465,
      31,
      465,
      161,
      24,
      84,
      85,
      26,
      155,
      95,
      63,
      152,
      106,
      8,
      95,
      64
    ],
    "code_indx_copy": [
      6,
      8,
      30,
      19,
      34,
      22,
      75,
      1,
      91,
      76,
      94,
      17
    ],
    "code_indx_nocopy": [
      6,
      8,
      30,
      19,
      34,
      22,
      75,
      1,
      91,
      76,
      94,
      17
    ]
  },
  {
    "intent": [
      "print",
      "letter",
      "that",
      "appears",
      "most",
      "frequently",
      "in",
      "string",
      "var_0"
    ],
    "code": [
      "print",
      "(",
      "collections",
      ".",
      "Counter",
      "(",
      "var_0",
      ")",
      ".",
      "most_common",
      "(",
      "1",
      ")",
      "[",
      "0",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      166,
      433,
      195,
      465,
      465,
      465,
      24,
      14,
      26
    ],
    "code_indx_copy": [
      49,
      1,
      524,
      22,
      500,
      1,
      34,
      17,
      22,
      524,
      1,
      15,
      17,
      12,
      43,
      16,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      524,
      22,
      500,
      1,
      34,
      17,
      22,
      524,
      1,
      15,
      17,
      12,
      43,
      16,
      17
    ]
  },
  {
    "intent": [
      "find",
      "float",
      "number",
      "proceeding",
      "sub-string",
      "var_0",
      "in",
      "string",
      "var_1"
    ],
    "code": [
      "float",
      "(",
      "re",
      ".",
      "findall",
      "(",
      "'(?:^|_)'",
      "+",
      "var_0",
      "+",
      "'(\\\\d+\\\\.\\\\d*)'",
      ",",
      "var_1",
      ")",
      "[",
      "0",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "par",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "dir",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      47,
      94,
      76,
      465,
      465,
      26,
      24,
      14,
      63
    ],
    "code_indx_copy": [
      225,
      1,
      39,
      22,
      48,
      1,
      524,
      96,
      34,
      96,
      524,
      8,
      91,
      17,
      12,
      43,
      16,
      17
    ],
    "code_indx_nocopy": [
      225,
      1,
      39,
      22,
      48,
      1,
      524,
      96,
      34,
      96,
      524,
      8,
      91,
      17,
      12,
      43,
      16,
      17
    ]
  },
  {
    "intent": [
      "get",
      "all",
      "the",
      "matches",
      "from",
      "a",
      "string",
      "var_0",
      "if",
      "it",
      "begins",
      "with",
      "a",
      "character",
      "var_1"
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'[^a]'",
      ",",
      "'var_0'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "abcd",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      38,
      18,
      108,
      58,
      3,
      14,
      26,
      150,
      145,
      465,
      79,
      3,
      202,
      63
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      524,
      8,
      56,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      524,
      8,
      56,
      17
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "list",
      "of",
      "variables",
      "from",
      "module",
      "str_0",
      "in",
      "current",
      "module",
      "."
    ],
    "code": [
      "print",
      "(",
      "[",
      "item",
      "for",
      "item",
      "in",
      "dir",
      "(",
      "adfix",
      ")",
      "if",
      "not",
      "item",
      ".",
      "startswith",
      "(",
      "'__'",
      ")",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "adfix.py",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      3,
      4,
      2,
      306,
      58,
      342,
      5,
      24,
      179,
      342,
      159
    ],
    "code_indx_copy": [
      49,
      1,
      12,
      387,
      7,
      387,
      9,
      507,
      1,
      524,
      17,
      67,
      281,
      387,
      22,
      453,
      1,
      524,
      17,
      16,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      12,
      387,
      7,
      387,
      9,
      507,
      1,
      524,
      17,
      67,
      281,
      387,
      22,
      453,
      1,
      524,
      17,
      16,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "first",
      "element",
      "of",
      "each",
      "tuple",
      "in",
      "a",
      "list",
      "var_0"
    ],
    "code": [
      "[",
      "x",
      "[",
      "0",
      "]",
      "for",
      "x",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "rows",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      18,
      151,
      49,
      2,
      22,
      113,
      24,
      3,
      4,
      26
    ],
    "code_indx_copy": [
      12,
      26,
      12,
      43,
      16,
      7,
      26,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      12,
      26,
      12,
      43,
      16,
      7,
      26,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "list",
      "var_0",
      "of",
      "the",
      "first",
      "elements",
      "of",
      "each",
      "tuple",
      "in",
      "a",
      "list",
      "of",
      "tuples",
      "var_1"
    ],
    "code": [
      "var_0",
      "=",
      "[",
      "x",
      "[",
      "0",
      "]",
      "for",
      "x",
      "in",
      "var_1",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "res_list",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "rows",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      3,
      4,
      26,
      2,
      18,
      151,
      1,
      2,
      22,
      113,
      24,
      3,
      4,
      2,
      33,
      63
    ],
    "code_indx_copy": [
      34,
      19,
      12,
      26,
      12,
      43,
      16,
      7,
      26,
      9,
      91,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      12,
      26,
      12,
      43,
      16,
      7,
      26,
      9,
      91,
      16
    ]
  },
  {
    "intent": [
      "duplicate",
      "data",
      "in",
      "pandas",
      "dataframe",
      "var_0",
      "for",
      "5",
      "times"
    ],
    "code": [
      "pd",
      ".",
      "concat",
      "(",
      "[",
      "var_0",
      "]",
      "*",
      "5",
      ",",
      "ignore_index",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "x",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      411,
      65,
      24,
      42,
      43,
      26,
      21,
      232,
      442
    ],
    "code_indx_copy": [
      162,
      22,
      163,
      1,
      12,
      34,
      16,
      3,
      185,
      8,
      524,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      162,
      22,
      163,
      1,
      12,
      34,
      16,
      3,
      185,
      8,
      524,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "repeated",
      "pandas",
      "data",
      "frame",
      "object",
      "var_0",
      "by",
      "str_0",
      "times"
    ],
    "code": [
      "pd",
      ".",
      "concat",
      "(",
      "[",
      "var_0",
      "]",
      "*",
      "5",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "x",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "5",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      3,
      465,
      42,
      65,
      66,
      15,
      26,
      44,
      5,
      442
    ],
    "code_indx_copy": [
      162,
      22,
      163,
      1,
      12,
      34,
      16,
      3,
      185,
      17
    ],
    "code_indx_nocopy": [
      162,
      22,
      163,
      1,
      12,
      34,
      16,
      3,
      185,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "json",
      "var_0",
      "by",
      "a",
      "key",
      "str_0"
    ],
    "code": [
      "sorted_list_of_keyvalues",
      "=",
      "sorted",
      "(",
      "list",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      ",",
      "key",
      "=",
      "item",
      "[",
      "1",
      "]",
      "[",
      "'str_0'",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "ips_data",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "data_two",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      117,
      181,
      26,
      44,
      3,
      23,
      5
    ],
    "code_indx_copy": [
      524,
      19,
      101,
      1,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      8,
      102,
      19,
      387,
      12,
      15,
      16,
      12,
      29,
      16,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      101,
      1,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      8,
      102,
      19,
      387,
      12,
      15,
      16,
      12,
      29,
      16,
      17
    ]
  },
  {
    "intent": [
      "read",
      "json",
      "var_0",
      "to",
      "pandas",
      "dataframe",
      "var_1"
    ],
    "code": [
      "pd",
      ".",
      "read_json",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "elevations",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      124,
      181,
      26,
      8,
      42,
      43,
      63
    ],
    "code_indx_copy": [
      162,
      22,
      524,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      162,
      22,
      524,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "generate",
      "a",
      "random",
      "number",
      "in",
      "1",
      "to",
      "7",
      "with",
      "a",
      "given",
      "distribution",
      "[",
      "0.1",
      ",",
      "0.05",
      ",",
      "0.05",
      ",",
      "0.2",
      ",",
      "0.4",
      ",",
      "0.2",
      "]"
    ],
    "code": [
      "numpy",
      ".",
      "random",
      ".",
      "choice",
      "(",
      "numpy",
      ".",
      "arange",
      "(",
      "1",
      ",",
      "7",
      ")",
      ",",
      "p",
      "=",
      "[",
      "0.1",
      ",",
      "0.05",
      ",",
      "0.05",
      ",",
      "0.2",
      ",",
      "0.4",
      ",",
      "0.2",
      "]",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      56,
      3,
      190,
      76,
      24,
      237,
      8,
      340,
      79,
      3,
      273,
      465,
      218,
      465,
      62,
      465,
      62,
      465,
      62,
      465,
      62,
      465,
      62,
      465,
      220
    ],
    "code_indx_copy": [
      147,
      22,
      148,
      22,
      210,
      1,
      147,
      22,
      193,
      1,
      15,
      8,
      219,
      17,
      8,
      435,
      19,
      12,
      314,
      8,
      543,
      8,
      543,
      8,
      547,
      8,
      549,
      8,
      547,
      16,
      17
    ],
    "code_indx_nocopy": [
      147,
      22,
      148,
      22,
      210,
      1,
      147,
      22,
      193,
      1,
      15,
      8,
      219,
      17,
      8,
      435,
      19,
      12,
      314,
      8,
      524,
      8,
      524,
      8,
      524,
      8,
      524,
      8,
      524,
      16,
      17
    ]
  },
  {
    "intent": [
      "return",
      "rows",
      "of",
      "data",
      "associated",
      "with",
      "the",
      "maximum",
      "value",
      "of",
      "column",
      "str_0",
      "in",
      "dataframe",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "loc",
      "[",
      "var_0",
      "[",
      "'str_0'",
      "]",
      ".",
      "idxmax",
      "(",
      ")",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "Value",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      160,
      80,
      2,
      65,
      286,
      79,
      18,
      227,
      143,
      2,
      147,
      5,
      24,
      43,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      202,
      12,
      34,
      12,
      29,
      16,
      22,
      524,
      1,
      17,
      16
    ],
    "code_indx_nocopy": [
      34,
      22,
      202,
      12,
      34,
      12,
      29,
      16,
      22,
      524,
      1,
      17,
      16
    ]
  },
  {
    "intent": [
      "find",
      "recurring",
      "patterns",
      "in",
      "a",
      "string",
      "str_0"
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'^(.+?)((.+)\\\\3+)$'",
      ",",
      "'str_0'",
      ")",
      "[",
      "0",
      "]",
      "[",
      ":",
      "-",
      "1",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "42344343434",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      47,
      465,
      465,
      24,
      3,
      14,
      5
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      524,
      8,
      29,
      17,
      12,
      43,
      16,
      12,
      13,
      14,
      15,
      16
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      524,
      8,
      29,
      17,
      12,
      43,
      16,
      12,
      13,
      14,
      15,
      16
    ]
  },
  {
    "intent": [
      "convert",
      "binary",
      "string",
      "str_0",
      "to",
      "numpy",
      "array"
    ],
    "code": [
      "np",
      ".",
      "fromstring",
      "(",
      "'str_0'",
      ",",
      "dtype",
      "=",
      "'<f4'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "\u0000\u0000\u0080?\u0000\u0000\u0000@\u0000\u0000@@\u0000\u0000\u0080@",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      276,
      14,
      5,
      8,
      84,
      85
    ],
    "code_indx_copy": [
      74,
      22,
      524,
      1,
      29,
      8,
      177,
      19,
      524,
      17
    ],
    "code_indx_nocopy": [
      74,
      22,
      524,
      1,
      29,
      8,
      177,
      19,
      524,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "binary",
      "string",
      "to",
      "numpy",
      "array"
    ],
    "code": [
      "np",
      ".",
      "fromstring",
      "(",
      "'\\x00\\x00\\x80?\\x00\\x00\\x00@\\x00\\x00@@\\x00\\x00\\x80@'",
      ",",
      "dtype",
      "=",
      "'>f4'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      11,
      276,
      14,
      8,
      84,
      85
    ],
    "code_indx_copy": [
      74,
      22,
      524,
      1,
      524,
      8,
      177,
      19,
      524,
      17
    ],
    "code_indx_nocopy": [
      74,
      22,
      524,
      1,
      524,
      8,
      177,
      19,
      524,
      17
    ]
  },
  {
    "intent": [
      "insert",
      "variables",
      "str_0",
      "into",
      "sql",
      "statement",
      "str_1"
    ],
    "code": [
      "cursor",
      ".",
      "execute",
      "(",
      "'str_1'",
      ",",
      "(",
      "str_0",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "(var1, var2, var3)",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": "INSERT INTO table VALUES (?, ?, ?)",
        "quote": "'",
        "type": "str"
      },
      "(str_0)": {
        "value": "(var1, var2, var3)",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      277,
      306,
      5,
      12,
      423,
      315,
      32
    ],
    "code_indx_copy": [
      415,
      22,
      411,
      1,
      63,
      8,
      1,
      11,
      17,
      17
    ],
    "code_indx_nocopy": [
      415,
      22,
      411,
      1,
      63,
      8,
      1,
      11,
      17,
      17
    ]
  },
  {
    "intent": [
      "execute",
      "a",
      "sql",
      "statement",
      "using",
      "variables",
      "var_0",
      ",",
      "var_1",
      "and",
      "var_2"
    ],
    "code": [
      "cursor",
      ".",
      "execute",
      "(",
      "'INSERT INTO table VALUES (%s, %s, %s)'",
      ",",
      "(",
      "var_0",
      ",",
      "var_1",
      ",",
      "var_2",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "var1",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "var2",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "var3",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      135,
      3,
      423,
      315,
      109,
      306,
      26,
      62,
      63,
      31,
      64
    ],
    "code_indx_copy": [
      415,
      22,
      411,
      1,
      524,
      8,
      1,
      34,
      8,
      91,
      8,
      94,
      17,
      17
    ],
    "code_indx_nocopy": [
      415,
      22,
      411,
      1,
      524,
      8,
      1,
      34,
      8,
      91,
      8,
      94,
      17,
      17
    ]
  },
  {
    "intent": [
      "how",
      "to",
      "use",
      "variables",
      "in",
      "sql",
      "statement",
      "in",
      "python",
      "?"
    ],
    "code": [
      "cursor",
      ".",
      "execute",
      "(",
      "'INSERT INTO table VALUES (%s, %s, %s)'",
      ",",
      "(",
      "var1",
      ",",
      "var2",
      ",",
      "var3",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      77,
      8,
      309,
      306,
      24,
      423,
      315,
      24,
      50,
      52
    ],
    "code_indx_copy": [
      415,
      22,
      411,
      1,
      524,
      8,
      1,
      524,
      8,
      524,
      8,
      524,
      17,
      17
    ],
    "code_indx_nocopy": [
      415,
      22,
      411,
      1,
      524,
      8,
      1,
      524,
      8,
      524,
      8,
      524,
      17,
      17
    ]
  },
  {
    "intent": [
      "pandas",
      "split",
      "strings",
      "in",
      "column",
      "str_0",
      "by",
      "str_1",
      "into",
      "columns",
      "in",
      "dataframe",
      "var_0"
    ],
    "code": [
      "var_0",
      "[",
      "'str_0'",
      "]",
      ".",
      "str",
      "[",
      "1",
      ":",
      "-",
      "1",
      "]",
      ".",
      "str",
      ".",
      "split",
      "(",
      "'str_1'",
      ",",
      "expand",
      "=",
      "True",
      ")",
      ".",
      "astype",
      "(",
      "float",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "stats",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": ",",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      42,
      138,
      259,
      24,
      147,
      5,
      44,
      32,
      12,
      61,
      24,
      43,
      26
    ],
    "code_indx_copy": [
      34,
      12,
      29,
      16,
      22,
      25,
      12,
      15,
      13,
      14,
      15,
      16,
      22,
      25,
      22,
      71,
      1,
      63,
      8,
      524,
      19,
      109,
      17,
      22,
      242,
      1,
      225,
      17
    ],
    "code_indx_nocopy": [
      34,
      12,
      29,
      16,
      22,
      25,
      12,
      15,
      13,
      14,
      15,
      16,
      22,
      25,
      22,
      71,
      1,
      63,
      8,
      524,
      19,
      109,
      17,
      22,
      242,
      1,
      225,
      17
    ]
  },
  {
    "intent": [
      "split",
      "string",
      "in",
      "column",
      "str_0",
      "by",
      "str_1",
      "into",
      "separate",
      "columns",
      "in",
      "dataframe",
      "var_0"
    ],
    "code": [
      "var_0",
      "[",
      "'str_0'",
      "]",
      ".",
      "str",
      "[",
      "1",
      ":",
      "-",
      "1",
      "]",
      ".",
      "str",
      ".",
      "split",
      "(",
      "'str_1'",
      ")",
      ".",
      "apply",
      "(",
      "pd",
      ".",
      "Series",
      ")",
      ".",
      "astype",
      "(",
      "float",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "stats",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": ",",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      138,
      14,
      24,
      147,
      5,
      44,
      32,
      12,
      96,
      61,
      24,
      43,
      26
    ],
    "code_indx_copy": [
      34,
      12,
      29,
      16,
      22,
      25,
      12,
      15,
      13,
      14,
      15,
      16,
      22,
      25,
      22,
      71,
      1,
      63,
      17,
      22,
      59,
      1,
      162,
      22,
      467,
      17,
      22,
      242,
      1,
      225,
      17
    ],
    "code_indx_nocopy": [
      34,
      12,
      29,
      16,
      22,
      25,
      12,
      15,
      13,
      14,
      15,
      16,
      22,
      25,
      22,
      71,
      1,
      63,
      17,
      22,
      59,
      1,
      162,
      22,
      467,
      17,
      22,
      242,
      1,
      225,
      17
    ]
  },
  {
    "intent": [
      "unpack",
      "column",
      "str_0",
      "in",
      "dataframe",
      "var_0",
      "into",
      "a",
      "series",
      "of",
      "columns"
    ],
    "code": [
      "var_0",
      "[",
      "'str_0'",
      "]",
      ".",
      "apply",
      "(",
      "pd",
      ".",
      "Series",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "stats",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      142,
      147,
      5,
      24,
      43,
      26,
      12,
      3,
      339,
      2,
      61
    ],
    "code_indx_copy": [
      34,
      12,
      29,
      16,
      22,
      59,
      1,
      162,
      22,
      467,
      17
    ],
    "code_indx_nocopy": [
      34,
      12,
      29,
      16,
      22,
      59,
      1,
      162,
      22,
      467,
      17
    ]
  },
  {
    "intent": [
      "wait",
      "for",
      "shell",
      "command",
      "var_0",
      "evoked",
      "by",
      "subprocess.popen",
      "to",
      "complete"
    ],
    "code": [
      "var_0",
      ".",
      "wait",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "p",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      21,
      292,
      137,
      26,
      465,
      44,
      465,
      8,
      465
    ],
    "code_indx_copy": [
      34,
      22,
      528,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      524,
      1,
      17
    ]
  },
  {
    "intent": [
      "encode",
      "string",
      "var_0",
      "to",
      "utf-8",
      "code"
    ],
    "code": [
      "var_0",
      ".",
      "encode",
      "(",
      "'utf8'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      447,
      14,
      26,
      8,
      183,
      293
    ],
    "code_indx_copy": [
      34,
      22,
      239,
      1,
      200,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      239,
      1,
      200,
      17
    ]
  },
  {
    "intent": [
      "parse",
      "string",
      "str_0",
      "into",
      "a",
      "datetime",
      "object",
      "using",
      "format",
      "str_1"
    ],
    "code": [
      "datetime",
      ".",
      "datetime",
      ".",
      "strptime",
      "(",
      "'str_0'",
      ",",
      "'str_1'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "01-Jan-1995",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "%d-%b-%Y",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      73,
      14,
      5,
      12,
      3,
      13,
      15,
      109,
      16,
      32
    ],
    "code_indx_copy": [
      27,
      22,
      27,
      22,
      28,
      1,
      29,
      8,
      63,
      17
    ],
    "code_indx_nocopy": [
      27,
      22,
      27,
      22,
      28,
      1,
      29,
      8,
      63,
      17
    ]
  },
  {
    "intent": [
      "copy",
      "a",
      "file",
      "from",
      "var_0",
      "to",
      "var_1"
    ],
    "code": [
      "copyfile",
      "(",
      "var_0",
      ",",
      "var_1",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "src",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "dst",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      324,
      3,
      126,
      58,
      26,
      8,
      63
    ],
    "code_indx_copy": [
      524,
      1,
      34,
      8,
      91,
      17
    ],
    "code_indx_nocopy": [
      524,
      1,
      34,
      8,
      91,
      17
    ]
  },
  {
    "intent": [
      "copy",
      "file",
      "str_0",
      "to",
      "str_1"
    ],
    "code": [
      "shutil",
      ".",
      "copy2",
      "(",
      "'str_0'",
      ",",
      "'str_1'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "/dir/file.ext",
        "quote": "\"",
        "type": "str"
      },
      "str_1": {
        "value": "/new/dir/newname.ext",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      324,
      126,
      5,
      8,
      32
    ],
    "code_indx_copy": [
      384,
      22,
      524,
      1,
      29,
      8,
      63,
      17
    ],
    "code_indx_nocopy": [
      384,
      22,
      524,
      1,
      29,
      8,
      63,
      17
    ]
  },
  {
    "intent": [
      "copy",
      "file",
      "str_0",
      "to",
      "str_1"
    ],
    "code": [
      "shutil",
      ".",
      "copy2",
      "(",
      "'str_0'",
      ",",
      "'str_1'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "/dir/file.ext",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "/new/dir",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      324,
      126,
      5,
      8,
      32
    ],
    "code_indx_copy": [
      384,
      22,
      524,
      1,
      29,
      8,
      63,
      17
    ],
    "code_indx_nocopy": [
      384,
      22,
      524,
      1,
      29,
      8,
      63,
      17
    ]
  },
  {
    "intent": [
      "print",
      "a",
      "list",
      "of",
      "integers",
      "var_0",
      "using",
      "string",
      "formatting"
    ],
    "code": [
      "print",
      "(",
      "', '",
      ".",
      "join",
      "(",
      "str",
      "(",
      "x",
      ")",
      "for",
      "x",
      "in",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "list_of_ints",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      166,
      3,
      4,
      2,
      7,
      26,
      109,
      14,
      167
    ],
    "code_indx_copy": [
      49,
      1,
      419,
      22,
      23,
      1,
      25,
      1,
      26,
      17,
      7,
      26,
      9,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      419,
      22,
      23,
      1,
      25,
      1,
      26,
      17,
      7,
      26,
      9,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "multiply",
      "column",
      "str_0",
      "and",
      "column",
      "str_1",
      "by",
      "column",
      "str_2",
      "in",
      "datafram",
      "var_0"
    ],
    "code": [
      "var_0",
      "[",
      "[",
      "'str_0'",
      ",",
      "'str_1'",
      "]",
      "]",
      ".",
      "multiply",
      "(",
      "var_0",
      "[",
      "'str_2'",
      "]",
      ",",
      "axis",
      "=",
      "'index'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "A",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "B",
        "quote": "'",
        "type": "str"
      },
      "str_2": {
        "value": "C",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      396,
      147,
      5,
      31,
      147,
      32,
      44,
      147,
      194,
      24,
      465,
      26
    ],
    "code_indx_copy": [
      34,
      12,
      12,
      29,
      8,
      63,
      16,
      16,
      22,
      528,
      1,
      34,
      12,
      150,
      16,
      8,
      42,
      19,
      495,
      17
    ],
    "code_indx_nocopy": [
      34,
      12,
      12,
      29,
      8,
      63,
      16,
      16,
      22,
      524,
      1,
      34,
      12,
      150,
      16,
      8,
      42,
      19,
      495,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "string",
      "str_0",
      "to",
      "hex"
    ],
    "code": [
      "hex",
      "(",
      "ord",
      "(",
      "'str_0'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "a",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      14,
      5,
      8,
      116
    ],
    "code_indx_copy": [
      245,
      1,
      98,
      1,
      29,
      17,
      17
    ],
    "code_indx_nocopy": [
      245,
      1,
      98,
      1,
      29,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "sum",
      "of",
      "values",
      "to",
      "the",
      "power",
      "of",
      "their",
      "indices",
      "in",
      "a",
      "list",
      "var_0"
    ],
    "code": [
      "sum",
      "(",
      "j",
      "**",
      "i",
      "for",
      "i",
      ",",
      "j",
      "in",
      "enumerate",
      "(",
      "var_0",
      ",",
      "1",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "l",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      18,
      112,
      2,
      20,
      8,
      18,
      465,
      2,
      294,
      326,
      24,
      3,
      4,
      26
    ],
    "code_indx_copy": [
      0,
      1,
      30,
      5,
      6,
      7,
      6,
      8,
      30,
      9,
      10,
      1,
      34,
      8,
      15,
      17,
      17
    ],
    "code_indx_nocopy": [
      0,
      1,
      30,
      5,
      6,
      7,
      6,
      8,
      30,
      9,
      10,
      1,
      34,
      8,
      15,
      17,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "extra",
      "white",
      "spaces",
      "&",
      "tabs",
      "from",
      "a",
      "string",
      "var_0"
    ],
    "code": [
      "\"\"\" \"\"\"",
      ".",
      "join",
      "(",
      "var_0",
      ".",
      "split",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      465,
      131,
      132,
      465,
      465,
      58,
      3,
      14,
      26
    ],
    "code_indx_copy": [
      215,
      22,
      23,
      1,
      34,
      22,
      71,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      215,
      22,
      23,
      1,
      34,
      22,
      71,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "replace",
      "comma",
      "in",
      "string",
      "var_0",
      "with",
      "empty",
      "string",
      "str_0"
    ],
    "code": [
      "var_0",
      "=",
      "var_0",
      ".",
      "replace",
      "(",
      "','",
      ",",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      130,
      417,
      24,
      14,
      26,
      79,
      146,
      14,
      5
    ],
    "code_indx_copy": [
      34,
      19,
      34,
      22,
      107,
      1,
      73,
      8,
      29,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      34,
      22,
      107,
      1,
      73,
      8,
      29,
      17
    ]
  },
  {
    "intent": [
      "resample",
      "dataframe",
      "var_0",
      "to",
      "resolution",
      "of",
      "1",
      "hour",
      "str_0",
      "for",
      "timeseries",
      "index",
      ",",
      "summing",
      "values",
      "in",
      "the",
      "column",
      "var_1",
      "averaging",
      "those",
      "in",
      "column",
      "var_2"
    ],
    "code": [
      "var_0",
      ".",
      "resample",
      "(",
      "'str_0'",
      ")",
      ".",
      "agg",
      "(",
      "{",
      "'var_1'",
      ":",
      "np",
      ".",
      "sum",
      ",",
      "'var_2'",
      ":",
      "np",
      ".",
      "mean",
      "}",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "frame",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "1H",
        "quote": "`",
        "type": "str"
      },
      "var_1": {
        "value": "radiation",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "tamb",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      43,
      26,
      8,
      465,
      2,
      237,
      465,
      5,
      21,
      465,
      37,
      62,
      177,
      20,
      24,
      18,
      147,
      63,
      465,
      465,
      24,
      147,
      64
    ],
    "code_indx_copy": [
      34,
      22,
      528,
      1,
      29,
      17,
      22,
      159,
      1,
      52,
      57,
      13,
      74,
      22,
      0,
      8,
      58,
      13,
      74,
      22,
      390,
      53,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      524,
      1,
      29,
      17,
      22,
      159,
      1,
      52,
      57,
      13,
      74,
      22,
      0,
      8,
      58,
      13,
      74,
      22,
      390,
      53,
      17
    ]
  },
  {
    "intent": [
      "how",
      "do",
      "i",
      "get",
      "rid",
      "of",
      "python",
      "tkinter",
      "root",
      "window",
      "?"
    ],
    "code": [
      "root",
      ".",
      "destroy",
      "(",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      77,
      327,
      328,
      17,
      465,
      2,
      50,
      223,
      158,
      302,
      52
    ],
    "code_indx_copy": [
      174,
      22,
      524,
      1,
      17
    ],
    "code_indx_nocopy": [
      174,
      22,
      524,
      1,
      17
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "pandas",
      "dataframe",
      "var_0",
      "from",
      "elements",
      "of",
      "a",
      "dictionary",
      "var_1"
    ],
    "code": [
      "var_0",
      "=",
      "pd",
      ".",
      "DataFrame",
      ".",
      "from_dict",
      "(",
      "{",
      "k",
      ":",
      "v",
      "for",
      "k",
      ",",
      "v",
      "in",
      "list",
      "(",
      "var_1",
      ".",
      "items",
      "(",
      ")",
      ")",
      "if",
      "k",
      "!=",
      "\n",
      "'y3'",
      "}",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "nvalues",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      148,
      3,
      42,
      43,
      26,
      58,
      1,
      2,
      3,
      25,
      63
    ],
    "code_indx_copy": [
      34,
      19,
      162,
      22,
      164,
      22,
      524,
      1,
      52,
      89,
      13,
      90,
      7,
      89,
      8,
      90,
      9,
      33,
      1,
      91,
      22,
      35,
      1,
      17,
      17,
      67,
      89,
      88,
      161,
      524,
      53,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      162,
      22,
      164,
      22,
      524,
      1,
      52,
      89,
      13,
      90,
      7,
      89,
      8,
      90,
      9,
      33,
      1,
      91,
      22,
      35,
      1,
      17,
      17,
      67,
      89,
      88,
      161,
      524,
      53,
      17
    ]
  },
  {
    "intent": [
      "flask",
      "get",
      "value",
      "of",
      "request",
      "variable",
      "str_0"
    ],
    "code": [
      "first_name",
      "=",
      "request",
      ".",
      "args",
      ".",
      "get",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "firstname",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      405,
      17,
      143,
      2,
      101,
      95,
      5
    ],
    "code_indx_copy": [
      524,
      19,
      233,
      22,
      311,
      22,
      86,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      233,
      22,
      311,
      22,
      86,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "flask",
      "get",
      "posted",
      "form",
      "data",
      "str_0"
    ],
    "code": [
      "first_name",
      "=",
      "request",
      ".",
      "form",
      ".",
      "get",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "firstname",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      405,
      17,
      465,
      149,
      65,
      5
    ],
    "code_indx_copy": [
      524,
      19,
      233,
      22,
      531,
      22,
      86,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      233,
      22,
      524,
      22,
      86,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "list",
      "of",
      "substrings",
      "consisting",
      "of",
      "the",
      "first",
      "5",
      "characters",
      "of",
      "every",
      "string",
      "in",
      "list",
      "var_0"
    ],
    "code": [
      "[",
      "s",
      "[",
      ":",
      "5",
      "]",
      "for",
      "s",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "buckets",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      3,
      4,
      2,
      410,
      465,
      2,
      18,
      151,
      232,
      98,
      2,
      279,
      14,
      24,
      4,
      26
    ],
    "code_indx_copy": [
      12,
      181,
      12,
      13,
      185,
      16,
      7,
      181,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      12,
      181,
      12,
      13,
      185,
      16,
      7,
      181,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "sort",
      "list",
      "var_0",
      "by",
      "the",
      "length",
      "of",
      "string",
      "followed",
      "by",
      "alphabetical",
      "order"
    ],
    "code": [
      "var_0",
      ".",
      "sort",
      "(",
      "key",
      "=",
      "lambda",
      "item",
      ":",
      "(",
      "-",
      "len",
      "(",
      "item",
      ")",
      ",",
      "item",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "the_list",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      4,
      26,
      44,
      18,
      209,
      2,
      14,
      368,
      44,
      465,
      162
    ],
    "code_indx_copy": [
      34,
      22,
      124,
      1,
      102,
      19,
      44,
      387,
      13,
      1,
      14,
      32,
      1,
      387,
      17,
      8,
      387,
      17,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      124,
      1,
      102,
      19,
      44,
      387,
      13,
      1,
      14,
      32,
      1,
      387,
      17,
      8,
      387,
      17,
      17
    ]
  },
  {
    "intent": [
      "set",
      "index",
      "equal",
      "to",
      "field",
      "str_0",
      "in",
      "dataframe",
      "var_0"
    ],
    "code": [
      "var_0",
      "=",
      "var_0",
      ".",
      "set_index",
      "(",
      "[",
      "'str_0'",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "TRX_DATE",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      59,
      37,
      106,
      8,
      312,
      5,
      24,
      43,
      26
    ],
    "code_indx_copy": [
      34,
      19,
      34,
      22,
      203,
      1,
      12,
      29,
      16,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      34,
      22,
      203,
      1,
      12,
      29,
      16,
      17
    ]
  },
  {
    "intent": [
      "list",
      "comprehension",
      "with",
      "an",
      "accumulator",
      "in",
      "range",
      "of",
      "10"
    ],
    "code": [
      "list",
      "(",
      "accumulate",
      "(",
      "list",
      "(",
      "range",
      "(",
      "10",
      ")",
      ")",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      4,
      346,
      79,
      225,
      465,
      24,
      123,
      2,
      351
    ],
    "code_indx_copy": [
      33,
      1,
      524,
      1,
      33,
      1,
      104,
      1,
      4,
      17,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      33,
      1,
      524,
      1,
      33,
      1,
      104,
      1,
      4,
      17,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "how",
      "to",
      "convert",
      "a",
      "date",
      "string",
      "str_0",
      "in",
      "format",
      "str_1",
      "to",
      "different",
      "format",
      "str_2"
    ],
    "code": [
      "datetime",
      ".",
      "datetime",
      ".",
      "strptime",
      "(",
      "'str_0'",
      ",",
      "'str_1'",
      ")",
      ".",
      "strftime",
      "(",
      "'str_2'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "2013-1-25",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "%Y-%m-%d",
        "quote": "'",
        "type": "str"
      },
      "str_2": {
        "value": "%m/%d/%y",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      77,
      8,
      11,
      3,
      133,
      14,
      5,
      24,
      16,
      32,
      8,
      465,
      16,
      194
    ],
    "code_indx_copy": [
      27,
      22,
      27,
      22,
      28,
      1,
      29,
      8,
      63,
      17,
      22,
      65,
      1,
      150,
      17
    ],
    "code_indx_nocopy": [
      27,
      22,
      27,
      22,
      28,
      1,
      29,
      8,
      63,
      17,
      22,
      65,
      1,
      150,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "date",
      "string",
      "str_0",
      "in",
      "format",
      "str_1",
      "to",
      "different",
      "format",
      "str_2"
    ],
    "code": [
      "datetime",
      ".",
      "datetime",
      ".",
      "strptime",
      "(",
      "'str_0'",
      ",",
      "'str_1'",
      ")",
      ".",
      "strftime",
      "(",
      "'str_2'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "2013-1-25",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "%Y-%m-%d",
        "quote": "'",
        "type": "str"
      },
      "str_2": {
        "value": "%-m/%d/%y",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      3,
      133,
      14,
      5,
      24,
      16,
      32,
      8,
      465,
      16,
      194
    ],
    "code_indx_copy": [
      27,
      22,
      27,
      22,
      28,
      1,
      29,
      8,
      63,
      17,
      22,
      65,
      1,
      150,
      17
    ],
    "code_indx_nocopy": [
      27,
      22,
      27,
      22,
      28,
      1,
      29,
      8,
      63,
      17,
      22,
      65,
      1,
      150,
      17
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "dataframe",
      "var_0",
      "that",
      "contains",
      "all",
      "the",
      "columns",
      "of",
      "dataframe",
      "var_1",
      "that",
      "do",
      "not",
      "end",
      "in",
      "var_2"
    ],
    "code": [
      "var_0",
      "=",
      "var_1",
      ".",
      "ix",
      "[",
      ":",
      ",",
      "(",
      "~",
      "var_1",
      ".",
      "columns",
      ".",
      "str",
      ".",
      "endswith",
      "(",
      "'var_2'",
      ")",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "df2",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "prefix",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      3,
      43,
      26,
      195,
      75,
      38,
      18,
      61,
      2,
      43,
      63,
      195,
      327,
      105,
      295,
      24,
      64
    ],
    "code_indx_copy": [
      34,
      19,
      91,
      22,
      201,
      12,
      13,
      8,
      1,
      360,
      91,
      22,
      192,
      22,
      25,
      22,
      199,
      1,
      58,
      17,
      17,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      91,
      22,
      201,
      12,
      13,
      8,
      1,
      360,
      91,
      22,
      192,
      22,
      25,
      22,
      199,
      1,
      58,
      17,
      17,
      16
    ]
  },
  {
    "intent": [
      "create",
      "list",
      "var_0",
      "containing",
      "the",
      "last",
      "10",
      "elements",
      "of",
      "list",
      "var_1"
    ],
    "code": [
      "var_0",
      "=",
      "var_1",
      "[",
      "-",
      "10",
      ":",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "new_list",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "my_list",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      148,
      4,
      26,
      34,
      18,
      170,
      351,
      1,
      2,
      4,
      63
    ],
    "code_indx_copy": [
      34,
      19,
      91,
      12,
      14,
      4,
      13,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      91,
      12,
      14,
      4,
      13,
      16
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "last",
      "10",
      "elements",
      "from",
      "a",
      "list",
      "var_0"
    ],
    "code": [
      "var_0",
      "[",
      "-",
      "10",
      ":",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "my_list",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      18,
      170,
      351,
      1,
      58,
      3,
      4,
      26
    ],
    "code_indx_copy": [
      34,
      12,
      14,
      4,
      13,
      16
    ],
    "code_indx_nocopy": [
      34,
      12,
      14,
      4,
      13,
      16
    ]
  },
  {
    "intent": [
      "convert",
      "matlab",
      "engine",
      "array",
      "var_0",
      "to",
      "a",
      "numpy",
      "ndarray"
    ],
    "code": [
      "np",
      ".",
      "array",
      "(",
      "var_0",
      ".",
      "_data",
      ")",
      ".",
      "reshape",
      "(",
      "var_0",
      ".",
      "size",
      "[",
      ":",
      ":",
      "-",
      "1",
      "]",
      ")",
      ".",
      "T"
    ],
    "slot_map": {
      "var_0": {
        "value": "x",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      465,
      465,
      85,
      26,
      8,
      3,
      84,
      465
    ],
    "code_indx_copy": [
      74,
      22,
      175,
      1,
      34,
      22,
      524,
      17,
      22,
      361,
      1,
      34,
      22,
      374,
      12,
      13,
      13,
      14,
      15,
      16,
      17,
      22,
      134
    ],
    "code_indx_nocopy": [
      74,
      22,
      175,
      1,
      34,
      22,
      524,
      17,
      22,
      361,
      1,
      34,
      22,
      374,
      12,
      13,
      13,
      14,
      15,
      16,
      17,
      22,
      134
    ]
  },
  {
    "intent": [
      "select",
      "the",
      "first",
      "row",
      "grouped",
      "per",
      "level",
      "0",
      "of",
      "dataframe",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "groupby",
      "(",
      "level",
      "=",
      "0",
      ",",
      "as_index",
      "=",
      "False",
      ")",
      ".",
      "nth",
      "(",
      "0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      78,
      18,
      151,
      45,
      114,
      465,
      238,
      107,
      2,
      43,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      157,
      1,
      158,
      19,
      43,
      8,
      524,
      19,
      87,
      17,
      22,
      524,
      1,
      43,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      157,
      1,
      158,
      19,
      43,
      8,
      524,
      19,
      87,
      17,
      22,
      524,
      1,
      43,
      17
    ]
  },
  {
    "intent": [
      "concatenate",
      "sequence",
      "of",
      "numpy",
      "arrays",
      "var_0",
      "into",
      "a",
      "one",
      "dimensional",
      "array",
      "along",
      "the",
      "first",
      "axis"
    ],
    "code": [
      "numpy",
      ".",
      "concatenate",
      "(",
      "var_0",
      ",",
      "axis",
      "=",
      "0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "LIST",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      0,
      445,
      2,
      84,
      165,
      26,
      12,
      3,
      303,
      83,
      85,
      465,
      18,
      151,
      450
    ],
    "code_indx_copy": [
      147,
      22,
      491,
      1,
      34,
      8,
      42,
      19,
      43,
      17
    ],
    "code_indx_nocopy": [
      147,
      22,
      491,
      1,
      34,
      8,
      42,
      19,
      43,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "and",
      "escape",
      "string",
      "str_0",
      "to",
      "utf-8",
      "code"
    ],
    "code": [
      "\"\"\"\\\\xc3\\\\x85\u3042\"\"\"",
      ".",
      "encode",
      "(",
      "'utf-8'",
      ")",
      ".",
      "decode",
      "(",
      "'unicode_escape'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "\\xc3\\x85\u00e3\u0081\u0082",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      31,
      297,
      14,
      5,
      8,
      183,
      293
    ],
    "code_indx_copy": [
      524,
      22,
      239,
      1,
      143,
      17,
      22,
      99,
      1,
      182,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      239,
      1,
      143,
      17,
      22,
      99,
      1,
      182,
      17
    ]
  },
  {
    "intent": [
      "encode",
      "string",
      "str_0",
      "to",
      "bytes"
    ],
    "code": [
      "\"\"\"\\\\xc3\\\\x85\u3042\"\"\"",
      ".",
      "encode",
      "(",
      "'utf-8'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "\\xc3\\x85\u00e3\u0081\u0082",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      447,
      14,
      5,
      8,
      420
    ],
    "code_indx_copy": [
      524,
      22,
      239,
      1,
      143,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      239,
      1,
      143,
      17
    ]
  },
  {
    "intent": [
      "interleave",
      "the",
      "elements",
      "of",
      "two",
      "lists",
      "var_0",
      "and",
      "var_1"
    ],
    "code": [
      "[",
      "j",
      "for",
      "i",
      "in",
      "zip",
      "(",
      "var_0",
      ",",
      "var_1",
      ")",
      "for",
      "j",
      "in",
      "i",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "b",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      18,
      1,
      2,
      29,
      30,
      26,
      31,
      63
    ],
    "code_indx_copy": [
      12,
      30,
      7,
      6,
      9,
      36,
      1,
      34,
      8,
      91,
      17,
      7,
      30,
      9,
      6,
      16
    ],
    "code_indx_nocopy": [
      12,
      30,
      7,
      6,
      9,
      36,
      1,
      34,
      8,
      91,
      17,
      7,
      30,
      9,
      6,
      16
    ]
  },
  {
    "intent": [
      "merge",
      "two",
      "lists",
      "var_0",
      "and",
      "var_1",
      "into",
      "a",
      "single",
      "list"
    ],
    "code": [
      "[",
      "j",
      "for",
      "i",
      "in",
      "zip",
      "(",
      "var_0",
      ",",
      "var_1",
      ")",
      "for",
      "j",
      "in",
      "i",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "b",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      247,
      29,
      30,
      26,
      31,
      63,
      12,
      3,
      9,
      4
    ],
    "code_indx_copy": [
      12,
      30,
      7,
      6,
      9,
      36,
      1,
      34,
      8,
      91,
      17,
      7,
      30,
      9,
      6,
      16
    ],
    "code_indx_nocopy": [
      12,
      30,
      7,
      6,
      9,
      36,
      1,
      34,
      8,
      91,
      17,
      7,
      30,
      9,
      6,
      16
    ]
  },
  {
    "intent": [
      "delete",
      "all",
      "occureces",
      "of",
      "str_0",
      "in",
      "each",
      "string",
      "var_0",
      "in",
      "list",
      "var_1"
    ],
    "code": [
      "print",
      "(",
      "[",
      "var_0",
      ".",
      "replace",
      "(",
      "'str_0'",
      ",",
      "''",
      ")",
      "for",
      "var_0",
      "in",
      "var_1",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "8",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "lst",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      86,
      38,
      465,
      2,
      5,
      24,
      22,
      14,
      26,
      24,
      4,
      63
    ],
    "code_indx_copy": [
      49,
      1,
      12,
      34,
      22,
      107,
      1,
      29,
      8,
      21,
      17,
      7,
      34,
      9,
      91,
      16,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      12,
      34,
      22,
      107,
      1,
      29,
      8,
      21,
      17,
      7,
      34,
      9,
      91,
      16,
      17
    ]
  },
  {
    "intent": [
      "split",
      "string",
      "var_0",
      "into",
      "a",
      "string",
      "of",
      "letters",
      "seperated",
      "by",
      "str_0"
    ],
    "code": [
      "\"\"\"str_0\"\"\"",
      ".",
      "join",
      "(",
      "'var_0'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "Hello",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": ",",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      138,
      14,
      26,
      12,
      3,
      14,
      2,
      360,
      465,
      44,
      5
    ],
    "code_indx_copy": [
      212,
      22,
      23,
      1,
      56,
      17
    ],
    "code_indx_nocopy": [
      212,
      22,
      23,
      1,
      56,
      17
    ]
  },
  {
    "intent": [
      "in",
      "django",
      ",",
      "select",
      "100",
      "random",
      "records",
      "from",
      "the",
      "database",
      "str_0"
    ],
    "code": [
      "Content",
      ".",
      "objects",
      ".",
      "all",
      "(",
      ")",
      ".",
      "order_by",
      "(",
      "'?'",
      ")",
      "[",
      ":",
      "100",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "Content.objects",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      24,
      87,
      62,
      78,
      373,
      190,
      374,
      58,
      18,
      465,
      5
    ],
    "code_indx_copy": [
      524,
      22,
      78,
      22,
      77,
      1,
      17,
      22,
      136,
      1,
      241,
      17,
      12,
      13,
      267,
      16
    ],
    "code_indx_nocopy": [
      524,
      22,
      78,
      22,
      77,
      1,
      17,
      22,
      136,
      1,
      241,
      17,
      12,
      13,
      267,
      16
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "numpy",
      "array",
      "containing",
      "elements",
      "of",
      "array",
      "var_0",
      "as",
      "pointed",
      "to",
      "by",
      "index",
      "in",
      "array",
      "var_1"
    ],
    "code": [
      "var_0",
      "[",
      "np",
      ".",
      "arange",
      "(",
      "var_0",
      ".",
      "shape",
      "[",
      "0",
      "]",
      ")",
      "[",
      ":",
      ",",
      "(",
      "None",
      ")",
      "]",
      ",",
      "var_1",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "A",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "B",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      148,
      3,
      84,
      85,
      34,
      1,
      2,
      85,
      26,
      90,
      465,
      8,
      44,
      37,
      24,
      85,
      63
    ],
    "code_indx_copy": [
      34,
      12,
      74,
      22,
      193,
      1,
      34,
      22,
      223,
      12,
      43,
      16,
      17,
      12,
      13,
      8,
      1,
      209,
      17,
      16,
      8,
      91,
      16
    ],
    "code_indx_nocopy": [
      34,
      12,
      74,
      22,
      193,
      1,
      34,
      22,
      223,
      12,
      43,
      16,
      17,
      12,
      13,
      8,
      1,
      209,
      17,
      16,
      8,
      91,
      16
    ]
  },
  {
    "intent": [
      "pivot",
      "dataframe",
      "var_0",
      "so",
      "that",
      "values",
      "for",
      "var_1",
      "become",
      "column",
      "headings",
      "and",
      "values",
      "for",
      "var_2",
      "become",
      "the",
      "index"
    ],
    "code": [
      "var_0",
      ".",
      "pivot_table",
      "(",
      "index",
      "=",
      "'var_2'",
      ",",
      "columns",
      "=",
      "'var_1'",
      ",",
      "aggfunc",
      "=",
      "'size'",
      ",",
      "fill_value",
      "=",
      "0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "upc",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "saleid",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      387,
      43,
      26,
      465,
      195,
      20,
      21,
      63,
      465,
      147,
      465,
      31,
      20,
      21,
      64,
      465,
      18,
      37
    ],
    "code_indx_copy": [
      34,
      22,
      337,
      1,
      160,
      19,
      58,
      8,
      192,
      19,
      57,
      8,
      524,
      19,
      505,
      8,
      524,
      19,
      43,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      337,
      1,
      160,
      19,
      58,
      8,
      192,
      19,
      57,
      8,
      524,
      19,
      505,
      8,
      524,
      19,
      43,
      17
    ]
  },
  {
    "intent": [
      "match",
      "zero-or-more",
      "instances",
      "of",
      "lower",
      "case",
      "alphabet",
      "characters",
      "in",
      "a",
      "string",
      "str_0"
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'([a-z]*)'",
      ",",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "f233op",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      144,
      465,
      358,
      2,
      465,
      197,
      465,
      98,
      24,
      3,
      14,
      5
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      524,
      8,
      29,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      524,
      8,
      29,
      17
    ]
  },
  {
    "intent": [
      "match",
      "zero-or-more",
      "instances",
      "of",
      "lower",
      "case",
      "alphabet",
      "characters",
      "in",
      "a",
      "string",
      "str_0"
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'([a-z])*'",
      ",",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "f233op",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      144,
      465,
      358,
      2,
      465,
      197,
      465,
      98,
      24,
      3,
      14,
      5
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      524,
      8,
      29,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      524,
      8,
      29,
      17
    ]
  },
  {
    "intent": [
      "split",
      "string",
      "str_0",
      "using",
      "string",
      "str_1"
    ],
    "code": [
      "re",
      ".",
      "split",
      "(",
      "'str_1'",
      ",",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "happy_hats_for_cats",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "_for_",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      138,
      14,
      5,
      109,
      14,
      32
    ],
    "code_indx_copy": [
      39,
      22,
      71,
      1,
      63,
      8,
      29,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      71,
      1,
      63,
      8,
      29,
      17
    ]
  },
  {
    "intent": [
      "split",
      "string",
      "str_0",
      "based",
      "on",
      "string",
      "str_1",
      ",",
      "str_2",
      "or",
      "str_3"
    ],
    "code": [
      "re",
      ".",
      "split",
      "(",
      "'_(?:for|or|and)_'",
      ",",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "sad_pandas_and_happy_cats_for_people",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "and",
        "quote": "'",
        "type": "str"
      },
      "str_2": {
        "value": "or",
        "quote": "'",
        "type": "str"
      },
      "str_3": {
        "value": "for",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      138,
      14,
      5,
      208,
      139,
      14,
      32,
      62,
      194,
      344,
      219
    ],
    "code_indx_copy": [
      39,
      22,
      71,
      1,
      524,
      8,
      29,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      71,
      1,
      524,
      8,
      29,
      17
    ]
  },
  {
    "intent": [
      "split",
      "a",
      "string",
      "var_0",
      "by",
      "multiple",
      "words",
      "var_1",
      "or",
      "var_2",
      "or",
      "var_3"
    ],
    "code": [
      "[",
      "re",
      ".",
      "split",
      "(",
      "'_(?:f?or|and)_'",
      ",",
      "s",
      ")",
      "for",
      "s",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "l",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "for",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "or",
        "quote": "`",
        "type": "var"
      },
      "var_3": {
        "value": "and",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      138,
      3,
      14,
      26,
      44,
      6,
      41,
      63,
      344,
      64,
      344,
      67
    ],
    "code_indx_copy": [
      12,
      39,
      22,
      71,
      1,
      524,
      8,
      181,
      17,
      7,
      181,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      12,
      39,
      22,
      71,
      1,
      524,
      8,
      181,
      17,
      7,
      181,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "zip",
      "keys",
      "with",
      "individual",
      "values",
      "in",
      "lists",
      "var_0",
      "and",
      "var_1"
    ],
    "code": [
      "[",
      "dict",
      "(",
      "zip",
      "(",
      "var_0",
      ",",
      "x",
      ")",
      ")",
      "for",
      "x",
      "in",
      "var_1",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "k",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "v",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      28,
      206,
      79,
      465,
      20,
      24,
      30,
      26,
      31,
      63
    ],
    "code_indx_copy": [
      12,
      70,
      1,
      36,
      1,
      34,
      8,
      26,
      17,
      17,
      7,
      26,
      9,
      91,
      16
    ],
    "code_indx_nocopy": [
      12,
      70,
      1,
      36,
      1,
      34,
      8,
      26,
      17,
      17,
      7,
      26,
      9,
      91,
      16
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "list",
      "str_0",
      "in",
      "descending",
      "order",
      "."
    ],
    "code": [
      "sorted",
      "(",
      "str_0",
      ",",
      "reverse",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "lst",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      117,
      3,
      4,
      5,
      24,
      121,
      162,
      159
    ],
    "code_indx_copy": [
      101,
      1,
      11,
      8,
      129,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      11,
      8,
      129,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "array",
      "var_0",
      "based",
      "on",
      "column",
      "str_0",
      ",",
      "str_1",
      "and",
      "str_2"
    ],
    "code": [
      "var_0",
      ".",
      "sort",
      "(",
      "order",
      "=",
      "[",
      "'str_0'",
      ",",
      "'str_1'",
      ",",
      "'str_2'",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "order_array",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "year",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "month",
        "quote": "'",
        "type": "str"
      },
      "str_2": {
        "value": "day",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      117,
      85,
      26,
      208,
      139,
      147,
      5,
      62,
      32,
      31,
      194
    ],
    "code_indx_copy": [
      34,
      22,
      124,
      1,
      524,
      19,
      12,
      29,
      8,
      63,
      8,
      150,
      16,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      124,
      1,
      524,
      19,
      12,
      29,
      8,
      63,
      8,
      150,
      16,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "structured",
      "numpy",
      "array",
      "str_0",
      "on",
      "multiple",
      "columns",
      "str_1",
      ",",
      "str_2",
      "and",
      "str_3",
      "."
    ],
    "code": [
      "str_0",
      ".",
      "sort",
      "(",
      "[",
      "'str_1'",
      ",",
      "'str_2'",
      ",",
      "'str_3'",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "df",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "year",
        "quote": "'",
        "type": "str"
      },
      "str_2": {
        "value": "month",
        "quote": "'",
        "type": "str"
      },
      "str_3": {
        "value": "day",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      117,
      3,
      465,
      84,
      85,
      5,
      139,
      6,
      61,
      32,
      62,
      194,
      31,
      219,
      159
    ],
    "code_indx_copy": [
      11,
      22,
      124,
      1,
      12,
      63,
      8,
      150,
      8,
      173,
      16,
      17
    ],
    "code_indx_nocopy": [
      11,
      22,
      124,
      1,
      12,
      63,
      8,
      150,
      8,
      173,
      16,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "elements",
      "in",
      "list",
      "var_0",
      "are",
      "coherent",
      "in",
      "order"
    ],
    "code": [
      "return",
      "var_0",
      "==",
      "list",
      "(",
      "range",
      "(",
      "var_0",
      "[",
      "0",
      "]",
      ",",
      "var_0",
      "[",
      "-",
      "1",
      "]",
      "+",
      "1",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "my_list",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      234,
      150,
      1,
      24,
      4,
      26,
      243,
      465,
      24,
      162
    ],
    "code_indx_copy": [
      118,
      34,
      76,
      33,
      1,
      104,
      1,
      34,
      12,
      43,
      16,
      8,
      34,
      12,
      14,
      15,
      16,
      96,
      15,
      17,
      17
    ],
    "code_indx_nocopy": [
      118,
      34,
      76,
      33,
      1,
      104,
      1,
      34,
      12,
      43,
      16,
      8,
      34,
      12,
      14,
      15,
      16,
      96,
      15,
      17,
      17
    ]
  },
  {
    "intent": [
      "group",
      "rows",
      "of",
      "pandas",
      "dataframe",
      "var_0",
      "with",
      "same",
      "str_0"
    ],
    "code": [
      "var_0",
      ".",
      "groupby",
      "(",
      "'str_0'",
      ")",
      ".",
      "agg",
      "(",
      "lambda",
      "x",
      ":",
      "x",
      ".",
      "tolist",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "id",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      383,
      80,
      2,
      42,
      43,
      26,
      79,
      36,
      5
    ],
    "code_indx_copy": [
      34,
      22,
      157,
      1,
      29,
      17,
      22,
      159,
      1,
      44,
      26,
      13,
      26,
      22,
      306,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      157,
      1,
      29,
      17,
      22,
      159,
      1,
      44,
      26,
      13,
      26,
      22,
      306,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "encode",
      "str_0",
      "as",
      "unicode",
      "and",
      "decode",
      "with",
      "utf-8"
    ],
    "code": [
      "\"\"\"X\u00c3\u00bcY\u00c3\u009f\"\"\"",
      ".",
      "encode",
      "(",
      "'raw_unicode_escape'",
      ")",
      ".",
      "decode",
      "(",
      "'utf-8'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "u'X\u00c3\u00bcY\u00c3\u009f'",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      447,
      5,
      90,
      230,
      31,
      182,
      79,
      183
    ],
    "code_indx_copy": [
      524,
      22,
      239,
      1,
      524,
      17,
      22,
      99,
      1,
      143,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      239,
      1,
      524,
      17,
      22,
      99,
      1,
      143,
      17
    ]
  },
  {
    "intent": [
      "parse",
      "string",
      "var_0",
      "to",
      "float"
    ],
    "code": [
      "float",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      73,
      14,
      26,
      8,
      94
    ],
    "code_indx_copy": [
      225,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      225,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "parse",
      "string",
      "var_0",
      "to",
      "float",
      "or",
      "int"
    ],
    "code": [
      "try",
      ":",
      "\n",
      "    ",
      "return",
      "int",
      "(",
      "var_0",
      ")",
      "\n",
      "",
      "except",
      "ValueError",
      ":",
      "\n",
      "    ",
      "return",
      "float",
      "(",
      "var_0",
      ")",
      ""
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      73,
      14,
      26,
      8,
      94,
      344,
      74
    ],
    "code_indx_copy": [
      338,
      13,
      161,
      216,
      118,
      20,
      1,
      34,
      17,
      161,
      218,
      339,
      515,
      13,
      161,
      216,
      118,
      225,
      1,
      34,
      17,
      218
    ],
    "code_indx_nocopy": [
      338,
      13,
      161,
      216,
      118,
      20,
      1,
      34,
      17,
      161,
      218,
      339,
      515,
      13,
      161,
      216,
      118,
      225,
      1,
      34,
      17,
      218
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "object",
      "var_0",
      "has",
      "property",
      "str_0"
    ],
    "code": [
      "if",
      "hasattr",
      "(",
      "var_0",
      ",",
      "'str_0'",
      ")",
      ":",
      "\n",
      "    ",
      "pass",
      ""
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "property",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      234,
      150,
      15,
      26,
      337,
      465,
      5
    ],
    "code_indx_copy": [
      67,
      486,
      1,
      34,
      8,
      29,
      17,
      13,
      161,
      216,
      217,
      218
    ],
    "code_indx_nocopy": [
      67,
      486,
      1,
      34,
      8,
      29,
      17,
      13,
      161,
      216,
      217,
      218
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "object",
      "var_0",
      "has",
      "property",
      "str_0"
    ],
    "code": [
      "if",
      "hasattr",
      "(",
      "var_0",
      ",",
      "'str_0'",
      ")",
      ":",
      "\n",
      "    ",
      "pass",
      ""
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "property",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      234,
      150,
      15,
      26,
      337,
      465,
      5
    ],
    "code_indx_copy": [
      67,
      486,
      1,
      34,
      8,
      29,
      17,
      13,
      161,
      216,
      217,
      218
    ],
    "code_indx_nocopy": [
      67,
      486,
      1,
      34,
      8,
      29,
      17,
      13,
      161,
      216,
      217,
      218
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "value",
      "of",
      "attribute",
      "str_0",
      "of",
      "object",
      "var_0",
      "with",
      "default",
      "value",
      "str_1"
    ],
    "code": [
      "getattr",
      "(",
      "var_0",
      ",",
      "'str_0'",
      ",",
      "'str_1'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "property",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "str_1": {
        "value": "default value",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      18,
      143,
      2,
      341,
      5,
      2,
      15,
      26,
      79,
      233,
      143,
      32
    ],
    "code_indx_copy": [
      300,
      1,
      34,
      8,
      29,
      8,
      63,
      17
    ],
    "code_indx_nocopy": [
      300,
      1,
      34,
      8,
      29,
      8,
      63,
      17
    ]
  },
  {
    "intent": [
      "delete",
      "every",
      "8th",
      "column",
      "in",
      "a",
      "numpy",
      "array",
      "str_0",
      "."
    ],
    "code": [
      "np",
      ".",
      "delete",
      "(",
      "str_0",
      ",",
      "list",
      "(",
      "range",
      "(",
      "0",
      ",",
      "str_0",
      ".",
      "shape",
      "[",
      "1",
      "]",
      ",",
      "8",
      ")",
      ")",
      ",",
      "axis",
      "=",
      "1",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "a",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      86,
      279,
      465,
      147,
      24,
      3,
      84,
      85,
      5,
      159
    ],
    "code_indx_copy": [
      74,
      22,
      81,
      1,
      11,
      8,
      33,
      1,
      104,
      1,
      43,
      8,
      11,
      22,
      223,
      12,
      15,
      16,
      8,
      501,
      17,
      17,
      8,
      42,
      19,
      15,
      17
    ],
    "code_indx_nocopy": [
      74,
      22,
      81,
      1,
      11,
      8,
      33,
      1,
      104,
      1,
      43,
      8,
      11,
      22,
      223,
      12,
      15,
      16,
      8,
      501,
      17,
      17,
      8,
      42,
      19,
      15,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "var_0",
      "milliseconds",
      "to",
      "a",
      "datetime",
      "object"
    ],
    "code": [
      "datetime",
      ".",
      "datetime",
      ".",
      "fromtimestamp",
      "(",
      "var_0",
      "/",
      "1000.0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "ms",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      26,
      465,
      8,
      3,
      13,
      15
    ],
    "code_indx_copy": [
      27,
      22,
      27,
      22,
      524,
      1,
      34,
      31,
      524,
      17
    ],
    "code_indx_nocopy": [
      27,
      22,
      27,
      22,
      524,
      1,
      34,
      31,
      524,
      17
    ]
  },
  {
    "intent": [
      "find",
      "the",
      "magnitude",
      "(",
      "length",
      ")",
      "squared",
      "of",
      "a",
      "vector",
      "var_0",
      "field"
    ],
    "code": [
      "np",
      ".",
      "einsum",
      "(",
      "'...j,...j->...'",
      ",",
      "var_0",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "vf",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      47,
      18,
      465,
      212,
      209,
      27,
      465,
      2,
      3,
      465,
      26,
      312
    ],
    "code_indx_copy": [
      74,
      22,
      130,
      1,
      524,
      8,
      34,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      74,
      22,
      130,
      1,
      524,
      8,
      34,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "request",
      "http",
      "url",
      "var_0"
    ],
    "code": [
      "r",
      "=",
      "requests",
      ".",
      "get",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "url",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      101,
      343,
      102,
      26
    ],
    "code_indx_copy": [
      18,
      19,
      85,
      22,
      86,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      18,
      19,
      85,
      22,
      86,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "request",
      "http",
      "url",
      "var_0",
      "with",
      "parameters",
      "var_1"
    ],
    "code": [
      "r",
      "=",
      "requests",
      ".",
      "get",
      "(",
      "var_0",
      ",",
      "params",
      "=",
      "var_1",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "url",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "payload",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      101,
      343,
      102,
      26,
      79,
      370,
      63
    ],
    "code_indx_copy": [
      18,
      19,
      85,
      22,
      86,
      1,
      34,
      8,
      238,
      19,
      91,
      17
    ],
    "code_indx_nocopy": [
      18,
      19,
      85,
      22,
      86,
      1,
      34,
      8,
      238,
      19,
      91,
      17
    ]
  },
  {
    "intent": [
      "post",
      "request",
      "url",
      "var_0",
      "with",
      "parameters",
      "var_1"
    ],
    "code": [
      "r",
      "=",
      "requests",
      ".",
      "post",
      "(",
      "var_0",
      ",",
      "data",
      "=",
      "var_1",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "url",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "payload",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      407,
      101,
      102,
      26,
      79,
      370,
      63
    ],
    "code_indx_copy": [
      18,
      19,
      85,
      22,
      379,
      1,
      34,
      8,
      135,
      19,
      91,
      17
    ],
    "code_indx_nocopy": [
      18,
      19,
      85,
      22,
      379,
      1,
      34,
      8,
      135,
      19,
      91,
      17
    ]
  },
  {
    "intent": [
      "make",
      "an",
      "http",
      "post",
      "request",
      "with",
      "data",
      "var_0"
    ],
    "code": [
      "post_response",
      "=",
      "requests",
      ".",
      "post",
      "(",
      "url",
      "=",
      "'http://httpbin.org/post'",
      ",",
      "json",
      "=",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "post_data",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      191,
      225,
      343,
      407,
      101,
      79,
      65,
      26
    ],
    "code_indx_copy": [
      524,
      19,
      85,
      22,
      379,
      1,
      235,
      19,
      524,
      8,
      140,
      19,
      34,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      85,
      22,
      379,
      1,
      235,
      19,
      524,
      8,
      140,
      19,
      34,
      17
    ]
  },
  {
    "intent": [
      "django",
      "jinja",
      "slice",
      "list",
      "var_0",
      "by",
      "str_0"
    ],
    "code": [
      "{",
      "{",
      "(",
      "var_0",
      "|",
      "slice",
      ")",
      ":",
      "'str_0'",
      "}",
      "}"
    ],
    "slot_map": {
      "var_0": {
        "value": "mylist",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "3:8",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      87,
      465,
      465,
      4,
      26,
      44,
      5
    ],
    "code_indx_copy": [
      52,
      52,
      1,
      34,
      412,
      530,
      17,
      13,
      29,
      53,
      53
    ],
    "code_indx_nocopy": [
      52,
      52,
      1,
      34,
      412,
      524,
      17,
      13,
      29,
      53,
      53
    ]
  },
  {
    "intent": [
      "create",
      "dataframe",
      "var_0",
      "with",
      "content",
      "of",
      "hdf",
      "store",
      "file",
      "str_0",
      "with",
      "key",
      "of",
      "str_1"
    ],
    "code": [
      "df1",
      "=",
      "pd",
      ".",
      "read_hdf",
      "(",
      "'str_0'",
      ",",
      "'str_1'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "/home/.../data.h5",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "firstSet",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      148,
      43,
      26,
      79,
      348,
      2,
      465,
      377,
      126,
      5,
      79,
      23,
      2,
      32
    ],
    "code_indx_copy": [
      280,
      19,
      162,
      22,
      524,
      1,
      29,
      8,
      63,
      17
    ],
    "code_indx_nocopy": [
      280,
      19,
      162,
      22,
      524,
      1,
      29,
      8,
      63,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "largest",
      "index",
      "of",
      "the",
      "last",
      "occurrence",
      "of",
      "characters",
      "str_0",
      "in",
      "string",
      "var_0"
    ],
    "code": [
      "max",
      "(",
      "var_0",
      ".",
      "rfind",
      "(",
      "i",
      ")",
      "for",
      "i",
      "in",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "([{",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "test_string",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      18,
      438,
      37,
      2,
      18,
      170,
      364,
      2,
      98,
      5,
      24,
      14,
      26
    ],
    "code_indx_copy": [
      179,
      1,
      34,
      22,
      440,
      1,
      6,
      17,
      7,
      6,
      9,
      29,
      17
    ],
    "code_indx_nocopy": [
      179,
      1,
      34,
      22,
      440,
      1,
      6,
      17,
      7,
      6,
      9,
      29,
      17
    ]
  },
  {
    "intent": [
      "print",
      "str_0",
      "plus",
      "unicode",
      "character",
      "ustr_1"
    ],
    "code": [
      "print",
      "(",
      "'here is your checkmark: '",
      "+",
      "'str_1'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "here is your checkmark:",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "\u2713",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      166,
      5,
      465,
      230,
      202,
      465
    ],
    "code_indx_copy": [
      49,
      1,
      524,
      96,
      63,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      524,
      96,
      63,
      17
    ]
  },
  {
    "intent": [
      "print",
      "unicode",
      "characters",
      "in",
      "a",
      "string",
      "str_0"
    ],
    "code": [
      "print",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "\u0420\u043e\u0441\u0441\u0438\u044f",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      166,
      230,
      98,
      24,
      3,
      14,
      5
    ],
    "code_indx_copy": [
      49,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "pads",
      "string",
      "str_0",
      "on",
      "the",
      "left",
      "with",
      "1",
      "zero"
    ],
    "code": [
      "print",
      "(",
      "'{0}'",
      ".",
      "format",
      "(",
      "'str_0'",
      ".",
      "zfill",
      "(",
      "2",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "5",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      14,
      5,
      139,
      18,
      214,
      79,
      237,
      261
    ],
    "code_indx_copy": [
      49,
      1,
      524,
      22,
      38,
      1,
      29,
      22,
      524,
      1,
      82,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      524,
      22,
      38,
      1,
      29,
      22,
      524,
      1,
      82,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "duplicates",
      "elements",
      "from",
      "list",
      "var_0",
      "and",
      "sort",
      "it",
      "in",
      "ascending",
      "order"
    ],
    "code": [
      "sorted",
      "(",
      "set",
      "(",
      "itertools",
      ".",
      "chain",
      ".",
      "from_iterable",
      "(",
      "var_0",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "sequences",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      336,
      1,
      58,
      4,
      26,
      31,
      117,
      145,
      24,
      119,
      162
    ],
    "code_indx_copy": [
      101,
      1,
      189,
      1,
      50,
      22,
      450,
      22,
      451,
      1,
      34,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      189,
      1,
      50,
      22,
      450,
      22,
      451,
      1,
      34,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "pandas",
      "dataframe",
      "var_0",
      "column",
      "str_0",
      "to",
      "list"
    ],
    "code": [
      "var_0",
      "[",
      "'str_0'",
      "]",
      ".",
      "values",
      ".",
      "tolist",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "a",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      42,
      43,
      26,
      147,
      5,
      8,
      4
    ],
    "code_indx_copy": [
      34,
      12,
      29,
      16,
      22,
      166,
      22,
      306,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      12,
      29,
      16,
      22,
      166,
      22,
      306,
      1,
      17
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "list",
      "of",
      "all",
      "values",
      "in",
      "column",
      "var_0",
      "in",
      "pandas",
      "data",
      "frame",
      "var_1"
    ],
    "code": [
      "var_1",
      "[",
      "'var_0'",
      "]",
      ".",
      "tolist",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      3,
      4,
      2,
      38,
      20,
      24,
      147,
      26,
      24,
      42,
      65,
      66,
      63
    ],
    "code_indx_copy": [
      91,
      12,
      56,
      16,
      22,
      306,
      1,
      17
    ],
    "code_indx_nocopy": [
      91,
      12,
      56,
      16,
      22,
      306,
      1,
      17
    ]
  },
  {
    "intent": [
      "escaping",
      "quotes",
      "in",
      "string"
    ],
    "code": [
      "replace",
      "(",
      "'\"'",
      ",",
      "'\\\\\"'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      465,
      465,
      24,
      14
    ],
    "code_indx_copy": [
      107,
      1,
      524,
      8,
      524,
      17
    ],
    "code_indx_nocopy": [
      107,
      1,
      524,
      8,
      524,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "all",
      "string",
      "elements",
      "in",
      "list",
      "var_0",
      "are",
      "upper-cased"
    ],
    "code": [
      "print",
      "(",
      "all",
      "(",
      "word",
      "[",
      "0",
      "]",
      ".",
      "isupper",
      "(",
      ")",
      "for",
      "word",
      "in",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "words",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      234,
      150,
      38,
      14,
      1,
      24,
      4,
      26,
      243,
      465
    ],
    "code_indx_copy": [
      49,
      1,
      77,
      1,
      487,
      12,
      43,
      16,
      22,
      524,
      1,
      17,
      7,
      487,
      9,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      77,
      1,
      487,
      12,
      43,
      16,
      22,
      524,
      1,
      17,
      7,
      487,
      9,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "items",
      "from",
      "dictionary",
      "var_0",
      "if",
      "the",
      "item",
      "'s",
      "value",
      "var_1",
      "is",
      "equal",
      "to",
      "42"
    ],
    "code": [
      "var_0",
      "=",
      "{",
      "key",
      ":",
      "var_1",
      "for",
      "key",
      ",",
      "var_1",
      "in",
      "list",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      "if",
      "var_1",
      "!=",
      "42",
      "}"
    ],
    "slot_map": {
      "var_0": {
        "value": "myDict",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "val",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      39,
      58,
      25,
      26,
      150,
      18,
      156,
      266,
      143,
      63,
      152,
      106,
      8,
      465
    ],
    "code_indx_copy": [
      34,
      19,
      52,
      102,
      13,
      91,
      7,
      102,
      8,
      91,
      9,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      67,
      91,
      88,
      542,
      53
    ],
    "code_indx_nocopy": [
      34,
      19,
      52,
      102,
      13,
      91,
      7,
      102,
      8,
      91,
      9,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      67,
      91,
      88,
      524,
      53
    ]
  },
  {
    "intent": [
      "remove",
      "all",
      "items",
      "from",
      "a",
      "dictionary",
      "var_0",
      "whose",
      "values",
      "are",
      "str_0"
    ],
    "code": [
      "{",
      "key",
      ":",
      "val",
      "for",
      "key",
      ",",
      "val",
      "in",
      "list",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      "if",
      "val",
      "!=",
      "42",
      "}"
    ],
    "slot_map": {
      "var_0": {
        "value": "myDict",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "42",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      268,
      38,
      39,
      58,
      3,
      25,
      26,
      228,
      20,
      243,
      5
    ],
    "code_indx_copy": [
      52,
      102,
      13,
      176,
      7,
      102,
      8,
      176,
      9,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      67,
      176,
      88,
      524,
      53
    ],
    "code_indx_nocopy": [
      52,
      102,
      13,
      176,
      7,
      102,
      8,
      176,
      9,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      67,
      176,
      88,
      524,
      53
    ]
  },
  {
    "intent": [
      "determine",
      "the",
      "byte",
      "length",
      "of",
      "a",
      "utf-8",
      "encoded",
      "string",
      "var_0"
    ],
    "code": [
      "return",
      "len",
      "(",
      "var_0",
      ".",
      "encode",
      "(",
      "'utf-8'",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      18,
      229,
      209,
      2,
      3,
      183,
      296,
      14,
      26
    ],
    "code_indx_copy": [
      118,
      32,
      1,
      34,
      22,
      239,
      1,
      143,
      17,
      17
    ],
    "code_indx_nocopy": [
      118,
      32,
      1,
      34,
      22,
      239,
      1,
      143,
      17,
      17
    ]
  },
  {
    "intent": [
      "kill",
      "a",
      "process",
      "with",
      "id",
      "str_0"
    ],
    "code": [
      "os",
      ".",
      "kill",
      "(",
      "process",
      ".",
      "pid",
      ",",
      "signal",
      ".",
      "SIGKILL",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "process.pid",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      3,
      444,
      79,
      440,
      5
    ],
    "code_indx_copy": [
      113,
      22,
      528,
      1,
      530,
      22,
      517,
      8,
      524,
      22,
      524,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      524,
      1,
      524,
      22,
      517,
      8,
      524,
      22,
      524,
      17
    ]
  },
  {
    "intent": [
      "get",
      "data",
      "of",
      "columns",
      "with",
      "null",
      "values",
      "in",
      "dataframe",
      "var_0"
    ],
    "code": [
      "var_0",
      "[",
      "pd",
      ".",
      "isnull",
      "(",
      "var_0",
      ")",
      ".",
      "any",
      "(",
      "axis",
      "=",
      "1",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      65,
      2,
      61,
      79,
      465,
      20,
      24,
      43,
      26
    ],
    "code_indx_copy": [
      34,
      12,
      162,
      22,
      430,
      1,
      34,
      17,
      22,
      269,
      1,
      42,
      19,
      15,
      17,
      16
    ],
    "code_indx_nocopy": [
      34,
      12,
      162,
      22,
      430,
      1,
      34,
      17,
      22,
      269,
      1,
      42,
      19,
      15,
      17,
      16
    ]
  },
  {
    "intent": [
      "strip",
      "everything",
      "up",
      "to",
      "and",
      "including",
      "the",
      "character",
      "str_0",
      "from",
      "url",
      "var_0",
      ",",
      "strip",
      "the",
      "character",
      "str_1",
      "from",
      "the",
      "remaining",
      "string",
      "and",
      "concatenate",
      "str_2",
      "to",
      "the",
      "end"
    ],
    "code": [
      "var_0",
      ".",
      "split",
      "(",
      "'str_0'",
      ")",
      "[",
      "-",
      "1",
      "]",
      ".",
      "replace",
      "(",
      "'str_1'",
      ",",
      "''",
      ")",
      "+",
      "'str_2'"
    ],
    "slot_map": {
      "str_0": {
        "value": "&",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "url",
        "quote": "`",
        "type": "var"
      },
      "str_1": {
        "value": "=",
        "quote": "`",
        "type": "str"
      },
      "str_2": {
        "value": ".html",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      331,
      465,
      379,
      8,
      31,
      213,
      18,
      202,
      5,
      58,
      102,
      26,
      62,
      331,
      18,
      202,
      32,
      58,
      18,
      465,
      14,
      31,
      0,
      194,
      8,
      18,
      295
    ],
    "code_indx_copy": [
      34,
      22,
      71,
      1,
      29,
      17,
      12,
      14,
      15,
      16,
      22,
      107,
      1,
      63,
      8,
      21,
      17,
      96,
      150
    ],
    "code_indx_nocopy": [
      34,
      22,
      71,
      1,
      29,
      17,
      12,
      14,
      15,
      16,
      22,
      107,
      1,
      63,
      8,
      21,
      17,
      96,
      150
    ]
  },
  {
    "intent": [
      "parse",
      "a",
      "file",
      "str_0",
      "using",
      "expat",
      "parsing",
      "in",
      "python",
      "3"
    ],
    "code": [
      "parser",
      ".",
      "ParseFile",
      "(",
      "open",
      "(",
      "'str_0'",
      ",",
      "'rb'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "sample.xml",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      73,
      3,
      126,
      5,
      109,
      465,
      465,
      24,
      50,
      57
    ],
    "code_indx_copy": [
      376,
      22,
      524,
      1,
      105,
      1,
      29,
      8,
      155,
      17,
      17
    ],
    "code_indx_nocopy": [
      376,
      22,
      524,
      1,
      105,
      1,
      29,
      8,
      155,
      17,
      17
    ]
  },
  {
    "intent": [
      "exit",
      "script"
    ],
    "code": [
      "sys",
      ".",
      "exit",
      "(",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      465,
      246
    ],
    "code_indx_copy": [
      153,
      22,
      416,
      1,
      17
    ],
    "code_indx_nocopy": [
      153,
      22,
      416,
      1,
      17
    ]
  },
  {
    "intent": [
      "assign",
      "value",
      "in",
      "var_0",
      "dynamically",
      "to",
      "class",
      "property",
      "var_1"
    ],
    "code": [
      "setattr",
      "(",
      "self",
      ",",
      "var_1",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "group",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "attr",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      93,
      143,
      24,
      26,
      465,
      8,
      311,
      465,
      63
    ],
    "code_indx_copy": [
      524,
      1,
      310,
      8,
      91,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      524,
      1,
      310,
      8,
      91,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "decode",
      "url-encoded",
      "string",
      "var_0",
      "to",
      "its",
      "character",
      "equivalents"
    ],
    "code": [
      "urllib",
      ".",
      "parse",
      ".",
      "unquote",
      "(",
      "urllib",
      ".",
      "parse",
      ".",
      "unquote",
      "(",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "some_string",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      182,
      465,
      14,
      26,
      8,
      91,
      202,
      465
    ],
    "code_indx_copy": [
      232,
      22,
      236,
      22,
      237,
      1,
      232,
      22,
      236,
      22,
      237,
      1,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      232,
      22,
      236,
      22,
      237,
      1,
      232,
      22,
      236,
      22,
      237,
      1,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "decode",
      "a",
      "double",
      "url",
      "encoded",
      "string",
      "str_0",
      "to",
      "str_1"
    ],
    "code": [
      "urllib",
      ".",
      "parse",
      ".",
      "unquote",
      "(",
      "urllib",
      ".",
      "parse",
      ".",
      "unquote",
      "(",
      "'str_0'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "FireShot3%2B%25282%2529.png",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "FireShot3+(2).png",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      182,
      3,
      465,
      102,
      296,
      14,
      5,
      8,
      32
    ],
    "code_indx_copy": [
      232,
      22,
      236,
      22,
      237,
      1,
      232,
      22,
      236,
      22,
      237,
      1,
      29,
      17,
      17
    ],
    "code_indx_nocopy": [
      232,
      22,
      236,
      22,
      237,
      1,
      232,
      22,
      236,
      22,
      237,
      1,
      29,
      17,
      17
    ]
  },
  {
    "intent": [
      "change",
      "flask",
      "security",
      "register",
      "url",
      "to",
      "str_0"
    ],
    "code": [
      "app",
      ".",
      "config",
      "[",
      "'SECURITY_REGISTER_URL'",
      "]",
      "=",
      "'str_0'"
    ],
    "slot_map": {
      "str_0": {
        "value": "/create_account",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      221,
      405,
      465,
      465,
      102,
      8,
      5
    ],
    "code_indx_copy": [
      524,
      22,
      524,
      12,
      524,
      16,
      19,
      29
    ],
    "code_indx_nocopy": [
      524,
      22,
      524,
      12,
      524,
      16,
      19,
      29
    ]
  },
  {
    "intent": [
      "open",
      "a",
      "file",
      "str_0",
      "in",
      "binary",
      "write",
      "mode"
    ],
    "code": [
      "output",
      "=",
      "open",
      "(",
      "'str_0'",
      ",",
      "'wb'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "/home/user/test/wsservice/data.pkl",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      284,
      3,
      126,
      5,
      24,
      276,
      168,
      285
    ],
    "code_indx_copy": [
      480,
      19,
      105,
      1,
      29,
      8,
      524,
      17
    ],
    "code_indx_nocopy": [
      480,
      19,
      105,
      1,
      29,
      8,
      524,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "the",
      "last",
      "element",
      "in",
      "list",
      "var_0"
    ],
    "code": [
      "del",
      "var_0",
      "[",
      "-",
      "1",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      18,
      170,
      49,
      24,
      4,
      26
    ],
    "code_indx_copy": [
      283,
      34,
      12,
      14,
      15,
      16
    ],
    "code_indx_nocopy": [
      283,
      34,
      12,
      14,
      15,
      16
    ]
  },
  {
    "intent": [
      "remove",
      "the",
      "element",
      "in",
      "list",
      "var_0",
      "with",
      "index",
      "1"
    ],
    "code": [
      "var_0",
      ".",
      "pop",
      "(",
      "1",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      18,
      49,
      24,
      4,
      26,
      79,
      37,
      237
    ],
    "code_indx_copy": [
      34,
      22,
      228,
      1,
      15,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      228,
      1,
      15,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "the",
      "last",
      "element",
      "in",
      "list",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "pop",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      18,
      170,
      49,
      24,
      4,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      228,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      228,
      1,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "the",
      "element",
      "in",
      "list",
      "var_0",
      "at",
      "index",
      "var_1"
    ],
    "code": [
      "var_0",
      ".",
      "pop",
      "(",
      "var_1",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "index",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      18,
      49,
      24,
      4,
      26,
      35,
      37,
      63
    ],
    "code_indx_copy": [
      34,
      22,
      228,
      1,
      91,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      228,
      1,
      91,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "the",
      "element",
      "in",
      "list",
      "var_0",
      "at",
      "index",
      "var_1"
    ],
    "code": [
      "del",
      "var_0",
      "[",
      "var_1",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "index",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      268,
      18,
      49,
      24,
      4,
      26,
      35,
      37,
      63
    ],
    "code_indx_copy": [
      283,
      34,
      12,
      91,
      16
    ],
    "code_indx_nocopy": [
      283,
      34,
      12,
      91,
      16
    ]
  },
  {
    "intent": [
      "print",
      "a",
      "celsius",
      "symbol",
      "on",
      "x",
      "axis",
      "of",
      "a",
      "plot",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "set_xlabel",
      "(",
      "'Temperature (\u2103)'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "ax",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      166,
      3,
      465,
      465,
      139,
      465,
      450,
      2,
      3,
      244,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      524,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      524,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "print",
      "a",
      "celsius",
      "symbol",
      "with",
      "matplotlib"
    ],
    "code": [
      "ax",
      ".",
      "set_xlabel",
      "(",
      "'Temperature ($^\\\\circ$C)'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      166,
      3,
      465,
      465,
      79,
      350
    ],
    "code_indx_copy": [
      408,
      22,
      524,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      408,
      22,
      524,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "list",
      "of",
      "lists",
      "var_0",
      "into",
      "a",
      "list",
      "of",
      "strings",
      "keeping",
      "empty",
      "sub-lists",
      "as",
      "empty",
      "string",
      "str_0"
    ],
    "code": [
      "[",
      "'str_0'",
      ".",
      "join",
      "(",
      "l",
      ")",
      "for",
      "l",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "list_of_lists",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      3,
      4,
      2,
      30,
      26,
      12,
      3,
      4,
      2,
      259,
      465,
      146,
      465,
      90,
      146,
      14,
      5
    ],
    "code_indx_copy": [
      12,
      29,
      22,
      23,
      1,
      431,
      17,
      7,
      431,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      12,
      29,
      22,
      23,
      1,
      431,
      17,
      7,
      431,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "list",
      "of",
      "all",
      "the",
      "duplicate",
      "items",
      "in",
      "dataframe",
      "var_0",
      "using",
      "pandas"
    ],
    "code": [
      "pd",
      ".",
      "concat",
      "(",
      "g",
      "for",
      "_",
      ",",
      "g",
      "in",
      "var_0",
      ".",
      "groupby",
      "(",
      "'ID'",
      ")",
      "if",
      "len",
      "(",
      "g",
      ")",
      ">",
      "1",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      3,
      4,
      2,
      38,
      18,
      411,
      39,
      24,
      43,
      26,
      109,
      42
    ],
    "code_indx_copy": [
      162,
      22,
      163,
      1,
      448,
      7,
      470,
      8,
      448,
      9,
      34,
      22,
      157,
      1,
      524,
      17,
      67,
      32,
      1,
      448,
      17,
      214,
      15,
      17
    ],
    "code_indx_nocopy": [
      162,
      22,
      163,
      1,
      448,
      7,
      470,
      8,
      448,
      9,
      34,
      22,
      157,
      1,
      524,
      17,
      67,
      32,
      1,
      448,
      17,
      214,
      15,
      17
    ]
  },
  {
    "intent": [
      "delete",
      "third",
      "row",
      "in",
      "a",
      "numpy",
      "array",
      "var_0"
    ],
    "code": [
      "var_0",
      "=",
      "numpy",
      ".",
      "delete",
      "(",
      "var_0",
      ",",
      "2",
      ",",
      "axis",
      "=",
      "1",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "x",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      86,
      120,
      45,
      24,
      3,
      84,
      85,
      26
    ],
    "code_indx_copy": [
      34,
      19,
      147,
      22,
      81,
      1,
      34,
      8,
      82,
      8,
      42,
      19,
      15,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      147,
      22,
      81,
      1,
      34,
      8,
      82,
      8,
      42,
      19,
      15,
      17
    ]
  },
  {
    "intent": [
      "delete",
      "first",
      "row",
      "of",
      "array",
      "var_0"
    ],
    "code": [
      "var_0",
      "=",
      "numpy",
      ".",
      "delete",
      "(",
      "var_0",
      ",",
      "0",
      ",",
      "axis",
      "=",
      "0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "x",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      86,
      151,
      45,
      2,
      85,
      26
    ],
    "code_indx_copy": [
      34,
      19,
      147,
      22,
      81,
      1,
      34,
      8,
      43,
      8,
      42,
      19,
      43,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      147,
      22,
      81,
      1,
      34,
      8,
      43,
      8,
      42,
      19,
      43,
      17
    ]
  },
  {
    "intent": [
      "merge",
      "rows",
      "from",
      "dataframe",
      "var_0",
      "with",
      "rows",
      "from",
      "dataframe",
      "var_1",
      "and",
      "calculate",
      "the",
      "mean",
      "for",
      "rows",
      "that",
      "have",
      "the",
      "same",
      "value",
      "of",
      "axis",
      "1"
    ],
    "code": [
      "pd",
      ".",
      "concat",
      "(",
      "(",
      "var_0",
      ",",
      "var_1",
      ")",
      ",",
      "axis",
      "=",
      "1",
      ")",
      ".",
      "mean",
      "(",
      "axis",
      "=",
      "1",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df1",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "df2",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      247,
      80,
      58,
      43,
      26,
      79,
      80,
      58,
      43,
      63,
      31,
      252,
      18,
      412,
      21,
      80,
      195,
      196,
      18,
      36,
      143,
      2,
      450,
      237
    ],
    "code_indx_copy": [
      162,
      22,
      163,
      1,
      1,
      34,
      8,
      91,
      17,
      8,
      42,
      19,
      15,
      17,
      22,
      390,
      1,
      42,
      19,
      15,
      17
    ],
    "code_indx_nocopy": [
      162,
      22,
      163,
      1,
      1,
      34,
      8,
      91,
      17,
      8,
      42,
      19,
      15,
      17,
      22,
      390,
      1,
      42,
      19,
      15,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "average",
      "values",
      "from",
      "two",
      "numpy",
      "arrays",
      "var_0",
      "and",
      "var_1"
    ],
    "code": [
      "np",
      ".",
      "mean",
      "(",
      "np",
      ".",
      "array",
      "(",
      "[",
      "var_0",
      ",",
      "var_1",
      "]",
      ")",
      ",",
      "axis",
      "=",
      "0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "old_set",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "new_set",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      18,
      19,
      20,
      58,
      29,
      84,
      165,
      26,
      31,
      63
    ],
    "code_indx_copy": [
      74,
      22,
      390,
      1,
      74,
      22,
      175,
      1,
      12,
      34,
      8,
      91,
      16,
      17,
      8,
      42,
      19,
      43,
      17
    ],
    "code_indx_nocopy": [
      74,
      22,
      390,
      1,
      74,
      22,
      175,
      1,
      12,
      34,
      8,
      91,
      16,
      17,
      8,
      42,
      19,
      43,
      17
    ]
  },
  {
    "intent": [
      "matplotlib",
      "change",
      "marker",
      "size",
      "to",
      "500"
    ],
    "code": [
      "scatter",
      "(",
      "x",
      ",",
      "y",
      ",",
      "s",
      "=",
      "500",
      ",",
      "color",
      "=",
      "'green'",
      ",",
      "marker",
      "=",
      "'h'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      350,
      221,
      465,
      334,
      8,
      465
    ],
    "code_indx_copy": [
      524,
      1,
      26,
      8,
      103,
      8,
      181,
      19,
      533,
      8,
      292,
      19,
      524,
      8,
      291,
      19,
      524,
      17
    ],
    "code_indx_nocopy": [
      524,
      1,
      26,
      8,
      103,
      8,
      181,
      19,
      524,
      8,
      292,
      19,
      524,
      8,
      291,
      19,
      524,
      17
    ]
  },
  {
    "intent": [
      "create",
      "new",
      "list",
      "var_0",
      "by",
      "splitting",
      "each",
      "item",
      "in",
      "list",
      "var_1"
    ],
    "code": [
      "var_0",
      "=",
      "[",
      "item",
      "for",
      "word",
      "in",
      "var_1",
      "for",
      "item",
      "in",
      "word",
      ".",
      "split",
      "(",
      "','",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "result",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "words",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      148,
      192,
      4,
      26,
      44,
      429,
      22,
      156,
      24,
      4,
      63
    ],
    "code_indx_copy": [
      34,
      19,
      12,
      387,
      7,
      487,
      9,
      91,
      7,
      387,
      9,
      487,
      22,
      71,
      1,
      73,
      17,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      12,
      387,
      7,
      487,
      9,
      91,
      7,
      387,
      9,
      487,
      22,
      71,
      1,
      73,
      17,
      16
    ]
  },
  {
    "intent": [
      "convert",
      "json",
      "string",
      "str_0",
      "into",
      "a",
      "datetime",
      "object",
      "using",
      "format",
      "str_1"
    ],
    "code": [
      "datetime",
      ".",
      "datetime",
      ".",
      "strptime",
      "(",
      "'str_0'",
      ",",
      "'str_1'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "2012-05-29T19:30:03.283Z",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "%Y-%m-%dT%H:%M:%S.%fZ",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      181,
      14,
      5,
      12,
      3,
      13,
      15,
      109,
      16,
      32
    ],
    "code_indx_copy": [
      27,
      22,
      27,
      22,
      28,
      1,
      29,
      8,
      63,
      17
    ],
    "code_indx_nocopy": [
      27,
      22,
      27,
      22,
      28,
      1,
      29,
      8,
      63,
      17
    ]
  },
  {
    "intent": [
      "count",
      "var_0",
      "values",
      "associated",
      "with",
      "key",
      "str_0",
      "in",
      "dictionary",
      "var_1"
    ],
    "code": [
      "sum",
      "(",
      "item",
      "[",
      "'str_0'",
      "]",
      "for",
      "item",
      "in",
      "list",
      "(",
      "var_1",
      ".",
      "values",
      "(",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "True",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "one",
        "quote": "'",
        "type": "str"
      },
      "var_1": {
        "value": "tadas",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      203,
      26,
      20,
      286,
      79,
      23,
      5,
      24,
      25,
      63
    ],
    "code_indx_copy": [
      0,
      1,
      387,
      12,
      29,
      16,
      7,
      387,
      9,
      33,
      1,
      91,
      22,
      166,
      1,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      0,
      1,
      387,
      12,
      29,
      16,
      7,
      387,
      9,
      33,
      1,
      91,
      22,
      166,
      1,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "encode",
      "a",
      "pdf",
      "file",
      "str_0",
      "with",
      "var_0",
      "encoding"
    ],
    "code": [
      "a",
      "=",
      "open",
      "(",
      "'str_0'",
      ",",
      "'rb'",
      ")",
      ".",
      "read",
      "(",
      ")",
      ".",
      "encode",
      "(",
      "'var_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "pdf_reference.pdf",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "base64",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      447,
      3,
      465,
      126,
      5,
      79,
      26,
      298
    ],
    "code_indx_copy": [
      95,
      19,
      105,
      1,
      29,
      8,
      155,
      17,
      22,
      106,
      1,
      17,
      22,
      239,
      1,
      56,
      17
    ],
    "code_indx_nocopy": [
      95,
      19,
      105,
      1,
      29,
      8,
      155,
      17,
      22,
      106,
      1,
      17,
      22,
      239,
      1,
      56,
      17
    ]
  },
  {
    "intent": [
      "split",
      "string",
      "var_0",
      "using",
      "new-line",
      "character",
      "str_0",
      "as",
      "separator"
    ],
    "code": [
      "var_0",
      ".",
      "rstrip",
      "(",
      ")",
      ".",
      "split",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "\n",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      138,
      14,
      26,
      109,
      465,
      202,
      5,
      90,
      465
    ],
    "code_indx_copy": [
      34,
      22,
      172,
      1,
      17,
      22,
      71,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      172,
      1,
      17,
      22,
      71,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "split",
      "a",
      "string",
      "var_0",
      "with",
      "new",
      "line",
      "character"
    ],
    "code": [
      "var_0",
      ".",
      "split",
      "(",
      "'\\n'",
      ")",
      "[",
      ":",
      "-",
      "1",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      138,
      3,
      14,
      26,
      79,
      192,
      172,
      202
    ],
    "code_indx_copy": [
      34,
      22,
      71,
      1,
      133,
      17,
      12,
      13,
      14,
      15,
      16
    ],
    "code_indx_nocopy": [
      34,
      22,
      71,
      1,
      133,
      17,
      12,
      13,
      14,
      15,
      16
    ]
  },
  {
    "intent": [
      "return",
      "http",
      "status",
      "code",
      "204",
      "from",
      "a",
      "django",
      "view"
    ],
    "code": [
      "return",
      "HttpResponse",
      "(",
      "status",
      "=",
      "204",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      160,
      343,
      436,
      293,
      465,
      58,
      3,
      87,
      465
    ],
    "code_indx_copy": [
      118,
      524,
      1,
      530,
      19,
      532,
      17
    ],
    "code_indx_nocopy": [
      118,
      524,
      1,
      524,
      19,
      524,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "7",
      "is",
      "in",
      "var_0"
    ],
    "code": [
      "7",
      "in",
      "var_0"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      234,
      150,
      340,
      152,
      24,
      26
    ],
    "code_indx_copy": [
      219,
      9,
      34
    ],
    "code_indx_nocopy": [
      219,
      9,
      34
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "str_0",
      "is",
      "in",
      "list",
      "var_0"
    ],
    "code": [
      "'var_0'",
      "in",
      "var_0"
    ],
    "slot_map": {
      "str_0": {
        "value": "a",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      234,
      150,
      5,
      152,
      24,
      4,
      26
    ],
    "code_indx_copy": [
      56,
      9,
      34
    ],
    "code_indx_nocopy": [
      56,
      9,
      34
    ]
  },
  {
    "intent": [
      "sort",
      "list",
      "var_0",
      "by",
      "keys",
      "value",
      "str_0"
    ],
    "code": [
      "sorted",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "itemgetter",
      "(",
      "'str_0'",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "results",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "year",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      117,
      4,
      26,
      44,
      206,
      143,
      5
    ],
    "code_indx_copy": [
      101,
      1,
      34,
      8,
      102,
      19,
      128,
      1,
      29,
      17,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      34,
      8,
      102,
      19,
      128,
      1,
      29,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "current",
      "url",
      "in",
      "selenium",
      "webdriver",
      "var_0"
    ],
    "code": [
      "print",
      "(",
      "var_0",
      ".",
      "current_url",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "browser",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      179,
      102,
      24,
      51,
      332,
      26
    ],
    "code_indx_copy": [
      49,
      1,
      34,
      22,
      524,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      34,
      22,
      524,
      17
    ]
  },
  {
    "intent": [
      "split",
      "string",
      "var_0",
      "with",
      "delimiter",
      "str_0",
      "or",
      "delimiter",
      "str_1"
    ],
    "code": [
      "re",
      ".",
      "split",
      "(",
      "'; |, '",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "str",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": ";",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": ",",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      138,
      14,
      26,
      79,
      329,
      5,
      344,
      329,
      32
    ],
    "code_indx_copy": [
      39,
      22,
      71,
      1,
      524,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      71,
      1,
      524,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "un-escaping",
      "characters",
      "in",
      "a",
      "string",
      "with",
      "python"
    ],
    "code": [
      "\"\"\"\\\\u003Cp\\\\u003E\"\"\"",
      ".",
      "decode",
      "(",
      "'unicode-escape'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      465,
      98,
      24,
      3,
      14,
      79,
      50
    ],
    "code_indx_copy": [
      524,
      22,
      99,
      1,
      463,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      99,
      1,
      463,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "date",
      "string",
      "var_0",
      "in",
      "format",
      "pattern",
      "str_0",
      "into",
      "a",
      "timestamp"
    ],
    "code": [
      "time",
      ".",
      "mktime",
      "(",
      "datetime",
      ".",
      "datetime",
      ".",
      "strptime",
      "(",
      "var_0",
      ",",
      "'str_0'",
      ")",
      ".",
      "timetuple",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "%d/%m/%Y",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      133,
      14,
      26,
      24,
      16,
      54,
      5,
      12,
      3,
      465
    ],
    "code_indx_copy": [
      84,
      22,
      524,
      1,
      27,
      22,
      27,
      22,
      28,
      1,
      34,
      8,
      29,
      17,
      22,
      524,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      84,
      22,
      524,
      1,
      27,
      22,
      27,
      22,
      28,
      1,
      34,
      8,
      29,
      17,
      22,
      524,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "string",
      "str_0",
      "to",
      "an",
      "integer",
      "timestamp"
    ],
    "code": [
      "int",
      "(",
      "datetime",
      ".",
      "datetime",
      ".",
      "strptime",
      "(",
      "'str_0'",
      ",",
      "'%d/%m/%Y'",
      ")",
      ".",
      "strftime",
      "(",
      "'%s'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "01/12/2011",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      14,
      5,
      8,
      225,
      10,
      465
    ],
    "code_indx_copy": [
      20,
      1,
      27,
      22,
      27,
      22,
      28,
      1,
      29,
      8,
      524,
      17,
      22,
      65,
      1,
      524,
      17,
      17
    ],
    "code_indx_nocopy": [
      20,
      1,
      27,
      22,
      27,
      22,
      28,
      1,
      29,
      8,
      524,
      17,
      22,
      65,
      1,
      524,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "http",
      "header",
      "of",
      "the",
      "key",
      "str_0",
      "in",
      "flask"
    ],
    "code": [
      "request",
      ".",
      "headers",
      "[",
      "'str_0'",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "your-header-name",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      343,
      427,
      2,
      18,
      23,
      5,
      24,
      405
    ],
    "code_indx_copy": [
      233,
      22,
      289,
      12,
      29,
      16
    ],
    "code_indx_nocopy": [
      233,
      22,
      289,
      12,
      29,
      16
    ]
  },
  {
    "intent": [
      "select",
      "records",
      "of",
      "dataframe",
      "var_0",
      "where",
      "the",
      "sum",
      "of",
      "column",
      "str_0",
      "for",
      "each",
      "value",
      "in",
      "column",
      "str_1",
      "is",
      "0"
    ],
    "code": [
      "var_0",
      ".",
      "groupby",
      "(",
      "'str_1'",
      ")",
      "[",
      "'str_0'",
      "]",
      ".",
      "filter",
      "(",
      "lambda",
      "x",
      ":",
      "x",
      ".",
      "sum",
      "(",
      ")",
      "==",
      "0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "X",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "User",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      78,
      374,
      2,
      43,
      26,
      155,
      18,
      112,
      2,
      147,
      5,
      21,
      22,
      143,
      24,
      147,
      32,
      152,
      107
    ],
    "code_indx_copy": [
      34,
      22,
      157,
      1,
      63,
      17,
      12,
      29,
      16,
      22,
      79,
      1,
      44,
      26,
      13,
      26,
      22,
      0,
      1,
      17,
      76,
      43,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      157,
      1,
      63,
      17,
      12,
      29,
      16,
      22,
      79,
      1,
      44,
      26,
      13,
      26,
      22,
      0,
      1,
      17,
      76,
      43,
      17
    ]
  },
  {
    "intent": [
      "get",
      "data",
      "of",
      "dataframe",
      "var_0",
      "where",
      "the",
      "sum",
      "of",
      "column",
      "str_0",
      "grouped",
      "by",
      "column",
      "str_1",
      "is",
      "equal",
      "to",
      "0"
    ],
    "code": [
      "var_0",
      ".",
      "loc",
      "[",
      "var_0",
      ".",
      "groupby",
      "(",
      "'str_1'",
      ")",
      "[",
      "'str_0'",
      "]",
      ".",
      "transform",
      "(",
      "sum",
      ")",
      "==",
      "0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "X",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "User",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      65,
      2,
      43,
      26,
      155,
      18,
      112,
      2,
      147,
      5,
      114,
      44,
      147,
      32,
      152,
      106,
      8,
      107
    ],
    "code_indx_copy": [
      34,
      22,
      202,
      12,
      34,
      22,
      157,
      1,
      63,
      17,
      12,
      29,
      16,
      22,
      518,
      1,
      0,
      17,
      76,
      43,
      16
    ],
    "code_indx_nocopy": [
      34,
      22,
      202,
      12,
      34,
      22,
      157,
      1,
      63,
      17,
      12,
      29,
      16,
      22,
      518,
      1,
      0,
      17,
      76,
      43,
      16
    ]
  },
  {
    "intent": [
      "get",
      "data",
      "from",
      "dataframe",
      "var_0",
      "where",
      "column",
      "str_0",
      "is",
      "equal",
      "to",
      "0"
    ],
    "code": [
      "var_0",
      ".",
      "groupby",
      "(",
      "'User'",
      ")",
      "[",
      "'str_0'",
      "]",
      ".",
      "transform",
      "(",
      "sum",
      ")",
      "==",
      "0"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "X",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      65,
      58,
      43,
      26,
      155,
      147,
      5,
      152,
      106,
      8,
      107
    ],
    "code_indx_copy": [
      34,
      22,
      157,
      1,
      524,
      17,
      12,
      29,
      16,
      22,
      518,
      1,
      0,
      17,
      76,
      43
    ],
    "code_indx_nocopy": [
      34,
      22,
      157,
      1,
      524,
      17,
      12,
      29,
      16,
      22,
      518,
      1,
      0,
      17,
      76,
      43
    ]
  },
  {
    "intent": [
      "how",
      "do",
      "i",
      "find",
      "an",
      "element",
      "that",
      "contains",
      "specific",
      "text",
      "in",
      "selenium",
      "webdriver",
      "(",
      "python",
      ")",
      "?"
    ],
    "code": [
      "driver",
      ".",
      "find_elements_by_xpath",
      "(",
      "\"//*[contains(text(), 'My Button')]\"",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      77,
      327,
      328,
      47,
      225,
      49,
      195,
      75,
      390,
      267,
      24,
      51,
      332,
      212,
      50,
      27,
      52
    ],
    "code_indx_copy": [
      46,
      22,
      363,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      46,
      22,
      363,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "pandas",
      "group",
      "by",
      "object",
      "to",
      "multi-indexed",
      "dataframe",
      "with",
      "indices",
      "str_0",
      "and",
      "str_1"
    ],
    "code": [
      "df",
      ".",
      "set_index",
      "(",
      "[",
      "'str_0'",
      ",",
      "'str_1'",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "Name",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "Destination",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      42,
      383,
      44,
      15,
      8,
      465,
      43,
      79,
      326,
      5,
      31,
      32
    ],
    "code_indx_copy": [
      149,
      22,
      203,
      1,
      12,
      29,
      8,
      63,
      16,
      17
    ],
    "code_indx_nocopy": [
      149,
      22,
      203,
      1,
      12,
      29,
      8,
      63,
      16,
      17
    ]
  },
  {
    "intent": [
      "coalesce",
      "non-word-characters",
      "in",
      "string",
      "var_0"
    ],
    "code": [
      "print",
      "(",
      "re",
      ".",
      "sub",
      "(",
      "'(\\\\W)\\\\1+'",
      ",",
      "'\\\\1'",
      ",",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      465,
      24,
      14,
      26
    ],
    "code_indx_copy": [
      49,
      1,
      39,
      22,
      40,
      1,
      524,
      8,
      41,
      8,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      39,
      22,
      40,
      1,
      524,
      8,
      41,
      8,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "open",
      "a",
      "file",
      "str_0",
      "under",
      "unix"
    ],
    "code": [
      "os",
      ".",
      "system",
      "(",
      "'start \"$file\"'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "$file",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      284,
      3,
      126,
      5,
      465,
      465
    ],
    "code_indx_copy": [
      113,
      22,
      119,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      119,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "unicode",
      "string",
      "var_0",
      "to",
      "a",
      "str_0",
      "string"
    ],
    "code": [
      "unicodedata",
      ".",
      "normalize",
      "(",
      "'NFKD'",
      ",",
      "var_0",
      ")",
      ".",
      "encode",
      "(",
      "'str_0'",
      ",",
      "'ignore'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "title",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "ascii",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      3,
      230,
      14,
      26,
      8,
      3,
      5,
      14
    ],
    "code_indx_copy": [
      275,
      22,
      524,
      1,
      524,
      8,
      34,
      17,
      22,
      239,
      1,
      29,
      8,
      144,
      17
    ],
    "code_indx_nocopy": [
      275,
      22,
      524,
      1,
      524,
      8,
      34,
      17,
      22,
      239,
      1,
      29,
      8,
      144,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "unicode",
      "string",
      "var_0",
      "to",
      "a",
      "str_0",
      "string"
    ],
    "code": [
      "var_0",
      ".",
      "encode",
      "(",
      "'str_0'",
      ",",
      "'ignore'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "ascii",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      11,
      3,
      230,
      14,
      26,
      8,
      3,
      5,
      14
    ],
    "code_indx_copy": [
      34,
      22,
      239,
      1,
      29,
      8,
      144,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      239,
      1,
      29,
      8,
      144,
      17
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "list",
      "var_0",
      "containing",
      "all",
      "files",
      "in",
      "directory",
      "str_0",
      "that",
      "starts",
      "with",
      "numbers",
      "between",
      "0",
      "and",
      "9",
      "and",
      "ends",
      "with",
      "the",
      "extension",
      "str_1"
    ],
    "code": [
      "var_0",
      "=",
      "[",
      "f",
      "for",
      "f",
      "in",
      "os",
      ".",
      "listdir",
      "(",
      "'str_0'",
      ")",
      "if",
      "re",
      ".",
      "match",
      "(",
      "'[0-9]+.*\\\\.jpg'",
      ",",
      "f",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "files",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": ".",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": ".jpg",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      148,
      3,
      4,
      26,
      34,
      38,
      245,
      24,
      175,
      5,
      195,
      439,
      79,
      97,
      278,
      107,
      31,
      403,
      31,
      173,
      79,
      18,
      465,
      32
    ],
    "code_indx_copy": [
      34,
      19,
      12,
      190,
      7,
      190,
      9,
      113,
      22,
      198,
      1,
      29,
      17,
      67,
      39,
      22,
      123,
      1,
      524,
      8,
      190,
      17,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      12,
      190,
      7,
      190,
      9,
      113,
      22,
      198,
      1,
      29,
      17,
      67,
      39,
      22,
      123,
      1,
      524,
      8,
      190,
      17,
      16
    ]
  },
  {
    "intent": [
      "adding",
      "a",
      "1-d",
      "array",
      "str_0",
      "to",
      "a",
      "3-d",
      "array",
      "str_1"
    ],
    "code": [
      "np",
      ".",
      "zeros",
      "(",
      "(",
      "6",
      ",",
      "9",
      ",",
      "20",
      ")",
      ")",
      "+",
      "np",
      ".",
      "array",
      "(",
      "[",
      "str_0",
      "]",
      ")",
      "[",
      "(",
      "None",
      ")",
      ",",
      ":",
      ",",
      "(",
      "None",
      ")",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "[1, 2, 3, 4, 5, 6, 7, 8, 9]",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": "np.zeros((6, 9, 20))",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "[1, 2, 3, 4, 5, 6, 7, 8, 9]",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      3,
      465,
      85,
      5,
      8,
      3,
      465,
      85,
      32
    ],
    "code_indx_copy": [
      74,
      22,
      512,
      1,
      1,
      249,
      8,
      371,
      8,
      351,
      17,
      17,
      96,
      74,
      22,
      175,
      1,
      12,
      11,
      16,
      17,
      12,
      1,
      209,
      17,
      8,
      13,
      8,
      1,
      209,
      17,
      16
    ],
    "code_indx_nocopy": [
      74,
      22,
      512,
      1,
      1,
      249,
      8,
      371,
      8,
      351,
      17,
      17,
      96,
      74,
      22,
      175,
      1,
      12,
      11,
      16,
      17,
      12,
      1,
      209,
      17,
      8,
      13,
      8,
      1,
      209,
      17,
      16
    ]
  },
  {
    "intent": [
      "add",
      "array",
      "of",
      "shape",
      "str_0",
      "to",
      "array",
      "str_1"
    ],
    "code": [
      "np",
      ".",
      "zeros",
      "(",
      "(",
      "str_0",
      ")",
      ")",
      "+",
      "np",
      ".",
      "array",
      "(",
      "[",
      "str_1",
      "]",
      ")",
      ".",
      "reshape",
      "(",
      "(",
      "1",
      ",",
      "9",
      ",",
      "1",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "(6, 9, 20)",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": "[1, 2, 3, 4, 5, 6, 7, 8, 9]",
        "quote": "`",
        "type": "str"
      },
      "(str_0)": {
        "value": "(6, 9, 20)",
        "quote": "`",
        "type": "str"
      },
      "[str_1]": {
        "value": "[1, 2, 3, 4, 5, 6, 7, 8, 9]",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      60,
      85,
      2,
      465,
      5,
      8,
      85,
      32
    ],
    "code_indx_copy": [
      74,
      22,
      512,
      1,
      1,
      11,
      17,
      17,
      96,
      74,
      22,
      175,
      1,
      12,
      37,
      16,
      17,
      22,
      361,
      1,
      1,
      15,
      8,
      371,
      8,
      15,
      17,
      17
    ],
    "code_indx_nocopy": [
      74,
      22,
      512,
      1,
      1,
      11,
      17,
      17,
      96,
      74,
      22,
      175,
      1,
      12,
      37,
      16,
      17,
      22,
      361,
      1,
      1,
      15,
      8,
      371,
      8,
      15,
      17,
      17
    ]
  },
  {
    "intent": [
      "how",
      "can",
      "i",
      "launch",
      "an",
      "instance",
      "of",
      "an",
      "application",
      "using",
      "python",
      "?"
    ],
    "code": [
      "os",
      ".",
      "system",
      "(",
      "'start excel.exe <path/to/file>'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      77,
      386,
      328,
      465,
      225,
      465,
      2,
      225,
      465,
      109,
      50,
      52
    ],
    "code_indx_copy": [
      113,
      22,
      119,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      119,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "list",
      "with",
      "the",
      "highest",
      "sum",
      "value",
      "in",
      "list",
      "var_0"
    ],
    "code": [
      "print",
      "(",
      "max",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "sum",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "x",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      18,
      4,
      79,
      18,
      465,
      112,
      143,
      24,
      4,
      26
    ],
    "code_indx_copy": [
      49,
      1,
      179,
      1,
      34,
      8,
      102,
      19,
      0,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      179,
      1,
      34,
      8,
      102,
      19,
      0,
      17,
      17
    ]
  },
  {
    "intent": [
      "sum",
      "the",
      "length",
      "of",
      "lists",
      "in",
      "list",
      "var_0",
      "that",
      "are",
      "more",
      "than",
      "1",
      "item",
      "in",
      "length"
    ],
    "code": [
      "sum",
      "(",
      "len",
      "(",
      "y",
      ")",
      "for",
      "y",
      "in",
      "var_0",
      "if",
      "len",
      "(",
      "y",
      ")",
      ">",
      "1",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "x",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      112,
      18,
      209,
      2,
      30,
      24,
      4,
      26,
      195,
      243,
      425,
      264,
      237,
      156,
      24,
      209
    ],
    "code_indx_copy": [
      0,
      1,
      32,
      1,
      103,
      17,
      7,
      103,
      9,
      34,
      67,
      32,
      1,
      103,
      17,
      214,
      15,
      17
    ],
    "code_indx_nocopy": [
      0,
      1,
      32,
      1,
      103,
      17,
      7,
      103,
      9,
      34,
      67,
      32,
      1,
      103,
      17,
      214,
      15,
      17
    ]
  },
  {
    "intent": [
      "enclose",
      "numbers",
      "in",
      "quotes",
      "in",
      "a",
      "string",
      "str_0"
    ],
    "code": [
      "re",
      ".",
      "sub",
      "(",
      "'(\\\\d+)'",
      ",",
      "'\"\\\\1\"'",
      ",",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "This is number 1 and this is number 22",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      97,
      24,
      465,
      24,
      3,
      14,
      5
    ],
    "code_indx_copy": [
      39,
      22,
      40,
      1,
      524,
      8,
      524,
      8,
      29,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      40,
      1,
      524,
      8,
      524,
      8,
      29,
      17
    ]
  },
  {
    "intent": [
      "multiply",
      "the",
      "columns",
      "of",
      "sparse",
      "matrix",
      "var_0",
      "by",
      "array",
      "var_1",
      "then",
      "multiply",
      "the",
      "rows",
      "of",
      "the",
      "resulting",
      "matrix",
      "by",
      "array",
      "var_1"
    ],
    "code": [
      "numpy",
      ".",
      "dot",
      "(",
      "numpy",
      ".",
      "dot",
      "(",
      "var_2",
      ",",
      "var_0",
      ")",
      ",",
      "var_2",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "m",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      396,
      18,
      61,
      2,
      465,
      189,
      26,
      44,
      85,
      63,
      260,
      396,
      18,
      80,
      2,
      18,
      353,
      189,
      44,
      85,
      63
    ],
    "code_indx_copy": [
      147,
      22,
      305,
      1,
      147,
      22,
      305,
      1,
      94,
      8,
      34,
      17,
      8,
      94,
      17
    ],
    "code_indx_nocopy": [
      147,
      22,
      305,
      1,
      147,
      22,
      305,
      1,
      94,
      8,
      34,
      17,
      8,
      94,
      17
    ]
  },
  {
    "intent": [
      "django",
      "check",
      "if",
      "an",
      "object",
      "with",
      "criteria",
      "var_0",
      "equal",
      "to",
      "str_0",
      "and",
      "criteria",
      "var_1",
      "equal",
      "to",
      "str_1",
      "exists",
      "in",
      "model",
      "var_2"
    ],
    "code": [
      "var_2",
      ".",
      "objects",
      ".",
      "filter",
      "(",
      "str_0",
      "=",
      "'str_0'",
      ",",
      "str_1",
      "=",
      "'str_1'",
      ")",
      ".",
      "exists",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "name",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "name",
        "quote": "'",
        "type": "str"
      },
      "var_1": {
        "value": "title",
        "quote": "`",
        "type": "var"
      },
      "str_1": {
        "value": "title",
        "quote": "'",
        "type": "str"
      },
      "var_2": {
        "value": "Entry",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      87,
      234,
      150,
      225,
      15,
      79,
      465,
      26,
      106,
      8,
      5,
      31,
      465,
      63,
      106,
      8,
      32,
      274,
      24,
      313,
      64
    ],
    "code_indx_copy": [
      94,
      22,
      78,
      22,
      79,
      1,
      11,
      19,
      29,
      8,
      37,
      19,
      63,
      17,
      22,
      434,
      1,
      17
    ],
    "code_indx_nocopy": [
      94,
      22,
      78,
      22,
      79,
      1,
      11,
      19,
      29,
      8,
      37,
      19,
      63,
      17,
      22,
      434,
      1,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "nested",
      "list",
      "by",
      "the",
      "inverse",
      "of",
      "element",
      "2",
      ",",
      "then",
      "by",
      "element",
      "1"
    ],
    "code": [
      "sorted",
      "(",
      "l",
      ",",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "(",
      "-",
      "int",
      "(",
      "x",
      "[",
      "1",
      "]",
      ")",
      ",",
      "x",
      "[",
      "0",
      "]",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      117,
      3,
      154,
      4,
      44,
      18,
      465,
      2,
      49,
      82,
      62,
      260,
      44,
      49,
      237
    ],
    "code_indx_copy": [
      101,
      1,
      431,
      8,
      102,
      19,
      44,
      26,
      13,
      1,
      14,
      20,
      1,
      26,
      12,
      15,
      16,
      17,
      8,
      26,
      12,
      43,
      16,
      17,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      431,
      8,
      102,
      19,
      44,
      26,
      13,
      1,
      14,
      20,
      1,
      26,
      12,
      15,
      16,
      17,
      8,
      26,
      12,
      43,
      16,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "domain/host",
      "name",
      "from",
      "request",
      "object",
      "in",
      "django"
    ],
    "code": [
      "request",
      ".",
      "META",
      "[",
      "'HTTP_HOST'",
      "]"
    ],
    "slot_map": {},
    "intent_indx": [
      17,
      465,
      129,
      58,
      101,
      15,
      24,
      87
    ],
    "code_indx_copy": [
      233,
      22,
      524,
      12,
      524,
      16
    ],
    "code_indx_nocopy": [
      233,
      22,
      524,
      12,
      524,
      16
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "string",
      "var_0",
      "between",
      "two",
      "substrings",
      "in",
      "a",
      "string",
      "str_0",
      "using",
      "regex"
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "\"api\\\\('(.*?)'\"",
      ",",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "randomkey123xyz987",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "api('randomkey123xyz987', 'key', 'text')",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      3,
      14,
      26,
      278,
      29,
      410,
      24,
      3,
      14,
      5,
      109,
      40
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      524,
      8,
      29,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      524,
      8,
      29,
      17
    ]
  },
  {
    "intent": [
      "invoke",
      "perl",
      "script",
      "str_0",
      "using",
      "perl",
      "interpeter",
      "str_1",
      "and",
      "send",
      "argument",
      "var_0",
      "to",
      "it"
    ],
    "code": [
      "subprocess",
      ".",
      "call",
      "(",
      "[",
      "'str_1'",
      ",",
      "'str_0'",
      ",",
      "var_0",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "./uireplace.pl",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "/usr/bin/perl",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "var",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      465,
      246,
      5,
      109,
      465,
      465,
      32,
      31,
      465,
      465,
      26,
      8,
      145
    ],
    "code_indx_copy": [
      229,
      22,
      230,
      1,
      12,
      63,
      8,
      29,
      8,
      34,
      16,
      17
    ],
    "code_indx_nocopy": [
      229,
      22,
      230,
      1,
      12,
      63,
      8,
      29,
      8,
      34,
      16,
      17
    ]
  },
  {
    "intent": [
      "print",
      "list",
      "of",
      "items",
      "var_0"
    ],
    "code": [
      "print",
      "(",
      "'\\n'",
      ".",
      "join",
      "(",
      "str",
      "(",
      "p",
      ")",
      "for",
      "p",
      "in",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "myList",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      166,
      4,
      2,
      39,
      26
    ],
    "code_indx_copy": [
      49,
      1,
      133,
      22,
      23,
      1,
      25,
      1,
      435,
      17,
      7,
      435,
      9,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      133,
      22,
      23,
      1,
      25,
      1,
      435,
      17,
      7,
      435,
      9,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "update",
      "the",
      "dictionary",
      "var_0",
      "with",
      "dynamic",
      "keys",
      "var_1",
      "and",
      "values",
      "with",
      "key",
      "str_0",
      "from",
      "dictionary",
      "var_2"
    ],
    "code": [
      "var_0",
      ".",
      "update",
      "(",
      "{",
      "var_1",
      ":",
      "var_2",
      "[",
      "'str_0'",
      "]",
      "}",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "mydic",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "i",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "name",
        "quote": "'",
        "type": "str"
      },
      "var_2": {
        "value": "o",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      242,
      18,
      25,
      26,
      79,
      465,
      206,
      63,
      31,
      20,
      79,
      23,
      5,
      58,
      25,
      64
    ],
    "code_indx_copy": [
      34,
      22,
      69,
      1,
      52,
      91,
      13,
      94,
      12,
      29,
      16,
      53,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      69,
      1,
      52,
      91,
      13,
      94,
      12,
      29,
      16,
      53,
      17
    ]
  },
  {
    "intent": [
      "split",
      "a",
      "str_0",
      "encoded",
      "string",
      "var_0",
      "into",
      "a",
      "list",
      "of",
      "characters"
    ],
    "code": [
      "list",
      "(",
      "var_0",
      ".",
      "decode",
      "(",
      "'str_0'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "utf-8",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "stru",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      138,
      3,
      5,
      296,
      14,
      26,
      12,
      3,
      4,
      2,
      98
    ],
    "code_indx_copy": [
      33,
      1,
      34,
      22,
      99,
      1,
      29,
      17,
      17
    ],
    "code_indx_nocopy": [
      33,
      1,
      34,
      22,
      99,
      1,
      29,
      17,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "utf-8",
      "with",
      "bom",
      "string",
      "var_0",
      "to",
      "utf-8",
      "with",
      "no",
      "bom",
      "var_1"
    ],
    "code": [
      "var_1",
      "=",
      "var_0",
      ".",
      "decode",
      "(",
      "'utf-8-sig'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "u",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      183,
      79,
      465,
      14,
      26,
      8,
      183,
      79,
      465,
      465,
      63
    ],
    "code_indx_copy": [
      91,
      19,
      34,
      22,
      99,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      91,
      19,
      34,
      22,
      99,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "filter",
      "model",
      "str_0",
      "where",
      "str_1",
      "is",
      "not",
      "equal",
      "to",
      "3",
      "in",
      "django"
    ],
    "code": [
      "str_0",
      ".",
      "objects",
      ".",
      "filter",
      "(",
      "~",
      "Q",
      "(",
      "str_1",
      "=",
      "3",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "Entry",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "id",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      217,
      313,
      5,
      155,
      32,
      152,
      105,
      106,
      8,
      57,
      24,
      87
    ],
    "code_indx_copy": [
      11,
      22,
      78,
      22,
      79,
      1,
      360,
      524,
      1,
      37,
      19,
      54,
      17,
      17
    ],
    "code_indx_nocopy": [
      11,
      22,
      78,
      22,
      79,
      1,
      360,
      524,
      1,
      37,
      19,
      54,
      17,
      17
    ]
  },
  {
    "intent": [
      "lookup",
      "an",
      "attribute",
      "in",
      "any",
      "scope",
      "by",
      "name",
      "str_0"
    ],
    "code": [
      "getattr",
      "(",
      "__builtins__",
      ",",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "range",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      225,
      341,
      24,
      272,
      465,
      44,
      129,
      5
    ],
    "code_indx_copy": [
      300,
      1,
      524,
      8,
      29,
      17
    ],
    "code_indx_nocopy": [
      300,
      1,
      524,
      8,
      29,
      17
    ]
  },
  {
    "intent": [
      "restart",
      "a",
      "computer",
      "after",
      "str_0",
      "seconds",
      "using",
      "subprocess"
    ],
    "code": [
      "subprocess",
      ".",
      "call",
      "(",
      "[",
      "'shutdown'",
      ",",
      "'/r'",
      ",",
      "'/t'",
      ",",
      "'str_0'",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "900",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      3,
      464,
      201,
      5,
      376,
      109,
      290
    ],
    "code_indx_copy": [
      229,
      22,
      230,
      1,
      12,
      519,
      8,
      524,
      8,
      524,
      8,
      29,
      16,
      17
    ],
    "code_indx_nocopy": [
      229,
      22,
      230,
      1,
      12,
      519,
      8,
      524,
      8,
      524,
      8,
      29,
      16,
      17
    ]
  },
  {
    "intent": [
      "shutdown",
      "a",
      "computer",
      "using",
      "subprocess"
    ],
    "code": [
      "subprocess",
      ".",
      "call",
      "(",
      "[",
      "'shutdown'",
      ",",
      "'/s'",
      "]",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      465,
      3,
      464,
      109,
      290
    ],
    "code_indx_copy": [
      229,
      22,
      230,
      1,
      12,
      519,
      8,
      524,
      16,
      17
    ],
    "code_indx_nocopy": [
      229,
      22,
      230,
      1,
      12,
      519,
      8,
      524,
      16,
      17
    ]
  },
  {
    "intent": [
      "abort",
      "a",
      "computer",
      "shutdown",
      "using",
      "subprocess"
    ],
    "code": [
      "subprocess",
      ".",
      "call",
      "(",
      "[",
      "'shutdown'",
      ",",
      "'/a '",
      "]",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      465,
      3,
      464,
      465,
      109,
      290
    ],
    "code_indx_copy": [
      229,
      22,
      230,
      1,
      12,
      519,
      8,
      524,
      16,
      17
    ],
    "code_indx_nocopy": [
      229,
      22,
      230,
      1,
      12,
      519,
      8,
      524,
      16,
      17
    ]
  },
  {
    "intent": [
      "logoff",
      "computer",
      "having",
      "windows",
      "operating",
      "system",
      "using",
      "python"
    ],
    "code": [
      "subprocess",
      ".",
      "call",
      "(",
      "[",
      "'shutdown'",
      ",",
      "'/l '",
      "]",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      465,
      464,
      92,
      435,
      465,
      465,
      109,
      50
    ],
    "code_indx_copy": [
      229,
      22,
      230,
      1,
      12,
      519,
      8,
      524,
      16,
      17
    ],
    "code_indx_nocopy": [
      229,
      22,
      230,
      1,
      12,
      519,
      8,
      524,
      16,
      17
    ]
  },
  {
    "intent": [
      "shutdown",
      "and",
      "restart",
      "a",
      "computer",
      "running",
      "windows",
      "from",
      "script"
    ],
    "code": [
      "subprocess",
      ".",
      "call",
      "(",
      "[",
      "'shutdown'",
      ",",
      "'/r'",
      "]",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      465,
      31,
      465,
      3,
      464,
      465,
      435,
      58,
      246
    ],
    "code_indx_copy": [
      229,
      22,
      230,
      1,
      12,
      519,
      8,
      524,
      16,
      17
    ],
    "code_indx_nocopy": [
      229,
      22,
      230,
      1,
      12,
      519,
      8,
      524,
      16,
      17
    ]
  },
  {
    "intent": [
      "erase",
      "the",
      "contents",
      "of",
      "a",
      "file",
      "var_0"
    ],
    "code": [
      "open",
      "(",
      "'var_0'",
      ",",
      "'w'",
      ")",
      ".",
      "close",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "filename",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      18,
      125,
      2,
      3,
      126,
      26
    ],
    "code_indx_copy": [
      105,
      1,
      56,
      8,
      497,
      17,
      22,
      506,
      1,
      17
    ],
    "code_indx_nocopy": [
      105,
      1,
      56,
      8,
      497,
      17,
      22,
      506,
      1,
      17
    ]
  },
  {
    "intent": [
      "how",
      "to",
      "erase",
      "the",
      "file",
      "contents",
      "of",
      "text",
      "file",
      "in",
      "python",
      "?"
    ],
    "code": [
      "open",
      "(",
      "'file.txt'",
      ",",
      "'w'",
      ")",
      ".",
      "close",
      "(",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      77,
      8,
      465,
      18,
      126,
      125,
      2,
      267,
      126,
      24,
      50,
      52
    ],
    "code_indx_copy": [
      105,
      1,
      524,
      8,
      497,
      17,
      22,
      506,
      1,
      17
    ],
    "code_indx_nocopy": [
      105,
      1,
      524,
      8,
      497,
      17,
      22,
      506,
      1,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "dataframe",
      "var_0",
      "to",
      "list",
      "of",
      "dictionaries",
      "including",
      "the",
      "index",
      "values"
    ],
    "code": [
      "var_0",
      ".",
      "to_dict",
      "(",
      "'index'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      43,
      26,
      8,
      4,
      2,
      188,
      213,
      18,
      37,
      20
    ],
    "code_indx_copy": [
      34,
      22,
      447,
      1,
      495,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      447,
      1,
      495,
      17
    ]
  },
  {
    "intent": [
      "create",
      "list",
      "of",
      "dictionaries",
      "from",
      "pandas",
      "dataframe",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "to_dict",
      "(",
      "'records'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      148,
      4,
      2,
      188,
      58,
      42,
      43,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      447,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      447,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "group",
      "a",
      "pandas",
      "data",
      "frame",
      "by",
      "monthly",
      "frequenct",
      "var_0",
      "using",
      "groupby"
    ],
    "code": [
      "df",
      ".",
      "groupby",
      "(",
      "pd",
      ".",
      "TimeGrouper",
      "(",
      "freq",
      "=",
      "'var_0'",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "M",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      383,
      3,
      42,
      65,
      66,
      44,
      465,
      465,
      26,
      109,
      404
    ],
    "code_indx_copy": [
      149,
      22,
      157,
      1,
      162,
      22,
      524,
      1,
      524,
      19,
      56,
      17,
      17
    ],
    "code_indx_nocopy": [
      149,
      22,
      157,
      1,
      162,
      22,
      524,
      1,
      524,
      19,
      56,
      17,
      17
    ]
  },
  {
    "intent": [
      "divide",
      "the",
      "members",
      "of",
      "a",
      "list",
      "var_0",
      "by",
      "the",
      "corresponding",
      "members",
      "of",
      "another",
      "list",
      "var_1"
    ],
    "code": [
      "[",
      "(",
      "c",
      "/",
      "t",
      ")",
      "for",
      "c",
      ",",
      "t",
      "in",
      "zip",
      "(",
      "var_0",
      ",",
      "var_1",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "conversions",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "trials",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      127,
      18,
      465,
      2,
      3,
      4,
      26,
      44,
      18,
      347,
      465,
      2,
      176,
      4,
      63
    ],
    "code_indx_copy": [
      12,
      1,
      66,
      31,
      45,
      17,
      7,
      66,
      8,
      45,
      9,
      36,
      1,
      34,
      8,
      91,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      1,
      66,
      31,
      45,
      17,
      7,
      66,
      8,
      45,
      9,
      36,
      1,
      34,
      8,
      91,
      17,
      16
    ]
  },
  {
    "intent": [
      "sort",
      "dict",
      "var_0",
      "by",
      "value"
    ],
    "code": [
      "sorted",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "var_0",
      ".",
      "get",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "data",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      186,
      26,
      44,
      143
    ],
    "code_indx_copy": [
      101,
      1,
      34,
      8,
      102,
      19,
      34,
      22,
      86,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      34,
      8,
      102,
      19,
      34,
      22,
      86,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "dictionary",
      "var_0",
      "by",
      "its",
      "values"
    ],
    "code": [
      "sorted",
      "(",
      "var_0",
      ".",
      "values",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "data",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      3,
      25,
      26,
      44,
      91,
      20
    ],
    "code_indx_copy": [
      101,
      1,
      34,
      22,
      166,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      34,
      22,
      166,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "list",
      "of",
      "pairs",
      "of",
      "key-value",
      "sorted",
      "by",
      "values",
      "in",
      "dictionary",
      "var_0"
    ],
    "code": [
      "sorted",
      "(",
      "list",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      ",",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "x",
      "[",
      "1",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "data",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      3,
      4,
      2,
      187,
      2,
      422,
      224,
      44,
      20,
      24,
      25,
      26
    ],
    "code_indx_copy": [
      101,
      1,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      8,
      102,
      19,
      44,
      26,
      13,
      26,
      12,
      15,
      16,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      8,
      102,
      19,
      44,
      26,
      13,
      26,
      12,
      15,
      16,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "dict",
      "by",
      "value",
      "python"
    ],
    "code": [
      "sorted",
      "(",
      "list",
      "(",
      "data",
      ".",
      "items",
      "(",
      ")",
      ")",
      ",",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "x",
      "[",
      "1",
      "]",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      117,
      186,
      44,
      143,
      50
    ],
    "code_indx_copy": [
      101,
      1,
      33,
      1,
      135,
      22,
      35,
      1,
      17,
      17,
      8,
      102,
      19,
      44,
      26,
      13,
      26,
      12,
      15,
      16,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      33,
      1,
      135,
      22,
      35,
      1,
      17,
      17,
      8,
      102,
      19,
      44,
      26,
      13,
      26,
      12,
      15,
      16,
      17
    ]
  },
  {
    "intent": [
      "display",
      "current",
      "time"
    ],
    "code": [
      "now",
      "=",
      "datetime",
      ".",
      "datetime",
      ".",
      "now",
      "(",
      ")",
      ".",
      "strftime",
      "(",
      "'%H:%M:%S'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      363,
      179,
      134
    ],
    "code_indx_copy": [
      294,
      19,
      27,
      22,
      27,
      22,
      294,
      1,
      17,
      22,
      65,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      294,
      19,
      27,
      22,
      27,
      22,
      294,
      1,
      17,
      22,
      65,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "find",
      "the",
      "index",
      "of",
      "the",
      "second",
      "occurrence",
      "of",
      "the",
      "substring",
      "var_0",
      "in",
      "string",
      "str_0"
    ],
    "code": [
      "\"\"\"str_0\"\"\"",
      ".",
      "replace",
      "(",
      "'var_0'",
      ",",
      "'XXX'",
      ",",
      "1",
      ")",
      ".",
      "find",
      "(",
      "'var_0'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "bar",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "foo bar bar bar",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      47,
      18,
      37,
      2,
      18,
      118,
      364,
      2,
      18,
      354,
      26,
      24,
      14,
      5
    ],
    "code_indx_copy": [
      212,
      22,
      107,
      1,
      56,
      8,
      524,
      8,
      15,
      17,
      22,
      282,
      1,
      56,
      17
    ],
    "code_indx_nocopy": [
      212,
      22,
      107,
      1,
      56,
      8,
      524,
      8,
      15,
      17,
      22,
      282,
      1,
      56,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "key",
      "str_0",
      "and",
      "key",
      "str_1",
      "are",
      "presented",
      "in",
      "dictionary",
      "var_0"
    ],
    "code": [
      "set",
      "(",
      "[",
      "'str_0'",
      ",",
      "'str_1'",
      "]",
      ")",
      ".",
      "issubset",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "stackoverflow",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "google",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "sites",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      234,
      150,
      23,
      5,
      31,
      23,
      32,
      243,
      465,
      24,
      25,
      26
    ],
    "code_indx_copy": [
      189,
      1,
      12,
      29,
      8,
      63,
      16,
      17,
      22,
      191,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      189,
      1,
      12,
      29,
      8,
      63,
      16,
      17,
      22,
      191,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "replace",
      "string",
      "str_0",
      "in",
      "string",
      "var_0",
      "with",
      "character",
      "str_1"
    ],
    "code": [
      "var_0",
      ".",
      "replace",
      "(",
      "' and '",
      ",",
      "'str_1'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "and",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "stuff",
        "quote": "`",
        "type": "var"
      },
      "str_1": {
        "value": "/",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      130,
      14,
      5,
      24,
      14,
      26,
      79,
      202,
      32
    ],
    "code_indx_copy": [
      34,
      22,
      107,
      1,
      524,
      8,
      63,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      107,
      1,
      524,
      8,
      63,
      17
    ]
  },
  {
    "intent": [
      "save",
      "array",
      "at",
      "index",
      "0",
      ",",
      "index",
      "1",
      "and",
      "index",
      "8",
      "of",
      "array",
      "var_0",
      "to",
      "tmp",
      "file",
      "var_1"
    ],
    "code": [
      "var_0",
      ".",
      "savez",
      "(",
      "var_1",
      ",",
      "*",
      "[",
      "getarray",
      "[",
      "0",
      "]",
      ",",
      "getarray",
      "[",
      "1",
      "]",
      ",",
      "getarray",
      "[",
      "8",
      "]",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "np",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "tmp",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      333,
      85,
      35,
      37,
      107,
      62,
      37,
      237,
      31,
      37,
      453,
      2,
      85,
      26,
      8,
      465,
      126,
      63
    ],
    "code_indx_copy": [
      34,
      22,
      524,
      1,
      91,
      8,
      3,
      12,
      520,
      12,
      43,
      16,
      8,
      520,
      12,
      15,
      16,
      8,
      520,
      12,
      501,
      16,
      16,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      524,
      1,
      91,
      8,
      3,
      12,
      520,
      12,
      43,
      16,
      8,
      520,
      12,
      15,
      16,
      8,
      520,
      12,
      501,
      16,
      16,
      17
    ]
  },
  {
    "intent": [
      "substract",
      "1",
      "hour",
      "and",
      "10",
      "minutes",
      "from",
      "current",
      "time"
    ],
    "code": [
      "t",
      "=",
      "datetime",
      ".",
      "datetime",
      ".",
      "now",
      "(",
      ")",
      "\n",
      "t",
      "-",
      "datetime",
      ".",
      "timedelta",
      "(",
      "hours",
      "=",
      "1",
      ",",
      "minutes",
      "=",
      "10",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      465,
      237,
      465,
      31,
      351,
      465,
      58,
      179,
      134
    ],
    "code_indx_copy": [
      45,
      19,
      27,
      22,
      27,
      22,
      294,
      1,
      17,
      161,
      45,
      14,
      27,
      22,
      295,
      1,
      297,
      19,
      15,
      8,
      533,
      19,
      4,
      17
    ],
    "code_indx_nocopy": [
      45,
      19,
      27,
      22,
      27,
      22,
      294,
      1,
      17,
      161,
      45,
      14,
      27,
      22,
      295,
      1,
      297,
      19,
      15,
      8,
      524,
      19,
      4,
      17
    ]
  },
  {
    "intent": [
      "subtract",
      "1",
      "hour",
      "and",
      "10",
      "minutes",
      "from",
      "time",
      "object",
      "var_0"
    ],
    "code": [
      "var_0",
      "-",
      "datetime",
      ".",
      "timedelta",
      "(",
      "hours",
      "=",
      "1",
      ",",
      "minutes",
      "=",
      "10",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "t",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      418,
      237,
      465,
      31,
      351,
      465,
      58,
      134,
      15,
      26
    ],
    "code_indx_copy": [
      34,
      14,
      27,
      22,
      295,
      1,
      297,
      19,
      15,
      8,
      533,
      19,
      4,
      17
    ],
    "code_indx_nocopy": [
      34,
      14,
      27,
      22,
      295,
      1,
      297,
      19,
      15,
      8,
      524,
      19,
      4,
      17
    ]
  },
  {
    "intent": [
      "add",
      "1",
      "hour",
      "and",
      "2",
      "minutes",
      "to",
      "time",
      "object",
      "var_0"
    ],
    "code": [
      "dt",
      "=",
      "datetime",
      ".",
      "datetime",
      ".",
      "combine",
      "(",
      "datetime",
      ".",
      "date",
      ".",
      "today",
      "(",
      ")",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "t",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      60,
      237,
      465,
      31,
      82,
      465,
      8,
      134,
      15,
      26
    ],
    "code_indx_copy": [
      391,
      19,
      27,
      22,
      27,
      22,
      110,
      1,
      27,
      22,
      139,
      22,
      137,
      1,
      17,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      391,
      19,
      27,
      22,
      27,
      22,
      110,
      1,
      27,
      22,
      139,
      22,
      137,
      1,
      17,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "subtract",
      "5",
      "hours",
      "from",
      "the",
      "time",
      "object",
      "var_0"
    ],
    "code": [
      "var_0",
      "-=",
      "datetime",
      ".",
      "timedelta",
      "(",
      "hours",
      "=",
      "5",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "dt",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      418,
      232,
      465,
      58,
      18,
      134,
      15,
      26
    ],
    "code_indx_copy": [
      34,
      524,
      27,
      22,
      295,
      1,
      297,
      19,
      185,
      17
    ],
    "code_indx_nocopy": [
      34,
      524,
      27,
      22,
      295,
      1,
      297,
      19,
      185,
      17
    ]
  },
  {
    "intent": [
      "encode",
      "string",
      "var_0",
      "using",
      "hex",
      "str_0",
      "encoding"
    ],
    "code": [
      "print",
      "(",
      "var_0",
      ".",
      "encode",
      "(",
      "'str_0'",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "data",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "hex",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      447,
      14,
      26,
      109,
      116,
      5,
      298
    ],
    "code_indx_copy": [
      49,
      1,
      34,
      22,
      239,
      1,
      29,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      34,
      22,
      239,
      1,
      29,
      17,
      17
    ]
  },
  {
    "intent": [
      "return",
      "the",
      "decimal",
      "value",
      "for",
      "each",
      "hex",
      "character",
      "in",
      "data",
      "var_0"
    ],
    "code": [
      "print",
      "(",
      "' '",
      ".",
      "join",
      "(",
      "[",
      "str",
      "(",
      "ord",
      "(",
      "a",
      ")",
      ")",
      "for",
      "a",
      "in",
      "var_0",
      "]",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "data",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      160,
      18,
      255,
      143,
      21,
      22,
      116,
      202,
      24,
      65,
      26
    ],
    "code_indx_copy": [
      49,
      1,
      108,
      22,
      23,
      1,
      12,
      25,
      1,
      98,
      1,
      95,
      17,
      17,
      7,
      95,
      9,
      34,
      16,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      108,
      22,
      23,
      1,
      12,
      25,
      1,
      98,
      1,
      95,
      17,
      17,
      7,
      95,
      9,
      34,
      16,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "all",
      "the",
      "items",
      "from",
      "a",
      "list",
      "of",
      "tuple",
      "str_0",
      "where",
      "second",
      "item",
      "in",
      "tuple",
      "is",
      "str_1",
      "."
    ],
    "code": [
      "[",
      "x",
      "for",
      "x",
      "in",
      "str_0",
      "if",
      "x",
      "[",
      "1",
      "]",
      "==",
      "1",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "l",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "1",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      38,
      18,
      39,
      58,
      3,
      4,
      2,
      113,
      5,
      155,
      118,
      156,
      24,
      113,
      152,
      32,
      159
    ],
    "code_indx_copy": [
      12,
      26,
      7,
      26,
      9,
      11,
      67,
      26,
      12,
      15,
      16,
      76,
      15,
      16
    ],
    "code_indx_nocopy": [
      12,
      26,
      7,
      26,
      9,
      11,
      67,
      26,
      12,
      15,
      16,
      76,
      15,
      16
    ]
  },
  {
    "intent": [
      "create",
      "array",
      "var_0",
      "containing",
      "integers",
      "from",
      "stdin"
    ],
    "code": [
      "var_0",
      ".",
      "fromlist",
      "(",
      "[",
      "int",
      "(",
      "val",
      ")",
      "for",
      "val",
      "in",
      "stdin",
      ".",
      "read",
      "(",
      ")",
      ".",
      "split",
      "(",
      ")",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      148,
      85,
      26,
      34,
      7,
      58,
      446
    ],
    "code_indx_copy": [
      34,
      22,
      524,
      1,
      12,
      20,
      1,
      176,
      17,
      7,
      176,
      9,
      473,
      22,
      106,
      1,
      17,
      22,
      71,
      1,
      17,
      16,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      524,
      1,
      12,
      20,
      1,
      176,
      17,
      7,
      176,
      9,
      473,
      22,
      106,
      1,
      17,
      22,
      71,
      1,
      17,
      16,
      17
    ]
  },
  {
    "intent": [
      "place",
      "str_0",
      "infront",
      "of",
      "each",
      "non-letter",
      "char",
      "in",
      "string",
      "var_0"
    ],
    "code": [
      "print",
      "(",
      "re",
      ".",
      "sub",
      "(",
      "'[_%^$]'",
      ",",
      "'\\\\\\\\\\\\g<0>'",
      ",",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "line",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      5,
      465,
      2,
      22,
      465,
      465,
      24,
      14,
      26
    ],
    "code_indx_copy": [
      49,
      1,
      39,
      22,
      40,
      1,
      524,
      8,
      524,
      8,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      39,
      22,
      40,
      1,
      524,
      8,
      524,
      8,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "all",
      "var_0",
      "tags",
      "where",
      "the",
      "text",
      "starts",
      "with",
      "value",
      "str_0",
      "using",
      "regex"
    ],
    "code": [
      "doc",
      ".",
      "xpath",
      "(",
      "\"//a[starts-with(text(),'some text')]\"",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "some text",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      17,
      38,
      26,
      392,
      155,
      18,
      267,
      439,
      79,
      143,
      5,
      109,
      40
    ],
    "code_indx_copy": [
      524,
      22,
      446,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      446,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "list",
      "of",
      "lists",
      "var_0",
      "into",
      "list",
      "of",
      "tuples",
      "of",
      "appropriate",
      "elements",
      "form",
      "nested",
      "lists"
    ],
    "code": [
      "zip",
      "(",
      "*",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      3,
      4,
      2,
      30,
      26,
      12,
      4,
      2,
      33,
      2,
      465,
      1,
      149,
      154,
      30
    ],
    "code_indx_copy": [
      36,
      1,
      3,
      34,
      17
    ],
    "code_indx_nocopy": [
      36,
      1,
      3,
      34,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "list",
      "of",
      "strings",
      "var_0",
      "to",
      "list",
      "of",
      "integers"
    ],
    "code": [
      "[",
      "map",
      "(",
      "int",
      ",",
      "sublist",
      ")",
      "for",
      "sublist",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "lst",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      3,
      4,
      2,
      259,
      26,
      8,
      4,
      2,
      7
    ],
    "code_indx_copy": [
      12,
      24,
      1,
      20,
      8,
      428,
      17,
      7,
      428,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      12,
      24,
      1,
      20,
      8,
      428,
      17,
      7,
      428,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "convert",
      "strings",
      "in",
      "list-of-lists",
      "var_0",
      "to",
      "ints"
    ],
    "code": [
      "[",
      "[",
      "int",
      "(",
      "x",
      ")",
      "for",
      "x",
      "in",
      "sublist",
      "]",
      "for",
      "sublist",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "lst",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      259,
      24,
      465,
      26,
      8,
      465
    ],
    "code_indx_copy": [
      12,
      12,
      20,
      1,
      26,
      17,
      7,
      26,
      9,
      428,
      16,
      7,
      428,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      12,
      12,
      20,
      1,
      26,
      17,
      7,
      26,
      9,
      428,
      16,
      7,
      428,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "get",
      "index",
      "of",
      "elements",
      "in",
      "array",
      "var_0",
      "that",
      "occur",
      "in",
      "another",
      "array",
      "var_1"
    ],
    "code": [
      "np",
      ".",
      "where",
      "(",
      "np",
      ".",
      "in1d",
      "(",
      "var_0",
      ",",
      "var_1",
      ")",
      ")",
      "[",
      "0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "A",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "B",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      37,
      2,
      1,
      24,
      85,
      26,
      195,
      465,
      24,
      176,
      85,
      63
    ],
    "code_indx_copy": [
      74,
      22,
      75,
      1,
      74,
      22,
      261,
      1,
      34,
      8,
      91,
      17,
      17,
      12,
      43,
      16
    ],
    "code_indx_nocopy": [
      74,
      22,
      75,
      1,
      74,
      22,
      261,
      1,
      34,
      8,
      91,
      17,
      17,
      12,
      43,
      16
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "list",
      "where",
      "each",
      "element",
      "is",
      "a",
      "dictionary",
      "with",
      "keys",
      "str_0",
      "and",
      "str_1",
      "and",
      "values",
      "corresponding",
      "to",
      "each",
      "value",
      "in",
      "the",
      "lists",
      "referenced",
      "by",
      "keys",
      "str_0",
      "and",
      "str_1",
      "in",
      "dictionary",
      "var_0"
    ],
    "code": [
      "[",
      "{",
      "'str_2'",
      ":",
      "a",
      ",",
      "'str_3'",
      ":",
      "b",
      "}",
      "for",
      "a",
      ",",
      "b",
      "in",
      "zip",
      "(",
      "var_0",
      "[",
      "'str_2'",
      "]",
      ",",
      "var_0",
      "[",
      "'str_3'",
      "]",
      ")",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "key1",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "key2",
        "quote": "'",
        "type": "str"
      },
      "str_2": {
        "value": "key1",
        "quote": "'",
        "type": "str"
      },
      "str_3": {
        "value": "key2",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "d",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      148,
      3,
      4,
      155,
      22,
      49,
      152,
      3,
      25,
      79,
      206,
      5,
      31,
      32,
      31,
      20,
      347,
      8,
      22,
      143,
      24,
      18,
      30,
      465,
      44,
      206,
      5,
      31,
      32,
      24,
      25,
      26
    ],
    "code_indx_copy": [
      12,
      52,
      150,
      13,
      95,
      8,
      173,
      13,
      97,
      53,
      7,
      95,
      8,
      97,
      9,
      36,
      1,
      34,
      12,
      150,
      16,
      8,
      34,
      12,
      173,
      16,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      52,
      150,
      13,
      95,
      8,
      173,
      13,
      97,
      53,
      7,
      95,
      8,
      97,
      9,
      36,
      1,
      34,
      12,
      150,
      16,
      8,
      34,
      12,
      173,
      16,
      17,
      16
    ]
  },
  {
    "intent": [
      "split",
      "dictionary",
      "of",
      "lists",
      "into",
      "list",
      "of",
      "dictionaries"
    ],
    "code": [
      "map",
      "(",
      "dict",
      ",",
      "zip",
      "(",
      "*",
      "[",
      "[",
      "(",
      "k",
      ",",
      "v",
      ")",
      "for",
      "v",
      "in",
      "value",
      "]",
      "for",
      "k",
      ",",
      "value",
      "in",
      "list",
      "(",
      "d",
      ".",
      "items",
      "(",
      ")",
      ")",
      "]",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      138,
      25,
      2,
      30,
      12,
      4,
      2,
      188
    ],
    "code_indx_copy": [
      24,
      1,
      70,
      8,
      36,
      1,
      3,
      12,
      12,
      1,
      89,
      8,
      90,
      17,
      7,
      90,
      9,
      151,
      16,
      7,
      89,
      8,
      151,
      9,
      33,
      1,
      2,
      22,
      35,
      1,
      17,
      17,
      16,
      17,
      17
    ],
    "code_indx_nocopy": [
      24,
      1,
      70,
      8,
      36,
      1,
      3,
      12,
      12,
      1,
      89,
      8,
      90,
      17,
      7,
      90,
      9,
      151,
      16,
      7,
      89,
      8,
      151,
      9,
      33,
      1,
      2,
      22,
      35,
      1,
      17,
      17,
      16,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "last",
      "day",
      "of",
      "the",
      "first",
      "month",
      "in",
      "2002"
    ],
    "code": [
      "calendar",
      ".",
      "monthrange",
      "(",
      "2002",
      ",",
      "1",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      17,
      170,
      356,
      2,
      18,
      151,
      394,
      24,
      465
    ],
    "code_indx_copy": [
      521,
      22,
      522,
      1,
      536,
      8,
      15,
      17
    ],
    "code_indx_nocopy": [
      521,
      22,
      522,
      1,
      524,
      8,
      15,
      17
    ]
  },
  {
    "intent": [
      "get",
      "last",
      "day",
      "of",
      "the",
      "second",
      "month",
      "in",
      "2002"
    ],
    "code": [
      "calendar",
      ".",
      "monthrange",
      "(",
      "2008",
      ",",
      "2",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      17,
      170,
      356,
      2,
      18,
      118,
      394,
      24,
      465
    ],
    "code_indx_copy": [
      521,
      22,
      522,
      1,
      524,
      8,
      82,
      17
    ],
    "code_indx_nocopy": [
      521,
      22,
      522,
      1,
      524,
      8,
      82,
      17
    ]
  },
  {
    "intent": [
      "get",
      "last",
      "day",
      "of",
      "the",
      "second",
      "month",
      "in",
      "2100"
    ],
    "code": [
      "calendar",
      ".",
      "monthrange",
      "(",
      "2100",
      ",",
      "2",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      17,
      170,
      356,
      2,
      18,
      118,
      394,
      24,
      465
    ],
    "code_indx_copy": [
      521,
      22,
      522,
      1,
      536,
      8,
      82,
      17
    ],
    "code_indx_nocopy": [
      521,
      22,
      522,
      1,
      524,
      8,
      82,
      17
    ]
  },
  {
    "intent": [
      "get",
      "last",
      "day",
      "of",
      "the",
      "month",
      "var_0",
      "in",
      "year",
      "var_1"
    ],
    "code": [
      "calendar",
      ".",
      "monthrange",
      "(",
      "var_1",
      ",",
      "var_0",
      ")",
      "[",
      "1",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "month",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "year",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      17,
      170,
      356,
      2,
      18,
      394,
      26,
      24,
      416,
      63
    ],
    "code_indx_copy": [
      521,
      22,
      522,
      1,
      91,
      8,
      34,
      17,
      12,
      15,
      16
    ],
    "code_indx_nocopy": [
      521,
      22,
      522,
      1,
      91,
      8,
      34,
      17,
      12,
      15,
      16
    ]
  },
  {
    "intent": [
      "get",
      "last",
      "day",
      "of",
      "the",
      "second",
      "month",
      "in",
      "year",
      "2012"
    ],
    "code": [
      "monthrange",
      "(",
      "2012",
      ",",
      "2",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      17,
      170,
      356,
      2,
      18,
      118,
      394,
      24,
      416,
      465
    ],
    "code_indx_copy": [
      522,
      1,
      537,
      8,
      82,
      17
    ],
    "code_indx_nocopy": [
      522,
      1,
      524,
      8,
      82,
      17
    ]
  },
  {
    "intent": [
      "get",
      "last",
      "day",
      "of",
      "the",
      "first",
      "month",
      "in",
      "year",
      "2000"
    ],
    "code": [
      "datetime",
      ".",
      "date",
      "(",
      "2000",
      ",",
      "2",
      ",",
      "1",
      ")",
      "-",
      "datetime",
      ".",
      "timedelta",
      "(",
      "days",
      "=",
      "1",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      17,
      170,
      356,
      2,
      18,
      151,
      394,
      24,
      416,
      465
    ],
    "code_indx_copy": [
      27,
      22,
      139,
      1,
      537,
      8,
      82,
      8,
      15,
      17,
      14,
      27,
      22,
      295,
      1,
      296,
      19,
      15,
      17
    ],
    "code_indx_nocopy": [
      27,
      22,
      139,
      1,
      524,
      8,
      82,
      8,
      15,
      17,
      14,
      27,
      22,
      295,
      1,
      296,
      19,
      15,
      17
    ]
  },
  {
    "intent": [
      "calling",
      "an",
      "external",
      "command",
      "str_0"
    ],
    "code": [
      "from",
      "subprocess",
      "import",
      "call"
    ],
    "slot_map": {
      "str_0": {
        "value": "ls -l",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      441,
      225,
      460,
      137,
      5
    ],
    "code_indx_copy": [
      392,
      229,
      393,
      230
    ],
    "code_indx_nocopy": [
      392,
      229,
      393,
      230
    ]
  },
  {
    "intent": [
      "calling",
      "an",
      "external",
      "command",
      "str_0"
    ],
    "code": [
      "os",
      ".",
      "system",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "some_command with args",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      441,
      225,
      460,
      137,
      5
    ],
    "code_indx_copy": [
      113,
      22,
      119,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      119,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "calling",
      "an",
      "external",
      "command",
      "str_0"
    ],
    "code": [
      "os",
      ".",
      "system",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "some_command < input_file | another_command > output_file",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      441,
      225,
      460,
      137,
      5
    ],
    "code_indx_copy": [
      113,
      22,
      119,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      119,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "calling",
      "an",
      "external",
      "command",
      "str_0"
    ],
    "code": [
      "stream",
      "=",
      "os",
      ".",
      "popen",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "some_command with args",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      441,
      225,
      460,
      137,
      5
    ],
    "code_indx_copy": [
      367,
      19,
      113,
      22,
      524,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      367,
      19,
      113,
      22,
      524,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "calling",
      "an",
      "external",
      "command",
      "str_0"
    ],
    "code": [
      "print",
      "(",
      "subprocess",
      ".",
      "Popen",
      "(",
      "'str_0'",
      ",",
      "shell",
      "=",
      "True",
      ",",
      "stdout",
      "=",
      "subprocess",
      ".",
      "PIPE",
      ")",
      ".",
      "stdout",
      ".",
      "\n",
      "read",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "echo Hello World",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      441,
      225,
      460,
      137,
      5
    ],
    "code_indx_copy": [
      49,
      1,
      229,
      22,
      441,
      1,
      29,
      8,
      231,
      19,
      109,
      8,
      354,
      19,
      229,
      22,
      481,
      17,
      22,
      354,
      22,
      161,
      106,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      229,
      22,
      441,
      1,
      29,
      8,
      231,
      19,
      109,
      8,
      354,
      19,
      229,
      22,
      481,
      17,
      22,
      354,
      22,
      161,
      106,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "calling",
      "an",
      "external",
      "command",
      "str_0"
    ],
    "code": [
      "print",
      "(",
      "os",
      ".",
      "popen",
      "(",
      "'str_0'",
      ")",
      ".",
      "read",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "echo Hello World",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      441,
      225,
      460,
      137,
      5
    ],
    "code_indx_copy": [
      49,
      1,
      113,
      22,
      524,
      1,
      29,
      17,
      22,
      106,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      113,
      22,
      524,
      1,
      29,
      17,
      22,
      106,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "calling",
      "an",
      "external",
      "command",
      "str_0"
    ],
    "code": [
      "return_code",
      "=",
      "subprocess",
      ".",
      "call",
      "(",
      "'str_0'",
      ",",
      "shell",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "echo Hello World",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      441,
      225,
      460,
      137,
      5
    ],
    "code_indx_copy": [
      524,
      19,
      229,
      22,
      230,
      1,
      29,
      8,
      231,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      229,
      22,
      230,
      1,
      29,
      8,
      231,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "calling",
      "an",
      "external",
      "command",
      "str_0"
    ],
    "code": [
      "p",
      "=",
      "subprocess",
      ".",
      "Popen",
      "(",
      "'str_0'",
      ",",
      "shell",
      "=",
      "True",
      ",",
      "stdout",
      "=",
      "subprocess",
      ".",
      "PIPE",
      ",",
      "stderr",
      "=",
      "\n",
      "subprocess",
      ".",
      "STDOUT",
      ")",
      "\n",
      "for",
      "line",
      "in",
      "p",
      ".",
      "stdout",
      ".",
      "readlines",
      "(",
      ")",
      ":",
      "\n",
      "    ",
      "print",
      "(",
      "line",
      ",",
      "end",
      "=",
      "' '",
      ")",
      "\n",
      "",
      "retval",
      "=",
      "p",
      ".",
      "wait",
      "(",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "ls",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      441,
      225,
      460,
      137,
      5
    ],
    "code_indx_copy": [
      435,
      19,
      229,
      22,
      441,
      1,
      29,
      8,
      231,
      19,
      109,
      8,
      354,
      19,
      229,
      22,
      481,
      8,
      488,
      19,
      161,
      229,
      22,
      489,
      17,
      161,
      7,
      315,
      9,
      435,
      22,
      354,
      22,
      498,
      1,
      17,
      13,
      161,
      216,
      49,
      1,
      315,
      8,
      524,
      19,
      108,
      17,
      161,
      218,
      524,
      19,
      435,
      22,
      524,
      1,
      17
    ],
    "code_indx_nocopy": [
      435,
      19,
      229,
      22,
      441,
      1,
      29,
      8,
      231,
      19,
      109,
      8,
      354,
      19,
      229,
      22,
      481,
      8,
      488,
      19,
      161,
      229,
      22,
      489,
      17,
      161,
      7,
      315,
      9,
      435,
      22,
      354,
      22,
      498,
      1,
      17,
      13,
      161,
      216,
      49,
      1,
      315,
      8,
      524,
      19,
      108,
      17,
      161,
      218,
      524,
      19,
      435,
      22,
      524,
      1,
      17
    ]
  },
  {
    "intent": [
      "calling",
      "an",
      "external",
      "command",
      "str_0"
    ],
    "code": [
      "call",
      "(",
      "[",
      "'ls'",
      ",",
      "'-l'",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "ls -l",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      441,
      225,
      460,
      137,
      5
    ],
    "code_indx_copy": [
      230,
      1,
      12,
      524,
      8,
      524,
      16,
      17
    ],
    "code_indx_nocopy": [
      230,
      1,
      12,
      524,
      8,
      524,
      16,
      17
    ]
  },
  {
    "intent": [
      "decode",
      "url",
      "var_0",
      "with",
      "utf8",
      "and",
      "print",
      "it"
    ],
    "code": [
      "print",
      "(",
      "urllib",
      ".",
      "parse",
      ".",
      "unquote",
      "(",
      "var_0",
      ")",
      ".",
      "decode",
      "(",
      "'utf8'",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "url",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      182,
      102,
      26,
      79,
      465,
      31,
      166,
      145
    ],
    "code_indx_copy": [
      49,
      1,
      232,
      22,
      236,
      22,
      237,
      1,
      34,
      17,
      22,
      99,
      1,
      200,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      232,
      22,
      236,
      22,
      237,
      1,
      34,
      17,
      22,
      99,
      1,
      200,
      17,
      17
    ]
  },
  {
    "intent": [
      "decode",
      "a",
      "urllib",
      "escaped",
      "url",
      "string",
      "var_0",
      "with",
      "var_1"
    ],
    "code": [
      "var_0",
      "=",
      "urllib",
      ".",
      "parse",
      ".",
      "unquote",
      "(",
      "var_0",
      ")",
      ".",
      "decode",
      "(",
      "'var_1'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "url",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "utf8",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      182,
      3,
      465,
      465,
      102,
      14,
      26,
      79,
      63
    ],
    "code_indx_copy": [
      34,
      19,
      232,
      22,
      236,
      22,
      237,
      1,
      34,
      17,
      22,
      99,
      1,
      57,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      232,
      22,
      236,
      22,
      237,
      1,
      34,
      17,
      22,
      99,
      1,
      57,
      17
    ]
  },
  {
    "intent": [
      "delete",
      "letters",
      "from",
      "string",
      "str_0"
    ],
    "code": [
      "\"\"\"\"\"\"",
      ".",
      "join",
      "(",
      "filter",
      "(",
      "str",
      ".",
      "isdigit",
      ",",
      "'str_0'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "12454v",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      86,
      360,
      58,
      14,
      5
    ],
    "code_indx_copy": [
      287,
      22,
      23,
      1,
      79,
      1,
      25,
      22,
      68,
      8,
      29,
      17,
      17
    ],
    "code_indx_nocopy": [
      287,
      22,
      23,
      1,
      79,
      1,
      25,
      22,
      68,
      8,
      29,
      17,
      17
    ]
  },
  {
    "intent": [
      "update",
      "row",
      "values",
      "for",
      "a",
      "column",
      "var_0",
      "using",
      "vectorized",
      "string",
      "operation",
      "in",
      "pandas"
    ],
    "code": [
      "df",
      "[",
      "'var_0'",
      "]",
      ".",
      "str",
      ".",
      "split",
      "(",
      "'-'",
      ")",
      ".",
      "str",
      "[",
      "0",
      "]",
      ".",
      "astype",
      "(",
      "int",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "Season",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      242,
      45,
      20,
      21,
      3,
      147,
      26,
      109,
      465,
      14,
      465,
      24,
      42
    ],
    "code_indx_copy": [
      149,
      12,
      56,
      16,
      22,
      25,
      22,
      71,
      1,
      524,
      17,
      22,
      25,
      12,
      43,
      16,
      22,
      242,
      1,
      20,
      17
    ],
    "code_indx_nocopy": [
      149,
      12,
      56,
      16,
      22,
      25,
      22,
      71,
      1,
      524,
      17,
      22,
      25,
      12,
      43,
      16,
      22,
      242,
      1,
      20,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "list",
      "of",
      "tuples",
      "var_0",
      "by",
      "second",
      "parameter",
      "in",
      "the",
      "tuple"
    ],
    "code": [
      "var_0",
      ".",
      "sort",
      "(",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "x",
      "[",
      "1",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "my_list",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      3,
      4,
      2,
      33,
      26,
      44,
      118,
      372,
      24,
      18,
      113
    ],
    "code_indx_copy": [
      34,
      22,
      124,
      1,
      102,
      19,
      44,
      26,
      13,
      26,
      12,
      15,
      16,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      124,
      1,
      102,
      19,
      44,
      26,
      13,
      26,
      12,
      15,
      16,
      17
    ]
  },
  {
    "intent": [
      "find",
      "indexes",
      "of",
      "all",
      "occurrences",
      "of",
      "a",
      "substring",
      "var_0",
      "in",
      "a",
      "string",
      "var_1"
    ],
    "code": [
      "[",
      "m",
      ".",
      "start",
      "(",
      ")",
      "for",
      "m",
      "in",
      "re",
      ".",
      "finditer",
      "(",
      "'(?=tt)'",
      ",",
      "'var_1'",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "tt",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "ttt",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      47,
      235,
      2,
      38,
      53,
      2,
      3,
      354,
      26,
      24,
      3,
      14,
      63
    ],
    "code_indx_copy": [
      12,
      92,
      22,
      207,
      1,
      17,
      7,
      92,
      9,
      39,
      22,
      121,
      1,
      524,
      8,
      57,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      92,
      22,
      207,
      1,
      17,
      7,
      92,
      9,
      39,
      22,
      121,
      1,
      524,
      8,
      57,
      17,
      16
    ]
  },
  {
    "intent": [
      "find",
      "all",
      "occurrences",
      "of",
      "a",
      "substring",
      "in",
      "a",
      "string"
    ],
    "code": [
      "[",
      "m",
      ".",
      "start",
      "(",
      ")",
      "for",
      "m",
      "in",
      "re",
      ".",
      "finditer",
      "(",
      "'test'",
      ",",
      "'test test test test'",
      ")",
      "]"
    ],
    "slot_map": {},
    "intent_indx": [
      47,
      38,
      53,
      2,
      3,
      354,
      24,
      3,
      14
    ],
    "code_indx_copy": [
      12,
      92,
      22,
      207,
      1,
      17,
      7,
      92,
      9,
      39,
      22,
      121,
      1,
      524,
      8,
      524,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      92,
      22,
      207,
      1,
      17,
      7,
      92,
      9,
      39,
      22,
      121,
      1,
      524,
      8,
      524,
      17,
      16
    ]
  },
  {
    "intent": [
      "split",
      "string",
      "var_0",
      "based",
      "on",
      "white",
      "spaces"
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'\\\\s+|\\\\S+'",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      138,
      14,
      26,
      208,
      139,
      131,
      132
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      524,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      524,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "set",
      "columns",
      "str_0",
      "as",
      "indexes",
      "in",
      "dataframe",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "set_index",
      "(",
      "[",
      "str_0",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "['race_date', 'track_code', 'race_number']",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "rdata",
        "quote": "`",
        "type": "var"
      },
      "[str_0]": {
        "value": "['race_date', 'track_code', 'race_number']",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      59,
      61,
      5,
      90,
      235,
      24,
      43,
      26
    ],
    "code_indx_copy": [
      34,
      22,
      203,
      1,
      12,
      11,
      16,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      203,
      1,
      12,
      11,
      16,
      17
    ]
  },
  {
    "intent": [
      "recursively",
      "go",
      "through",
      "all",
      "subdirectories",
      "and",
      "files",
      "in",
      "var_0"
    ],
    "code": [
      "for",
      "root",
      ",",
      "subFolders",
      ",",
      "files",
      "in",
      "os",
      ".",
      "walk",
      "(",
      "var_0",
      ")",
      ":",
      "\n",
      "    ",
      "pass",
      ""
    ],
    "slot_map": {
      "var_0": {
        "value": "rootdir",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      465,
      291,
      38,
      465,
      31,
      245,
      24,
      26
    ],
    "code_indx_copy": [
      7,
      174,
      8,
      524,
      8,
      534,
      9,
      113,
      22,
      477,
      1,
      34,
      17,
      13,
      161,
      216,
      217,
      218
    ],
    "code_indx_nocopy": [
      7,
      174,
      8,
      524,
      8,
      524,
      9,
      113,
      22,
      477,
      1,
      34,
      17,
      13,
      161,
      216,
      217,
      218
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "list",
      "of",
      "dictionary",
      "values",
      "by",
      "str_0",
      "in",
      "reverse",
      "order"
    ],
    "code": [
      "list",
      ".",
      "sort",
      "(",
      "key",
      "=",
      "lambda",
      "item",
      ":",
      "item",
      "[",
      "'str_0'",
      "]",
      ",",
      "reverse",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "date",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      117,
      3,
      4,
      2,
      25,
      20,
      44,
      5,
      24,
      282,
      162
    ],
    "code_indx_copy": [
      33,
      22,
      124,
      1,
      102,
      19,
      44,
      387,
      13,
      387,
      12,
      29,
      16,
      8,
      129,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      33,
      22,
      124,
      1,
      102,
      19,
      44,
      387,
      13,
      387,
      12,
      29,
      16,
      8,
      129,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "display",
      "first",
      "5",
      "characters",
      "of",
      "string",
      "str_0"
    ],
    "code": [
      "\"\"\"{:.5}\"\"\"",
      ".",
      "format",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "aaabbbccc",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      363,
      151,
      232,
      98,
      2,
      14,
      5
    ],
    "code_indx_copy": [
      524,
      22,
      38,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      38,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "unpack",
      "hexadecimal",
      "string",
      "var_0",
      "to",
      "a",
      "list",
      "of",
      "integer",
      "values"
    ],
    "code": [
      "struct",
      ".",
      "unpack",
      "(",
      "'11B'",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      142,
      465,
      14,
      26,
      8,
      3,
      4,
      2,
      10,
      20
    ],
    "code_indx_copy": [
      317,
      22,
      406,
      1,
      524,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      317,
      22,
      406,
      1,
      524,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "finding",
      "the",
      "index",
      "of",
      "an",
      "item",
      "str_0",
      "given",
      "a",
      "list",
      "`",
      "[",
      "str_0",
      ",",
      "'bar",
      "'",
      ",",
      "'baz",
      "'",
      "]",
      "`",
      "containing",
      "it"
    ],
    "code": [
      "[",
      "i",
      "for",
      "i",
      ",",
      "j",
      "in",
      "enumerate",
      "(",
      "[",
      "'str_0'",
      ",",
      "'bar'",
      ",",
      "'baz'",
      "]",
      ")",
      "if",
      "j",
      "==",
      "'str_0'",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "foo",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "['foo', 'bar', 'baz']",
        "quote": "`",
        "type": "str"
      },
      "[str_1]": {
        "value": "['foo', 'bar', 'baz']",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      18,
      37,
      2,
      225,
      156,
      5,
      273,
      3,
      4,
      345,
      218,
      5,
      62,
      465,
      310,
      62,
      465,
      310,
      220,
      345,
      34,
      145
    ],
    "code_indx_copy": [
      12,
      6,
      7,
      6,
      8,
      30,
      9,
      10,
      1,
      12,
      29,
      8,
      485,
      8,
      524,
      16,
      17,
      67,
      30,
      76,
      29,
      16
    ],
    "code_indx_nocopy": [
      12,
      6,
      7,
      6,
      8,
      30,
      9,
      10,
      1,
      12,
      29,
      8,
      485,
      8,
      524,
      16,
      17,
      67,
      30,
      76,
      29,
      16
    ]
  },
  {
    "intent": [
      "generate",
      "all",
      "permutations",
      "of",
      "list",
      "str_0",
      "and",
      "list",
      "str_1"
    ],
    "code": [
      "print",
      "(",
      "list",
      "(",
      "itertools",
      ".",
      "product",
      "(",
      "[",
      "str_0",
      "]",
      ",",
      "[",
      "str_1",
      "]",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "[1, 2, 3]",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": "[4, 5, 6]",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "[1, 2, 3]",
        "quote": "`",
        "type": "str"
      },
      "[str_1]": {
        "value": "[4, 5, 6]",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      56,
      38,
      153,
      2,
      4,
      5,
      31,
      4,
      32
    ],
    "code_indx_copy": [
      49,
      1,
      33,
      1,
      50,
      22,
      328,
      1,
      12,
      11,
      16,
      8,
      12,
      37,
      16,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      33,
      1,
      50,
      22,
      328,
      1,
      12,
      11,
      16,
      8,
      12,
      37,
      16,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "generate",
      "all",
      "permutations",
      "of",
      "a",
      "list",
      "str_0"
    ],
    "code": [
      "itertools",
      ".",
      "permutations",
      "(",
      "[",
      "str_0",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "[1, 2, 3]",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "[1, 2, 3]",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      56,
      38,
      153,
      2,
      3,
      4,
      5
    ],
    "code_indx_copy": [
      50,
      22,
      381,
      1,
      12,
      11,
      16,
      17
    ],
    "code_indx_nocopy": [
      50,
      22,
      381,
      1,
      12,
      11,
      16,
      17
    ]
  },
  {
    "intent": [
      "substitute",
      "occurrences",
      "of",
      "unicode",
      "regex",
      "pattern",
      "ustr_0",
      "with",
      "empty",
      "string",
      "str_1",
      "in",
      "string",
      "var_0"
    ],
    "code": [
      "return",
      "re",
      ".",
      "sub",
      "(",
      "'str_0'",
      ",",
      "'str_1'",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "\\p{P}+",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "text",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      53,
      2,
      230,
      40,
      54,
      465,
      79,
      146,
      14,
      32,
      24,
      14,
      26
    ],
    "code_indx_copy": [
      118,
      39,
      22,
      40,
      1,
      29,
      8,
      63,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      118,
      39,
      22,
      40,
      1,
      29,
      8,
      63,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "manually",
      "throw/raise",
      "a",
      "var_0",
      "exception",
      "with",
      "the",
      "message",
      "str_0"
    ],
    "code": [
      "raise",
      "var_0",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "ValueError",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "A very specific bad thing happened",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      465,
      3,
      26,
      389,
      79,
      18,
      157,
      5
    ],
    "code_indx_copy": [
      523,
      34,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      523,
      34,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "throw",
      "an",
      "exception",
      "str_0"
    ],
    "code": [
      "raise",
      "Exception",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "I know Python!",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      463,
      225,
      389,
      5
    ],
    "code_indx_copy": [
      523,
      340,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      523,
      340,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "manually",
      "throw",
      "an",
      "exception",
      "str_0"
    ],
    "code": [
      "raise",
      "Exception",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "I know python!",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      463,
      225,
      389,
      5
    ],
    "code_indx_copy": [
      523,
      340,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      523,
      340,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "throw",
      "a",
      "valueerror",
      "with",
      "message",
      "str_0"
    ],
    "code": [
      "raise",
      "ValueError",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "represents a hidden bug, do not catch this",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      463,
      3,
      465,
      79,
      157,
      5
    ],
    "code_indx_copy": [
      523,
      515,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      523,
      515,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "throw",
      "an",
      "exception",
      "with",
      "message",
      "str_0"
    ],
    "code": [
      "raise",
      "Exception",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "This is the exception you expect to handle",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      463,
      225,
      389,
      79,
      157,
      5
    ],
    "code_indx_copy": [
      523,
      340,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      523,
      340,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "throw",
      "a",
      "value",
      "error",
      "with",
      "message",
      "str_0",
      ",",
      "str_1",
      ",",
      "str_2",
      ",",
      "str_3"
    ],
    "code": [
      "raise",
      "ValueError",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "A very specific bad thing happened",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "foo",
        "quote": "'",
        "type": "str"
      },
      "str_2": {
        "value": "bar",
        "quote": "'",
        "type": "str"
      },
      "str_3": {
        "value": "baz",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      463,
      3,
      143,
      110,
      79,
      157,
      5,
      62,
      32,
      62,
      194,
      62,
      219
    ],
    "code_indx_copy": [
      523,
      515,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      523,
      515,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "throw",
      "a",
      "runtime",
      "error",
      "with",
      "message",
      "str_0"
    ],
    "code": [
      "raise",
      "RuntimeError",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "specific message",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      463,
      3,
      465,
      110,
      79,
      157,
      5
    ],
    "code_indx_copy": [
      523,
      524,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      523,
      524,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "throw",
      "an",
      "assertion",
      "error",
      "with",
      "message",
      "str_0",
      ",",
      "distance"
    ],
    "code": [
      "raise",
      "AssertionError",
      "(",
      "'str_0'",
      ",",
      "distance",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "Unexpected value of 'distance'!",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      463,
      225,
      465,
      110,
      79,
      157,
      5,
      62,
      465
    ],
    "code_indx_copy": [
      523,
      524,
      1,
      29,
      8,
      536,
      17
    ],
    "code_indx_nocopy": [
      523,
      524,
      1,
      29,
      8,
      524,
      17
    ]
  },
  {
    "intent": [
      "if",
      "selenium",
      "textarea",
      "element",
      "var_0",
      "is",
      "not",
      "empty",
      ",",
      "clear",
      "the",
      "field"
    ],
    "code": [
      "driver",
      ".",
      "find_element_by_id",
      "(",
      "'var_0'",
      ")",
      ".",
      "clear",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "foo",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      150,
      51,
      465,
      49,
      26,
      152,
      105,
      146,
      62,
      426,
      18,
      312
    ],
    "code_indx_copy": [
      46,
      22,
      462,
      1,
      56,
      17,
      22,
      537,
      1,
      17
    ],
    "code_indx_nocopy": [
      46,
      22,
      462,
      1,
      56,
      17,
      22,
      524,
      1,
      17
    ]
  },
  {
    "intent": [
      "clear",
      "text",
      "from",
      "textarea",
      "str_0",
      "with",
      "selenium"
    ],
    "code": [
      "driver",
      ".",
      "find_element_by_id",
      "(",
      "'str_0'",
      ")",
      ".",
      "clear",
      "(",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "foo",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      426,
      267,
      58,
      465,
      5,
      79,
      51
    ],
    "code_indx_copy": [
      46,
      22,
      462,
      1,
      29,
      17,
      22,
      528,
      1,
      17
    ],
    "code_indx_nocopy": [
      46,
      22,
      462,
      1,
      29,
      17,
      22,
      524,
      1,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "number",
      "2130706433",
      "to",
      "ip",
      "string"
    ],
    "code": [
      "socket",
      ".",
      "inet_ntoa",
      "(",
      "struct",
      ".",
      "pack",
      "(",
      "'!L'",
      ",",
      "2130706433",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      11,
      3,
      76,
      465,
      8,
      465,
      14
    ],
    "code_indx_copy": [
      524,
      22,
      524,
      1,
      317,
      22,
      318,
      1,
      524,
      8,
      531,
      17,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      524,
      1,
      317,
      22,
      318,
      1,
      524,
      8,
      524,
      17,
      17
    ]
  },
  {
    "intent": [
      "rearrange",
      "the",
      "columns",
      "str_0",
      ",",
      "str_1",
      ",",
      "str_2",
      ",",
      "str_3",
      "of",
      "pandas",
      "dataframe",
      "var_0",
      "in",
      "mentioned",
      "sequence",
      "str_2",
      ",",
      "str_3",
      ",",
      "str_0",
      ",",
      "str_1"
    ],
    "code": [
      "var_0",
      "=",
      "var_0",
      "[",
      "[",
      "'str_4'",
      ",",
      "'str_5'",
      ",",
      "'str_6'",
      ",",
      "'str_7'",
      "]",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "a",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "b",
        "quote": "'",
        "type": "str"
      },
      "str_2": {
        "value": "x",
        "quote": "'",
        "type": "str"
      },
      "str_3": {
        "value": "y",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "str_4": {
        "value": "x",
        "quote": "'",
        "type": "str"
      },
      "str_5": {
        "value": "y",
        "quote": "'",
        "type": "str"
      },
      "str_6": {
        "value": "a",
        "quote": "'",
        "type": "str"
      },
      "str_7": {
        "value": "b",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      465,
      18,
      61,
      5,
      62,
      32,
      62,
      194,
      62,
      219,
      2,
      42,
      43,
      26,
      24,
      465,
      445,
      194,
      62,
      219,
      62,
      5,
      62,
      32
    ],
    "code_indx_copy": [
      34,
      19,
      34,
      12,
      12,
      322,
      8,
      323,
      8,
      324,
      8,
      325,
      16,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      34,
      12,
      12,
      322,
      8,
      323,
      8,
      324,
      8,
      325,
      16,
      16
    ]
  },
  {
    "intent": [
      "call",
      "base",
      "class",
      "'s",
      "__init__",
      "method",
      "from",
      "the",
      "child",
      "class",
      "var_0"
    ],
    "code": [
      "super",
      "(",
      "var_0",
      ",",
      "self",
      ")",
      ".",
      "__init__",
      "(",
      "*",
      "args",
      ",",
      "**",
      "kwargs",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "ChildClass",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      304,
      465,
      311,
      266,
      465,
      465,
      58,
      18,
      465,
      311,
      26
    ],
    "code_indx_copy": [
      492,
      1,
      34,
      8,
      310,
      17,
      22,
      493,
      1,
      3,
      311,
      8,
      5,
      524,
      17
    ],
    "code_indx_nocopy": [
      492,
      1,
      34,
      8,
      310,
      17,
      22,
      493,
      1,
      3,
      311,
      8,
      5,
      524,
      17
    ]
  },
  {
    "intent": [
      "sum",
      "of",
      "all",
      "values",
      "in",
      "a",
      "python",
      "dict",
      "var_0"
    ],
    "code": [
      "sum",
      "(",
      "var_0",
      ".",
      "values",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "d",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      112,
      2,
      38,
      20,
      24,
      3,
      50,
      186,
      26
    ],
    "code_indx_copy": [
      0,
      1,
      34,
      22,
      166,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      0,
      1,
      34,
      22,
      166,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "sum",
      "of",
      "all",
      "values",
      "in",
      "a",
      "python",
      "dict"
    ],
    "code": [
      "sum",
      "(",
      "d",
      ".",
      "values",
      "(",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      112,
      2,
      38,
      20,
      24,
      3,
      50,
      186
    ],
    "code_indx_copy": [
      0,
      1,
      2,
      22,
      166,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      0,
      1,
      2,
      22,
      166,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "python",
      "dictionary",
      "var_0",
      "to",
      "json",
      "array"
    ],
    "code": [
      "json",
      ".",
      "dumps",
      "(",
      "var_0",
      ",",
      "ensure_ascii",
      "=",
      "False",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "your_data",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      11,
      50,
      25,
      26,
      8,
      181,
      85
    ],
    "code_indx_copy": [
      140,
      22,
      141,
      1,
      34,
      8,
      524,
      19,
      87,
      17
    ],
    "code_indx_nocopy": [
      140,
      22,
      141,
      1,
      34,
      8,
      524,
      19,
      87,
      17
    ]
  },
  {
    "intent": [
      "assign",
      "an",
      "array",
      "of",
      "floats",
      "in",
      "range",
      "from",
      "0",
      "to",
      "100",
      "to",
      "a",
      "variable",
      "var_0"
    ],
    "code": [
      "var_0",
      "=",
      "np",
      ".",
      "array",
      "(",
      "[",
      "i",
      "for",
      "i",
      "in",
      "range",
      "(",
      "100",
      ")",
      "]",
      ",",
      "dtype",
      "=",
      "np",
      ".",
      "float64",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "values",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      93,
      225,
      85,
      2,
      301,
      24,
      123,
      58,
      107,
      8,
      373,
      8,
      3,
      95,
      26
    ],
    "code_indx_copy": [
      34,
      19,
      74,
      22,
      175,
      1,
      12,
      6,
      7,
      6,
      9,
      104,
      1,
      267,
      17,
      16,
      8,
      177,
      19,
      74,
      22,
      524,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      74,
      22,
      175,
      1,
      12,
      6,
      7,
      6,
      9,
      104,
      1,
      267,
      17,
      16,
      8,
      177,
      19,
      74,
      22,
      524,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "list",
      "of",
      "dictionaries",
      "var_0",
      "by",
      "values",
      "in",
      "an",
      "order",
      "var_1"
    ],
    "code": [
      "sorted",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "var_1",
      ".",
      "index",
      "(",
      "list",
      "(",
      "x",
      ".",
      "values",
      "(",
      ")",
      ")",
      "[",
      "0",
      "]",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "list_of_dct",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "order",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      117,
      3,
      4,
      2,
      188,
      26,
      44,
      20,
      24,
      225,
      162,
      63
    ],
    "code_indx_copy": [
      101,
      1,
      34,
      8,
      102,
      19,
      44,
      26,
      13,
      91,
      22,
      160,
      1,
      33,
      1,
      26,
      22,
      166,
      1,
      17,
      17,
      12,
      43,
      16,
      17,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      34,
      8,
      102,
      19,
      44,
      26,
      13,
      91,
      22,
      160,
      1,
      33,
      1,
      26,
      22,
      166,
      1,
      17,
      17,
      12,
      43,
      16,
      17,
      17
    ]
  },
  {
    "intent": [
      "change",
      "the",
      "case",
      "of",
      "the",
      "first",
      "letter",
      "in",
      "string",
      "var_0"
    ],
    "code": [
      "return",
      "var_0",
      "[",
      "0",
      "]",
      ".",
      "upper",
      "(",
      ")",
      "+",
      "var_0",
      "[",
      "1",
      ":",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      221,
      18,
      197,
      2,
      18,
      151,
      433,
      24,
      14,
      26
    ],
    "code_indx_copy": [
      118,
      34,
      12,
      43,
      16,
      22,
      298,
      1,
      17,
      96,
      34,
      12,
      15,
      13,
      16
    ],
    "code_indx_nocopy": [
      118,
      34,
      12,
      43,
      16,
      22,
      298,
      1,
      17,
      96,
      34,
      12,
      15,
      13,
      16
    ]
  },
  {
    "intent": [
      "join",
      "list",
      "of",
      "numbers",
      "str_0",
      "to",
      "string",
      "of",
      "numbers",
      "."
    ],
    "code": [
      "\"\"\"\"\"\"",
      ".",
      "join",
      "(",
      "[",
      "1",
      ",",
      "2",
      ",",
      "3",
      ",",
      "4",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "[1,2,3,4]",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "[1,2,3,4]",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      281,
      4,
      2,
      97,
      5,
      8,
      14,
      2,
      97,
      159
    ],
    "code_indx_copy": [
      287,
      22,
      23,
      1,
      12,
      15,
      8,
      82,
      8,
      54,
      8,
      184,
      16,
      17
    ],
    "code_indx_nocopy": [
      287,
      22,
      23,
      1,
      12,
      15,
      8,
      82,
      8,
      54,
      8,
      184,
      16,
      17
    ]
  },
  {
    "intent": [
      "delete",
      "every",
      "non",
      "str_0",
      "characters",
      "from",
      "a",
      "string",
      "var_0"
    ],
    "code": [
      "var_0",
      "=",
      "var_0",
      ".",
      "decode",
      "(",
      "'str_0'",
      ",",
      "'ignore'",
      ")",
      ".",
      "encode",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "utf-8",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "line",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      86,
      279,
      465,
      5,
      98,
      58,
      3,
      14,
      26
    ],
    "code_indx_copy": [
      34,
      19,
      34,
      22,
      99,
      1,
      29,
      8,
      144,
      17,
      22,
      239,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      34,
      22,
      99,
      1,
      29,
      8,
      144,
      17,
      22,
      239,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "execute",
      "a",
      "command",
      "str_0",
      "in",
      "the",
      "terminal",
      "from",
      "a",
      "python",
      "script"
    ],
    "code": [
      "os",
      ".",
      "system",
      "(",
      "str_0",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "command",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      135,
      3,
      137,
      5,
      24,
      18,
      465,
      58,
      3,
      50,
      246
    ],
    "code_indx_copy": [
      113,
      22,
      119,
      1,
      11,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      119,
      1,
      11,
      17
    ]
  },
  {
    "intent": [
      "mysql",
      "execute",
      "query",
      "str_0",
      "with",
      "parameters",
      "var_0",
      "and",
      "var_1"
    ],
    "code": [
      "c",
      ".",
      "execute",
      "(",
      "'str_0'",
      ",",
      "(",
      "var_0",
      ",",
      "var_1",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "SELECT * FROM foo WHERE bar = %s AND baz = %s",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "param1",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "param2",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      465,
      135,
      275,
      5,
      79,
      370,
      26,
      31,
      63
    ],
    "code_indx_copy": [
      66,
      22,
      411,
      1,
      29,
      8,
      1,
      34,
      8,
      91,
      17,
      17
    ],
    "code_indx_nocopy": [
      66,
      22,
      411,
      1,
      29,
      8,
      1,
      34,
      8,
      91,
      17,
      17
    ]
  },
  {
    "intent": [
      "parse",
      "string",
      "var_0",
      "into",
      "a",
      "datetime",
      "object",
      "using",
      "format",
      "pattern",
      "str_0"
    ],
    "code": [
      "dateobj",
      "=",
      "datetime",
      ".",
      "datetime",
      ".",
      "strptime",
      "(",
      "var_0",
      ",",
      "'str_0'",
      ")",
      ".",
      "date",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "datestr",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "%Y-%m-%d",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      73,
      14,
      26,
      12,
      3,
      13,
      15,
      109,
      16,
      54,
      5
    ],
    "code_indx_copy": [
      524,
      19,
      27,
      22,
      27,
      22,
      28,
      1,
      34,
      8,
      29,
      17,
      22,
      139,
      1,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      27,
      22,
      27,
      22,
      28,
      1,
      34,
      8,
      29,
      17,
      22,
      139,
      1,
      17
    ]
  }
]
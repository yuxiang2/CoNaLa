[
  {
    "intent": [
      "send",
      "a",
      "signal",
      "str_0",
      "to",
      "the",
      "current",
      "process"
    ],
    "code": [
      "os",
      ".",
      "kill",
      "(",
      "os",
      ".",
      "getpid",
      "(",
      ")",
      ",",
      "signal",
      ".",
      "SIGUSR1",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "signal.SIGUSR1",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      433,
      3,
      433,
      5,
      8,
      17,
      173,
      282
    ],
    "code_indx_copy": [
      113,
      22,
      524,
      1,
      113,
      22,
      524,
      1,
      17,
      8,
      530,
      22,
      524,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      524,
      1,
      113,
      22,
      524,
      1,
      17,
      8,
      524,
      22,
      524,
      17
    ]
  },
  {
    "intent": [
      "decode",
      "a",
      "hex",
      "string",
      "str_0",
      "to",
      "utf-8",
      "."
    ],
    "code": [
      "bytes",
      ".",
      "fromhex",
      "(",
      "'str_0'",
      ")",
      ".",
      "decode",
      "(",
      "'utf-8'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "4a4b4c",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      177,
      3,
      114,
      13,
      5,
      8,
      178,
      154
    ],
    "code_indx_copy": [
      524,
      22,
      524,
      1,
      29,
      17,
      22,
      99,
      1,
      143,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      524,
      1,
      29,
      17,
      22,
      99,
      1,
      143,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "all",
      "element",
      "in",
      "list",
      "var_0",
      "are",
      "identical"
    ],
    "code": [
      "all",
      "(",
      "x",
      "==",
      "var_0",
      "[",
      "0",
      "]",
      "for",
      "x",
      "in",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "myList",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      226,
      146,
      36,
      1,
      23,
      4,
      25,
      233,
      433
    ],
    "code_indx_copy": [
      77,
      1,
      26,
      76,
      34,
      12,
      43,
      16,
      7,
      26,
      9,
      34,
      17
    ],
    "code_indx_nocopy": [
      77,
      1,
      26,
      76,
      34,
      12,
      43,
      16,
      7,
      26,
      9,
      34,
      17
    ]
  },
  {
    "intent": [
      "format",
      "number",
      "of",
      "space",
      "between",
      "string",
      "var_0",
      ",",
      "str_0",
      "and",
      "str_1",
      "to",
      "be",
      "str_2"
    ],
    "code": [
      "print",
      "(",
      "'%*s : %*s'",
      "%",
      "(",
      "20",
      ",",
      "'var_0'",
      ",",
      "20",
      ",",
      "'str_1'",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "Python",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": ":",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": "Very Good",
        "quote": "`",
        "type": "str"
      },
      "str_2": {
        "value": "20",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      15,
      74,
      2,
      132,
      267,
      13,
      25,
      60,
      5,
      29,
      30,
      8,
      348,
      187
    ],
    "code_indx_copy": [
      49,
      1,
      524,
      117,
      1,
      351,
      8,
      56,
      8,
      351,
      8,
      63,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      524,
      117,
      1,
      351,
      8,
      56,
      8,
      351,
      8,
      63,
      17,
      17
    ]
  },
  {
    "intent": [
      "how",
      "to",
      "convert",
      "a",
      "string",
      "from",
      "cp-1251",
      "to",
      "utf-8",
      "?"
    ],
    "code": [
      "d",
      ".",
      "decode",
      "(",
      "'cp1251'",
      ")",
      ".",
      "encode",
      "(",
      "'utf8'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      75,
      8,
      10,
      3,
      13,
      56,
      433,
      8,
      178,
      49
    ],
    "code_indx_copy": [
      2,
      22,
      99,
      1,
      524,
      17,
      22,
      239,
      1,
      200,
      17
    ],
    "code_indx_nocopy": [
      2,
      22,
      99,
      1,
      524,
      17,
      22,
      239,
      1,
      200,
      17
    ]
  },
  {
    "intent": [
      "get",
      "rid",
      "of",
      "none",
      "value",
      "in",
      "dictionary",
      "var_0"
    ],
    "code": [
      "res",
      "=",
      "{",
      "k",
      ":",
      "v",
      "for",
      "k",
      ",",
      "v",
      "in",
      "list",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      "if",
      "v",
      "is",
      "not",
      "None",
      "}"
    ],
    "slot_map": {
      "var_0": {
        "value": "kwargs",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      16,
      433,
      2,
      433,
      19,
      23,
      24,
      25
    ],
    "code_indx_copy": [
      524,
      19,
      52,
      89,
      13,
      90,
      7,
      89,
      8,
      90,
      9,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      67,
      90,
      335,
      281,
      209,
      53
    ],
    "code_indx_nocopy": [
      524,
      19,
      52,
      89,
      13,
      90,
      7,
      89,
      8,
      90,
      9,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      67,
      90,
      335,
      281,
      209,
      53
    ]
  },
  {
    "intent": [
      "get",
      "rid",
      "of",
      "none",
      "value",
      "in",
      "dictionary",
      "var_0"
    ],
    "code": [
      "res",
      "=",
      "dict",
      "(",
      "(",
      "k",
      ",",
      "v",
      ")",
      "for",
      "k",
      ",",
      "v",
      "in",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      "if",
      "v",
      "is",
      "not",
      "None",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "kwargs",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      16,
      433,
      2,
      433,
      19,
      23,
      24,
      25
    ],
    "code_indx_copy": [
      524,
      19,
      70,
      1,
      1,
      89,
      8,
      90,
      17,
      7,
      89,
      8,
      90,
      9,
      34,
      22,
      35,
      1,
      17,
      67,
      90,
      335,
      281,
      209,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      70,
      1,
      1,
      89,
      8,
      90,
      17,
      7,
      89,
      8,
      90,
      9,
      34,
      22,
      35,
      1,
      17,
      67,
      90,
      335,
      281,
      209,
      17
    ]
  },
  {
    "intent": [
      "capture",
      "final",
      "output",
      "of",
      "a",
      "chain",
      "of",
      "system",
      "command",
      "str_0"
    ],
    "code": [
      "subprocess",
      ".",
      "check_output",
      "(",
      "'str_0'",
      ",",
      "shell",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "ps -ef | grep something | wc -l",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      433,
      433,
      247,
      2,
      3,
      433,
      2,
      433,
      137,
      5
    ],
    "code_indx_copy": [
      229,
      22,
      449,
      1,
      29,
      8,
      231,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      229,
      22,
      449,
      1,
      29,
      8,
      231,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "concatenate",
      "a",
      "list",
      "of",
      "string",
      "str_0"
    ],
    "code": [
      "\"\"\"\"\"\"",
      ".",
      "join",
      "(",
      "[",
      "str_0",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "['a', 'b', 'c']",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "['a', 'b', 'c']",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      0,
      3,
      4,
      2,
      13,
      5
    ],
    "code_indx_copy": [
      287,
      22,
      23,
      1,
      12,
      11,
      16,
      17
    ],
    "code_indx_nocopy": [
      287,
      22,
      23,
      1,
      12,
      11,
      16,
      17
    ]
  },
  {
    "intent": [
      "find",
      "intersection",
      "data",
      "between",
      "series",
      "var_0",
      "and",
      "series",
      "var_1"
    ],
    "code": [
      "pd",
      ".",
      "Series",
      "(",
      "list",
      "(",
      "set",
      "(",
      "var_0",
      ")",
      ".",
      "intersection",
      "(",
      "set",
      "(",
      "var_1",
      ")",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s1",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "s2",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      45,
      433,
      63,
      267,
      323,
      25,
      29,
      323,
      61
    ],
    "code_indx_copy": [
      162,
      22,
      467,
      1,
      33,
      1,
      189,
      1,
      34,
      17,
      22,
      270,
      1,
      189,
      1,
      91,
      17,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      162,
      22,
      467,
      1,
      33,
      1,
      189,
      1,
      34,
      17,
      22,
      270,
      1,
      189,
      1,
      91,
      17,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "sending",
      "http",
      "header",
      "to",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "send",
      "(",
      "'HTTP/1.0 200 OK\\r\\n'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "client",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      433,
      328,
      401,
      8,
      25
    ],
    "code_indx_copy": [
      34,
      22,
      524,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      524,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "format",
      "a",
      "datetime",
      "string",
      "var_0",
      "to",
      "extract",
      "date",
      "only"
    ],
    "code": [
      "then",
      "=",
      "datetime",
      ".",
      "datetime",
      ".",
      "strptime",
      "(",
      "var_0",
      ",",
      "'%Y-%m-%d'",
      ")",
      ".",
      "date",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "when",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      15,
      3,
      12,
      13,
      25,
      8,
      101,
      133,
      337
    ],
    "code_indx_copy": [
      524,
      19,
      27,
      22,
      27,
      22,
      28,
      1,
      34,
      8,
      524,
      17,
      22,
      139,
      1,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      27,
      22,
      27,
      22,
      28,
      1,
      34,
      8,
      524,
      17,
      22,
      139,
      1,
      17
    ]
  },
  {
    "intent": [
      "split",
      "a",
      "multi-line",
      "string",
      "var_0",
      "into",
      "separate",
      "string"
    ],
    "code": [
      "var_0",
      ".",
      "split",
      "(",
      "'\\n'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "inputString",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      138,
      3,
      433,
      13,
      25,
      11,
      94,
      13
    ],
    "code_indx_copy": [
      34,
      22,
      71,
      1,
      133,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      71,
      1,
      133,
      17
    ]
  },
  {
    "intent": [
      "split",
      "a",
      "multi-line",
      "string",
      "str_0",
      "by",
      "new",
      "line",
      "character",
      "str_1"
    ],
    "code": [
      "' a \\n b \\r\\n c '",
      ".",
      "split",
      "(",
      "'str_1'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "a \n b \r\n c",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": "\n",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      138,
      3,
      433,
      13,
      5,
      42,
      185,
      166,
      95,
      30
    ],
    "code_indx_copy": [
      524,
      22,
      71,
      1,
      63,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      71,
      1,
      63,
      17
    ]
  },
  {
    "intent": [
      "concatenate",
      "element",
      "of",
      "list",
      "var_0",
      "by",
      "a",
      "colon",
      "str_0"
    ],
    "code": [
      "\"\"\"str_0\"\"\"",
      ".",
      "join",
      "(",
      "str",
      "(",
      "x",
      ")",
      "for",
      "x",
      "in",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "b",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": ":",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      0,
      1,
      2,
      4,
      25,
      42,
      3,
      433,
      5
    ],
    "code_indx_copy": [
      212,
      22,
      23,
      1,
      25,
      1,
      26,
      17,
      7,
      26,
      9,
      34,
      17
    ],
    "code_indx_nocopy": [
      212,
      22,
      23,
      1,
      25,
      1,
      26,
      17,
      7,
      26,
      9,
      34,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "first",
      "object",
      "from",
      "a",
      "queryset",
      "in",
      "django",
      "model",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "objects",
      ".",
      "filter",
      "(",
      ")",
      "[",
      ":",
      "1",
      "]",
      ".",
      "get",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "Entry",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      16,
      17,
      147,
      14,
      56,
      3,
      433,
      23,
      85,
      86,
      25
    ],
    "code_indx_copy": [
      34,
      22,
      78,
      22,
      79,
      1,
      17,
      12,
      13,
      15,
      16,
      22,
      86,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      78,
      22,
      79,
      1,
      17,
      12,
      13,
      15,
      16,
      22,
      86,
      1,
      17
    ]
  },
  {
    "intent": [
      "calculate",
      "sum",
      "over",
      "all",
      "row",
      "of",
      "2d",
      "numpy",
      "array"
    ],
    "code": [
      "a",
      ".",
      "sum",
      "(",
      "axis",
      "=",
      "1",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      242,
      110,
      387,
      36,
      43,
      2,
      227,
      81,
      82
    ],
    "code_indx_copy": [
      95,
      22,
      0,
      1,
      42,
      19,
      15,
      17
    ],
    "code_indx_nocopy": [
      95,
      22,
      0,
      1,
      42,
      19,
      15,
      17
    ]
  },
  {
    "intent": [
      "enable",
      "warning",
      "using",
      "action",
      "str_0"
    ],
    "code": [
      "warnings",
      ".",
      "simplefilter",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "always",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      433,
      433,
      107,
      433,
      5
    ],
    "code_indx_copy": [
      524,
      22,
      524,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      524,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "concatenate",
      "item",
      "of",
      "list",
      "var_0",
      "with",
      "a",
      "space",
      "str_0"
    ],
    "code": [
      "print",
      "(",
      "' '",
      ".",
      "join",
      "(",
      "map",
      "(",
      "str",
      ",",
      "var_0",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "l",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      0,
      37,
      2,
      4,
      25,
      77,
      3,
      132,
      5
    ],
    "code_indx_copy": [
      49,
      1,
      108,
      22,
      23,
      1,
      24,
      1,
      25,
      8,
      34,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      108,
      22,
      23,
      1,
      24,
      1,
      25,
      8,
      34,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "run",
      "script",
      "str_0",
      "with",
      "argument",
      "str_1",
      "on",
      "terminal",
      "using",
      "python",
      "executable"
    ],
    "code": [
      "subprocess",
      ".",
      "call",
      "(",
      "[",
      "'python.exe'",
      ",",
      "'str_0'",
      ",",
      "'str_1'",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "hello.py",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "htmlfilename.htm",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      240,
      235,
      5,
      77,
      294,
      30,
      139,
      433,
      107,
      47,
      433
    ],
    "code_indx_copy": [
      229,
      22,
      230,
      1,
      12,
      524,
      8,
      29,
      8,
      63,
      16,
      17
    ],
    "code_indx_nocopy": [
      229,
      22,
      230,
      1,
      12,
      524,
      8,
      29,
      8,
      63,
      16,
      17
    ]
  },
  {
    "intent": [
      "how",
      "can",
      "i",
      "parse",
      "a",
      "time",
      "string",
      "containing",
      "millisecond",
      "in",
      "it",
      "with",
      "python",
      "?"
    ],
    "code": [
      "time",
      ".",
      "strptime",
      "(",
      "'30/03/09 16:31:32.123'",
      ",",
      "'%d/%m/%y %H:%M:%S.%f'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      75,
      367,
      312,
      71,
      3,
      134,
      13,
      32,
      433,
      23,
      89,
      77,
      47,
      49
    ],
    "code_indx_copy": [
      84,
      22,
      28,
      1,
      524,
      8,
      524,
      17
    ],
    "code_indx_nocopy": [
      84,
      22,
      28,
      1,
      524,
      8,
      524,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "string",
      "var_0",
      "with",
      "dot",
      "and",
      "comma",
      "into",
      "a",
      "float",
      "number",
      "var_1"
    ],
    "code": [
      "var_1",
      "=",
      "float",
      "(",
      "var_0",
      ".",
      "replace",
      "(",
      "','",
      ",",
      "''",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "my_string",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "my_float",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      10,
      3,
      13,
      25,
      77,
      128,
      29,
      249,
      11,
      3,
      92,
      74,
      61
    ],
    "code_indx_copy": [
      91,
      19,
      225,
      1,
      34,
      22,
      107,
      1,
      73,
      8,
      21,
      17,
      17
    ],
    "code_indx_nocopy": [
      91,
      19,
      225,
      1,
      34,
      22,
      107,
      1,
      73,
      8,
      21,
      17,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "string",
      "str_0",
      "with",
      "dot",
      "and",
      "comma",
      "into",
      "a",
      "floating",
      "number"
    ],
    "code": [
      "float",
      "(",
      "'str_0'",
      ".",
      "replace",
      "(",
      "','",
      ",",
      "''",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "123,456.908",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      10,
      3,
      13,
      5,
      77,
      128,
      29,
      249,
      11,
      3,
      259,
      74
    ],
    "code_indx_copy": [
      225,
      1,
      29,
      22,
      107,
      1,
      73,
      8,
      21,
      17,
      17
    ],
    "code_indx_nocopy": [
      225,
      1,
      29,
      22,
      107,
      1,
      73,
      8,
      21,
      17,
      17
    ]
  },
  {
    "intent": [
      "set",
      "pythonpath",
      "in",
      "python",
      "script",
      "."
    ],
    "code": [
      "sys",
      ".",
      "path",
      ".",
      "append",
      "(",
      "'/path/to/whatever'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      57,
      433,
      23,
      47,
      235,
      154
    ],
    "code_indx_copy": [
      153,
      22,
      114,
      22,
      146,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      153,
      22,
      114,
      22,
      146,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "split",
      "string",
      "str_0",
      "using",
      "a",
      "regex",
      "str_1"
    ],
    "code": [
      "re",
      ".",
      "split",
      "(",
      "'str_1'",
      ",",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "Words, words, words.",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "(\\W+)",
        "quote": "'",
        "type": "str"
      },
      "(str_1)": {
        "value": "(\\W+)",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      138,
      13,
      5,
      107,
      3,
      38,
      30
    ],
    "code_indx_copy": [
      39,
      22,
      71,
      1,
      63,
      8,
      29,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      71,
      1,
      63,
      8,
      29,
      17
    ]
  },
  {
    "intent": [
      "open",
      "a",
      "file",
      "str_0",
      "in",
      "append",
      "mode"
    ],
    "code": [
      "file",
      "=",
      "open",
      "(",
      "'str_0'",
      ",",
      "'a'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "Output.txt",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      273,
      3,
      125,
      5,
      23,
      109,
      274
    ],
    "code_indx_copy": [
      403,
      19,
      105,
      1,
      29,
      8,
      413,
      17
    ],
    "code_indx_nocopy": [
      403,
      19,
      105,
      1,
      29,
      8,
      413,
      17
    ]
  },
  {
    "intent": [
      "download",
      "a",
      "file",
      "str_0",
      "over",
      "http",
      "and",
      "save",
      "to",
      "str_1"
    ],
    "code": [
      "urllib",
      ".",
      "request",
      ".",
      "urlretrieve",
      "(",
      "'str_0'",
      ",",
      "'str_1'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "http://www.example.com/songs/mp3.mp3",
        "quote": "\"",
        "type": "str"
      },
      "str_1": {
        "value": "mp3.mp3",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      390,
      3,
      125,
      5,
      387,
      328,
      29,
      317,
      8,
      30
    ],
    "code_indx_copy": [
      232,
      22,
      233,
      22,
      353,
      1,
      29,
      8,
      63,
      17
    ],
    "code_indx_nocopy": [
      232,
      22,
      233,
      22,
      353,
      1,
      29,
      8,
      63,
      17
    ]
  },
  {
    "intent": [
      "download",
      "a",
      "file",
      "var_0",
      "over",
      "http",
      "and",
      "save",
      "to",
      "var_1"
    ],
    "code": [
      "u",
      "=",
      "urllib",
      ".",
      "request",
      ".",
      "urlopen",
      "(",
      "var_0",
      ")",
      "\n",
      "f",
      "=",
      "open",
      "(",
      "var_1",
      ",",
      "'wb'",
      ")",
      "\n",
      "meta",
      "=",
      "u",
      ".",
      "info",
      "(",
      ")",
      "\n",
      "file_size",
      "=",
      "int",
      "(",
      "meta",
      ".",
      "getheaders",
      "(",
      "'Content-Length'",
      ")",
      "[",
      "0",
      "]",
      ")",
      "\n",
      "print",
      "(",
      "'Downloading: %s Bytes: %s'",
      "%",
      "(",
      "var_1",
      ",",
      "file_size",
      ")",
      ")",
      "\n",
      "file_size_dl",
      "=",
      "0",
      "\n",
      "block_sz",
      "=",
      "8192",
      "\n",
      "while",
      "True",
      ":",
      "\n",
      "    ",
      "buffer",
      "=",
      "u",
      ".",
      "read",
      "(",
      "block_sz",
      ")",
      "\n",
      "if",
      "not",
      "buffer",
      ":",
      "\n",
      "        ",
      "break",
      "\n",
      "",
      "file_size_dl",
      "+=",
      "len",
      "(",
      "buffer",
      ")",
      "\n",
      "f",
      ".",
      "write",
      "(",
      "buffer",
      ")",
      "\n",
      "status",
      "=",
      "'%10d  [%3.2f%%]'",
      "%",
      "(",
      "file_size_dl",
      ",",
      "file_size_dl",
      "*",
      "100.0",
      "/",
      "\n",
      "file_size",
      ")",
      "\n",
      "status",
      "=",
      "status",
      "+",
      "chr",
      "(",
      "8",
      ")",
      "*",
      "(",
      "len",
      "(",
      "status",
      ")",
      "+",
      "1",
      ")",
      "\n",
      "print",
      "(",
      "status",
      ",",
      "end",
      "=",
      "' '",
      ")",
      "\n",
      "",
      "f",
      ".",
      "close",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "url",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "file_name",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      390,
      3,
      125,
      25,
      387,
      328,
      29,
      317,
      8,
      61
    ],
    "code_indx_copy": [
      524,
      19,
      232,
      22,
      233,
      22,
      234,
      1,
      34,
      17,
      161,
      190,
      19,
      105,
      1,
      91,
      8,
      524,
      17,
      161,
      524,
      19,
      524,
      22,
      126,
      1,
      17,
      161,
      524,
      19,
      20,
      1,
      524,
      22,
      524,
      1,
      524,
      17,
      12,
      43,
      16,
      17,
      161,
      49,
      1,
      524,
      117,
      1,
      91,
      8,
      524,
      17,
      17,
      161,
      524,
      19,
      43,
      161,
      524,
      19,
      524,
      161,
      524,
      109,
      13,
      161,
      216,
      524,
      19,
      524,
      22,
      106,
      1,
      524,
      17,
      161,
      67,
      281,
      524,
      13,
      161,
      368,
      524,
      161,
      218,
      524,
      524,
      32,
      1,
      524,
      17,
      161,
      190,
      22,
      131,
      1,
      524,
      17,
      161,
      524,
      19,
      524,
      117,
      1,
      524,
      8,
      524,
      3,
      524,
      31,
      161,
      524,
      17,
      161,
      524,
      19,
      524,
      96,
      455,
      1,
      501,
      17,
      3,
      1,
      32,
      1,
      524,
      17,
      96,
      15,
      17,
      161,
      49,
      1,
      524,
      8,
      524,
      19,
      108,
      17,
      161,
      218,
      190,
      22,
      506,
      1,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      232,
      22,
      233,
      22,
      234,
      1,
      34,
      17,
      161,
      190,
      19,
      105,
      1,
      91,
      8,
      524,
      17,
      161,
      524,
      19,
      524,
      22,
      126,
      1,
      17,
      161,
      524,
      19,
      20,
      1,
      524,
      22,
      524,
      1,
      524,
      17,
      12,
      43,
      16,
      17,
      161,
      49,
      1,
      524,
      117,
      1,
      91,
      8,
      524,
      17,
      17,
      161,
      524,
      19,
      43,
      161,
      524,
      19,
      524,
      161,
      524,
      109,
      13,
      161,
      216,
      524,
      19,
      524,
      22,
      106,
      1,
      524,
      17,
      161,
      67,
      281,
      524,
      13,
      161,
      368,
      524,
      161,
      218,
      524,
      524,
      32,
      1,
      524,
      17,
      161,
      190,
      22,
      131,
      1,
      524,
      17,
      161,
      524,
      19,
      524,
      117,
      1,
      524,
      8,
      524,
      3,
      524,
      31,
      161,
      524,
      17,
      161,
      524,
      19,
      524,
      96,
      455,
      1,
      501,
      17,
      3,
      1,
      32,
      1,
      524,
      17,
      96,
      15,
      17,
      161,
      49,
      1,
      524,
      8,
      524,
      19,
      108,
      17,
      161,
      218,
      190,
      22,
      506,
      1,
      17
    ]
  },
  {
    "intent": [
      "download",
      "a",
      "file",
      "str_0",
      "over",
      "http"
    ],
    "code": [
      "response",
      "=",
      "urllib",
      ".",
      "request",
      ".",
      "urlopen",
      "(",
      "'str_0'",
      ")",
      "\n",
      "html",
      "=",
      "response",
      ".",
      "read",
      "(",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "http://www.example.com/",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      390,
      3,
      125,
      5,
      387,
      328
    ],
    "code_indx_copy": [
      524,
      19,
      232,
      22,
      233,
      22,
      234,
      1,
      29,
      17,
      161,
      524,
      19,
      524,
      22,
      106,
      1,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      232,
      22,
      233,
      22,
      234,
      1,
      29,
      17,
      161,
      524,
      19,
      524,
      22,
      106,
      1,
      17
    ]
  },
  {
    "intent": [
      "download",
      "a",
      "file",
      "var_0",
      "over",
      "http"
    ],
    "code": [
      "r",
      "=",
      "requests",
      ".",
      "get",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "url",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      390,
      3,
      125,
      25,
      387,
      328
    ],
    "code_indx_copy": [
      18,
      19,
      85,
      22,
      86,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      18,
      19,
      85,
      22,
      86,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "download",
      "a",
      "file",
      "var_0",
      "over",
      "http",
      "and",
      "save",
      "to",
      "str_0"
    ],
    "code": [
      "response",
      "=",
      "requests",
      ".",
      "get",
      "(",
      "var_0",
      ",",
      "stream",
      "=",
      "True",
      ")",
      "\n",
      "with",
      "open",
      "(",
      "'str_0'",
      ",",
      "'wb'",
      ")",
      "as",
      "handle",
      ":",
      "\n",
      "    ",
      "for",
      "data",
      "in",
      "tqdm",
      "(",
      "response",
      ".",
      "iter_content",
      "(",
      ")",
      ")",
      ":",
      "\n",
      "        ",
      "handle",
      ".",
      "write",
      "(",
      "data",
      ")",
      "",
      ""
    ],
    "slot_map": {
      "var_0": {
        "value": "url",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "10MB",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      390,
      3,
      125,
      25,
      387,
      328,
      29,
      317,
      8,
      5
    ],
    "code_indx_copy": [
      524,
      19,
      85,
      22,
      86,
      1,
      34,
      8,
      367,
      19,
      109,
      17,
      161,
      364,
      105,
      1,
      29,
      8,
      524,
      17,
      366,
      524,
      13,
      161,
      216,
      7,
      135,
      9,
      524,
      1,
      524,
      22,
      524,
      1,
      17,
      17,
      13,
      161,
      368,
      524,
      22,
      131,
      1,
      135,
      17,
      218,
      218
    ],
    "code_indx_nocopy": [
      524,
      19,
      85,
      22,
      86,
      1,
      34,
      8,
      367,
      19,
      109,
      17,
      161,
      364,
      105,
      1,
      29,
      8,
      524,
      17,
      366,
      524,
      13,
      161,
      216,
      7,
      135,
      9,
      524,
      1,
      524,
      22,
      524,
      1,
      17,
      17,
      13,
      161,
      368,
      524,
      22,
      131,
      1,
      135,
      17,
      218,
      218
    ]
  },
  {
    "intent": [
      "argparse",
      "add",
      "argument",
      "with",
      "flag",
      "str_0",
      "and",
      "version",
      "action",
      "of",
      "str_1",
      "to",
      "parser",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "add_argument",
      "(",
      "'str_0'",
      ",",
      "action",
      "=",
      "'version'",
      ",",
      "version",
      "=",
      "'str_1'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "--version",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "%(prog)s 2.0",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "parser",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      433,
      58,
      294,
      77,
      433,
      5,
      29,
      433,
      433,
      2,
      30,
      8,
      433,
      25
    ],
    "code_indx_copy": [
      34,
      22,
      460,
      1,
      29,
      8,
      536,
      19,
      524,
      8,
      535,
      19,
      63,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      460,
      1,
      29,
      8,
      524,
      19,
      524,
      8,
      524,
      19,
      63,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "key",
      "str_0",
      "from",
      "dictionary",
      "var_0"
    ],
    "code": [
      "{",
      "i",
      ":",
      "var_0",
      "[",
      "i",
      "]",
      "for",
      "i",
      "in",
      "var_0",
      "if",
      "i",
      "!=",
      "'str_0'",
      "}"
    ],
    "slot_map": {
      "str_0": {
        "value": "c",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "d",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      257,
      22,
      5,
      56,
      24,
      25
    ],
    "code_indx_copy": [
      52,
      6,
      13,
      34,
      12,
      6,
      16,
      7,
      6,
      9,
      34,
      67,
      6,
      88,
      29,
      53
    ],
    "code_indx_nocopy": [
      52,
      6,
      13,
      34,
      12,
      6,
      16,
      7,
      6,
      9,
      34,
      67,
      6,
      88,
      29,
      53
    ]
  },
  {
    "intent": [
      "create",
      "new",
      "dataframe",
      "object",
      "by",
      "merging",
      "column",
      "str_0",
      "of",
      "dataframes",
      "var_0",
      "and",
      "var_1",
      "and",
      "rename",
      "the",
      "column",
      "from",
      "dataframes",
      "var_0",
      "and",
      "var_1",
      "with",
      "suffix",
      "var_4",
      "and",
      "var_5",
      "respectively"
    ],
    "code": [
      "pd",
      ".",
      "merge",
      "(",
      "var_2",
      ",",
      "var_3",
      ",",
      "on",
      "=",
      "[",
      "'str_0'",
      "]",
      ",",
      "suffixes",
      "=",
      "(",
      "'var_4'",
      ",",
      "'var_5'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "key",
        "quote": "\"",
        "type": "str"
      },
      "var_0": {
        "value": "split_df",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "csv_df",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "split_df",
        "quote": "`",
        "type": "var"
      },
      "var_3": {
        "value": "csv_df",
        "quote": "`",
        "type": "var"
      },
      "var_4": {
        "value": "_left",
        "quote": "`",
        "type": "var"
      },
      "var_5": {
        "value": "_right",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      144,
      185,
      41,
      14,
      42,
      433,
      59,
      5,
      2,
      237,
      25,
      29,
      61,
      29,
      372,
      17,
      59,
      56,
      237,
      25,
      29,
      61,
      77,
      433,
      433,
      29,
      433,
      433
    ],
    "code_indx_copy": [
      162,
      22,
      220,
      1,
      94,
      8,
      55,
      8,
      244,
      19,
      12,
      29,
      16,
      8,
      524,
      19,
      1,
      524,
      8,
      524,
      17,
      17
    ],
    "code_indx_nocopy": [
      162,
      22,
      220,
      1,
      94,
      8,
      55,
      8,
      244,
      19,
      12,
      29,
      16,
      8,
      524,
      19,
      1,
      524,
      8,
      524,
      17,
      17
    ]
  },
  {
    "intent": [
      "split",
      "a",
      "string",
      "var_0",
      "by",
      "space",
      "with",
      "str_0",
      "split"
    ],
    "code": [
      "var_0",
      ".",
      "split",
      "(",
      "' '",
      ",",
      "4",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "4",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      138,
      3,
      13,
      25,
      42,
      132,
      77,
      5,
      138
    ],
    "code_indx_copy": [
      34,
      22,
      71,
      1,
      108,
      8,
      184,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      71,
      1,
      108,
      8,
      184,
      17
    ]
  },
  {
    "intent": [
      "read",
      "keyboard-input"
    ],
    "code": [
      "input",
      "(",
      "'Enter your input:'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      123,
      433
    ],
    "code_indx_copy": [
      251,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      251,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "enable",
      "debug",
      "mode",
      "on",
      "flask",
      "application",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "run",
      "(",
      "debug",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "app",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      433,
      433,
      274,
      139,
      384,
      433,
      25
    ],
    "code_indx_copy": [
      34,
      22,
      468,
      1,
      529,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      468,
      1,
      524,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "python",
      "save",
      "list",
      "var_0",
      "to",
      "file",
      "object",
      "str_0"
    ],
    "code": [
      "pickle",
      ".",
      "dump",
      "(",
      "var_0",
      ",",
      "open",
      "(",
      "'str_0'",
      ",",
      "'wb'",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "mylist",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "save.txt",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      47,
      317,
      4,
      25,
      8,
      125,
      14,
      5
    ],
    "code_indx_copy": [
      524,
      22,
      524,
      1,
      34,
      8,
      105,
      1,
      29,
      8,
      524,
      17,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      524,
      1,
      34,
      8,
      105,
      1,
      29,
      8,
      524,
      17,
      17
    ]
  },
  {
    "intent": [
      "multiply",
      "a",
      "matrix",
      "var_0",
      "with",
      "a",
      "3d",
      "tensor",
      "var_1",
      "in",
      "scipy"
    ],
    "code": [
      "scipy",
      ".",
      "tensordot",
      "(",
      "var_0",
      ",",
      "var_1",
      ",",
      "axes",
      "=",
      "[",
      "1",
      ",",
      "1",
      "]",
      ")",
      ".",
      "swapaxes",
      "(",
      "0",
      ",",
      "1",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "P",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "T",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      375,
      3,
      182,
      25,
      77,
      3,
      159,
      433,
      61,
      23,
      433
    ],
    "code_indx_copy": [
      538,
      22,
      524,
      1,
      34,
      8,
      91,
      8,
      524,
      19,
      12,
      15,
      8,
      15,
      16,
      17,
      22,
      524,
      1,
      43,
      8,
      15,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      524,
      1,
      34,
      8,
      91,
      8,
      524,
      19,
      12,
      15,
      8,
      15,
      16,
      17,
      22,
      524,
      1,
      43,
      8,
      15,
      17
    ]
  },
  {
    "intent": [
      "create",
      "3d",
      "array",
      "of",
      "zero",
      "of",
      "size",
      "str_0"
    ],
    "code": [
      "numpy",
      ".",
      "zeros",
      "(",
      "(",
      "3",
      ",",
      "3",
      ",",
      "3",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "(3,3,3)",
        "quote": "`",
        "type": "str"
      },
      "(str_0)": {
        "value": "(3,3,3)",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      144,
      159,
      82,
      2,
      176,
      2,
      318,
      5
    ],
    "code_indx_copy": [
      147,
      22,
      512,
      1,
      1,
      54,
      8,
      54,
      8,
      54,
      17,
      17
    ],
    "code_indx_nocopy": [
      147,
      22,
      512,
      1,
      1,
      54,
      8,
      54,
      8,
      54,
      17,
      17
    ]
  },
  {
    "intent": [
      "cut",
      "off",
      "the",
      "last",
      "word",
      "of",
      "a",
      "sentence",
      "var_0"
    ],
    "code": [
      "\"\"\" \"\"\"",
      ".",
      "join",
      "(",
      "var_0",
      ".",
      "split",
      "(",
      "' '",
      ")",
      "[",
      ":",
      "-",
      "1",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "content",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      433,
      433,
      17,
      164,
      39,
      2,
      3,
      407,
      25
    ],
    "code_indx_copy": [
      215,
      22,
      23,
      1,
      34,
      22,
      71,
      1,
      108,
      17,
      12,
      13,
      14,
      15,
      16,
      17
    ],
    "code_indx_nocopy": [
      215,
      22,
      23,
      1,
      34,
      22,
      71,
      1,
      108,
      17,
      12,
      13,
      14,
      15,
      16,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "scalar",
      "var_0",
      "to",
      "array"
    ],
    "code": [
      "var_0",
      "=",
      "np",
      ".",
      "asarray",
      "(",
      "var_0",
      ")",
      ".",
      "reshape",
      "(",
      "1",
      ",",
      "-",
      "1",
      ")",
      "[",
      "(",
      "0",
      ")",
      ",",
      ":",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "x",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      10,
      433,
      25,
      8,
      82
    ],
    "code_indx_copy": [
      34,
      19,
      74,
      22,
      524,
      1,
      34,
      17,
      22,
      361,
      1,
      15,
      8,
      14,
      15,
      17,
      12,
      1,
      43,
      17,
      8,
      13,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      74,
      22,
      524,
      1,
      34,
      17,
      22,
      361,
      1,
      15,
      8,
      14,
      15,
      17,
      12,
      1,
      43,
      17,
      8,
      13,
      16
    ]
  },
  {
    "intent": [
      "sum",
      "all",
      "element",
      "of",
      "nested",
      "list",
      "var_0"
    ],
    "code": [
      "sum",
      "(",
      "sum",
      "(",
      "i",
      ")",
      "if",
      "isinstance",
      "(",
      "i",
      ",",
      "list",
      ")",
      "else",
      "i",
      "for",
      "i",
      "in",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "L",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      110,
      36,
      1,
      2,
      150,
      4,
      25
    ],
    "code_indx_copy": [
      0,
      1,
      0,
      1,
      6,
      17,
      67,
      206,
      1,
      6,
      8,
      33,
      17,
      211,
      6,
      7,
      6,
      9,
      34,
      17
    ],
    "code_indx_nocopy": [
      0,
      1,
      0,
      1,
      6,
      17,
      67,
      206,
      1,
      6,
      8,
      33,
      17,
      211,
      6,
      7,
      6,
      9,
      34,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "hex",
      "string",
      "str_0",
      "to",
      "a",
      "float",
      "number"
    ],
    "code": [
      "struct",
      ".",
      "unpack",
      "(",
      "'!f'",
      ",",
      "'str_0'",
      ".",
      "decode",
      "(",
      "'hex'",
      ")",
      ")",
      "[",
      "0",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "470FC614",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      10,
      114,
      13,
      5,
      8,
      3,
      92,
      74
    ],
    "code_indx_copy": [
      317,
      22,
      406,
      1,
      524,
      8,
      29,
      22,
      99,
      1,
      100,
      17,
      17,
      12,
      43,
      16
    ],
    "code_indx_nocopy": [
      317,
      22,
      406,
      1,
      524,
      8,
      29,
      22,
      99,
      1,
      100,
      17,
      17,
      12,
      43,
      16
    ]
  },
  {
    "intent": [
      "multiple",
      "each",
      "value",
      "by",
      "str_0",
      "for",
      "all",
      "key",
      "in",
      "a",
      "dictionary",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "update",
      "(",
      "(",
      "x",
      ",",
      "y",
      "*",
      "2",
      ")",
      "for",
      "x",
      ",",
      "y",
      "in",
      "list",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "2",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "my_dict",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      6,
      21,
      19,
      42,
      5,
      20,
      36,
      22,
      23,
      3,
      24,
      25
    ],
    "code_indx_copy": [
      34,
      22,
      69,
      1,
      1,
      26,
      8,
      103,
      3,
      82,
      17,
      7,
      26,
      8,
      103,
      9,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      69,
      1,
      1,
      26,
      8,
      103,
      3,
      82,
      17,
      7,
      26,
      8,
      103,
      9,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "running",
      "bash",
      "script",
      "str_0"
    ],
    "code": [
      "subprocess",
      ".",
      "call",
      "(",
      "'str_0'",
      ",",
      "shell",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "sleep.sh",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      433,
      347,
      235,
      5
    ],
    "code_indx_copy": [
      229,
      22,
      230,
      1,
      29,
      8,
      231,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      229,
      22,
      230,
      1,
      29,
      8,
      231,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "join",
      "element",
      "of",
      "list",
      "var_0",
      "with",
      "a",
      "comma",
      "str_0"
    ],
    "code": [
      "\"\"\"str_0\"\"\"",
      ".",
      "join",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "l",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": ",",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      270,
      1,
      2,
      4,
      25,
      77,
      3,
      249,
      5
    ],
    "code_indx_copy": [
      212,
      22,
      23,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      212,
      22,
      23,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "make",
      "a",
      "comma-separated",
      "string",
      "from",
      "a",
      "list",
      "var_0"
    ],
    "code": [
      "var_0",
      "=",
      "','",
      ".",
      "join",
      "(",
      "map",
      "(",
      "str",
      ",",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "myList",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      184,
      3,
      433,
      13,
      56,
      3,
      4,
      25
    ],
    "code_indx_copy": [
      34,
      19,
      73,
      22,
      23,
      1,
      24,
      1,
      25,
      8,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      73,
      22,
      23,
      1,
      24,
      1,
      25,
      8,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "reverse",
      "the",
      "list",
      "that",
      "contains",
      "1",
      "to",
      "10"
    ],
    "code": [
      "list",
      "(",
      "reversed",
      "(",
      "list",
      "(",
      "range",
      "(",
      "10",
      ")",
      ")",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      271,
      17,
      4,
      188,
      73,
      228,
      8,
      336
    ],
    "code_indx_copy": [
      33,
      1,
      246,
      1,
      33,
      1,
      104,
      1,
      4,
      17,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      33,
      1,
      246,
      1,
      33,
      1,
      104,
      1,
      4,
      17,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "substring",
      "str_0",
      "from",
      "a",
      "string",
      "str_1"
    ],
    "code": [
      "print",
      "(",
      "'str_1'",
      ".",
      "replace",
      "(",
      "'str_0'",
      ",",
      "''",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "bag,",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "lamp, bag, mirror",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      257,
      339,
      5,
      56,
      3,
      13,
      30
    ],
    "code_indx_copy": [
      49,
      1,
      63,
      22,
      107,
      1,
      29,
      8,
      21,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      63,
      22,
      107,
      1,
      29,
      8,
      21,
      17,
      17
    ]
  },
  {
    "intent": [
      "reverse",
      "the",
      "order",
      "of",
      "word",
      ",",
      "delimited",
      "by",
      "str_0",
      ",",
      "in",
      "string",
      "var_0"
    ],
    "code": [
      "\"\"\"str_0\"\"\"",
      ".",
      "join",
      "(",
      "var_0",
      ".",
      "split",
      "(",
      "'str_0'",
      ")",
      "[",
      ":",
      ":",
      "-",
      "1",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": ".",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      271,
      17,
      157,
      2,
      39,
      60,
      433,
      42,
      5,
      60,
      23,
      13,
      25
    ],
    "code_indx_copy": [
      212,
      22,
      23,
      1,
      34,
      22,
      71,
      1,
      29,
      17,
      12,
      13,
      13,
      14,
      15,
      16,
      17
    ],
    "code_indx_nocopy": [
      212,
      22,
      23,
      1,
      34,
      22,
      71,
      1,
      29,
      17,
      12,
      13,
      13,
      14,
      15,
      16,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "epoch",
      "time",
      "represented",
      "a",
      "millisecond",
      "var_0",
      "to",
      "string",
      "using",
      "format",
      "str_0"
    ],
    "code": [
      "datetime",
      ".",
      "datetime",
      ".",
      "fromtimestamp",
      "(",
      "var_0",
      ")",
      ".",
      "strftime",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "%Y-%m-%d %H:%M:%S.%f",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      10,
      433,
      134,
      433,
      3,
      433,
      25,
      8,
      13,
      107,
      15,
      5
    ],
    "code_indx_copy": [
      27,
      22,
      27,
      22,
      524,
      1,
      34,
      17,
      22,
      65,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      27,
      22,
      27,
      22,
      524,
      1,
      34,
      17,
      22,
      65,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "parse",
      "millisecond",
      "epoch",
      "time",
      "str_0",
      "to",
      "format",
      "str_1"
    ],
    "code": [
      "time",
      ".",
      "strftime",
      "(",
      "'str_1'",
      ",",
      "time",
      ".",
      "gmtime",
      "(",
      "1236472051807",
      "/",
      "1000.0",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "1236472051807",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "%Y-%m-%d %H:%M:%S",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      71,
      433,
      433,
      134,
      5,
      8,
      15,
      30
    ],
    "code_indx_copy": [
      84,
      22,
      65,
      1,
      63,
      8,
      84,
      22,
      524,
      1,
      524,
      31,
      524,
      17,
      17
    ],
    "code_indx_nocopy": [
      84,
      22,
      65,
      1,
      63,
      8,
      84,
      22,
      524,
      1,
      524,
      31,
      524,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "date",
      "7",
      "day",
      "before",
      "the",
      "current",
      "date"
    ],
    "code": [
      "(",
      "datetime",
      ".",
      "datetime",
      ".",
      "now",
      "(",
      ")",
      "-",
      "datetime",
      ".",
      "timedelta",
      "(",
      "days",
      "=",
      "7",
      ")",
      ")",
      ".",
      "date",
      "(",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      16,
      17,
      133,
      324,
      341,
      269,
      17,
      173,
      133
    ],
    "code_indx_copy": [
      1,
      27,
      22,
      27,
      22,
      294,
      1,
      17,
      14,
      27,
      22,
      295,
      1,
      296,
      19,
      219,
      17,
      17,
      22,
      139,
      1,
      17
    ],
    "code_indx_nocopy": [
      1,
      27,
      22,
      27,
      22,
      294,
      1,
      17,
      14,
      27,
      22,
      295,
      1,
      296,
      19,
      219,
      17,
      17,
      22,
      139,
      1,
      17
    ]
  },
  {
    "intent": [
      "sum",
      "element",
      "at",
      "index",
      "var_0",
      "of",
      "each",
      "list",
      "in",
      "list",
      "var_1"
    ],
    "code": [
      "print",
      "(",
      "sum",
      "(",
      "row",
      "[",
      "var_0",
      "]",
      "for",
      "row",
      "in",
      "var_1",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "column",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "data",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      110,
      1,
      33,
      35,
      25,
      2,
      21,
      4,
      23,
      4,
      61
    ],
    "code_indx_copy": [
      49,
      1,
      0,
      1,
      262,
      12,
      34,
      16,
      7,
      262,
      9,
      91,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      0,
      1,
      262,
      12,
      34,
      16,
      7,
      262,
      9,
      91,
      17,
      17
    ]
  },
  {
    "intent": [
      "sum",
      "column",
      "of",
      "a",
      "list",
      "var_0"
    ],
    "code": [
      "[",
      "sum",
      "(",
      "row",
      "[",
      "i",
      "]",
      "for",
      "row",
      "in",
      "var_0",
      ")",
      "for",
      "i",
      "in",
      "range",
      "(",
      "len",
      "(",
      "var_0",
      "[",
      "0",
      "]",
      ")",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "array",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      110,
      59,
      2,
      3,
      4,
      25
    ],
    "code_indx_copy": [
      12,
      0,
      1,
      262,
      12,
      6,
      16,
      7,
      262,
      9,
      34,
      17,
      7,
      6,
      9,
      104,
      1,
      32,
      1,
      34,
      12,
      43,
      16,
      17,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      0,
      1,
      262,
      12,
      6,
      16,
      7,
      262,
      9,
      34,
      17,
      7,
      6,
      9,
      104,
      1,
      32,
      1,
      34,
      12,
      43,
      16,
      17,
      17,
      16
    ]
  },
  {
    "intent": [
      "encode",
      "binary",
      "string",
      "str_0",
      "to",
      "base64",
      "code"
    ],
    "code": [
      "base64",
      ".",
      "b64encode",
      "(",
      "bytes",
      "(",
      "'str_0'",
      ",",
      "'utf-8'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "your string",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      415,
      265,
      13,
      5,
      8,
      433,
      283
    ],
    "code_indx_copy": [
      533,
      22,
      524,
      1,
      524,
      1,
      29,
      8,
      143,
      17,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      524,
      1,
      524,
      1,
      29,
      8,
      143,
      17,
      17
    ]
  },
  {
    "intent": [
      "combine",
      "list",
      "of",
      "dictionary",
      "var_0",
      "with",
      "the",
      "same",
      "key",
      "in",
      "each",
      "list",
      "to",
      "a",
      "single",
      "dictionary"
    ],
    "code": [
      "dict",
      "(",
      "(",
      "k",
      ",",
      "[",
      "d",
      "[",
      "k",
      "]",
      "for",
      "d",
      "in",
      "var_0",
      "]",
      ")",
      "for",
      "k",
      "in",
      "var_0",
      "[",
      "0",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "dicts",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      351,
      4,
      2,
      24,
      25,
      77,
      17,
      34,
      22,
      23,
      21,
      4,
      8,
      3,
      9,
      24
    ],
    "code_indx_copy": [
      70,
      1,
      1,
      89,
      8,
      12,
      2,
      12,
      89,
      16,
      7,
      2,
      9,
      34,
      16,
      17,
      7,
      89,
      9,
      34,
      12,
      43,
      16,
      17
    ],
    "code_indx_nocopy": [
      70,
      1,
      1,
      89,
      8,
      12,
      2,
      12,
      89,
      16,
      7,
      2,
      9,
      34,
      16,
      17,
      7,
      89,
      9,
      34,
      12,
      43,
      16,
      17
    ]
  },
  {
    "intent": [
      "merge",
      "a",
      "nested",
      "dictionary",
      "var_0",
      "into",
      "a",
      "flat",
      "dictionary",
      "by",
      "concatenating",
      "nested",
      "value",
      "with",
      "the",
      "same",
      "key",
      "var_1"
    ],
    "code": [
      "{",
      "var_1",
      ":",
      "[",
      "d",
      "[",
      "var_1",
      "]",
      "for",
      "d",
      "in",
      "var_0",
      "]",
      "for",
      "var_1",
      "in",
      "var_0",
      "[",
      "0",
      "]",
      "}"
    ],
    "slot_map": {
      "var_0": {
        "value": "dicts",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "k",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      236,
      3,
      150,
      24,
      25,
      11,
      3,
      363,
      24,
      42,
      429,
      150,
      19,
      77,
      17,
      34,
      22,
      61
    ],
    "code_indx_copy": [
      52,
      91,
      13,
      12,
      2,
      12,
      91,
      16,
      7,
      2,
      9,
      34,
      16,
      7,
      91,
      9,
      34,
      12,
      43,
      16,
      53
    ],
    "code_indx_nocopy": [
      52,
      91,
      13,
      12,
      2,
      12,
      91,
      16,
      7,
      2,
      9,
      34,
      16,
      7,
      91,
      9,
      34,
      12,
      43,
      16,
      53
    ]
  },
  {
    "intent": [
      "how",
      "do",
      "i",
      "get",
      "the",
      "url",
      "parameter",
      "in",
      "a",
      "flask",
      "view"
    ],
    "code": [
      "request",
      ".",
      "args",
      "[",
      "'myParam'",
      "]"
    ],
    "slot_map": {},
    "intent_indx": [
      75,
      311,
      312,
      16,
      17,
      99,
      356,
      23,
      3,
      384,
      433
    ],
    "code_indx_copy": [
      233,
      22,
      311,
      12,
      524,
      16
    ],
    "code_indx_nocopy": [
      233,
      22,
      311,
      12,
      524,
      16
    ]
  },
  {
    "intent": [
      "identify",
      "duplicate",
      "value",
      "in",
      "list",
      "var_0"
    ],
    "code": [
      "[",
      "k",
      "for",
      "k",
      ",",
      "v",
      "in",
      "list",
      "(",
      "Counter",
      "(",
      "var_0",
      ")",
      ".",
      "items",
      "(",
      ")",
      ")",
      "if",
      "v",
      ">",
      "1",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "mylist",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      433,
      320,
      19,
      23,
      4,
      25
    ],
    "code_indx_copy": [
      12,
      89,
      7,
      89,
      8,
      90,
      9,
      33,
      1,
      500,
      1,
      34,
      17,
      22,
      35,
      1,
      17,
      17,
      67,
      90,
      214,
      15,
      16
    ],
    "code_indx_nocopy": [
      12,
      89,
      7,
      89,
      8,
      90,
      9,
      33,
      1,
      500,
      1,
      34,
      17,
      22,
      35,
      1,
      17,
      17,
      67,
      90,
      214,
      15,
      16
    ]
  },
  {
    "intent": [
      "insert",
      "directory",
      "str_0",
      "into",
      "directory",
      "var_0"
    ],
    "code": [
      "sys",
      ".",
      "path",
      ".",
      "insert",
      "(",
      "1",
      ",",
      "os",
      ".",
      "path",
      ".",
      "join",
      "(",
      "os",
      ".",
      "path",
      ".",
      "dirname",
      "(",
      "var_0",
      ")",
      ",",
      "'str_0'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "apps",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "__file__",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      266,
      169,
      5,
      11,
      169,
      25
    ],
    "code_indx_copy": [
      153,
      22,
      114,
      22,
      319,
      1,
      15,
      8,
      113,
      22,
      114,
      22,
      23,
      1,
      113,
      22,
      114,
      22,
      378,
      1,
      34,
      17,
      8,
      29,
      17,
      17
    ],
    "code_indx_nocopy": [
      153,
      22,
      114,
      22,
      319,
      1,
      15,
      8,
      113,
      22,
      114,
      22,
      23,
      1,
      113,
      22,
      114,
      22,
      378,
      1,
      34,
      17,
      8,
      29,
      17,
      17
    ]
  },
  {
    "intent": [
      "modify",
      "sys.path",
      "for",
      "python",
      "module",
      "var_0"
    ],
    "code": [
      "sys",
      ".",
      "path",
      ".",
      "append",
      "(",
      "os",
      ".",
      "path",
      ".",
      "join",
      "(",
      "os",
      ".",
      "path",
      ".",
      "dirname",
      "(",
      "__file__",
      ")",
      ",",
      "'var_0'",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "subdir",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      433,
      433,
      20,
      47,
      326,
      25
    ],
    "code_indx_copy": [
      153,
      22,
      114,
      22,
      146,
      1,
      113,
      22,
      114,
      22,
      23,
      1,
      113,
      22,
      114,
      22,
      378,
      1,
      383,
      17,
      8,
      56,
      17,
      17
    ],
    "code_indx_nocopy": [
      153,
      22,
      114,
      22,
      146,
      1,
      113,
      22,
      114,
      22,
      23,
      1,
      113,
      22,
      114,
      22,
      378,
      1,
      383,
      17,
      8,
      56,
      17,
      17
    ]
  },
  {
    "intent": [
      "insert",
      "a",
      "str_0",
      "value",
      "into",
      "a",
      "sqlite3",
      "table",
      "."
    ],
    "code": [
      "db",
      ".",
      "execute",
      "(",
      "\"INSERT INTO present VALUES('test2', ?, 10)\"",
      ",",
      "(",
      "None",
      ",",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "None",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      266,
      3,
      5,
      19,
      11,
      3,
      433,
      369,
      154
    ],
    "code_indx_copy": [
      252,
      22,
      411,
      1,
      524,
      8,
      1,
      209,
      8,
      17,
      17
    ],
    "code_indx_nocopy": [
      252,
      22,
      411,
      1,
      524,
      8,
      1,
      209,
      8,
      17,
      17
    ]
  },
  {
    "intent": [
      "flatten",
      "list",
      "var_0"
    ],
    "code": [
      "[",
      "image",
      "for",
      "menuitem",
      "in",
      "var_0",
      "for",
      "image",
      "in",
      "menuitem",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "list_of_menuitems",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      433,
      4,
      25
    ],
    "code_indx_copy": [
      12,
      524,
      7,
      524,
      9,
      34,
      7,
      524,
      9,
      524,
      16
    ],
    "code_indx_nocopy": [
      12,
      524,
      7,
      524,
      9,
      34,
      7,
      524,
      9,
      524,
      16
    ]
  },
  {
    "intent": [
      "append",
      "element",
      "of",
      "a",
      "set",
      "var_0",
      "to",
      "a",
      "list",
      "var_1"
    ],
    "code": [
      "var_1",
      ".",
      "extend",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "b",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      109,
      1,
      2,
      3,
      57,
      25,
      8,
      3,
      4,
      61
    ],
    "code_indx_copy": [
      91,
      22,
      524,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      91,
      22,
      524,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "append",
      "element",
      "of",
      "a",
      "set",
      "to",
      "a",
      "list",
      "in",
      "python"
    ],
    "code": [
      "a",
      ".",
      "extend",
      "(",
      "list",
      "(",
      "b",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      109,
      1,
      2,
      3,
      57,
      8,
      3,
      4,
      23,
      47
    ],
    "code_indx_copy": [
      95,
      22,
      524,
      1,
      33,
      1,
      97,
      17,
      17
    ],
    "code_indx_nocopy": [
      95,
      22,
      524,
      1,
      33,
      1,
      97,
      17,
      17
    ]
  },
  {
    "intent": [
      "write",
      "the",
      "data",
      "of",
      "dataframe",
      "var_0",
      "into",
      "text",
      "file",
      "str_0"
    ],
    "code": [
      "np",
      ".",
      "savetxt",
      "(",
      "'c:\\\\data\\\\np.txt'",
      ",",
      "var_0",
      ".",
      "values",
      ",",
      "fmt",
      "=",
      "'%d'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "np.txt",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      162,
      17,
      63,
      2,
      41,
      25,
      11,
      256,
      125,
      5
    ],
    "code_indx_copy": [
      74,
      22,
      524,
      1,
      524,
      8,
      34,
      22,
      166,
      8,
      524,
      19,
      524,
      17
    ],
    "code_indx_nocopy": [
      74,
      22,
      524,
      1,
      524,
      8,
      34,
      22,
      166,
      8,
      524,
      19,
      524,
      17
    ]
  },
  {
    "intent": [
      "write",
      "content",
      "of",
      "dataframe",
      "var_0",
      "into",
      "text",
      "file",
      "str_0"
    ],
    "code": [
      "var_0",
      ".",
      "to_csv",
      "(",
      "'str_0'",
      ",",
      "header",
      "=",
      "None",
      ",",
      "index",
      "=",
      "None",
      ",",
      "sep",
      "=",
      "' '",
      ",",
      "mode",
      "=",
      "'a'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "c:\\data\\pandas.txt",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      162,
      124,
      2,
      41,
      25,
      11,
      256,
      125,
      5
    ],
    "code_indx_copy": [
      34,
      22,
      227,
      1,
      29,
      8,
      524,
      19,
      209,
      8,
      160,
      19,
      209,
      8,
      264,
      19,
      108,
      8,
      524,
      19,
      413,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      227,
      1,
      29,
      8,
      524,
      19,
      209,
      8,
      160,
      19,
      209,
      8,
      264,
      19,
      108,
      8,
      524,
      19,
      413,
      17
    ]
  },
  {
    "intent": [
      "split",
      "a",
      "string",
      "var_0",
      "by",
      "last",
      "occurrence",
      "of",
      "character",
      "str_0"
    ],
    "code": [
      "print",
      "(",
      "var_0",
      ".",
      "rpartition",
      "(",
      "'str_0'",
      ")",
      "[",
      "0",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "x",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "-",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      138,
      3,
      13,
      25,
      42,
      164,
      50,
      2,
      95,
      5
    ],
    "code_indx_copy": [
      49,
      1,
      34,
      22,
      524,
      1,
      29,
      17,
      12,
      43,
      16,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      34,
      22,
      524,
      1,
      29,
      17,
      12,
      43,
      16,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "last",
      "part",
      "of",
      "a",
      "string",
      "before",
      "the",
      "character",
      "str_0"
    ],
    "code": [
      "print",
      "(",
      "x",
      ".",
      "rsplit",
      "(",
      "'str_0'",
      ",",
      "1",
      ")",
      "[",
      "0",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "-",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      16,
      17,
      164,
      433,
      2,
      3,
      13,
      269,
      17,
      95,
      5
    ],
    "code_indx_copy": [
      49,
      1,
      26,
      22,
      268,
      1,
      29,
      8,
      15,
      17,
      12,
      43,
      16,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      26,
      22,
      268,
      1,
      29,
      8,
      15,
      17,
      12,
      43,
      16,
      17
    ]
  },
  {
    "intent": [
      "upload",
      "file",
      "using",
      "ftp"
    ],
    "code": [
      "ftp",
      ".",
      "storlines",
      "(",
      "'STOR '",
      "+",
      "filename",
      ",",
      "open",
      "(",
      "filename",
      ",",
      "'r'",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      433,
      125,
      107,
      433
    ],
    "code_indx_copy": [
      531,
      22,
      524,
      1,
      524,
      96,
      402,
      8,
      105,
      1,
      402,
      8,
      365,
      17,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      524,
      1,
      524,
      96,
      402,
      8,
      105,
      1,
      402,
      8,
      365,
      17,
      17
    ]
  },
  {
    "intent": [
      "add",
      "one",
      "to",
      "the",
      "hidden",
      "web",
      "element",
      "with",
      "id",
      "str_0",
      "with",
      "selenium",
      "python",
      "script"
    ],
    "code": [
      "browser",
      ".",
      "execute_script",
      "(",
      "\"document.getElementById('XYZ').value+='1'\"",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "XYZ",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      58,
      292,
      8,
      17,
      433,
      433,
      1,
      77,
      219,
      5,
      77,
      48,
      47,
      235
    ],
    "code_indx_copy": [
      362,
      22,
      524,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      362,
      22,
      524,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "create",
      "array",
      "containing",
      "the",
      "maximum",
      "value",
      "of",
      "respective",
      "element",
      "of",
      "array",
      "str_0",
      "and",
      "array",
      "str_1"
    ],
    "code": [
      "np",
      ".",
      "maximum",
      "(",
      "[",
      "str_0",
      "]",
      ",",
      "[",
      "str_1",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "[2, 3, 4]",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": "[1, 5, 2]",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "[2, 3, 4]",
        "quote": "`",
        "type": "str"
      },
      "[str_1]": {
        "value": "[1, 5, 2]",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      144,
      82,
      32,
      17,
      218,
      19,
      2,
      340,
      1,
      2,
      82,
      5,
      29,
      82,
      30
    ],
    "code_indx_copy": [
      74,
      22,
      532,
      1,
      12,
      11,
      16,
      8,
      12,
      37,
      16,
      17
    ],
    "code_indx_nocopy": [
      74,
      22,
      524,
      1,
      12,
      11,
      16,
      8,
      12,
      37,
      16,
      17
    ]
  },
  {
    "intent": [
      "print",
      "a",
      "list",
      "var_0",
      "and",
      "move",
      "first",
      "3",
      "element",
      "to",
      "the",
      "end",
      "of",
      "the",
      "list"
    ],
    "code": [
      "print",
      "(",
      "var_0",
      "[",
      "3",
      ":",
      "]",
      "+",
      "var_0",
      "[",
      ":",
      "3",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "l",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      160,
      3,
      4,
      25,
      29,
      163,
      147,
      55,
      1,
      8,
      17,
      167,
      2,
      17,
      4
    ],
    "code_indx_copy": [
      49,
      1,
      34,
      12,
      54,
      13,
      16,
      96,
      34,
      12,
      13,
      54,
      16,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      34,
      12,
      54,
      13,
      16,
      96,
      34,
      12,
      13,
      54,
      16,
      17
    ]
  },
  {
    "intent": [
      "loop",
      "over",
      "file",
      "in",
      "directory",
      "str_0"
    ],
    "code": [
      "for",
      "fn",
      "in",
      "os",
      ".",
      "listdir",
      "(",
      "'str_0'",
      ")",
      ":",
      "\n",
      "    ",
      "if",
      "os",
      ".",
      "path",
      ".",
      "isfile",
      "(",
      "fn",
      ")",
      ":",
      "\n",
      "        ",
      "pass",
      "",
      ""
    ],
    "slot_map": {
      "str_0": {
        "value": ".",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      433,
      387,
      125,
      23,
      169,
      5
    ],
    "code_indx_copy": [
      7,
      524,
      9,
      113,
      22,
      198,
      1,
      29,
      17,
      13,
      161,
      216,
      67,
      113,
      22,
      114,
      22,
      474,
      1,
      524,
      17,
      13,
      161,
      368,
      217,
      218,
      218
    ],
    "code_indx_nocopy": [
      7,
      524,
      9,
      113,
      22,
      198,
      1,
      29,
      17,
      13,
      161,
      216,
      67,
      113,
      22,
      114,
      22,
      474,
      1,
      524,
      17,
      13,
      161,
      368,
      217,
      218,
      218
    ]
  },
  {
    "intent": [
      "loop",
      "over",
      "file",
      "in",
      "directory",
      "var_0"
    ],
    "code": [
      "for",
      "root",
      ",",
      "dirs",
      ",",
      "filenames",
      "in",
      "os",
      ".",
      "walk",
      "(",
      "var_0",
      ")",
      ":",
      "\n",
      "    ",
      "for",
      "f",
      "in",
      "filenames",
      ":",
      "\n",
      "        ",
      "pass",
      "",
      ""
    ],
    "slot_map": {
      "var_0": {
        "value": "source",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      433,
      387,
      125,
      23,
      169,
      25
    ],
    "code_indx_copy": [
      7,
      174,
      8,
      524,
      8,
      476,
      9,
      113,
      22,
      477,
      1,
      34,
      17,
      13,
      161,
      216,
      7,
      190,
      9,
      476,
      13,
      161,
      368,
      217,
      218,
      218
    ],
    "code_indx_nocopy": [
      7,
      174,
      8,
      524,
      8,
      476,
      9,
      113,
      22,
      477,
      1,
      34,
      17,
      13,
      161,
      216,
      7,
      190,
      9,
      476,
      13,
      161,
      368,
      217,
      218,
      218
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "random",
      "list",
      "of",
      "integer"
    ],
    "code": [
      "[",
      "int",
      "(",
      "1000",
      "*",
      "random",
      ".",
      "random",
      "(",
      ")",
      ")",
      "for",
      "i",
      "in",
      "range",
      "(",
      "10000",
      ")",
      "]"
    ],
    "slot_map": {},
    "intent_indx": [
      144,
      3,
      183,
      4,
      2,
      7
    ],
    "code_indx_copy": [
      12,
      20,
      1,
      274,
      3,
      148,
      22,
      148,
      1,
      17,
      17,
      7,
      6,
      9,
      104,
      1,
      524,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      20,
      1,
      274,
      3,
      148,
      22,
      148,
      1,
      17,
      17,
      7,
      6,
      9,
      104,
      1,
      524,
      17,
      16
    ]
  },
  {
    "intent": [
      "using",
      "%",
      "f",
      "with",
      "strftime",
      "(",
      ")",
      "in",
      "python",
      "to",
      "get",
      "microsecond"
    ],
    "code": [
      "datetime",
      ".",
      "datetime",
      ".",
      "now",
      "(",
      ")",
      ".",
      "strftime",
      "(",
      "'%H:%M:%S.%f'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      107,
      433,
      433,
      77,
      433,
      202,
      26,
      23,
      47,
      8,
      16,
      433
    ],
    "code_indx_copy": [
      27,
      22,
      27,
      22,
      294,
      1,
      17,
      22,
      65,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      27,
      22,
      27,
      22,
      294,
      1,
      17,
      22,
      65,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "google",
      "app",
      "engine",
      "execute",
      "gql",
      "query",
      "str_0",
      "with",
      "parameter",
      "str_1"
    ],
    "code": [
      "db",
      ".",
      "GqlQuery",
      "(",
      "'str_0'",
      ",",
      "foo",
      ".",
      "key",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "SELECT * FROM Schedule WHERE station = $1",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "foo.key()",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      433,
      433,
      433,
      135,
      433,
      264,
      5,
      77,
      356,
      30
    ],
    "code_indx_copy": [
      252,
      22,
      524,
      1,
      29,
      8,
      524,
      22,
      102,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      252,
      22,
      524,
      1,
      29,
      8,
      524,
      22,
      102,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "filter",
      "row",
      "in",
      "panda",
      "starting",
      "with",
      "alphabet",
      "str_0",
      "using",
      "regular",
      "expression",
      "."
    ],
    "code": [
      "df",
      ".",
      "b",
      ".",
      "str",
      ".",
      "contains",
      "(",
      "'^f'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "f",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      208,
      43,
      23,
      40,
      303,
      77,
      433,
      5,
      107,
      239,
      217,
      154
    ],
    "code_indx_copy": [
      149,
      22,
      97,
      22,
      25,
      22,
      524,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      149,
      22,
      97,
      22,
      25,
      22,
      524,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "print",
      "a",
      "2",
      "dimensional",
      "list",
      "var_0",
      "a",
      "a",
      "table",
      "with",
      "delimiters"
    ],
    "code": [
      "print",
      "(",
      "'\\n'",
      ".",
      "join",
      "(",
      "'\\t'",
      ".",
      "join",
      "(",
      "str",
      "(",
      "col",
      ")",
      "for",
      "col",
      "in",
      "row",
      ")",
      "for",
      "row",
      "in",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "tab",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      160,
      3,
      79,
      80,
      4,
      25,
      3,
      3,
      369,
      77,
      433
    ],
    "code_indx_copy": [
      49,
      1,
      133,
      22,
      23,
      1,
      265,
      22,
      23,
      1,
      25,
      1,
      524,
      17,
      7,
      524,
      9,
      262,
      17,
      7,
      262,
      9,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      133,
      22,
      23,
      1,
      265,
      22,
      23,
      1,
      25,
      1,
      524,
      17,
      7,
      524,
      9,
      262,
      17,
      7,
      262,
      9,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "panda",
      ":",
      "delete",
      "row",
      "in",
      "dataframe",
      "var_0",
      "based",
      "on",
      "multiple",
      "column",
      "value"
    ],
    "code": [
      "var_0",
      ".",
      "set_index",
      "(",
      "list",
      "(",
      "'BC'",
      ")",
      ")",
      ".",
      "drop",
      "(",
      "tuples",
      ",",
      "errors",
      "=",
      "'ignore'",
      ")",
      ".",
      "reset_index",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      40,
      127,
      83,
      43,
      23,
      41,
      25,
      198,
      139,
      6,
      59,
      19
    ],
    "code_indx_copy": [
      34,
      22,
      203,
      1,
      33,
      1,
      524,
      17,
      17,
      22,
      187,
      1,
      524,
      8,
      524,
      19,
      144,
      17,
      22,
      186,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      203,
      1,
      33,
      1,
      524,
      17,
      17,
      22,
      187,
      1,
      524,
      8,
      524,
      19,
      144,
      17,
      22,
      186,
      1,
      17
    ]
  },
  {
    "intent": [
      "format",
      "the",
      "variable",
      "str_0",
      "and",
      "str_1",
      "using",
      "string",
      "formatting"
    ],
    "code": [
      "\"\"\"({:d} goals, ${:d})\"\"\"",
      ".",
      "format",
      "(",
      "self",
      ".",
      "goals",
      ",",
      "self",
      ".",
      "penalties",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "self.goals",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": "self.penalties",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      15,
      17,
      93,
      5,
      29,
      30,
      107,
      13,
      161
    ],
    "code_indx_copy": [
      524,
      22,
      38,
      1,
      310,
      22,
      524,
      8,
      310,
      22,
      524,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      38,
      1,
      310,
      22,
      524,
      8,
      310,
      22,
      524,
      17
    ]
  },
  {
    "intent": [
      "format",
      "string",
      "str_0",
      "with",
      "variable",
      "var_0",
      "and",
      "var_1"
    ],
    "code": [
      "\"\"\"str_0\"\"\"",
      ".",
      "format",
      "(",
      "self",
      ".",
      "var_0",
      ",",
      "self",
      ".",
      "var_1",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "({} goals, ${})",
        "quote": "\"",
        "type": "str"
      },
      "var_0": {
        "value": "goals",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "penalties",
        "quote": "`",
        "type": "var"
      },
      "(str_0)": {
        "value": "({} goals, ${})",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      15,
      13,
      5,
      77,
      93,
      25,
      29,
      61
    ],
    "code_indx_copy": [
      212,
      22,
      38,
      1,
      310,
      22,
      34,
      8,
      310,
      22,
      91,
      17
    ],
    "code_indx_nocopy": [
      212,
      22,
      38,
      1,
      310,
      22,
      34,
      8,
      310,
      22,
      91,
      17
    ]
  },
  {
    "intent": [
      "format",
      "string",
      "str_0"
    ],
    "code": [
      "\"\"\"str_0\"\"\"",
      ".",
      "format",
      "(",
      "self",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "({0.goals} goals, ${0.penalties})",
        "quote": "\"",
        "type": "str"
      },
      "(str_0)": {
        "value": "({0.goals} goals, ${0.penalties})",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      15,
      13,
      5
    ],
    "code_indx_copy": [
      212,
      22,
      38,
      1,
      310,
      17
    ],
    "code_indx_nocopy": [
      212,
      22,
      38,
      1,
      310,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "list",
      "of",
      "list",
      "var_0",
      "to",
      "list",
      "of",
      "integer"
    ],
    "code": [
      "[",
      "int",
      "(",
      "''",
      ".",
      "join",
      "(",
      "str",
      "(",
      "d",
      ")",
      "for",
      "d",
      "in",
      "x",
      ")",
      ")",
      "for",
      "x",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "L",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      10,
      4,
      2,
      4,
      25,
      8,
      4,
      2,
      7
    ],
    "code_indx_copy": [
      12,
      20,
      1,
      21,
      22,
      23,
      1,
      25,
      1,
      2,
      17,
      7,
      2,
      9,
      26,
      17,
      17,
      7,
      26,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      12,
      20,
      1,
      21,
      22,
      23,
      1,
      25,
      1,
      2,
      17,
      7,
      2,
      9,
      26,
      17,
      17,
      7,
      26,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "combine",
      "element",
      "of",
      "each",
      "list",
      "in",
      "list",
      "var_0",
      "into",
      "digit",
      "of",
      "a",
      "single",
      "integer"
    ],
    "code": [
      "[",
      "''",
      ".",
      "join",
      "(",
      "str",
      "(",
      "d",
      ")",
      "for",
      "d",
      "in",
      "x",
      ")",
      "for",
      "x",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "L",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      351,
      1,
      2,
      21,
      4,
      23,
      4,
      25,
      11,
      193,
      2,
      3,
      9,
      7
    ],
    "code_indx_copy": [
      12,
      21,
      22,
      23,
      1,
      25,
      1,
      2,
      17,
      7,
      2,
      9,
      26,
      17,
      7,
      26,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      12,
      21,
      22,
      23,
      1,
      25,
      1,
      2,
      17,
      7,
      2,
      9,
      26,
      17,
      7,
      26,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "list",
      "of",
      "list",
      "var_0",
      "to",
      "list",
      "of",
      "integer"
    ],
    "code": [
      "var_0",
      "=",
      "[",
      "int",
      "(",
      "''",
      ".",
      "join",
      "(",
      "[",
      "str",
      "(",
      "y",
      ")",
      "for",
      "y",
      "in",
      "x",
      "]",
      ")",
      ")",
      "for",
      "x",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "L",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      10,
      3,
      4,
      2,
      4,
      25,
      8,
      4,
      2,
      7
    ],
    "code_indx_copy": [
      34,
      19,
      12,
      20,
      1,
      21,
      22,
      23,
      1,
      12,
      25,
      1,
      103,
      17,
      7,
      103,
      9,
      26,
      16,
      17,
      17,
      7,
      26,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      12,
      20,
      1,
      21,
      22,
      23,
      1,
      12,
      25,
      1,
      103,
      17,
      7,
      103,
      9,
      26,
      16,
      17,
      17,
      7,
      26,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "write",
      "the",
      "element",
      "of",
      "list",
      "var_0",
      "concatenated",
      "by",
      "special",
      "character",
      "str_0",
      "to",
      "file",
      "var_1"
    ],
    "code": [
      "var_1",
      ".",
      "write",
      "(",
      "'str_0'",
      ".",
      "join",
      "(",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "lines",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "\n",
        "quote": "'",
        "type": "str"
      },
      "var_1": {
        "value": "myfile",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      162,
      17,
      1,
      2,
      4,
      25,
      433,
      42,
      433,
      95,
      5,
      8,
      125,
      61
    ],
    "code_indx_copy": [
      91,
      22,
      131,
      1,
      29,
      22,
      23,
      1,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      91,
      22,
      131,
      1,
      29,
      22,
      23,
      1,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "removing",
      "an",
      "element",
      "from",
      "a",
      "list",
      "based",
      "on",
      "a",
      "predicate",
      "str_0",
      "or",
      "str_1"
    ],
    "code": [
      "[",
      "x",
      "for",
      "x",
      "in",
      "[",
      "'AAT'",
      ",",
      "'XAC'",
      ",",
      "'ANT'",
      ",",
      "'TTA'",
      "]",
      "if",
      "'str_0'",
      "not",
      "in",
      "x",
      "and",
      "'str_1'",
      "not",
      "in",
      "\n",
      "x",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "X",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "N",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      96,
      216,
      1,
      56,
      3,
      4,
      198,
      139,
      3,
      433,
      5,
      329,
      30
    ],
    "code_indx_copy": [
      12,
      26,
      7,
      26,
      9,
      12,
      524,
      8,
      524,
      8,
      524,
      8,
      524,
      16,
      67,
      29,
      281,
      9,
      26,
      458,
      63,
      281,
      9,
      161,
      26,
      16
    ],
    "code_indx_nocopy": [
      12,
      26,
      7,
      26,
      9,
      12,
      524,
      8,
      524,
      8,
      524,
      8,
      524,
      16,
      67,
      29,
      281,
      9,
      26,
      458,
      63,
      281,
      9,
      161,
      26,
      16
    ]
  },
  {
    "intent": [
      "remove",
      "duplicate",
      "word",
      "from",
      "a",
      "string",
      "var_0",
      "using",
      "regex"
    ],
    "code": [
      "var_0",
      "=",
      "re",
      ".",
      "sub",
      "(",
      "'\\\\b(\\\\w+)( \\\\1\\\\b)+'",
      ",",
      "'\\\\1'",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "text",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      257,
      320,
      39,
      56,
      3,
      13,
      25,
      107,
      38
    ],
    "code_indx_copy": [
      34,
      19,
      39,
      22,
      40,
      1,
      524,
      8,
      41,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      39,
      22,
      40,
      1,
      524,
      8,
      41,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "count",
      "non",
      "zero",
      "value",
      "in",
      "each",
      "column",
      "in",
      "panda",
      "data",
      "frame"
    ],
    "code": [
      "df",
      ".",
      "astype",
      "(",
      "bool",
      ")",
      ".",
      "sum",
      "(",
      "axis",
      "=",
      "1",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      172,
      433,
      176,
      19,
      23,
      21,
      59,
      23,
      40,
      63,
      64
    ],
    "code_indx_copy": [
      149,
      22,
      242,
      1,
      457,
      17,
      22,
      0,
      1,
      42,
      19,
      15,
      17
    ],
    "code_indx_nocopy": [
      149,
      22,
      242,
      1,
      457,
      17,
      22,
      0,
      1,
      42,
      19,
      15,
      17
    ]
  },
  {
    "intent": [
      "search",
      "for",
      "string",
      "that",
      "match",
      "regular",
      "expression",
      "pattern",
      "str_0",
      "in",
      "string",
      "str_1"
    ],
    "code": [
      "re",
      ".",
      "search",
      "(",
      "'str_0'",
      ",",
      "'str_1'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "(?<!Distillr)\\\\AcroTray\\.exe",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "C:\\SomeDir\\AcroTray.exe",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      69,
      20,
      13,
      188,
      105,
      239,
      217,
      51,
      5,
      23,
      13,
      30
    ],
    "code_indx_copy": [
      39,
      22,
      93,
      1,
      29,
      8,
      63,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      93,
      1,
      29,
      8,
      63,
      17
    ]
  },
  {
    "intent": [
      "split",
      "string",
      "str_0",
      "into",
      "a",
      "list",
      "on",
      "white",
      "space"
    ],
    "code": [
      "\"\"\"str_0\"\"\"",
      ".",
      "split",
      "(",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "QH QD JC KD JS",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      138,
      13,
      5,
      11,
      3,
      4,
      139,
      131,
      132
    ],
    "code_indx_copy": [
      212,
      22,
      71,
      1,
      17
    ],
    "code_indx_nocopy": [
      212,
      22,
      71,
      1,
      17
    ]
  },
  {
    "intent": [
      "search",
      "for",
      "occurrence",
      "of",
      "regex",
      "pattern",
      "str_0",
      "in",
      "xml",
      "string",
      "var_0"
    ],
    "code": [
      "print",
      "(",
      "re",
      ".",
      "search",
      "(",
      "'str_0'",
      ",",
      "var_0",
      ")",
      ".",
      "group",
      "(",
      "0",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": ">.*<",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "line",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      69,
      20,
      50,
      2,
      38,
      51,
      5,
      23,
      433,
      13,
      25
    ],
    "code_indx_copy": [
      49,
      1,
      39,
      22,
      93,
      1,
      29,
      8,
      34,
      17,
      22,
      120,
      1,
      43,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      39,
      22,
      93,
      1,
      29,
      8,
      34,
      17,
      22,
      120,
      1,
      43,
      17,
      17
    ]
  },
  {
    "intent": [
      "erase",
      "all",
      "the",
      "content",
      "of",
      "a",
      "file",
      "var_0"
    ],
    "code": [
      "open",
      "(",
      "var_0",
      ",",
      "'w'",
      ")",
      ".",
      "close",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "filename",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      433,
      36,
      17,
      124,
      2,
      3,
      125,
      25
    ],
    "code_indx_copy": [
      105,
      1,
      34,
      8,
      497,
      17,
      22,
      506,
      1,
      17
    ],
    "code_indx_nocopy": [
      105,
      1,
      34,
      8,
      497,
      17,
      22,
      506,
      1,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "string",
      "into",
      "datetime",
      "using",
      "the",
      "format",
      "str_0"
    ],
    "code": [
      "datetime",
      ".",
      "datetime",
      ".",
      "strptime",
      "(",
      "string_date",
      ",",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "%Y-%m-%d %H:%M:%S.%f",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      10,
      3,
      13,
      11,
      12,
      107,
      17,
      15,
      5
    ],
    "code_indx_copy": [
      27,
      22,
      27,
      22,
      28,
      1,
      524,
      8,
      29,
      17
    ],
    "code_indx_nocopy": [
      27,
      22,
      27,
      22,
      28,
      1,
      524,
      8,
      29,
      17
    ]
  },
  {
    "intent": [
      "find",
      "the",
      "index",
      "of",
      "a",
      "list",
      "with",
      "the",
      "first",
      "element",
      "equal",
      "to",
      "str_0",
      "within",
      "the",
      "list",
      "of",
      "list",
      "var_0"
    ],
    "code": [
      "[",
      "index",
      "for",
      "index",
      ",",
      "item",
      "in",
      "enumerate",
      "(",
      "var_0",
      ")",
      "if",
      "item",
      "[",
      "0",
      "]",
      "==",
      "'str_0'",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "332",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "thelist",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      45,
      17,
      35,
      2,
      3,
      4,
      77,
      17,
      147,
      1,
      103,
      8,
      5,
      52,
      17,
      4,
      2,
      4,
      25
    ],
    "code_indx_copy": [
      12,
      160,
      7,
      160,
      8,
      387,
      9,
      10,
      1,
      34,
      17,
      67,
      387,
      12,
      43,
      16,
      76,
      29,
      16
    ],
    "code_indx_nocopy": [
      12,
      160,
      7,
      160,
      8,
      387,
      9,
      10,
      1,
      34,
      17,
      67,
      387,
      12,
      43,
      16,
      76,
      29,
      16
    ]
  },
  {
    "intent": [
      "lower",
      "a",
      "string",
      "var_0",
      "and",
      "remove",
      "non-alphanumeric",
      "character",
      "aside",
      "from",
      "space"
    ],
    "code": [
      "re",
      ".",
      "sub",
      "(",
      "'[^\\\\sa-zA-Z0-9]'",
      ",",
      "''",
      ",",
      "var_0",
      ")",
      ".",
      "lower",
      "(",
      ")",
      ".",
      "strip",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "text",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      433,
      3,
      13,
      25,
      29,
      257,
      433,
      95,
      433,
      56,
      132
    ],
    "code_indx_copy": [
      39,
      22,
      40,
      1,
      524,
      8,
      21,
      8,
      34,
      17,
      22,
      152,
      1,
      17,
      22,
      170,
      1,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      40,
      1,
      524,
      8,
      21,
      8,
      34,
      17,
      22,
      152,
      1,
      17,
      22,
      170,
      1,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "all",
      "non-alphanumeric",
      "character",
      "except",
      "space",
      "from",
      "a",
      "string",
      "var_0",
      "and",
      "lower",
      "it"
    ],
    "code": [
      "re",
      ".",
      "sub",
      "(",
      "'(?!\\\\s)[\\\\W_]'",
      ",",
      "''",
      ",",
      "var_0",
      ")",
      ".",
      "lower",
      "(",
      ")",
      ".",
      "strip",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "text",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      257,
      36,
      433,
      95,
      433,
      132,
      56,
      3,
      13,
      25,
      29,
      433,
      89
    ],
    "code_indx_copy": [
      39,
      22,
      40,
      1,
      524,
      8,
      21,
      8,
      34,
      17,
      22,
      152,
      1,
      17,
      22,
      170,
      1,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      40,
      1,
      524,
      8,
      21,
      8,
      34,
      17,
      22,
      152,
      1,
      17,
      22,
      170,
      1,
      17
    ]
  },
  {
    "intent": [
      "subscript",
      "text",
      "str_0",
      "with",
      "str_1",
      "a",
      "subscripted",
      "in",
      "matplotlib",
      "label",
      "for",
      "array",
      "str_2",
      "and",
      "str_3",
      "."
    ],
    "code": [
      "plt",
      ".",
      "plot",
      "(",
      "str_2",
      ",",
      "str_3",
      ",",
      "label",
      "=",
      "'H\u2082O'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "H20",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "2",
        "quote": "'",
        "type": "str"
      },
      "str_2": {
        "value": "x",
        "quote": "'",
        "type": "str"
      },
      "str_3": {
        "value": "y",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      433,
      256,
      5,
      77,
      30,
      3,
      433,
      23,
      335,
      308,
      20,
      82,
      187,
      29,
      210,
      154
    ],
    "code_indx_copy": [
      196,
      22,
      290,
      1,
      183,
      8,
      542,
      8,
      537,
      19,
      524,
      17
    ],
    "code_indx_nocopy": [
      196,
      22,
      290,
      1,
      183,
      8,
      524,
      8,
      524,
      19,
      524,
      17
    ]
  },
  {
    "intent": [
      "subscript",
      "text",
      "str_0",
      "with",
      "str_1",
      "a",
      "subscripted",
      "in",
      "matplotlib",
      "label",
      "for",
      "array",
      "str_2",
      "and",
      "str_3",
      "."
    ],
    "code": [
      "plt",
      ".",
      "plot",
      "(",
      "str_2",
      ",",
      "str_3",
      ",",
      "label",
      "=",
      "'$H_2O$'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "H20",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "2",
        "quote": "'",
        "type": "str"
      },
      "str_2": {
        "value": "x",
        "quote": "'",
        "type": "str"
      },
      "str_3": {
        "value": "y",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      433,
      256,
      5,
      77,
      30,
      3,
      433,
      23,
      335,
      308,
      20,
      82,
      187,
      29,
      210,
      154
    ],
    "code_indx_copy": [
      196,
      22,
      290,
      1,
      183,
      8,
      542,
      8,
      537,
      19,
      524,
      17
    ],
    "code_indx_nocopy": [
      196,
      22,
      290,
      1,
      183,
      8,
      524,
      8,
      524,
      19,
      524,
      17
    ]
  },
  {
    "intent": [
      "loop",
      "over",
      "a",
      "list",
      "var_0",
      "if",
      "sublists",
      "length",
      "equal",
      "3"
    ],
    "code": [
      "[",
      "x",
      "for",
      "x",
      "in",
      "var_0",
      "if",
      "len",
      "(",
      "x",
      ")",
      "==",
      "3",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "mylist",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      433,
      387,
      3,
      4,
      25,
      146,
      433,
      199,
      103,
      55
    ],
    "code_indx_copy": [
      12,
      26,
      7,
      26,
      9,
      34,
      67,
      32,
      1,
      26,
      17,
      76,
      54,
      16
    ],
    "code_indx_nocopy": [
      12,
      26,
      7,
      26,
      9,
      34,
      67,
      32,
      1,
      26,
      17,
      76,
      54,
      16
    ]
  },
  {
    "intent": [
      "initialize",
      "a",
      "list",
      "var_0",
      "of",
      "100",
      "object",
      "object",
      "(",
      ")"
    ],
    "code": [
      "var_0",
      "=",
      "[",
      "Object",
      "(",
      ")",
      "for",
      "_",
      "in",
      "range",
      "(",
      "100",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "lst",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      433,
      3,
      4,
      25,
      2,
      358,
      14,
      14,
      202,
      26
    ],
    "code_indx_copy": [
      34,
      19,
      12,
      524,
      1,
      17,
      7,
      470,
      9,
      104,
      1,
      267,
      17,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      12,
      524,
      1,
      17,
      7,
      470,
      9,
      104,
      1,
      267,
      17,
      16
    ]
  },
  {
    "intent": [
      "create",
      "list",
      "var_0",
      "containing",
      "100",
      "instance",
      "of",
      "object",
      "var_1"
    ],
    "code": [
      "var_0",
      "=",
      "[",
      "var_1",
      "(",
      ")",
      "for",
      "i",
      "in",
      "range",
      "(",
      "100",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "lst",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "Object",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      144,
      4,
      25,
      32,
      358,
      344,
      2,
      14,
      61
    ],
    "code_indx_copy": [
      34,
      19,
      12,
      91,
      1,
      17,
      7,
      6,
      9,
      104,
      1,
      267,
      17,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      12,
      91,
      1,
      17,
      7,
      6,
      9,
      104,
      1,
      267,
      17,
      16
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "content",
      "of",
      "child",
      "tag",
      "withvar_0",
      "attribute",
      "whose",
      "parent",
      "ha",
      "cs",
      "var_1"
    ],
    "code": [
      "self",
      ".",
      "driver",
      ".",
      "find_element_by_css_selector",
      "(",
      "'.someclass a'",
      ")",
      ".",
      "get_attribute",
      "(",
      "'var_0'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "href",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "someclass",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      16,
      17,
      124,
      2,
      433,
      70,
      433,
      325,
      220,
      433,
      321,
      433,
      61
    ],
    "code_indx_copy": [
      310,
      22,
      46,
      22,
      330,
      1,
      524,
      17,
      22,
      524,
      1,
      56,
      17
    ],
    "code_indx_nocopy": [
      310,
      22,
      46,
      22,
      330,
      1,
      524,
      17,
      22,
      524,
      1,
      56,
      17
    ]
  },
  {
    "intent": [
      "joining",
      "data",
      "from",
      "dataframe",
      "var_0",
      "with",
      "data",
      "from",
      "dataframe",
      "var_1",
      "based",
      "on",
      "matching",
      "value",
      "of",
      "column",
      "str_0",
      "in",
      "both",
      "dataframes"
    ],
    "code": [
      "var_0",
      ".",
      "merge",
      "(",
      "var_1",
      ",",
      "on",
      "=",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df1",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "df2",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "Date_Time",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      433,
      63,
      56,
      41,
      25,
      77,
      63,
      56,
      41,
      61,
      198,
      139,
      78,
      19,
      2,
      59,
      5,
      23,
      433,
      237
    ],
    "code_indx_copy": [
      34,
      22,
      220,
      1,
      91,
      8,
      244,
      19,
      29,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      220,
      1,
      91,
      8,
      244,
      19,
      29,
      17
    ]
  },
  {
    "intent": [
      "use",
      "str_0",
      "operator",
      "to",
      "print",
      "variable",
      "value",
      "var_0",
      "inside",
      "a",
      "string"
    ],
    "code": [
      "'first string is: %s, second one is: %s'",
      "%",
      "(",
      "var_0",
      ",",
      "'geo.tif'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "%s",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "str1",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      297,
      5,
      433,
      8,
      160,
      93,
      19,
      25,
      44,
      3,
      13
    ],
    "code_indx_copy": [
      524,
      117,
      1,
      34,
      8,
      524,
      17
    ],
    "code_indx_nocopy": [
      524,
      117,
      1,
      34,
      8,
      524,
      17
    ]
  },
  {
    "intent": [
      "split",
      "a",
      "string",
      "by",
      "a",
      "delimiter",
      "in",
      "python"
    ],
    "code": [
      "[",
      "x",
      ".",
      "strip",
      "(",
      ")",
      "for",
      "x",
      "in",
      "'2.MATCHES $$TEXT$$ STRING'",
      ".",
      "split",
      "(",
      "'$$TEXT$$'",
      ")",
      "]"
    ],
    "slot_map": {},
    "intent_indx": [
      138,
      3,
      13,
      42,
      3,
      313,
      23,
      47
    ],
    "code_indx_copy": [
      12,
      26,
      22,
      170,
      1,
      17,
      7,
      26,
      9,
      524,
      22,
      71,
      1,
      524,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      26,
      22,
      170,
      1,
      17,
      7,
      26,
      9,
      524,
      22,
      71,
      1,
      524,
      17,
      16
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "directory",
      "str_0",
      "exists",
      "and",
      "create",
      "it",
      "if",
      "necessary"
    ],
    "code": [
      "if",
      "not",
      "os",
      ".",
      "path",
      ".",
      "exists",
      "(",
      "str_0",
      ")",
      ":",
      "\n",
      "    ",
      "os",
      ".",
      "makedirs",
      "(",
      "str_0",
      ")",
      ""
    ],
    "slot_map": {
      "str_0": {
        "value": "directory",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      226,
      146,
      169,
      5,
      263,
      29,
      144,
      89,
      146,
      433
    ],
    "code_indx_copy": [
      67,
      281,
      113,
      22,
      114,
      22,
      434,
      1,
      11,
      17,
      13,
      161,
      216,
      113,
      22,
      524,
      1,
      11,
      17,
      218
    ],
    "code_indx_nocopy": [
      67,
      281,
      113,
      22,
      114,
      22,
      434,
      1,
      11,
      17,
      13,
      161,
      216,
      113,
      22,
      524,
      1,
      11,
      17,
      218
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "a",
      "directory",
      "var_0",
      "exists",
      "and",
      "create",
      "it",
      "if",
      "necessary"
    ],
    "code": [
      "try",
      ":",
      "\n",
      "    ",
      "os",
      ".",
      "makedirs",
      "(",
      "var_0",
      ")",
      "\n",
      "",
      "except",
      "OSError",
      ":",
      "\n",
      "    ",
      "if",
      "not",
      "os",
      ".",
      "var_0",
      ".",
      "isdir",
      "(",
      "var_0",
      ")",
      ":",
      "\n",
      "        ",
      "raise",
      "",
      ""
    ],
    "slot_map": {
      "var_0": {
        "value": "path",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      226,
      146,
      3,
      169,
      25,
      263,
      29,
      144,
      89,
      146,
      433
    ],
    "code_indx_copy": [
      338,
      13,
      161,
      216,
      113,
      22,
      524,
      1,
      34,
      17,
      161,
      218,
      339,
      524,
      13,
      161,
      216,
      67,
      281,
      113,
      22,
      34,
      22,
      524,
      1,
      34,
      17,
      13,
      161,
      368,
      523,
      218,
      218
    ],
    "code_indx_nocopy": [
      338,
      13,
      161,
      216,
      113,
      22,
      524,
      1,
      34,
      17,
      161,
      218,
      339,
      524,
      13,
      161,
      216,
      67,
      281,
      113,
      22,
      34,
      22,
      524,
      1,
      34,
      17,
      13,
      161,
      368,
      523,
      218,
      218
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "a",
      "directory",
      "var_0",
      "exists",
      "and",
      "create",
      "it",
      "if",
      "necessary"
    ],
    "code": [
      "distutils",
      ".",
      "dir_util",
      ".",
      "mkpath",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "path",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      226,
      146,
      3,
      169,
      25,
      263,
      29,
      144,
      89,
      146,
      433
    ],
    "code_indx_copy": [
      524,
      22,
      524,
      22,
      524,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      524,
      22,
      524,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "a",
      "directory",
      "var_0",
      "exists",
      "and",
      "create",
      "it",
      "if",
      "necessary"
    ],
    "code": [
      "try",
      ":",
      "\n",
      "    ",
      "os",
      ".",
      "makedirs",
      "(",
      "var_0",
      ")",
      "\n",
      "",
      "except",
      "OSError",
      "as",
      "exception",
      ":",
      "\n",
      "    ",
      "if",
      "exception",
      ".",
      "errno",
      "!=",
      "errno",
      ".",
      "EEXIST",
      ":",
      "\n",
      "        ",
      "raise",
      "",
      ""
    ],
    "slot_map": {
      "var_0": {
        "value": "path",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      226,
      146,
      3,
      169,
      25,
      263,
      29,
      144,
      89,
      146,
      433
    ],
    "code_indx_copy": [
      338,
      13,
      161,
      216,
      113,
      22,
      524,
      1,
      34,
      17,
      161,
      218,
      339,
      524,
      366,
      524,
      13,
      161,
      216,
      67,
      524,
      22,
      524,
      88,
      524,
      22,
      524,
      13,
      161,
      368,
      523,
      218,
      218
    ],
    "code_indx_nocopy": [
      338,
      13,
      161,
      216,
      113,
      22,
      524,
      1,
      34,
      17,
      161,
      218,
      339,
      524,
      366,
      524,
      13,
      161,
      216,
      67,
      524,
      22,
      524,
      88,
      524,
      22,
      524,
      13,
      161,
      368,
      523,
      218,
      218
    ]
  },
  {
    "intent": [
      "replace",
      "a",
      "separate",
      "word",
      "str_0",
      "by",
      "str_1",
      "in",
      "a",
      "string",
      "str_2"
    ],
    "code": [
      "re",
      ".",
      "sub",
      "(",
      "'\\\\bH3\\\\b'",
      ",",
      "'str_1'",
      ",",
      "str_2",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "H3",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "H1",
        "quote": "'",
        "type": "str"
      },
      "str_2": {
        "value": "text",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      130,
      3,
      94,
      39,
      5,
      42,
      30,
      23,
      3,
      13,
      187
    ],
    "code_indx_copy": [
      39,
      22,
      40,
      1,
      524,
      8,
      63,
      8,
      183,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      40,
      1,
      524,
      8,
      63,
      8,
      183,
      17
    ]
  },
  {
    "intent": [
      "substitute",
      "ascii",
      "letter",
      "in",
      "string",
      "str_0",
      "with",
      "empty",
      "string",
      "str_1"
    ],
    "code": [
      "re",
      ".",
      "sub",
      "(",
      "'\\\\D'",
      ",",
      "'str_1'",
      ",",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "aas30dsa20",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      433,
      366,
      346,
      23,
      13,
      5,
      77,
      143,
      13,
      30
    ],
    "code_indx_copy": [
      39,
      22,
      40,
      1,
      524,
      8,
      63,
      8,
      29,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      40,
      1,
      524,
      8,
      63,
      8,
      29,
      17
    ]
  },
  {
    "intent": [
      "get",
      "digit",
      "only",
      "from",
      "a",
      "string",
      "var_0",
      "using",
      "lambda",
      "function"
    ],
    "code": [
      "\"\"\"\"\"\"",
      ".",
      "join",
      "(",
      "[",
      "x",
      "for",
      "x",
      "in",
      "'var_0'",
      "if",
      "x",
      ".",
      "isdigit",
      "(",
      ")",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "aas30dsa20",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      16,
      193,
      337,
      56,
      3,
      13,
      25,
      107,
      66,
      67
    ],
    "code_indx_copy": [
      287,
      22,
      23,
      1,
      12,
      26,
      7,
      26,
      9,
      56,
      67,
      26,
      22,
      68,
      1,
      17,
      16,
      17
    ],
    "code_indx_nocopy": [
      287,
      22,
      23,
      1,
      12,
      26,
      7,
      26,
      9,
      56,
      67,
      26,
      22,
      68,
      1,
      17,
      16,
      17
    ]
  },
  {
    "intent": [
      "access",
      "a",
      "tag",
      "called",
      "str_0",
      "in",
      "beautifulsoup",
      "var_0"
    ],
    "code": [
      "print",
      "(",
      "var_0",
      ".",
      "find",
      "(",
      "'str_0'",
      ")",
      ".",
      "string",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "name",
        "quote": "\"",
        "type": "str"
      },
      "var_0": {
        "value": "soup",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      433,
      3,
      70,
      433,
      5,
      23,
      68,
      25
    ],
    "code_indx_copy": [
      49,
      1,
      34,
      22,
      282,
      1,
      29,
      17,
      22,
      64,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      34,
      22,
      282,
      1,
      29,
      17,
      22,
      64,
      17
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "dictionary",
      "var_0",
      "of",
      "key-value",
      "pair",
      "in",
      "pymongo",
      "cursor",
      "var_1"
    ],
    "code": [
      "var_0",
      "=",
      "dict",
      "(",
      "(",
      "record",
      "[",
      "'_id'",
      "]",
      ",",
      "record",
      ")",
      "for",
      "record",
      "in",
      "var_1",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "records",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "cursor",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      16,
      3,
      24,
      25,
      2,
      396,
      88,
      23,
      433,
      433,
      61
    ],
    "code_indx_copy": [
      34,
      19,
      70,
      1,
      1,
      524,
      12,
      524,
      16,
      8,
      524,
      17,
      7,
      524,
      9,
      91,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      70,
      1,
      1,
      524,
      12,
      524,
      16,
      8,
      524,
      17,
      7,
      524,
      9,
      91,
      17
    ]
  },
  {
    "intent": [
      "create",
      "new",
      "matrix",
      "object",
      "by",
      "concatenating",
      "data",
      "from",
      "matrix",
      "a",
      "and",
      "matrix",
      "b"
    ],
    "code": [
      "np",
      ".",
      "concatenate",
      "(",
      "(",
      "A",
      ",",
      "B",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      144,
      185,
      182,
      14,
      42,
      429,
      63,
      56,
      182,
      3,
      29,
      182,
      433
    ],
    "code_indx_copy": [
      74,
      22,
      491,
      1,
      1,
      524,
      8,
      524,
      17,
      17
    ],
    "code_indx_nocopy": [
      74,
      22,
      491,
      1,
      1,
      524,
      8,
      524,
      17,
      17
    ]
  },
  {
    "intent": [
      "concat",
      "two",
      "matrix",
      "var_0",
      "and",
      "var_1",
      "in",
      "numpy"
    ],
    "code": [
      "np",
      ".",
      "vstack",
      "(",
      "(",
      "var_0",
      ",",
      "var_1",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "A",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "B",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      433,
      28,
      182,
      25,
      29,
      61,
      23,
      81
    ],
    "code_indx_copy": [
      74,
      22,
      524,
      1,
      1,
      34,
      8,
      91,
      17,
      17
    ],
    "code_indx_nocopy": [
      74,
      22,
      524,
      1,
      1,
      34,
      8,
      91,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "character",
      "count",
      "in",
      "a",
      "file",
      "var_0"
    ],
    "code": [
      "os",
      ".",
      "stat",
      "(",
      "var_0",
      ")",
      ".",
      "st_size"
    ],
    "slot_map": {
      "var_0": {
        "value": "filepath",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      16,
      17,
      95,
      172,
      23,
      3,
      125,
      25
    ],
    "code_indx_copy": [
      113,
      22,
      459,
      1,
      34,
      17,
      22,
      524
    ],
    "code_indx_nocopy": [
      113,
      22,
      459,
      1,
      34,
      17,
      22,
      524
    ]
  },
  {
    "intent": [
      "count",
      "the",
      "occurrence",
      "of",
      "item",
      "str_0",
      "in",
      "list",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "count",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "a",
        "quote": "\"",
        "type": "str"
      },
      "var_0": {
        "value": "l",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      172,
      17,
      50,
      2,
      37,
      5,
      23,
      4,
      25
    ],
    "code_indx_copy": [
      34,
      22,
      386,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      386,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "count",
      "the",
      "occurrence",
      "of",
      "item",
      "in",
      "list",
      "var_0"
    ],
    "code": [
      "Counter",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "l",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      172,
      17,
      50,
      2,
      37,
      23,
      4,
      25
    ],
    "code_indx_copy": [
      500,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      500,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "count",
      "the",
      "occurrence",
      "of",
      "item",
      "in",
      "list",
      "var_0"
    ],
    "code": [
      "[",
      "[",
      "x",
      ",",
      "var_0",
      ".",
      "count",
      "(",
      "x",
      ")",
      "]",
      "for",
      "x",
      "in",
      "set",
      "(",
      "var_0",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "l",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      172,
      17,
      50,
      2,
      37,
      23,
      4,
      25
    ],
    "code_indx_copy": [
      12,
      12,
      26,
      8,
      34,
      22,
      386,
      1,
      26,
      17,
      16,
      7,
      26,
      9,
      189,
      1,
      34,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      12,
      26,
      8,
      34,
      22,
      386,
      1,
      26,
      17,
      16,
      7,
      26,
      9,
      189,
      1,
      34,
      17,
      16
    ]
  },
  {
    "intent": [
      "count",
      "the",
      "occurrence",
      "of",
      "item",
      "in",
      "list",
      "var_0"
    ],
    "code": [
      "dict",
      "(",
      "(",
      "x",
      ",",
      "var_0",
      ".",
      "count",
      "(",
      "x",
      ")",
      ")",
      "for",
      "x",
      "in",
      "set",
      "(",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "l",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      172,
      17,
      50,
      2,
      37,
      23,
      4,
      25
    ],
    "code_indx_copy": [
      70,
      1,
      1,
      26,
      8,
      34,
      22,
      386,
      1,
      26,
      17,
      17,
      7,
      26,
      9,
      189,
      1,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      70,
      1,
      1,
      26,
      8,
      34,
      22,
      386,
      1,
      26,
      17,
      17,
      7,
      26,
      9,
      189,
      1,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "count",
      "the",
      "occurrence",
      "of",
      "item",
      "str_0",
      "in",
      "list",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "count",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "b",
        "quote": "\"",
        "type": "str"
      },
      "var_0": {
        "value": "l",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      172,
      17,
      50,
      2,
      37,
      5,
      23,
      4,
      25
    ],
    "code_indx_copy": [
      34,
      22,
      386,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      386,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "copy",
      "file",
      "var_0",
      "to",
      "directory",
      "var_1"
    ],
    "code": [
      "shutil",
      ".",
      "copy",
      "(",
      "var_0",
      ",",
      "var_1",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "srcfile",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "dstdir",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      309,
      125,
      25,
      8,
      169,
      61
    ],
    "code_indx_copy": [
      384,
      22,
      385,
      1,
      34,
      8,
      91,
      17
    ],
    "code_indx_nocopy": [
      384,
      22,
      385,
      1,
      34,
      8,
      91,
      17
    ]
  },
  {
    "intent": [
      "find",
      "the",
      "key",
      "associated",
      "with",
      "the",
      "largest",
      "value",
      "in",
      "dictionary",
      "var_0",
      "whilst",
      "key",
      "is",
      "non-zero",
      "value"
    ],
    "code": [
      "max",
      "(",
      "k",
      "for",
      "k",
      ",",
      "v",
      "in",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      "if",
      "v",
      "!=",
      "0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "x",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      45,
      17,
      22,
      275,
      77,
      17,
      411,
      19,
      23,
      24,
      25,
      433,
      22,
      148,
      433,
      19
    ],
    "code_indx_copy": [
      179,
      1,
      89,
      7,
      89,
      8,
      90,
      9,
      34,
      22,
      35,
      1,
      17,
      67,
      90,
      88,
      43,
      17
    ],
    "code_indx_nocopy": [
      179,
      1,
      89,
      7,
      89,
      8,
      90,
      9,
      34,
      22,
      35,
      1,
      17,
      67,
      90,
      88,
      43,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "largest",
      "key",
      "whose",
      "not",
      "associated",
      "with",
      "value",
      "of",
      "0",
      "in",
      "dictionary",
      "var_0"
    ],
    "code": [
      "(",
      "k",
      "for",
      "k",
      ",",
      "v",
      "in",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      "if",
      "v",
      "!=",
      "0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "x",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      16,
      17,
      411,
      22,
      220,
      102,
      275,
      77,
      19,
      2,
      104,
      23,
      24,
      25
    ],
    "code_indx_copy": [
      1,
      89,
      7,
      89,
      8,
      90,
      9,
      34,
      22,
      35,
      1,
      17,
      67,
      90,
      88,
      43,
      17
    ],
    "code_indx_nocopy": [
      1,
      89,
      7,
      89,
      8,
      90,
      9,
      34,
      22,
      35,
      1,
      17,
      67,
      90,
      88,
      43,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "largest",
      "key",
      "in",
      "a",
      "dictionary",
      "var_0",
      "with",
      "non-zero",
      "value"
    ],
    "code": [
      "max",
      "(",
      "k",
      "for",
      "k",
      ",",
      "v",
      "in",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      "if",
      "v",
      "!=",
      "0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "x",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      16,
      17,
      411,
      22,
      23,
      3,
      24,
      25,
      77,
      433,
      19
    ],
    "code_indx_copy": [
      179,
      1,
      89,
      7,
      89,
      8,
      90,
      9,
      34,
      22,
      35,
      1,
      17,
      67,
      90,
      88,
      43,
      17
    ],
    "code_indx_nocopy": [
      179,
      1,
      89,
      7,
      89,
      8,
      90,
      9,
      34,
      22,
      35,
      1,
      17,
      67,
      90,
      88,
      43,
      17
    ]
  },
  {
    "intent": [
      "put",
      "the",
      "curser",
      "at",
      "beginning",
      "of",
      "the",
      "file"
    ],
    "code": [
      "file",
      ".",
      "seek",
      "(",
      "0",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      433,
      17,
      433,
      33,
      165,
      2,
      17,
      125
    ],
    "code_indx_copy": [
      403,
      22,
      524,
      1,
      43,
      17
    ],
    "code_indx_nocopy": [
      403,
      22,
      524,
      1,
      43,
      17
    ]
  },
  {
    "intent": [
      "combine",
      "value",
      "from",
      "column",
      "str_0",
      "and",
      "column",
      "str_1",
      "of",
      "dataframe",
      "var_0",
      "into",
      "column",
      "str_2",
      "of",
      "datafram",
      "var_0"
    ],
    "code": [
      "var_1",
      "[",
      "'str_2'",
      "]",
      "=",
      "np",
      ".",
      "where",
      "(",
      "var_1",
      "[",
      "'str_1'",
      "]",
      ".",
      "isnull",
      ",",
      "var_1",
      "[",
      "'str_0'",
      "]",
      ",",
      "var_1",
      "[",
      "'str_1'",
      "]",
      "\n",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "b",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "a",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "str_2": {
        "value": "c",
        "quote": "'",
        "type": "str"
      },
      "var_1": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      351,
      19,
      56,
      59,
      5,
      29,
      59,
      30,
      2,
      41,
      25,
      11,
      59,
      187,
      2,
      433,
      25
    ],
    "code_indx_copy": [
      91,
      12,
      150,
      16,
      19,
      74,
      22,
      75,
      1,
      91,
      12,
      63,
      16,
      22,
      430,
      8,
      91,
      12,
      29,
      16,
      8,
      91,
      12,
      63,
      16,
      161,
      17
    ],
    "code_indx_nocopy": [
      91,
      12,
      150,
      16,
      19,
      74,
      22,
      75,
      1,
      91,
      12,
      63,
      16,
      22,
      430,
      8,
      91,
      12,
      29,
      16,
      8,
      91,
      12,
      63,
      16,
      161,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "key",
      "str_0",
      "from",
      "dictionary",
      "var_0"
    ],
    "code": [
      "del",
      "var_0",
      "[",
      "'str_0'",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "ele",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "d",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      257,
      22,
      5,
      56,
      24,
      25
    ],
    "code_indx_copy": [
      283,
      34,
      12,
      29,
      16
    ],
    "code_indx_nocopy": [
      283,
      34,
      12,
      29,
      16
    ]
  },
  {
    "intent": [
      "update",
      "datetime",
      "field",
      "in",
      "var_0",
      "to",
      "be",
      "the",
      "existing",
      "var_1",
      "plus",
      "100",
      "year"
    ],
    "code": [
      "var_0",
      ".",
      "objects",
      ".",
      "update",
      "(",
      "var_1",
      "=",
      "F",
      "(",
      "'var_1'",
      ")",
      "+",
      "timedelta",
      "(",
      "days",
      "=",
      "36524.25",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "MyModel",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "timestamp",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      232,
      12,
      300,
      23,
      25,
      8,
      348,
      17,
      433,
      61,
      433,
      358,
      392
    ],
    "code_indx_copy": [
      34,
      22,
      78,
      22,
      69,
      1,
      91,
      19,
      524,
      1,
      57,
      17,
      96,
      295,
      1,
      296,
      19,
      524,
      17,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      78,
      22,
      69,
      1,
      91,
      19,
      524,
      1,
      57,
      17,
      96,
      295,
      1,
      296,
      19,
      524,
      17,
      17
    ]
  },
  {
    "intent": [
      "merge",
      "list",
      "str_0",
      "and",
      "list",
      "str_1",
      "and",
      "list",
      "str_2",
      "into",
      "one",
      "list"
    ],
    "code": [
      "[",
      "str_0",
      "]",
      "+",
      "[",
      "str_1",
      "]",
      "+",
      "[",
      "str_2",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "['it']",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": "['was']",
        "quote": "`",
        "type": "str"
      },
      "str_2": {
        "value": "['annoying']",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "['it']",
        "quote": "`",
        "type": "str"
      },
      "[str_1]": {
        "value": "['was']",
        "quote": "`",
        "type": "str"
      },
      "[str_2]": {
        "value": "['annoying']",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      236,
      4,
      5,
      29,
      4,
      30,
      29,
      4,
      187,
      11,
      292,
      4
    ],
    "code_indx_copy": [
      12,
      11,
      16,
      96,
      12,
      37,
      16,
      96,
      12,
      183,
      16
    ],
    "code_indx_nocopy": [
      12,
      11,
      16,
      96,
      12,
      37,
      16,
      96,
      12,
      183,
      16
    ]
  },
  {
    "intent": [
      "increment",
      "a",
      "value",
      "with",
      "leading",
      "zero",
      "in",
      "a",
      "number",
      "var_0"
    ],
    "code": [
      "str",
      "(",
      "int",
      "(",
      "var_0",
      ")",
      "+",
      "1",
      ")",
      ".",
      "zfill",
      "(",
      "len",
      "(",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "x",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      433,
      3,
      19,
      77,
      433,
      176,
      23,
      3,
      74,
      25
    ],
    "code_indx_copy": [
      25,
      1,
      20,
      1,
      34,
      17,
      96,
      15,
      17,
      22,
      524,
      1,
      32,
      1,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      25,
      1,
      20,
      1,
      34,
      17,
      96,
      15,
      17,
      22,
      524,
      1,
      32,
      1,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "a",
      "panda",
      "dataframe",
      "var_0",
      "'s",
      "index",
      "is",
      "sorted"
    ],
    "code": [
      "all",
      "(",
      "var_0",
      ".",
      "index",
      "[",
      ":",
      "-",
      "1",
      "]",
      "<=",
      "var_0",
      ".",
      "index",
      "[",
      "1",
      ":",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      226,
      146,
      3,
      40,
      41,
      25,
      255,
      35,
      148,
      215
    ],
    "code_indx_copy": [
      77,
      1,
      34,
      22,
      160,
      12,
      13,
      14,
      15,
      16,
      524,
      34,
      22,
      160,
      12,
      15,
      13,
      16,
      17
    ],
    "code_indx_nocopy": [
      77,
      1,
      34,
      22,
      160,
      12,
      13,
      14,
      15,
      16,
      524,
      34,
      22,
      160,
      12,
      15,
      13,
      16,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "tuple",
      "var_0",
      "to",
      "list"
    ],
    "code": [
      "list",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "t",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      10,
      111,
      25,
      8,
      4
    ],
    "code_indx_copy": [
      33,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      33,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "list",
      "var_0",
      "to",
      "tuple"
    ],
    "code": [
      "tuple",
      "(",
      "l",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "t",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      10,
      4,
      25,
      8,
      111
    ],
    "code_indx_copy": [
      432,
      1,
      431,
      17
    ],
    "code_indx_nocopy": [
      432,
      1,
      431,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "tuple",
      "var_0",
      "to",
      "list"
    ],
    "code": [
      "var_0",
      "=",
      "map",
      "(",
      "list",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "level1",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      10,
      111,
      25,
      8,
      4
    ],
    "code_indx_copy": [
      34,
      19,
      24,
      1,
      33,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      24,
      1,
      33,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "send",
      "the",
      "output",
      "of",
      "pprint",
      "object",
      "var_0",
      "to",
      "file",
      "var_1"
    ],
    "code": [
      "pprint",
      ".",
      "pprint",
      "(",
      "var_0",
      ",",
      "var_1",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "dataobject",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "logFile",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      433,
      17,
      247,
      2,
      433,
      14,
      25,
      8,
      125,
      61
    ],
    "code_indx_copy": [
      532,
      22,
      532,
      1,
      34,
      8,
      91,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      524,
      1,
      34,
      8,
      91,
      17
    ]
  },
  {
    "intent": [
      "get",
      "index",
      "of",
      "row",
      "in",
      "column",
      "str_0"
    ],
    "code": [
      "df",
      ".",
      "loc",
      "[",
      "df",
      "[",
      "'str_0'",
      "]",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "BoolCol",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      16,
      35,
      2,
      43,
      23,
      59,
      5
    ],
    "code_indx_copy": [
      149,
      22,
      202,
      12,
      149,
      12,
      29,
      16,
      16
    ],
    "code_indx_nocopy": [
      149,
      22,
      202,
      12,
      149,
      12,
      29,
      16,
      16
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "list",
      "containing",
      "the",
      "index",
      "of",
      "row",
      "where",
      "the",
      "value",
      "of",
      "column",
      "str_0",
      "in",
      "dataframe",
      "var_0",
      "are",
      "equal",
      "to",
      "true"
    ],
    "code": [
      "var_0",
      ".",
      "iloc",
      "[",
      "np",
      ".",
      "flatnonzero",
      "(",
      "var_0",
      "[",
      "'str_0'",
      "]",
      ")",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "BoolCol",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      144,
      3,
      4,
      32,
      17,
      35,
      2,
      43,
      151,
      17,
      19,
      2,
      59,
      5,
      23,
      41,
      25,
      233,
      103,
      8,
      353
    ],
    "code_indx_copy": [
      34,
      22,
      399,
      12,
      74,
      22,
      524,
      1,
      34,
      12,
      29,
      16,
      17,
      16
    ],
    "code_indx_nocopy": [
      34,
      22,
      399,
      12,
      74,
      22,
      524,
      1,
      34,
      12,
      29,
      16,
      17,
      16
    ]
  },
  {
    "intent": [
      "get",
      "list",
      "of",
      "index",
      "of",
      "row",
      "where",
      "column",
      "str_0",
      "value",
      "match",
      "true"
    ],
    "code": [
      "df",
      "[",
      "df",
      "[",
      "'str_0'",
      "]",
      "==",
      "True",
      "]",
      ".",
      "index",
      ".",
      "tolist",
      "(",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "BoolCol",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      16,
      4,
      2,
      35,
      2,
      43,
      151,
      59,
      5,
      19,
      105,
      353
    ],
    "code_indx_copy": [
      149,
      12,
      149,
      12,
      29,
      16,
      76,
      109,
      16,
      22,
      160,
      22,
      306,
      1,
      17
    ],
    "code_indx_nocopy": [
      149,
      12,
      149,
      12,
      29,
      16,
      76,
      109,
      16,
      22,
      160,
      22,
      306,
      1,
      17
    ]
  },
  {
    "intent": [
      "get",
      "index",
      "of",
      "row",
      "in",
      "dataframe",
      "var_0",
      "which",
      "column",
      "str_0",
      "match",
      "value",
      "true"
    ],
    "code": [
      "var_0",
      "[",
      "var_0",
      "[",
      "'str_0'",
      "]",
      "]",
      ".",
      "index",
      ".",
      "tolist",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "BoolCol",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      16,
      35,
      2,
      43,
      23,
      41,
      25,
      196,
      59,
      5,
      105,
      19,
      353
    ],
    "code_indx_copy": [
      34,
      12,
      34,
      12,
      29,
      16,
      16,
      22,
      160,
      22,
      306,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      12,
      34,
      12,
      29,
      16,
      16,
      22,
      160,
      22,
      306,
      1,
      17
    ]
  },
  {
    "intent": [
      "change",
      "working",
      "directory",
      "to",
      "the",
      "directory",
      "var_0"
    ],
    "code": [
      "os",
      ".",
      "chdir",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "owd",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      212,
      410,
      169,
      8,
      17,
      169,
      25
    ],
    "code_indx_copy": [
      113,
      22,
      445,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      445,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "insert",
      "data",
      "from",
      "a",
      "string",
      "var_0",
      "to",
      "sqlite",
      "db",
      "var_1"
    ],
    "code": [
      "var_1",
      ".",
      "execute",
      "(",
      "\"INSERT INTO test VALUES (?, 'bar')\"",
      ",",
      "(",
      "var_0",
      ",",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "testfield",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "c",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      266,
      63,
      56,
      3,
      13,
      25,
      8,
      433,
      433,
      61
    ],
    "code_indx_copy": [
      91,
      22,
      411,
      1,
      524,
      8,
      1,
      34,
      8,
      17,
      17
    ],
    "code_indx_nocopy": [
      91,
      22,
      411,
      1,
      524,
      8,
      1,
      34,
      8,
      17,
      17
    ]
  },
  {
    "intent": [
      "decode",
      "string",
      "str_0",
      "into",
      "a",
      "normal",
      "string"
    ],
    "code": [
      "\"\"\"str_0\"\"\"",
      ".",
      "decode",
      "(",
      "'string_escape'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "\\x89\\n",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      177,
      13,
      5,
      11,
      3,
      433,
      13
    ],
    "code_indx_copy": [
      212,
      22,
      99,
      1,
      256,
      17
    ],
    "code_indx_nocopy": [
      212,
      22,
      99,
      1,
      256,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "raw",
      "string",
      "var_0",
      "into",
      "a",
      "normal",
      "string"
    ],
    "code": [
      "var_0",
      ".",
      "decode",
      "(",
      "'string_escape'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "raw_string",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      10,
      3,
      433,
      13,
      25,
      11,
      3,
      433,
      13
    ],
    "code_indx_copy": [
      34,
      22,
      99,
      1,
      256,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      99,
      1,
      256,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "raw",
      "string",
      "var_0",
      "into",
      "a",
      "normal",
      "string"
    ],
    "code": [
      "var_0",
      ".",
      "decode",
      "(",
      "'unicode_escape'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "raw_byte_string",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      10,
      3,
      433,
      13,
      25,
      11,
      3,
      433,
      13
    ],
    "code_indx_copy": [
      34,
      22,
      99,
      1,
      182,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      99,
      1,
      182,
      17
    ]
  },
  {
    "intent": [
      "split",
      "a",
      "string",
      "var_0",
      "with",
      "into",
      "all",
      "string",
      "of",
      "repeated",
      "character"
    ],
    "code": [
      "[",
      "m",
      ".",
      "group",
      "(",
      "0",
      ")",
      "for",
      "m",
      "in",
      "re",
      ".",
      "finditer",
      "(",
      "'(\\\\d)\\\\1*'",
      ",",
      "var_0",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      138,
      3,
      13,
      25,
      77,
      11,
      36,
      13,
      2,
      433,
      95
    ],
    "code_indx_copy": [
      12,
      92,
      22,
      120,
      1,
      43,
      17,
      7,
      92,
      9,
      39,
      22,
      121,
      1,
      524,
      8,
      34,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      92,
      22,
      120,
      1,
      43,
      17,
      7,
      92,
      9,
      39,
      22,
      121,
      1,
      524,
      8,
      34,
      17,
      16
    ]
  },
  {
    "intent": [
      "scatter",
      "a",
      "plot",
      "with",
      "x",
      ",",
      "y",
      "position",
      "of",
      "str_0",
      "and",
      "face",
      "color",
      "equal",
      "to",
      "none"
    ],
    "code": [
      "plt",
      ".",
      "scatter",
      "(",
      "np",
      ".",
      "random",
      ".",
      "randn",
      "(",
      "100",
      ")",
      ",",
      "np",
      ".",
      "random",
      ".",
      "randn",
      "(",
      "100",
      ")",
      ",",
      "facecolors",
      "=",
      "'none'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "np.random.randn(100)",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      433,
      3,
      234,
      77,
      433,
      60,
      433,
      290,
      2,
      5,
      29,
      433,
      213,
      103,
      8,
      433
    ],
    "code_indx_copy": [
      196,
      22,
      528,
      1,
      74,
      22,
      148,
      22,
      524,
      1,
      267,
      17,
      8,
      74,
      22,
      148,
      22,
      524,
      1,
      267,
      17,
      8,
      524,
      19,
      524,
      17
    ],
    "code_indx_nocopy": [
      196,
      22,
      524,
      1,
      74,
      22,
      148,
      22,
      524,
      1,
      267,
      17,
      8,
      74,
      22,
      148,
      22,
      524,
      1,
      267,
      17,
      8,
      524,
      19,
      524,
      17
    ]
  },
  {
    "intent": [
      "do",
      "a",
      "scatter",
      "plot",
      "with",
      "empty",
      "circle"
    ],
    "code": [
      "plt",
      ".",
      "plot",
      "(",
      "np",
      ".",
      "random",
      ".",
      "randn",
      "(",
      "100",
      ")",
      ",",
      "np",
      ".",
      "random",
      ".",
      "randn",
      "(",
      "100",
      ")",
      ",",
      "'o'",
      ",",
      "mfc",
      "=",
      "'none'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      311,
      3,
      433,
      234,
      77,
      143,
      433
    ],
    "code_indx_copy": [
      196,
      22,
      290,
      1,
      74,
      22,
      148,
      22,
      524,
      1,
      267,
      17,
      8,
      74,
      22,
      148,
      22,
      524,
      1,
      267,
      17,
      8,
      524,
      8,
      524,
      19,
      524,
      17
    ],
    "code_indx_nocopy": [
      196,
      22,
      290,
      1,
      74,
      22,
      148,
      22,
      524,
      1,
      267,
      17,
      8,
      74,
      22,
      148,
      22,
      524,
      1,
      267,
      17,
      8,
      524,
      8,
      524,
      19,
      524,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "a",
      "div",
      "with",
      "a",
      "id",
      "str_0",
      "using",
      "beautifulsoup"
    ],
    "code": [
      "soup",
      ".",
      "find",
      "(",
      "'div'",
      ",",
      "id",
      "=",
      "'str_0'",
      ")",
      ".",
      "decompose",
      "(",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "main-content",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      257,
      3,
      433,
      77,
      3,
      219,
      5,
      107,
      68
    ],
    "code_indx_copy": [
      61,
      22,
      282,
      1,
      524,
      8,
      80,
      19,
      29,
      17,
      22,
      524,
      1,
      17
    ],
    "code_indx_nocopy": [
      61,
      22,
      282,
      1,
      524,
      8,
      80,
      19,
      29,
      17,
      22,
      524,
      1,
      17
    ]
  },
  {
    "intent": [
      "filter",
      "row",
      "containing",
      "key",
      "word",
      "var_0",
      "in",
      "column",
      "var_1"
    ],
    "code": [
      "df",
      "[",
      "df",
      "[",
      "'var_1'",
      "]",
      ".",
      "str",
      ".",
      "contains",
      "(",
      "'var_0'",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "ball",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "ids",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      208,
      43,
      32,
      22,
      39,
      25,
      23,
      59,
      61
    ],
    "code_indx_copy": [
      149,
      12,
      149,
      12,
      57,
      16,
      22,
      25,
      22,
      524,
      1,
      56,
      17,
      16
    ],
    "code_indx_nocopy": [
      149,
      12,
      149,
      12,
      57,
      16,
      22,
      25,
      22,
      524,
      1,
      56,
      17,
      16
    ]
  },
  {
    "intent": [
      "convert",
      "index",
      "at",
      "level",
      "0",
      "into",
      "a",
      "column",
      "in",
      "dataframe",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "reset_index",
      "(",
      "level",
      "=",
      "0",
      ",",
      "inplace",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      10,
      35,
      33,
      229,
      104,
      11,
      3,
      59,
      23,
      41,
      25
    ],
    "code_indx_copy": [
      34,
      22,
      186,
      1,
      158,
      19,
      43,
      8,
      279,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      186,
      1,
      158,
      19,
      43,
      8,
      279,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "add",
      "index",
      "in",
      "a",
      "data",
      "frame",
      "var_0",
      "to",
      "a",
      "column",
      "var_1"
    ],
    "code": [
      "var_0",
      "[",
      "'var_1'",
      "]",
      "=",
      "var_0",
      ".",
      "index"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "index1",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      58,
      35,
      23,
      3,
      63,
      64,
      25,
      8,
      3,
      59,
      61
    ],
    "code_indx_copy": [
      34,
      12,
      57,
      16,
      19,
      34,
      22,
      160
    ],
    "code_indx_nocopy": [
      34,
      12,
      57,
      16,
      19,
      34,
      22,
      160
    ]
  },
  {
    "intent": [
      "convert",
      "panda",
      "index",
      "in",
      "a",
      "dataframe",
      "to",
      "column"
    ],
    "code": [
      "df",
      ".",
      "reset_index",
      "(",
      "level",
      "=",
      "[",
      "'tick'",
      ",",
      "'obs'",
      "]",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      10,
      40,
      35,
      23,
      3,
      41,
      8,
      59
    ],
    "code_indx_copy": [
      149,
      22,
      186,
      1,
      158,
      19,
      12,
      524,
      8,
      524,
      16,
      17
    ],
    "code_indx_nocopy": [
      149,
      22,
      186,
      1,
      158,
      19,
      12,
      524,
      8,
      524,
      16,
      17
    ]
  },
  {
    "intent": [
      "get",
      "reverse",
      "of",
      "list",
      "item",
      "from",
      "list",
      "str_0",
      "using",
      "extended",
      "slicing"
    ],
    "code": [
      "[",
      "x",
      "[",
      ":",
      ":",
      "-",
      "1",
      "]",
      "for",
      "x",
      "in",
      "str_0",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "b",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      16,
      271,
      2,
      4,
      37,
      56,
      4,
      5,
      107,
      433,
      433
    ],
    "code_indx_copy": [
      12,
      26,
      12,
      13,
      13,
      14,
      15,
      16,
      7,
      26,
      9,
      11,
      16
    ],
    "code_indx_nocopy": [
      12,
      26,
      12,
      13,
      13,
      14,
      15,
      16,
      7,
      26,
      9,
      11,
      16
    ]
  },
  {
    "intent": [
      "join",
      "each",
      "element",
      "in",
      "array",
      "var_0",
      "with",
      "element",
      "at",
      "the",
      "same",
      "index",
      "in",
      "array",
      "var_1",
      "a",
      "a",
      "tuple"
    ],
    "code": [
      "np",
      ".",
      "array",
      "(",
      "[",
      "zip",
      "(",
      "x",
      ",",
      "y",
      ")",
      "for",
      "x",
      ",",
      "y",
      "in",
      "zip",
      "(",
      "var_0",
      ",",
      "var_1",
      ")",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "b",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      270,
      21,
      1,
      23,
      82,
      25,
      77,
      1,
      33,
      17,
      34,
      35,
      23,
      82,
      61,
      3,
      3,
      111
    ],
    "code_indx_copy": [
      74,
      22,
      175,
      1,
      12,
      36,
      1,
      26,
      8,
      103,
      17,
      7,
      26,
      8,
      103,
      9,
      36,
      1,
      34,
      8,
      91,
      17,
      16,
      17
    ],
    "code_indx_nocopy": [
      74,
      22,
      175,
      1,
      12,
      36,
      1,
      26,
      8,
      103,
      17,
      7,
      26,
      8,
      103,
      9,
      36,
      1,
      34,
      8,
      91,
      17,
      16,
      17
    ]
  },
  {
    "intent": [
      "zip",
      "two",
      "2-d",
      "array",
      "var_0",
      "and",
      "var_1"
    ],
    "code": [
      "np",
      ".",
      "array",
      "(",
      "zip",
      "(",
      "var_0",
      ".",
      "ravel",
      "(",
      ")",
      ",",
      "var_1",
      ".",
      "ravel",
      "(",
      ")",
      ")",
      ",",
      "dtype",
      "=",
      "'i4,i4'",
      ")",
      ".",
      "reshape",
      "(",
      "var_0",
      ".",
      "shape",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "b",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      27,
      28,
      433,
      82,
      25,
      29,
      61
    ],
    "code_indx_copy": [
      74,
      22,
      175,
      1,
      36,
      1,
      34,
      22,
      524,
      1,
      17,
      8,
      91,
      22,
      524,
      1,
      17,
      17,
      8,
      177,
      19,
      524,
      17,
      22,
      361,
      1,
      34,
      22,
      223,
      17
    ],
    "code_indx_nocopy": [
      74,
      22,
      175,
      1,
      36,
      1,
      34,
      22,
      524,
      1,
      17,
      8,
      91,
      22,
      524,
      1,
      17,
      17,
      8,
      177,
      19,
      524,
      17,
      22,
      361,
      1,
      34,
      22,
      223,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "list",
      "var_0",
      "into",
      "a",
      "comma",
      "separated",
      "string"
    ],
    "code": [
      "\"\"\",\"\"\"",
      ".",
      "join",
      "(",
      "[",
      "str",
      "(",
      "i",
      ")",
      "for",
      "i",
      "in",
      "var_0",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "list_of_ints",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      10,
      4,
      25,
      11,
      3,
      249,
      322,
      13
    ],
    "code_indx_copy": [
      524,
      22,
      23,
      1,
      12,
      25,
      1,
      6,
      17,
      7,
      6,
      9,
      34,
      16,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      23,
      1,
      12,
      25,
      1,
      6,
      17,
      7,
      6,
      9,
      34,
      16,
      17
    ]
  },
  {
    "intent": [
      "send",
      "a",
      "post",
      "request",
      "with",
      "raw",
      "data",
      "var_0",
      "and",
      "basic",
      "authentication",
      "with",
      "var_1",
      "and",
      "var_2"
    ],
    "code": [
      "requests",
      ".",
      "post",
      "(",
      "url",
      ",",
      "data",
      "=",
      "var_0",
      ",",
      "headers",
      "=",
      "HEADERS_DICT",
      ",",
      "auth",
      "=",
      "(",
      "var_1",
      ",",
      "var_2",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "DATA",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "username",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "password",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      433,
      3,
      386,
      98,
      77,
      433,
      63,
      25,
      29,
      433,
      433,
      77,
      61,
      29,
      62
    ],
    "code_indx_copy": [
      85,
      22,
      379,
      1,
      235,
      8,
      135,
      19,
      34,
      8,
      289,
      19,
      524,
      8,
      524,
      19,
      1,
      91,
      8,
      94,
      17,
      17
    ],
    "code_indx_nocopy": [
      85,
      22,
      379,
      1,
      235,
      8,
      135,
      19,
      34,
      8,
      289,
      19,
      524,
      8,
      524,
      19,
      1,
      91,
      8,
      94,
      17,
      17
    ]
  },
  {
    "intent": [
      "find",
      "last",
      "occurrence",
      "of",
      "character",
      "str_0",
      "in",
      "string",
      "str_1"
    ],
    "code": [
      "\"\"\"str_1\"\"\"",
      ".",
      "rfind",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "}",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "abcd}def}",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      45,
      164,
      50,
      2,
      95,
      5,
      23,
      13,
      30
    ],
    "code_indx_copy": [
      439,
      22,
      440,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      439,
      22,
      440,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "iterate",
      "ove",
      "list",
      "str_0",
      "using",
      "list",
      "comprehension"
    ],
    "code": [
      "print",
      "(",
      "[",
      "item",
      "for",
      "item",
      "in",
      "[",
      "str_0",
      "]",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "[1, 2, 3]",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "[1, 2, 3]",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      423,
      433,
      4,
      5,
      107,
      4,
      331
    ],
    "code_indx_copy": [
      49,
      1,
      12,
      387,
      7,
      387,
      9,
      12,
      11,
      16,
      16,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      12,
      387,
      7,
      387,
      9,
      12,
      11,
      16,
      16,
      17
    ]
  },
  {
    "intent": [
      "extract",
      "all",
      "the",
      "value",
      "with",
      "key",
      "str_0",
      "and",
      "str_1",
      "from",
      "a",
      "list",
      "of",
      "dictionary",
      "var_0",
      "to",
      "list",
      "of",
      "tuples"
    ],
    "code": [
      "[",
      "(",
      "str_0",
      "[",
      "'str_0'",
      "]",
      ",",
      "str_0",
      "[",
      "'str_1'",
      "]",
      ")",
      "for",
      "str_0",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "x",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "y",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "d",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      101,
      36,
      17,
      19,
      77,
      22,
      5,
      29,
      30,
      56,
      3,
      4,
      2,
      24,
      25,
      8,
      4,
      2,
      31
    ],
    "code_indx_copy": [
      12,
      1,
      11,
      12,
      29,
      16,
      8,
      11,
      12,
      63,
      16,
      17,
      7,
      11,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      12,
      1,
      11,
      12,
      29,
      16,
      8,
      11,
      12,
      63,
      16,
      17,
      7,
      11,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "filename",
      "without",
      "the",
      "extension",
      "from",
      "file",
      "str_0"
    ],
    "code": [
      "print",
      "(",
      "os",
      ".",
      "path",
      ".",
      "splitext",
      "(",
      "os",
      ".",
      "path",
      ".",
      "basename",
      "(",
      "'str_0'",
      ")",
      ")",
      "[",
      "0",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "hemanth.txt",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      16,
      17,
      433,
      100,
      17,
      433,
      56,
      125,
      5
    ],
    "code_indx_copy": [
      49,
      1,
      113,
      22,
      114,
      22,
      524,
      1,
      113,
      22,
      114,
      22,
      524,
      1,
      29,
      17,
      17,
      12,
      43,
      16,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      113,
      22,
      114,
      22,
      524,
      1,
      113,
      22,
      114,
      22,
      524,
      1,
      29,
      17,
      17,
      12,
      43,
      16,
      17
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "dictionary",
      "by",
      "adding",
      "each",
      "two",
      "adjacent",
      "element",
      "in",
      "tuple",
      "var_0",
      "a",
      "key/value",
      "pair",
      "to",
      "it"
    ],
    "code": [
      "dict",
      "(",
      "var_0",
      "[",
      "i",
      ":",
      "i",
      "+",
      "2",
      "]",
      "for",
      "i",
      "in",
      "range",
      "(",
      "0",
      ",",
      "len",
      "(",
      "var_0",
      ")",
      ",",
      "2",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "x",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      144,
      3,
      24,
      42,
      433,
      21,
      28,
      433,
      1,
      23,
      111,
      25,
      3,
      87,
      88,
      8,
      89
    ],
    "code_indx_copy": [
      70,
      1,
      34,
      12,
      6,
      13,
      6,
      96,
      82,
      16,
      7,
      6,
      9,
      104,
      1,
      43,
      8,
      32,
      1,
      34,
      17,
      8,
      82,
      17,
      17
    ],
    "code_indx_nocopy": [
      70,
      1,
      34,
      12,
      6,
      13,
      6,
      96,
      82,
      16,
      7,
      6,
      9,
      104,
      1,
      43,
      8,
      32,
      1,
      34,
      17,
      8,
      82,
      17,
      17
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "list",
      "containing",
      "flattened",
      "list",
      "str_0"
    ],
    "code": [
      "values",
      "=",
      "sum",
      "(",
      "[",
      "str_0",
      "]",
      ",",
      "[",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "[['A', 'B', 'C'], ['D', 'E', 'F'], ['G', 'H', 'I']]",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "[['A', 'B', 'C'], ['D', 'E', 'F'], ['G', 'H', 'I']]",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      144,
      3,
      4,
      32,
      433,
      4,
      5
    ],
    "code_indx_copy": [
      166,
      19,
      0,
      1,
      12,
      11,
      16,
      8,
      12,
      16,
      17
    ],
    "code_indx_nocopy": [
      166,
      19,
      0,
      1,
      12,
      11,
      16,
      8,
      12,
      16,
      17
    ]
  },
  {
    "intent": [
      "select",
      "row",
      "in",
      "a",
      "dataframe",
      "var_0",
      "column",
      "str_0",
      "between",
      "two",
      "value",
      "99",
      "and",
      "101"
    ],
    "code": [
      "var_0",
      "=",
      "var_0",
      "[",
      "(",
      "var_0",
      "[",
      "'str_0'",
      "]",
      ">=",
      "99",
      ")",
      "&",
      "(",
      "var_0",
      "[",
      "'str_0'",
      "]",
      "<=",
      "101",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "closing_price",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      76,
      43,
      23,
      3,
      41,
      25,
      59,
      5,
      267,
      28,
      19,
      433,
      29,
      433
    ],
    "code_indx_copy": [
      34,
      19,
      34,
      12,
      1,
      34,
      12,
      29,
      16,
      524,
      539,
      17,
      226,
      1,
      34,
      12,
      29,
      16,
      524,
      541,
      17,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      34,
      12,
      1,
      34,
      12,
      29,
      16,
      524,
      524,
      17,
      226,
      1,
      34,
      12,
      29,
      16,
      524,
      524,
      17,
      16
    ]
  },
  {
    "intent": [
      "replace",
      "all",
      "occurences",
      "of",
      "newlines",
      "str_0",
      "with",
      "str_1",
      "in",
      "dataframe",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "replace",
      "(",
      "{",
      "'str_0'",
      ":",
      "'str_1'",
      "}",
      ",",
      "regex",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "\n",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": "<br>",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      130,
      36,
      433,
      2,
      433,
      5,
      77,
      30,
      23,
      41,
      25
    ],
    "code_indx_copy": [
      34,
      22,
      107,
      1,
      52,
      29,
      13,
      63,
      53,
      8,
      524,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      107,
      1,
      52,
      29,
      13,
      63,
      53,
      8,
      524,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "replace",
      "all",
      "occurrence",
      "of",
      "a",
      "string",
      "str_0",
      "by",
      "string",
      "str_1",
      "in",
      "a",
      "panda",
      "data",
      "frame",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "replace",
      "(",
      "{",
      "'str_0'",
      ":",
      "'str_1'",
      "}",
      ",",
      "regex",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "\n",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": "<br>",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      130,
      36,
      50,
      2,
      3,
      13,
      5,
      42,
      13,
      30,
      23,
      3,
      40,
      63,
      64,
      25
    ],
    "code_indx_copy": [
      34,
      22,
      107,
      1,
      52,
      29,
      13,
      63,
      53,
      8,
      524,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      107,
      1,
      52,
      29,
      13,
      63,
      53,
      8,
      524,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "list",
      "containing",
      "each",
      "two",
      "adjacent",
      "letter",
      "in",
      "string",
      "var_0",
      "a",
      "it",
      "element"
    ],
    "code": [
      "[",
      "(",
      "x",
      "+",
      "y",
      ")",
      "for",
      "x",
      ",",
      "y",
      "in",
      "zip",
      "(",
      "var_0",
      ",",
      "var_0",
      "[",
      "1",
      ":",
      "]",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "word",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      144,
      3,
      4,
      32,
      21,
      28,
      433,
      346,
      23,
      13,
      25,
      3,
      89,
      1
    ],
    "code_indx_copy": [
      12,
      1,
      26,
      96,
      103,
      17,
      7,
      26,
      8,
      103,
      9,
      36,
      1,
      34,
      8,
      34,
      12,
      15,
      13,
      16,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      1,
      26,
      96,
      103,
      17,
      7,
      26,
      8,
      103,
      9,
      36,
      1,
      34,
      8,
      34,
      12,
      15,
      13,
      16,
      17,
      16
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "list",
      "of",
      "pair",
      "from",
      "a",
      "string",
      "var_0",
      "using",
      "lambda",
      "function"
    ],
    "code": [
      "list",
      "(",
      "map",
      "(",
      "lambda",
      "x",
      ",",
      "y",
      ":",
      "x",
      "+",
      "y",
      ",",
      "var_0",
      "[",
      ":",
      "-",
      "1",
      "]",
      ",",
      "var_0",
      "[",
      "1",
      ":",
      "]",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "word",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      16,
      3,
      4,
      2,
      88,
      56,
      3,
      13,
      25,
      107,
      66,
      67
    ],
    "code_indx_copy": [
      33,
      1,
      24,
      1,
      44,
      26,
      8,
      103,
      13,
      26,
      96,
      103,
      8,
      34,
      12,
      13,
      14,
      15,
      16,
      8,
      34,
      12,
      15,
      13,
      16,
      17,
      17
    ],
    "code_indx_nocopy": [
      33,
      1,
      24,
      1,
      44,
      26,
      8,
      103,
      13,
      26,
      96,
      103,
      8,
      34,
      12,
      13,
      14,
      15,
      16,
      8,
      34,
      12,
      15,
      13,
      16,
      17,
      17
    ]
  },
  {
    "intent": [
      "extract",
      "a",
      "url",
      "from",
      "a",
      "string",
      "var_0"
    ],
    "code": [
      "print",
      "(",
      "re",
      ".",
      "findall",
      "(",
      "'(https?://[^\\\\s]+)'",
      ",",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "myString",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      101,
      3,
      99,
      56,
      3,
      13,
      25
    ],
    "code_indx_copy": [
      49,
      1,
      39,
      22,
      48,
      1,
      524,
      8,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      39,
      22,
      48,
      1,
      524,
      8,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "extract",
      "a",
      "url",
      "from",
      "a",
      "string",
      "var_0"
    ],
    "code": [
      "print",
      "(",
      "re",
      ".",
      "search",
      "(",
      "'(?P<url>https?://[^\\\\s]+)'",
      ",",
      "var_0",
      ")",
      ".",
      "group",
      "(",
      "'url'",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "myString",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      101,
      3,
      99,
      56,
      3,
      13,
      25
    ],
    "code_indx_copy": [
      49,
      1,
      39,
      22,
      93,
      1,
      524,
      8,
      34,
      17,
      22,
      120,
      1,
      524,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      39,
      22,
      93,
      1,
      524,
      8,
      34,
      17,
      22,
      120,
      1,
      524,
      17,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "all",
      "special",
      "character",
      ",",
      "punctuation",
      "and",
      "space",
      "from",
      "a",
      "string",
      "var_0",
      "using",
      "regex"
    ],
    "code": [
      "re",
      ".",
      "sub",
      "(",
      "'[^A-Za-z0-9]+'",
      ",",
      "''",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "mystring",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      257,
      36,
      433,
      95,
      60,
      97,
      29,
      132,
      56,
      3,
      13,
      25,
      107,
      38
    ],
    "code_indx_copy": [
      39,
      22,
      40,
      1,
      524,
      8,
      21,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      40,
      1,
      524,
      8,
      21,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "datetimeindex",
      "containing",
      "13",
      "period",
      "of",
      "the",
      "second",
      "friday",
      "of",
      "each",
      "month",
      "starting",
      "from",
      "date",
      "str_0"
    ],
    "code": [
      "pd",
      ".",
      "date_range",
      "(",
      "'str_0'",
      ",",
      "freq",
      "=",
      "'WOM-2FRI'",
      ",",
      "periods",
      "=",
      "13",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "2016-01-01",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      144,
      3,
      433,
      32,
      433,
      433,
      2,
      17,
      117,
      433,
      2,
      21,
      374,
      303,
      56,
      133,
      5
    ],
    "code_indx_copy": [
      162,
      22,
      524,
      1,
      29,
      8,
      524,
      19,
      524,
      8,
      524,
      19,
      532,
      17
    ],
    "code_indx_nocopy": [
      162,
      22,
      524,
      1,
      29,
      8,
      524,
      19,
      524,
      8,
      524,
      19,
      524,
      17
    ]
  },
  {
    "intent": [
      "create",
      "multidimensional",
      "array",
      "var_0",
      "with",
      "3",
      "row",
      "and",
      "2",
      "column",
      "in",
      "python"
    ],
    "code": [
      "var_0",
      "=",
      "[",
      "[",
      "a",
      ",",
      "b",
      "]",
      ",",
      "[",
      "c",
      ",",
      "d",
      "]",
      ",",
      "[",
      "e",
      ",",
      "f",
      "]",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "matrix",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      144,
      433,
      82,
      25,
      77,
      55,
      43,
      29,
      79,
      59,
      23,
      47
    ],
    "code_indx_copy": [
      34,
      19,
      12,
      12,
      95,
      8,
      97,
      16,
      8,
      12,
      66,
      8,
      2,
      16,
      8,
      12,
      420,
      8,
      190,
      16,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      12,
      12,
      95,
      8,
      97,
      16,
      8,
      12,
      66,
      8,
      2,
      16,
      8,
      12,
      420,
      8,
      190,
      16,
      16
    ]
  },
  {
    "intent": [
      "replace",
      "space",
      "with",
      "underscore"
    ],
    "code": [
      "mystring",
      ".",
      "replace",
      "(",
      "' '",
      ",",
      "'_'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      130,
      132,
      77,
      433
    ],
    "code_indx_copy": [
      524,
      22,
      107,
      1,
      108,
      8,
      336,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      107,
      1,
      108,
      8,
      336,
      17
    ]
  },
  {
    "intent": [
      "get",
      "an",
      "absolute",
      "file",
      "path",
      "of",
      "file",
      "str_0"
    ],
    "code": [
      "os",
      ".",
      "path",
      ".",
      "abspath",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "mydir/myfile.txt",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      16,
      216,
      433,
      125,
      192,
      2,
      125,
      5
    ],
    "code_indx_copy": [
      113,
      22,
      114,
      22,
      377,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      114,
      22,
      377,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "split",
      "string",
      "var_0",
      "on",
      "white",
      "space"
    ],
    "code": [
      "\"\"\" \"\"\"",
      ".",
      "join",
      "(",
      "var_0",
      ".",
      "split",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "my_string",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      138,
      13,
      25,
      139,
      131,
      132
    ],
    "code_indx_copy": [
      215,
      22,
      23,
      1,
      34,
      22,
      71,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      215,
      22,
      23,
      1,
      34,
      22,
      71,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "filename",
      "without",
      "extension",
      "from",
      "file",
      "var_0"
    ],
    "code": [
      "os",
      ".",
      "path",
      ".",
      "splitext",
      "(",
      "var_0",
      ")",
      "[",
      "0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "filename",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      16,
      433,
      100,
      433,
      56,
      125,
      25
    ],
    "code_indx_copy": [
      113,
      22,
      114,
      22,
      524,
      1,
      34,
      17,
      12,
      43,
      16
    ],
    "code_indx_nocopy": [
      113,
      22,
      114,
      22,
      524,
      1,
      34,
      17,
      12,
      43,
      16
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "list",
      "containing",
      "the",
      "sum",
      "of",
      "each",
      "element",
      "var_0",
      "in",
      "list",
      "var_1",
      "plus",
      "the",
      "previous",
      "element"
    ],
    "code": [
      "[",
      "sum",
      "(",
      "var_1",
      "[",
      ":",
      "var_0",
      "]",
      ")",
      "for",
      "var_0",
      ",",
      "_",
      "in",
      "enumerate",
      "(",
      "var_1",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "i",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "l",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      16,
      3,
      4,
      32,
      17,
      110,
      2,
      21,
      1,
      25,
      23,
      4,
      61,
      433,
      17,
      433,
      1
    ],
    "code_indx_copy": [
      12,
      0,
      1,
      91,
      12,
      13,
      34,
      16,
      17,
      7,
      34,
      8,
      470,
      9,
      10,
      1,
      91,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      0,
      1,
      91,
      12,
      13,
      34,
      16,
      17,
      7,
      34,
      8,
      470,
      9,
      10,
      1,
      91,
      17,
      16
    ]
  },
  {
    "intent": [
      "split",
      "a",
      "string",
      "str_0",
      "by",
      "str_1",
      "keeping",
      "str_1",
      "in",
      "the",
      "result"
    ],
    "code": [
      "\"\"\"str_0\"\"\"",
      ".",
      "replace",
      "(",
      "'str_2'",
      ",",
      "'/\\x00/'",
      ")",
      ".",
      "split",
      "(",
      "'\\x00'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "Docs/src/Scripts/temp",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": "/",
        "quote": "`",
        "type": "str"
      },
      "str_2": {
        "value": "/",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      138,
      3,
      13,
      5,
      42,
      30,
      433,
      30,
      23,
      17,
      433
    ],
    "code_indx_copy": [
      212,
      22,
      107,
      1,
      150,
      8,
      524,
      17,
      22,
      71,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      212,
      22,
      107,
      1,
      150,
      8,
      524,
      17,
      22,
      71,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "shuffle",
      "column",
      "of",
      "an",
      "numpy",
      "array",
      "str_0"
    ],
    "code": [
      "np",
      ".",
      "random",
      ".",
      "shuffle",
      "(",
      "np",
      ".",
      "transpose",
      "(",
      "str_0",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "r",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      433,
      59,
      2,
      216,
      81,
      82,
      5
    ],
    "code_indx_copy": [
      74,
      22,
      148,
      22,
      528,
      1,
      74,
      22,
      524,
      1,
      11,
      17,
      17
    ],
    "code_indx_nocopy": [
      74,
      22,
      148,
      22,
      524,
      1,
      74,
      22,
      524,
      1,
      11,
      17,
      17
    ]
  },
  {
    "intent": [
      "copy",
      "all",
      "value",
      "in",
      "a",
      "column",
      "str_0",
      "to",
      "a",
      "new",
      "column",
      "str_1",
      "in",
      "a",
      "panda",
      "data",
      "frame",
      "str_2"
    ],
    "code": [
      "str_2",
      "[",
      "'str_1'",
      "]",
      "=",
      "str_2",
      "[",
      "'str_0'",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "B",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "D",
        "quote": "'",
        "type": "str"
      },
      "str_2": {
        "value": "df",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      309,
      36,
      19,
      23,
      3,
      59,
      5,
      8,
      3,
      185,
      59,
      30,
      23,
      3,
      40,
      63,
      64,
      187
    ],
    "code_indx_copy": [
      183,
      12,
      63,
      16,
      19,
      183,
      12,
      29,
      16
    ],
    "code_indx_nocopy": [
      183,
      12,
      63,
      16,
      19,
      183,
      12,
      29,
      16
    ]
  },
  {
    "intent": [
      "find",
      "a",
      "value",
      "within",
      "nested",
      "json",
      "str_0",
      "where",
      "the",
      "key",
      "inside",
      "another",
      "key",
      "str_1",
      "is",
      "unknown",
      "."
    ],
    "code": [
      "list",
      "(",
      "str_0",
      "[",
      "'A'",
      "]",
      "[",
      "'str_1'",
      "]",
      ".",
      "values",
      "(",
      ")",
      ")",
      "[",
      "0",
      "]",
      "[",
      "'maindata'",
      "]",
      "[",
      "0",
      "]",
      "[",
      "'Info'",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "data",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "B",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      45,
      3,
      19,
      52,
      150,
      175,
      5,
      151,
      17,
      22,
      44,
      170,
      22,
      30,
      148,
      433,
      154
    ],
    "code_indx_copy": [
      33,
      1,
      11,
      12,
      247,
      16,
      12,
      63,
      16,
      22,
      166,
      1,
      17,
      17,
      12,
      43,
      16,
      12,
      524,
      16,
      12,
      43,
      16,
      12,
      524,
      16
    ],
    "code_indx_nocopy": [
      33,
      1,
      11,
      12,
      247,
      16,
      12,
      63,
      16,
      22,
      166,
      1,
      17,
      17,
      12,
      43,
      16,
      12,
      524,
      16,
      12,
      43,
      16,
      12,
      524,
      16
    ]
  },
  {
    "intent": [
      "check",
      "character",
      "of",
      "string",
      "var_0",
      "are",
      "true",
      "predication",
      "of",
      "function",
      "var_1"
    ],
    "code": [
      "all",
      "(",
      "var_1",
      "(",
      "x",
      ")",
      "for",
      "x",
      "in",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "string",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "predicate",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      226,
      95,
      2,
      13,
      25,
      233,
      353,
      433,
      2,
      67,
      61
    ],
    "code_indx_copy": [
      77,
      1,
      91,
      1,
      26,
      17,
      7,
      26,
      9,
      34,
      17
    ],
    "code_indx_nocopy": [
      77,
      1,
      91,
      1,
      26,
      17,
      7,
      26,
      9,
      34,
      17
    ]
  },
  {
    "intent": [
      "determine",
      "number",
      "of",
      "file",
      "on",
      "a",
      "drive",
      "with",
      "python"
    ],
    "code": [
      "os",
      ".",
      "statvfs",
      "(",
      "'/'",
      ")",
      ".",
      "f_files",
      "-",
      "os",
      ".",
      "statvfs",
      "(",
      "'/'",
      ")",
      ".",
      "f_ffree"
    ],
    "slot_map": {},
    "intent_indx": [
      433,
      74,
      2,
      125,
      139,
      3,
      433,
      77,
      47
    ],
    "code_indx_copy": [
      113,
      22,
      524,
      1,
      524,
      17,
      22,
      524,
      14,
      113,
      22,
      524,
      1,
      524,
      17,
      22,
      524
    ],
    "code_indx_nocopy": [
      113,
      22,
      524,
      1,
      524,
      17,
      22,
      524,
      14,
      113,
      22,
      524,
      1,
      524,
      17,
      22,
      524
    ]
  },
  {
    "intent": [
      "how",
      "to",
      "get",
      "a",
      "single",
      "result",
      "from",
      "a",
      "sqlite",
      "query",
      "in",
      "python",
      "?"
    ],
    "code": [
      "cursor",
      ".",
      "fetchone",
      "(",
      ")",
      "[",
      "0",
      "]"
    ],
    "slot_map": {},
    "intent_indx": [
      75,
      8,
      16,
      3,
      9,
      433,
      56,
      3,
      433,
      264,
      23,
      47,
      49
    ],
    "code_indx_copy": [
      415,
      22,
      524,
      1,
      17,
      12,
      43,
      16
    ],
    "code_indx_nocopy": [
      415,
      22,
      524,
      1,
      17,
      12,
      43,
      16
    ]
  },
  {
    "intent": [
      "convert",
      "string",
      "var_0",
      "into",
      "a",
      "list",
      "of",
      "integer",
      "var_1"
    ],
    "code": [
      "var_1",
      "=",
      "[",
      "int",
      "(",
      "number",
      ")",
      "for",
      "number",
      "in",
      "var_0",
      ".",
      "split",
      "(",
      "','",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "user_input",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "user_list",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      10,
      13,
      25,
      11,
      3,
      4,
      2,
      7,
      61
    ],
    "code_indx_copy": [
      91,
      19,
      12,
      20,
      1,
      424,
      17,
      7,
      424,
      9,
      34,
      22,
      71,
      1,
      73,
      17,
      16
    ],
    "code_indx_nocopy": [
      91,
      19,
      12,
      20,
      1,
      424,
      17,
      7,
      424,
      9,
      34,
      22,
      71,
      1,
      73,
      17,
      16
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "list",
      "of",
      "integer",
      "by",
      "splitting",
      "a",
      "string",
      "var_0",
      "with",
      "comma"
    ],
    "code": [
      "[",
      "int",
      "(",
      "s",
      ")",
      "for",
      "s",
      "in",
      "var_0",
      ".",
      "split",
      "(",
      "','",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "user",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      16,
      3,
      4,
      2,
      7,
      42,
      403,
      3,
      13,
      25,
      77,
      249
    ],
    "code_indx_copy": [
      12,
      20,
      1,
      181,
      17,
      7,
      181,
      9,
      34,
      22,
      71,
      1,
      73,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      20,
      1,
      181,
      17,
      7,
      181,
      9,
      34,
      22,
      71,
      1,
      73,
      17,
      16
    ]
  },
  {
    "intent": [
      "sorting",
      "a",
      "python",
      "list",
      "by",
      "two",
      "criterion"
    ],
    "code": [
      "sorted",
      "(",
      "list",
      ",",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "(",
      "x",
      "[",
      "0",
      "]",
      ",",
      "-",
      "x",
      "[",
      "1",
      "]",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      272,
      3,
      47,
      4,
      42,
      28,
      433
    ],
    "code_indx_copy": [
      101,
      1,
      33,
      8,
      102,
      19,
      44,
      26,
      13,
      1,
      26,
      12,
      43,
      16,
      8,
      14,
      26,
      12,
      15,
      16,
      17,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      33,
      8,
      102,
      19,
      44,
      26,
      13,
      1,
      26,
      12,
      43,
      16,
      8,
      14,
      26,
      12,
      15,
      16,
      17,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "list",
      "of",
      "object",
      "var_0",
      ",",
      "based",
      "on",
      "a",
      "function",
      "var_1",
      "in",
      "descending",
      "order"
    ],
    "code": [
      "var_0",
      ".",
      "sort",
      "(",
      "key",
      "=",
      "var_1",
      ",",
      "reverse",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "ut",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "cmpfun",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      116,
      3,
      4,
      2,
      14,
      25,
      60,
      198,
      139,
      3,
      67,
      61,
      23,
      120,
      157
    ],
    "code_indx_copy": [
      34,
      22,
      124,
      1,
      102,
      19,
      91,
      8,
      129,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      124,
      1,
      102,
      19,
      91,
      8,
      129,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "reverse",
      "list",
      "var_0",
      "based",
      "on",
      "the",
      "var_1",
      "attribute",
      "of",
      "each",
      "object"
    ],
    "code": [
      "var_0",
      ".",
      "sort",
      "(",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "x",
      ".",
      "var_1",
      ",",
      "reverse",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "ut",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "count",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      271,
      4,
      25,
      198,
      139,
      17,
      61,
      325,
      2,
      21,
      14
    ],
    "code_indx_copy": [
      34,
      22,
      124,
      1,
      102,
      19,
      44,
      26,
      13,
      26,
      22,
      91,
      8,
      129,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      124,
      1,
      102,
      19,
      44,
      26,
      13,
      26,
      22,
      91,
      8,
      129,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "list",
      "of",
      "object",
      "var_0",
      "in",
      "reverse",
      "order",
      "by",
      "their",
      "var_1",
      "property"
    ],
    "code": [
      "var_0",
      ".",
      "sort",
      "(",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "x",
      ".",
      "var_1",
      ",",
      "reverse",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "ut",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "count",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      116,
      3,
      4,
      2,
      14,
      25,
      23,
      271,
      157,
      42,
      284,
      61,
      433
    ],
    "code_indx_copy": [
      34,
      22,
      124,
      1,
      102,
      19,
      44,
      26,
      13,
      26,
      22,
      91,
      8,
      129,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      124,
      1,
      102,
      19,
      44,
      26,
      13,
      26,
      22,
      91,
      8,
      129,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "click",
      "a",
      "href",
      "button",
      "str_0",
      "with",
      "selenium"
    ],
    "code": [
      "driver",
      ".",
      "find_element_by_partial_link_text",
      "(",
      "'str_0'",
      ")",
      ".",
      "click",
      "(",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "Send",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      433,
      3,
      433,
      424,
      5,
      77,
      48
    ],
    "code_indx_copy": [
      46,
      22,
      524,
      1,
      29,
      17,
      22,
      156,
      1,
      17
    ],
    "code_indx_nocopy": [
      46,
      22,
      524,
      1,
      29,
      17,
      22,
      156,
      1,
      17
    ]
  },
  {
    "intent": [
      "click",
      "a",
      "href",
      "button",
      "having",
      "text",
      "str_0",
      "with",
      "selenium"
    ],
    "code": [
      "driver",
      ".",
      "findElement",
      "(",
      "By",
      ".",
      "linkText",
      "(",
      "'str_0'",
      ")",
      ")",
      ".",
      "click",
      "(",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "Send InMail",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      433,
      3,
      433,
      424,
      90,
      256,
      5,
      77,
      48
    ],
    "code_indx_copy": [
      46,
      22,
      524,
      1,
      524,
      22,
      524,
      1,
      29,
      17,
      17,
      22,
      156,
      1,
      17
    ],
    "code_indx_nocopy": [
      46,
      22,
      524,
      1,
      524,
      22,
      524,
      1,
      29,
      17,
      17,
      22,
      156,
      1,
      17
    ]
  },
  {
    "intent": [
      "click",
      "a",
      "href",
      "button",
      "with",
      "text",
      "str_0",
      "with",
      "selenium"
    ],
    "code": [
      "driver",
      ".",
      "find_element_by_link_text",
      "(",
      "'str_0'",
      ")",
      ".",
      "click",
      "(",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "Send InMail",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      433,
      3,
      433,
      424,
      77,
      256,
      5,
      77,
      48
    ],
    "code_indx_copy": [
      46,
      22,
      524,
      1,
      29,
      17,
      22,
      156,
      1,
      17
    ],
    "code_indx_nocopy": [
      46,
      22,
      524,
      1,
      29,
      17,
      22,
      156,
      1,
      17
    ]
  },
  {
    "intent": [
      "cast",
      "an",
      "int",
      "var_0",
      "to",
      "a",
      "string",
      "and",
      "concat",
      "to",
      "string",
      "str_0"
    ],
    "code": [
      "'str_0'",
      "+",
      "str",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "i",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "ME",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      433,
      216,
      72,
      25,
      8,
      3,
      13,
      29,
      433,
      8,
      13,
      5
    ],
    "code_indx_copy": [
      29,
      96,
      25,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      29,
      96,
      25,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "sorting",
      "data",
      "in",
      "dataframe",
      "panda"
    ],
    "code": [
      "df",
      ".",
      "sort_values",
      "(",
      "[",
      "'System_num'",
      ",",
      "'Dis'",
      "]",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      272,
      63,
      23,
      41,
      40
    ],
    "code_indx_copy": [
      149,
      22,
      178,
      1,
      12,
      524,
      8,
      524,
      16,
      17
    ],
    "code_indx_nocopy": [
      149,
      22,
      178,
      1,
      12,
      524,
      8,
      524,
      16,
      17
    ]
  },
  {
    "intent": [
      "prepend",
      "the",
      "line",
      "str_0",
      "to",
      "the",
      "content",
      "of",
      "file",
      "str_1",
      "and",
      "save",
      "a",
      "the",
      "file",
      "str_2"
    ],
    "code": [
      "open",
      "(",
      "'str_2'",
      ",",
      "'w'",
      ")",
      ".",
      "write",
      "(",
      "'str_0'",
      "+",
      "open",
      "(",
      "'str_1'",
      ")",
      ".",
      "read",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "#test firstline\n",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "infile",
        "quote": "'",
        "type": "str"
      },
      "str_2": {
        "value": "outfile",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      433,
      17,
      166,
      5,
      8,
      17,
      124,
      2,
      125,
      30,
      29,
      317,
      3,
      17,
      125,
      187
    ],
    "code_indx_copy": [
      105,
      1,
      150,
      8,
      497,
      17,
      22,
      131,
      1,
      29,
      96,
      105,
      1,
      63,
      17,
      22,
      106,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      105,
      1,
      150,
      8,
      497,
      17,
      22,
      131,
      1,
      29,
      96,
      105,
      1,
      63,
      17,
      22,
      106,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "list",
      "var_0",
      "by",
      "length",
      "of",
      "value",
      "in",
      "tuple"
    ],
    "code": [
      "var_0",
      ".",
      "sort",
      "(",
      "key",
      "=",
      "lambda",
      "t",
      ":",
      "len",
      "(",
      "t",
      "[",
      "1",
      "]",
      ")",
      ",",
      "reverse",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "l",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      116,
      3,
      4,
      25,
      42,
      199,
      2,
      19,
      23,
      111
    ],
    "code_indx_copy": [
      34,
      22,
      124,
      1,
      102,
      19,
      44,
      45,
      13,
      32,
      1,
      45,
      12,
      15,
      16,
      17,
      8,
      129,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      124,
      1,
      102,
      19,
      44,
      45,
      13,
      32,
      1,
      45,
      12,
      15,
      16,
      17,
      8,
      129,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "split",
      "string",
      "var_0",
      "by",
      "word",
      "that",
      "end",
      "with",
      "str_0"
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'\\\\b(\\\\w+)d\\\\b'",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "d",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      138,
      13,
      25,
      42,
      39,
      188,
      167,
      77,
      5
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      524,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      524,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "return",
      "var_0",
      "if",
      "string",
      "var_1",
      "contains",
      "regex",
      "str_0"
    ],
    "code": [
      "bool",
      "(",
      "re",
      ".",
      "search",
      "(",
      "'str_0'",
      ",",
      "'var_1'",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "True",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "foobarrrr",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "ba[rzd]",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      155,
      25,
      146,
      13,
      61,
      73,
      38,
      5
    ],
    "code_indx_copy": [
      457,
      1,
      39,
      22,
      93,
      1,
      29,
      8,
      57,
      17,
      17
    ],
    "code_indx_nocopy": [
      457,
      1,
      39,
      22,
      93,
      1,
      29,
      8,
      57,
      17,
      17
    ]
  },
  {
    "intent": [
      "removing",
      "duplicate",
      "in",
      "list",
      "var_0"
    ],
    "code": [
      "list",
      "(",
      "set",
      "(",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "t",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      96,
      320,
      23,
      4,
      25
    ],
    "code_indx_copy": [
      33,
      1,
      189,
      1,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      33,
      1,
      189,
      1,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "removing",
      "duplicate",
      "in",
      "list",
      "var_0"
    ],
    "code": [
      "list",
      "(",
      "set",
      "(",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "source_list",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      96,
      320,
      23,
      4,
      25
    ],
    "code_indx_copy": [
      33,
      1,
      189,
      1,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      33,
      1,
      189,
      1,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "removing",
      "duplicate",
      "in",
      "list",
      "var_0"
    ],
    "code": [
      "list",
      "(",
      "OrderedDict",
      ".",
      "fromkeys",
      "(",
      "'var_0'",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "abracadabra",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      96,
      320,
      23,
      4,
      25
    ],
    "code_indx_copy": [
      33,
      1,
      288,
      22,
      524,
      1,
      56,
      17,
      17
    ],
    "code_indx_nocopy": [
      33,
      1,
      288,
      22,
      524,
      1,
      56,
      17,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "array",
      "var_0",
      "into",
      "a",
      "list"
    ],
    "code": [
      "numpy",
      ".",
      "array",
      "(",
      "var_0",
      ")",
      ".",
      "reshape",
      "(",
      "-",
      "1",
      ")",
      ".",
      "tolist",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      10,
      82,
      25,
      11,
      3,
      4
    ],
    "code_indx_copy": [
      147,
      22,
      175,
      1,
      34,
      17,
      22,
      361,
      1,
      14,
      15,
      17,
      22,
      306,
      1,
      17
    ],
    "code_indx_nocopy": [
      147,
      22,
      175,
      1,
      34,
      17,
      22,
      361,
      1,
      14,
      15,
      17,
      22,
      306,
      1,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "the",
      "first",
      "row",
      "of",
      "numpy",
      "matrix",
      "var_0",
      "to",
      "a",
      "list"
    ],
    "code": [
      "numpy",
      ".",
      "array",
      "(",
      "var_0",
      ")",
      "[",
      "0",
      "]",
      ".",
      "tolist",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      10,
      17,
      147,
      43,
      2,
      81,
      182,
      25,
      8,
      3,
      4
    ],
    "code_indx_copy": [
      147,
      22,
      175,
      1,
      34,
      17,
      12,
      43,
      16,
      22,
      306,
      1,
      17
    ],
    "code_indx_nocopy": [
      147,
      22,
      175,
      1,
      34,
      17,
      12,
      43,
      16,
      22,
      306,
      1,
      17
    ]
  },
  {
    "intent": [
      "in",
      "var_0",
      ",",
      "get",
      "the",
      "content",
      "of",
      "the",
      "sibling",
      "of",
      "the",
      "var_1",
      "tag",
      "with",
      "text",
      "content",
      "str_0"
    ],
    "code": [
      "print",
      "(",
      "var_0",
      ".",
      "find",
      "(",
      "text",
      "=",
      "'str_0'",
      ")",
      ".",
      "findNext",
      "(",
      "'var_1'",
      ")",
      ".",
      "contents",
      "[",
      "0",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "soup",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "td",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "Address:",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      23,
      25,
      60,
      16,
      17,
      124,
      2,
      17,
      433,
      2,
      17,
      61,
      70,
      77,
      256,
      124,
      5
    ],
    "code_indx_copy": [
      49,
      1,
      34,
      22,
      282,
      1,
      355,
      19,
      29,
      17,
      22,
      524,
      1,
      57,
      17,
      22,
      524,
      12,
      43,
      16,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      34,
      22,
      282,
      1,
      355,
      19,
      29,
      17,
      22,
      524,
      1,
      57,
      17,
      22,
      524,
      12,
      43,
      16,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "element",
      "of",
      "each",
      "tuple",
      "in",
      "list",
      "var_0",
      "into",
      "a",
      "string",
      "separated",
      "by",
      "character",
      "str_0"
    ],
    "code": [
      "\"\"\" \"\"\"",
      ".",
      "join",
      "(",
      "[",
      "(",
      "'%d@%d'",
      "%",
      "t",
      ")",
      "for",
      "t",
      "in",
      "var_0",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "l",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "@",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      10,
      1,
      2,
      21,
      111,
      23,
      4,
      25,
      11,
      3,
      13,
      322,
      42,
      95,
      5
    ],
    "code_indx_copy": [
      215,
      22,
      23,
      1,
      12,
      1,
      524,
      117,
      45,
      17,
      7,
      45,
      9,
      34,
      16,
      17
    ],
    "code_indx_nocopy": [
      215,
      22,
      23,
      1,
      12,
      1,
      524,
      117,
      45,
      17,
      7,
      45,
      9,
      34,
      16,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "each",
      "tuple",
      "in",
      "list",
      "var_0",
      "to",
      "a",
      "string",
      "with",
      "str_0",
      "separating",
      "the",
      "tuples",
      "'",
      "element"
    ],
    "code": [
      "\"\"\" \"\"\"",
      ".",
      "join",
      "(",
      "[",
      "(",
      "'%d@%d'",
      "%",
      "(",
      "t",
      "[",
      "0",
      "]",
      ",",
      "t",
      "[",
      "1",
      "]",
      ")",
      ")",
      "for",
      "t",
      "in",
      "var_0",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "l",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "@",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      10,
      21,
      111,
      23,
      4,
      25,
      8,
      3,
      13,
      77,
      5,
      433,
      17,
      31,
      298,
      1
    ],
    "code_indx_copy": [
      215,
      22,
      23,
      1,
      12,
      1,
      524,
      117,
      1,
      45,
      12,
      43,
      16,
      8,
      45,
      12,
      15,
      16,
      17,
      17,
      7,
      45,
      9,
      34,
      16,
      17
    ],
    "code_indx_nocopy": [
      215,
      22,
      23,
      1,
      12,
      1,
      524,
      117,
      1,
      45,
      12,
      43,
      16,
      8,
      45,
      12,
      15,
      16,
      17,
      17,
      7,
      45,
      9,
      34,
      16,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "html",
      "from",
      "the",
      "current",
      "web",
      "page",
      "of",
      "a",
      "selenium",
      "driver"
    ],
    "code": [
      "driver",
      ".",
      "execute_script",
      "(",
      "'return document.documentElement.outerHTML;'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      16,
      17,
      295,
      56,
      17,
      173,
      433,
      296,
      2,
      3,
      48,
      433
    ],
    "code_indx_copy": [
      46,
      22,
      524,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      46,
      22,
      524,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "get",
      "all",
      "match",
      "with",
      "regex",
      "pattern",
      "str_0",
      "in",
      "list",
      "of",
      "string",
      "var_0"
    ],
    "code": [
      "[",
      "i",
      "for",
      "i",
      "in",
      "var_0",
      "if",
      "re",
      ".",
      "search",
      "(",
      "'str_0'",
      ",",
      "i",
      ")",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "\\d+[xX]",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "teststr",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      16,
      36,
      105,
      77,
      38,
      51,
      5,
      23,
      4,
      2,
      13,
      25
    ],
    "code_indx_copy": [
      12,
      6,
      7,
      6,
      9,
      34,
      67,
      39,
      22,
      93,
      1,
      29,
      8,
      6,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      6,
      7,
      6,
      9,
      34,
      67,
      39,
      22,
      93,
      1,
      29,
      8,
      6,
      17,
      16
    ]
  },
  {
    "intent": [
      "select",
      "value",
      "from",
      "column",
      "str_0",
      "for",
      "which",
      "corresponding",
      "value",
      "in",
      "column",
      "str_1",
      "will",
      "be",
      "greater",
      "than",
      "50",
      ",",
      "and",
      "in",
      "column",
      "str_2",
      "-",
      "equal",
      "900",
      "in",
      "dataframe",
      "var_0"
    ],
    "code": [
      "var_0",
      "[",
      "'str_0'",
      "]",
      "[",
      "(",
      "var_0",
      "[",
      "'str_1'",
      "]",
      ">",
      "50",
      ")",
      "&",
      "(",
      "var_0",
      "[",
      "'str_2'",
      "]",
      "==",
      "900",
      ")",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "A",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "B",
        "quote": "'",
        "type": "str"
      },
      "str_2": {
        "value": "C",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      76,
      19,
      56,
      59,
      5,
      20,
      196,
      332,
      19,
      23,
      59,
      30,
      433,
      348,
      333,
      253,
      433,
      60,
      29,
      23,
      59,
      187,
      433,
      103,
      433,
      23,
      41,
      25
    ],
    "code_indx_copy": [
      34,
      12,
      29,
      16,
      12,
      1,
      34,
      12,
      63,
      16,
      214,
      401,
      17,
      226,
      1,
      34,
      12,
      150,
      16,
      76,
      552,
      17,
      16
    ],
    "code_indx_nocopy": [
      34,
      12,
      29,
      16,
      12,
      1,
      34,
      12,
      63,
      16,
      214,
      401,
      17,
      226,
      1,
      34,
      12,
      150,
      16,
      76,
      524,
      17,
      16
    ]
  },
  {
    "intent": [
      "sort",
      "dictionary",
      "var_0",
      "in",
      "ascending",
      "order",
      "based",
      "on",
      "it",
      "key",
      "and",
      "item"
    ],
    "code": [
      "sorted",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "o",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      116,
      24,
      25,
      23,
      118,
      157,
      198,
      139,
      89,
      22,
      29,
      37
    ],
    "code_indx_copy": [
      101,
      1,
      34,
      22,
      35,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      34,
      22,
      35,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "sorted",
      "list",
      "of",
      "key",
      "of",
      "dict",
      "var_0"
    ],
    "code": [
      "sorted",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "d",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      16,
      215,
      4,
      2,
      22,
      2,
      181,
      25
    ],
    "code_indx_copy": [
      101,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "how",
      "to",
      "sort",
      "dictionary",
      "by",
      "key",
      "in",
      "python"
    ],
    "code": [
      "sorted",
      "(",
      "d",
      ".",
      "items",
      "(",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      75,
      8,
      116,
      24,
      42,
      22,
      23,
      47
    ],
    "code_indx_copy": [
      101,
      1,
      2,
      22,
      35,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      2,
      22,
      35,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "string",
      "str_0",
      "into",
      "integer"
    ],
    "code": [
      "int",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "1",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      10,
      13,
      5,
      11,
      7
    ],
    "code_indx_copy": [
      20,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      20,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "function",
      "to",
      "convert",
      "string",
      "into",
      "integer"
    ],
    "code": [
      "int",
      "(",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      67,
      8,
      10,
      13,
      11,
      7
    ],
    "code_indx_copy": [
      20,
      1,
      17
    ],
    "code_indx_nocopy": [
      20,
      1,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "item",
      "in",
      "var_0",
      "to",
      "integer"
    ],
    "code": [
      "T2",
      "=",
      "[",
      "map",
      "(",
      "int",
      ",",
      "x",
      ")",
      "for",
      "x",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "T1",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      10,
      37,
      23,
      25,
      8,
      7
    ],
    "code_indx_copy": [
      524,
      19,
      12,
      24,
      1,
      20,
      8,
      26,
      17,
      7,
      26,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      524,
      19,
      12,
      24,
      1,
      20,
      8,
      26,
      17,
      7,
      26,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "call",
      "a",
      "shell",
      "script",
      "str_0",
      "using",
      "subprocess"
    ],
    "code": [
      "subprocess",
      ".",
      "call",
      "(",
      "[",
      "'str_0'",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "./test.sh",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      293,
      3,
      281,
      235,
      5,
      107,
      279
    ],
    "code_indx_copy": [
      229,
      22,
      230,
      1,
      12,
      29,
      16,
      17
    ],
    "code_indx_nocopy": [
      229,
      22,
      230,
      1,
      12,
      29,
      16,
      17
    ]
  },
  {
    "intent": [
      "call",
      "a",
      "shell",
      "script",
      "var_0",
      "using",
      "subprocess"
    ],
    "code": [
      "subprocess",
      ".",
      "call",
      "(",
      "[",
      "'var_0'",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "notepad",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      293,
      3,
      281,
      235,
      25,
      107,
      279
    ],
    "code_indx_copy": [
      229,
      22,
      230,
      1,
      12,
      56,
      16,
      17
    ],
    "code_indx_nocopy": [
      229,
      22,
      230,
      1,
      12,
      56,
      16,
      17
    ]
  },
  {
    "intent": [
      "combine",
      "list",
      "var_0",
      "and",
      "var_1",
      "by",
      "alternating",
      "their",
      "element"
    ],
    "code": [
      "[",
      "val",
      "for",
      "pair",
      "in",
      "zip",
      "(",
      "var_0",
      ",",
      "var_1",
      ")",
      "for",
      "val",
      "in",
      "pair",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "l1",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "l2",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      351,
      4,
      25,
      29,
      61,
      42,
      433,
      284,
      1
    ],
    "code_indx_copy": [
      12,
      176,
      7,
      320,
      9,
      36,
      1,
      34,
      8,
      91,
      17,
      7,
      176,
      9,
      320,
      16
    ],
    "code_indx_nocopy": [
      12,
      176,
      7,
      320,
      9,
      36,
      1,
      34,
      8,
      91,
      17,
      7,
      176,
      9,
      320,
      16
    ]
  },
  {
    "intent": [
      "encode",
      "string",
      "str_0"
    ],
    "code": [
      "encoded",
      "=",
      "base64",
      ".",
      "b64encode",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "data to be encoded",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      415,
      13,
      5
    ],
    "code_indx_copy": [
      524,
      19,
      524,
      22,
      524,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      524,
      22,
      524,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "encode",
      "a",
      "string",
      "str_0",
      "to",
      "var_0",
      "encoding"
    ],
    "code": [
      "encoded",
      "=",
      "'str_0'",
      ".",
      "encode",
      "(",
      "'var_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "data to be encoded",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "ascii",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      415,
      3,
      13,
      5,
      8,
      25,
      287
    ],
    "code_indx_copy": [
      524,
      19,
      29,
      22,
      239,
      1,
      56,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      29,
      22,
      239,
      1,
      56,
      17
    ]
  },
  {
    "intent": [
      "parse",
      "tab-delimited",
      "csv",
      "file",
      "str_0",
      "into",
      "a",
      "list"
    ],
    "code": [
      "lol",
      "=",
      "list",
      "(",
      "csv",
      ".",
      "reader",
      "(",
      "open",
      "(",
      "'str_0'",
      ",",
      "'rb'",
      ")",
      ",",
      "delimiter",
      "=",
      "'\\t'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "text.txt",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      71,
      433,
      276,
      125,
      5,
      11,
      3,
      4
    ],
    "code_indx_copy": [
      524,
      19,
      33,
      1,
      530,
      22,
      524,
      1,
      105,
      1,
      29,
      8,
      155,
      17,
      8,
      263,
      19,
      265,
      17,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      33,
      1,
      524,
      22,
      524,
      1,
      105,
      1,
      29,
      8,
      155,
      17,
      8,
      263,
      19,
      265,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "attribute",
      "var_0",
      "of",
      "object",
      "var_1"
    ],
    "code": [
      "getattr",
      "(",
      "var_1",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "my_str",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "my_object",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      16,
      325,
      25,
      2,
      14,
      61
    ],
    "code_indx_copy": [
      300,
      1,
      91,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      300,
      1,
      91,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "group",
      "a",
      "list",
      "of",
      "dicts",
      "var_0",
      "into",
      "one",
      "dict",
      "by",
      "key"
    ],
    "code": [
      "print",
      "(",
      "dict",
      "(",
      "zip",
      "(",
      "var_0",
      "[",
      "0",
      "]",
      ",",
      "zip",
      "(",
      "*",
      "[",
      "list",
      "(",
      "d",
      ".",
      "values",
      "(",
      ")",
      ")",
      "for",
      "d",
      "in",
      "var_0",
      "]",
      ")",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "LD",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      365,
      3,
      4,
      2,
      433,
      25,
      11,
      292,
      181,
      42,
      22
    ],
    "code_indx_copy": [
      49,
      1,
      70,
      1,
      36,
      1,
      34,
      12,
      43,
      16,
      8,
      36,
      1,
      3,
      12,
      33,
      1,
      2,
      22,
      166,
      1,
      17,
      17,
      7,
      2,
      9,
      34,
      16,
      17,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      70,
      1,
      36,
      1,
      34,
      12,
      43,
      16,
      8,
      36,
      1,
      3,
      12,
      33,
      1,
      2,
      22,
      166,
      1,
      17,
      17,
      7,
      2,
      9,
      34,
      16,
      17,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "how",
      "do",
      "i",
      "sum",
      "the",
      "first",
      "value",
      "in",
      "each",
      "tuple",
      "in",
      "a",
      "list",
      "of",
      "tuples",
      "in",
      "python",
      "?"
    ],
    "code": [
      "sum",
      "(",
      "[",
      "pair",
      "[",
      "0",
      "]",
      "for",
      "pair",
      "in",
      "list_of_pairs",
      "]",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      75,
      311,
      312,
      110,
      17,
      147,
      19,
      23,
      21,
      111,
      23,
      3,
      4,
      2,
      31,
      23,
      47,
      49
    ],
    "code_indx_copy": [
      0,
      1,
      12,
      320,
      12,
      43,
      16,
      7,
      320,
      9,
      524,
      16,
      17
    ],
    "code_indx_nocopy": [
      0,
      1,
      12,
      320,
      12,
      43,
      16,
      7,
      320,
      9,
      524,
      16,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "unicode",
      "string",
      "ustr_0",
      "into",
      "dictionary"
    ],
    "code": [
      "d",
      "=",
      "ast",
      ".",
      "literal_eval",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "{'code1':1,'code2':1}",
        "quote": "\"",
        "type": "str"
      },
      "{str_0}": {
        "value": "{'code1':1,'code2':1}",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      10,
      222,
      13,
      433,
      11,
      24
    ],
    "code_indx_copy": [
      2,
      19,
      272,
      22,
      273,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      2,
      19,
      272,
      22,
      273,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "find",
      "all",
      "word",
      "in",
      "a",
      "string",
      "var_0",
      "that",
      "start",
      "with",
      "the",
      "str_0",
      "sign"
    ],
    "code": [
      "[",
      "word",
      "for",
      "word",
      "in",
      "var_0",
      ".",
      "split",
      "(",
      ")",
      "if",
      "word",
      ".",
      "startswith",
      "(",
      "'str_0'",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "mystring",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "$",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      45,
      36,
      39,
      23,
      3,
      13,
      25,
      188,
      412,
      77,
      17,
      5,
      433
    ],
    "code_indx_copy": [
      12,
      487,
      7,
      487,
      9,
      34,
      22,
      71,
      1,
      17,
      67,
      487,
      22,
      453,
      1,
      29,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      487,
      7,
      487,
      9,
      34,
      22,
      71,
      1,
      17,
      67,
      487,
      22,
      453,
      1,
      29,
      17,
      16
    ]
  },
  {
    "intent": [
      "remove",
      "any",
      "url",
      "within",
      "string",
      "var_0"
    ],
    "code": [
      "var_0",
      "=",
      "re",
      ".",
      "sub",
      "(",
      "'^https?:\\\\/\\\\/.*[\\\\r\\\\n]*'",
      ",",
      "''",
      ",",
      "var_0",
      ",",
      "flags",
      "=",
      "re",
      ".",
      "MULTILINE",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "text",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      257,
      261,
      99,
      52,
      13,
      25
    ],
    "code_indx_copy": [
      34,
      19,
      39,
      22,
      40,
      1,
      524,
      8,
      21,
      8,
      34,
      8,
      524,
      19,
      39,
      22,
      524,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      39,
      22,
      40,
      1,
      524,
      8,
      21,
      8,
      34,
      8,
      524,
      19,
      39,
      22,
      524,
      17
    ]
  },
  {
    "intent": [
      "replace",
      "all",
      "element",
      "in",
      "array",
      "var_0",
      "that",
      "are",
      "not",
      "present",
      "in",
      "array",
      "str_0",
      "with",
      "zero"
    ],
    "code": [
      "np",
      ".",
      "where",
      "(",
      "np",
      ".",
      "in1d",
      "(",
      "var_0",
      ",",
      "[",
      "str_0",
      "]",
      ")",
      ".",
      "reshape",
      "(",
      "var_0",
      ".",
      "shape",
      ")",
      ",",
      "var_0",
      ",",
      "0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "A",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "[1, 3, 4]",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "[1, 3, 4]",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      130,
      36,
      1,
      23,
      82,
      25,
      188,
      233,
      102,
      343,
      23,
      82,
      5,
      77,
      176
    ],
    "code_indx_copy": [
      74,
      22,
      75,
      1,
      74,
      22,
      261,
      1,
      34,
      8,
      12,
      11,
      16,
      17,
      22,
      361,
      1,
      34,
      22,
      223,
      17,
      8,
      34,
      8,
      43,
      17
    ],
    "code_indx_nocopy": [
      74,
      22,
      75,
      1,
      74,
      22,
      261,
      1,
      34,
      8,
      12,
      11,
      16,
      17,
      22,
      361,
      1,
      34,
      22,
      223,
      17,
      8,
      34,
      8,
      43,
      17
    ]
  },
  {
    "intent": [
      "calculate",
      "mean",
      "across",
      "dimension",
      "in",
      "a",
      "2d",
      "array",
      "var_0"
    ],
    "code": [
      "np",
      ".",
      "mean",
      "(",
      "var_0",
      ",",
      "axis",
      "=",
      "1",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      242,
      388,
      433,
      394,
      23,
      3,
      227,
      82,
      25
    ],
    "code_indx_copy": [
      74,
      22,
      390,
      1,
      34,
      8,
      42,
      19,
      15,
      17
    ],
    "code_indx_nocopy": [
      74,
      22,
      390,
      1,
      34,
      8,
      42,
      19,
      15,
      17
    ]
  },
  {
    "intent": [
      "running",
      "r",
      "script",
      "str_0",
      "from",
      "python"
    ],
    "code": [
      "subprocess",
      ".",
      "call",
      "(",
      "[",
      "'/usr/bin/Rscript'",
      ",",
      "'--vanilla'",
      ",",
      "'str_0'",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "/pathto/MyrScript.r",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      433,
      433,
      235,
      5,
      56,
      47
    ],
    "code_indx_copy": [
      229,
      22,
      230,
      1,
      12,
      524,
      8,
      524,
      8,
      29,
      16,
      17
    ],
    "code_indx_nocopy": [
      229,
      22,
      230,
      1,
      12,
      524,
      8,
      524,
      8,
      29,
      16,
      17
    ]
  },
  {
    "intent": [
      "run",
      "r",
      "script",
      "str_0"
    ],
    "code": [
      "subprocess",
      ".",
      "call",
      "(",
      "'str_0'",
      ",",
      "shell",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "/usr/bin/Rscript --vanilla /pathto/MyrScript.r",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      240,
      433,
      235,
      5
    ],
    "code_indx_copy": [
      229,
      22,
      230,
      1,
      29,
      8,
      231,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      229,
      22,
      230,
      1,
      29,
      8,
      231,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "add",
      "a",
      "header",
      "to",
      "a",
      "csv",
      "file"
    ],
    "code": [
      "writer",
      ".",
      "writeheader",
      "(",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      58,
      3,
      401,
      8,
      3,
      276,
      125
    ],
    "code_indx_copy": [
      508,
      22,
      524,
      1,
      17
    ],
    "code_indx_nocopy": [
      508,
      22,
      524,
      1,
      17
    ]
  },
  {
    "intent": [
      "replacing",
      "nan",
      "in",
      "the",
      "dataframe",
      "var_0",
      "with",
      "row",
      "average"
    ],
    "code": [
      "var_0",
      ".",
      "fillna",
      "(",
      "var_0",
      ".",
      "mean",
      "(",
      "axis",
      "=",
      "1",
      ")",
      ",",
      "axis",
      "=",
      "1",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      433,
      278,
      23,
      17,
      41,
      25,
      77,
      43,
      18
    ],
    "code_indx_copy": [
      34,
      22,
      352,
      1,
      34,
      22,
      390,
      1,
      42,
      19,
      15,
      17,
      8,
      42,
      19,
      15,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      352,
      1,
      34,
      22,
      390,
      1,
      42,
      19,
      15,
      17,
      8,
      42,
      19,
      15,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "unix",
      "timestamp",
      "str_0",
      "to",
      "formatted",
      "string",
      "str_1"
    ],
    "code": [
      "time",
      ".",
      "strftime",
      "(",
      "'str_1'",
      ",",
      "time",
      ".",
      "localtime",
      "(",
      "1347517370",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "1347517370",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "%Y-%m-%d %H:%M:%S",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      10,
      433,
      433,
      5,
      8,
      277,
      13,
      30
    ],
    "code_indx_copy": [
      84,
      22,
      65,
      1,
      63,
      8,
      84,
      22,
      524,
      1,
      524,
      17,
      17
    ],
    "code_indx_nocopy": [
      84,
      22,
      65,
      1,
      63,
      8,
      84,
      22,
      524,
      1,
      524,
      17,
      17
    ]
  },
  {
    "intent": [
      "call",
      "a",
      "base",
      "class",
      "'s",
      "class",
      "method",
      "var_0",
      "from",
      "derived",
      "class",
      "var_1"
    ],
    "code": [
      "super",
      "(",
      "var_1",
      ",",
      "cls",
      ")",
      ".",
      "var_0",
      "(",
      "a",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "do",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "Derived",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      293,
      3,
      433,
      299,
      255,
      299,
      433,
      25,
      56,
      433,
      299,
      61
    ],
    "code_indx_copy": [
      492,
      1,
      91,
      8,
      524,
      17,
      22,
      34,
      1,
      95,
      17
    ],
    "code_indx_nocopy": [
      492,
      1,
      91,
      8,
      524,
      17,
      22,
      34,
      1,
      95,
      17
    ]
  },
  {
    "intent": [
      "selecting",
      "row",
      "in",
      "numpy",
      "ndarray",
      "str_0",
      ",",
      "where",
      "the",
      "value",
      "in",
      "the",
      "first",
      "column",
      "is",
      "0",
      "and",
      "value",
      "in",
      "the",
      "second",
      "column",
      "is",
      "1"
    ],
    "code": [
      "str_0",
      "[",
      "np",
      ".",
      "where",
      "(",
      "(",
      "str_0",
      "[",
      ":",
      ",",
      "(",
      "0",
      ")",
      "]",
      "==",
      "0",
      ")",
      "*",
      "(",
      "str_0",
      "[",
      ":",
      ",",
      "(",
      "1",
      ")",
      "]",
      "==",
      "1",
      ")",
      ")",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "a",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      433,
      43,
      23,
      81,
      433,
      5,
      60,
      151,
      17,
      19,
      23,
      17,
      147,
      59,
      148,
      104,
      29,
      19,
      23,
      17,
      117,
      59,
      148,
      228
    ],
    "code_indx_copy": [
      11,
      12,
      74,
      22,
      75,
      1,
      1,
      11,
      12,
      13,
      8,
      1,
      43,
      17,
      16,
      76,
      43,
      17,
      3,
      1,
      11,
      12,
      13,
      8,
      1,
      15,
      17,
      16,
      76,
      15,
      17,
      17,
      16
    ],
    "code_indx_nocopy": [
      11,
      12,
      74,
      22,
      75,
      1,
      1,
      11,
      12,
      13,
      8,
      1,
      43,
      17,
      16,
      76,
      43,
      17,
      3,
      1,
      11,
      12,
      13,
      8,
      1,
      15,
      17,
      16,
      76,
      15,
      17,
      17,
      16
    ]
  },
  {
    "intent": [
      "separate",
      "word",
      "delimited",
      "by",
      "one",
      "or",
      "more",
      "space",
      "into",
      "a",
      "list"
    ],
    "code": [
      "re",
      ".",
      "split",
      "(",
      "' +'",
      ",",
      "'hello world sample text'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      94,
      39,
      433,
      42,
      292,
      329,
      399,
      132,
      11,
      3,
      4
    ],
    "code_indx_copy": [
      39,
      22,
      71,
      1,
      524,
      8,
      524,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      71,
      1,
      524,
      8,
      524,
      17
    ]
  },
  {
    "intent": [
      "length",
      "of",
      "longest",
      "element",
      "in",
      "list",
      "var_0"
    ],
    "code": [
      "len",
      "(",
      "max",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "len",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "words",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      199,
      2,
      433,
      1,
      23,
      4,
      25
    ],
    "code_indx_copy": [
      32,
      1,
      179,
      1,
      34,
      8,
      102,
      19,
      32,
      17,
      17
    ],
    "code_indx_nocopy": [
      32,
      1,
      179,
      1,
      34,
      8,
      102,
      19,
      32,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "value",
      "associated",
      "with",
      "unicode",
      "key",
      "str_0",
      "of",
      "first",
      "dictionary",
      "in",
      "list",
      "var_0"
    ],
    "code": [
      "var_0",
      "[",
      "0",
      "]",
      "[",
      "'str_0'",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "from_user",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "result",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      16,
      17,
      19,
      275,
      77,
      222,
      22,
      5,
      2,
      147,
      24,
      23,
      4,
      25
    ],
    "code_indx_copy": [
      34,
      12,
      43,
      16,
      12,
      29,
      16
    ],
    "code_indx_nocopy": [
      34,
      12,
      43,
      16,
      12,
      29,
      16
    ]
  },
  {
    "intent": [
      "retrieve",
      "each",
      "line",
      "from",
      "a",
      "file",
      "str_0",
      "a",
      "a",
      "list"
    ],
    "code": [
      "[",
      "line",
      ".",
      "split",
      "(",
      ")",
      "for",
      "line",
      "in",
      "open",
      "(",
      "'str_0'",
      ")",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "File.txt",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      357,
      21,
      166,
      56,
      3,
      125,
      5,
      3,
      3,
      4
    ],
    "code_indx_copy": [
      12,
      315,
      22,
      71,
      1,
      17,
      7,
      315,
      9,
      105,
      1,
      29,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      315,
      22,
      71,
      1,
      17,
      7,
      315,
      9,
      105,
      1,
      29,
      17,
      16
    ]
  },
  {
    "intent": [
      "swap",
      "key",
      "with",
      "value",
      "in",
      "a",
      "dictionary",
      "var_0"
    ],
    "code": [
      "res",
      "=",
      "dict",
      "(",
      "(",
      "v",
      ",",
      "k",
      ")",
      "for",
      "k",
      ",",
      "v",
      "in",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      433,
      22,
      77,
      19,
      23,
      3,
      24,
      25
    ],
    "code_indx_copy": [
      524,
      19,
      70,
      1,
      1,
      90,
      8,
      89,
      17,
      7,
      89,
      8,
      90,
      9,
      34,
      22,
      35,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      70,
      1,
      1,
      90,
      8,
      89,
      17,
      7,
      89,
      8,
      90,
      9,
      34,
      22,
      35,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "open",
      "a",
      "file",
      "str_0",
      "in",
      "write",
      "mode"
    ],
    "code": [
      "new_file",
      "=",
      "open",
      "(",
      "'str_0'",
      ",",
      "'w'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "path/to/FILE_NAME.ext",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      273,
      3,
      125,
      5,
      23,
      162,
      274
    ],
    "code_indx_copy": [
      524,
      19,
      105,
      1,
      29,
      8,
      497,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      105,
      1,
      29,
      8,
      497,
      17
    ]
  },
  {
    "intent": [
      "how",
      "to",
      "count",
      "distinct",
      "value",
      "in",
      "a",
      "column",
      "of",
      "a",
      "panda",
      "group",
      "by",
      "object",
      "?"
    ],
    "code": [
      "df",
      ".",
      "groupby",
      "(",
      "[",
      "'col1'",
      ",",
      "'col2'",
      "]",
      ")",
      "[",
      "'col3'",
      "]",
      ".",
      "nunique",
      "(",
      ")",
      ".",
      "reset_index",
      "(",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      75,
      8,
      172,
      433,
      19,
      23,
      3,
      59,
      2,
      3,
      40,
      365,
      42,
      14,
      49
    ],
    "code_indx_copy": [
      149,
      22,
      157,
      1,
      12,
      524,
      8,
      524,
      16,
      17,
      12,
      524,
      16,
      22,
      524,
      1,
      17,
      22,
      186,
      1,
      17
    ],
    "code_indx_nocopy": [
      149,
      22,
      157,
      1,
      12,
      524,
      8,
      524,
      16,
      17,
      12,
      524,
      16,
      22,
      524,
      1,
      17,
      22,
      186,
      1,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "any",
      "key",
      "in",
      "the",
      "dictionary",
      "var_0",
      "start",
      "with",
      "the",
      "string",
      "str_0"
    ],
    "code": [
      "any",
      "(",
      "key",
      ".",
      "startswith",
      "(",
      "'str_0'",
      ")",
      "for",
      "key",
      "in",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "dict1",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "EMP$$",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      226,
      146,
      261,
      22,
      23,
      17,
      24,
      25,
      412,
      77,
      17,
      13,
      5
    ],
    "code_indx_copy": [
      269,
      1,
      102,
      22,
      453,
      1,
      29,
      17,
      7,
      102,
      9,
      34,
      17
    ],
    "code_indx_nocopy": [
      269,
      1,
      102,
      22,
      453,
      1,
      29,
      17,
      7,
      102,
      9,
      34,
      17
    ]
  },
  {
    "intent": [
      "create",
      "list",
      "of",
      "value",
      "from",
      "dictionary",
      "var_0",
      "that",
      "have",
      "a",
      "key",
      "that",
      "start",
      "with",
      "str_0"
    ],
    "code": [
      "[",
      "value",
      "for",
      "key",
      ",",
      "value",
      "in",
      "list",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      "if",
      "key",
      ".",
      "startswith",
      "(",
      "'str_0'",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "dict1",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "EMP$$",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      144,
      4,
      2,
      19,
      56,
      24,
      25,
      188,
      189,
      3,
      22,
      188,
      412,
      77,
      5
    ],
    "code_indx_copy": [
      12,
      151,
      7,
      102,
      8,
      151,
      9,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      67,
      102,
      22,
      453,
      1,
      29,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      151,
      7,
      102,
      8,
      151,
      9,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      67,
      102,
      22,
      453,
      1,
      29,
      17,
      16
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "panda",
      "series",
      "var_0",
      "into",
      "a",
      "panda",
      "dataframe",
      "var_1",
      "with",
      "column",
      "var_2",
      "and",
      "var_3"
    ],
    "code": [
      "pd",
      ".",
      "DataFrame",
      "(",
      "{",
      "'var_2'",
      ":",
      "var_0",
      ".",
      "index",
      ",",
      "'var_3'",
      ":",
      "var_0",
      ".",
      "values",
      "}",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "sf",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "email",
        "quote": "`",
        "type": "var"
      },
      "var_3": {
        "value": "list",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      10,
      3,
      40,
      323,
      25,
      11,
      3,
      40,
      41,
      61,
      77,
      59,
      62,
      29,
      65
    ],
    "code_indx_copy": [
      162,
      22,
      164,
      1,
      52,
      58,
      13,
      34,
      22,
      160,
      8,
      221,
      13,
      34,
      22,
      166,
      53,
      17
    ],
    "code_indx_nocopy": [
      162,
      22,
      164,
      1,
      52,
      58,
      13,
      34,
      22,
      160,
      8,
      221,
      13,
      34,
      22,
      166,
      53,
      17
    ]
  },
  {
    "intent": [
      "print",
      "element",
      "of",
      "list",
      "var_0",
      "seperated",
      "by",
      "tab",
      "str_0"
    ],
    "code": [
      "print",
      "(",
      "'str_0'",
      ".",
      "join",
      "(",
      "map",
      "(",
      "str",
      ",",
      "var_0",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "list",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "\t",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      160,
      1,
      2,
      4,
      25,
      433,
      42,
      204,
      5
    ],
    "code_indx_copy": [
      49,
      1,
      29,
      22,
      23,
      1,
      24,
      1,
      25,
      8,
      34,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      29,
      22,
      23,
      1,
      24,
      1,
      25,
      8,
      34,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "print",
      "unicode",
      "string",
      "str_0",
      "with",
      "utf-8"
    ],
    "code": [
      "print",
      "(",
      "'str_0'",
      ".",
      "encode",
      "(",
      "'raw_unicode_escape'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "\u00d0\u00bf\u00d1\u0080\u00d0\u00b8",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      160,
      222,
      13,
      5,
      77,
      178
    ],
    "code_indx_copy": [
      49,
      1,
      29,
      22,
      239,
      1,
      524,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      29,
      22,
      239,
      1,
      524,
      17,
      17
    ]
  },
  {
    "intent": [
      "encode",
      "a",
      "latin",
      "character",
      "in",
      "string",
      "str_0",
      "properly"
    ],
    "code": [
      "\"\"\"str_0\"\"\"",
      ".",
      "encode",
      "(",
      "'latin-1'",
      ")",
      ".",
      "decode",
      "(",
      "'utf-8'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "Sopet\u00c3\u00b3n",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      415,
      3,
      433,
      95,
      23,
      13,
      5,
      433
    ],
    "code_indx_copy": [
      212,
      22,
      239,
      1,
      524,
      17,
      22,
      99,
      1,
      143,
      17
    ],
    "code_indx_nocopy": [
      212,
      22,
      239,
      1,
      524,
      17,
      22,
      99,
      1,
      143,
      17
    ]
  },
  {
    "intent": [
      "resized",
      "image",
      "var_0",
      "to",
      "width",
      ",",
      "height",
      "of",
      "str_0",
      "with",
      "filter",
      "of",
      "var_1"
    ],
    "code": [
      "var_0",
      "=",
      "var_0",
      ".",
      "resize",
      "(",
      "(",
      "str_0",
      ")",
      ",",
      "Image",
      ".",
      "var_1",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "image",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "(x, y)",
        "quote": "`",
        "type": "str"
      },
      "var_1": {
        "value": "ANTIALIAS",
        "quote": "`",
        "type": "var"
      },
      "(str_0)": {
        "value": "(x, y)",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      433,
      288,
      25,
      8,
      433,
      60,
      433,
      2,
      5,
      77,
      208,
      2,
      61
    ],
    "code_indx_copy": [
      34,
      19,
      34,
      22,
      524,
      1,
      1,
      11,
      17,
      8,
      301,
      22,
      91,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      34,
      22,
      524,
      1,
      1,
      11,
      17,
      8,
      301,
      22,
      91,
      17
    ]
  },
  {
    "intent": [
      "regex",
      ",",
      "find",
      "str_0s",
      "only",
      "in",
      "the",
      "middle",
      "of",
      "string",
      "var_0"
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'n(?<=[^n]n)n+(?=[^n])(?i)'",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "n",
        "quote": "\"",
        "type": "str"
      },
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      38,
      60,
      45,
      433,
      337,
      23,
      17,
      433,
      2,
      13,
      25
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      524,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      524,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "display",
      "the",
      "float",
      "str_0",
      "a",
      "a",
      "percentage"
    ],
    "code": [
      "print",
      "(",
      "'{0:.0f}%'",
      ".",
      "format",
      "(",
      "1.0",
      "/",
      "3",
      "*",
      "100",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "1/3*100",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      349,
      17,
      92,
      5,
      3,
      3,
      433
    ],
    "code_indx_copy": [
      49,
      1,
      524,
      22,
      38,
      1,
      524,
      31,
      54,
      3,
      267,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      524,
      22,
      38,
      1,
      524,
      31,
      54,
      3,
      267,
      17,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "list",
      "of",
      "dictionary",
      "var_0",
      "by",
      "the",
      "key",
      "var_1"
    ],
    "code": [
      "var_0",
      ".",
      "sort",
      "(",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "x",
      "[",
      "'var_1'",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "mylist",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "title",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      116,
      3,
      4,
      2,
      24,
      25,
      42,
      17,
      22,
      61
    ],
    "code_indx_copy": [
      34,
      22,
      124,
      1,
      102,
      19,
      44,
      26,
      13,
      26,
      12,
      57,
      16,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      124,
      1,
      102,
      19,
      44,
      26,
      13,
      26,
      12,
      57,
      16,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "list",
      "var_0",
      "of",
      "dicts",
      "by",
      "dict",
      "value",
      "str_0"
    ],
    "code": [
      "var_0",
      ".",
      "sort",
      "(",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "x",
      "[",
      "'str_0'",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "l",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "title",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      116,
      3,
      4,
      25,
      2,
      433,
      42,
      181,
      19,
      5
    ],
    "code_indx_copy": [
      34,
      22,
      124,
      1,
      102,
      19,
      44,
      26,
      13,
      26,
      12,
      29,
      16,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      124,
      1,
      102,
      19,
      44,
      26,
      13,
      26,
      12,
      29,
      16,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "list",
      "of",
      "dictionary",
      "by",
      "the",
      "value",
      "of",
      "key",
      "str_0",
      ",",
      "str_1",
      ",",
      "str_2",
      "in",
      "ascending",
      "order",
      "."
    ],
    "code": [
      "l",
      ".",
      "sort",
      "(",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "(",
      "x",
      "[",
      "'str_0'",
      "]",
      ",",
      "x",
      "[",
      "'str_1'",
      "]",
      ",",
      "x",
      "[",
      "'str_2'",
      "]",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "title",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "title_url",
        "quote": "'",
        "type": "str"
      },
      "str_2": {
        "value": "id",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      116,
      3,
      4,
      2,
      24,
      42,
      17,
      19,
      2,
      22,
      5,
      60,
      30,
      60,
      187,
      23,
      118,
      157,
      154
    ],
    "code_indx_copy": [
      431,
      22,
      124,
      1,
      102,
      19,
      44,
      26,
      13,
      1,
      26,
      12,
      29,
      16,
      8,
      26,
      12,
      63,
      16,
      8,
      26,
      12,
      150,
      16,
      17,
      17
    ],
    "code_indx_nocopy": [
      431,
      22,
      124,
      1,
      102,
      19,
      44,
      26,
      13,
      1,
      26,
      12,
      29,
      16,
      8,
      26,
      12,
      63,
      16,
      8,
      26,
      12,
      150,
      16,
      17,
      17
    ]
  },
  {
    "intent": [
      "find",
      "10",
      "largest",
      "difference",
      "between",
      "each",
      "respective",
      "element",
      "of",
      "list",
      "var_0",
      "and",
      "list",
      "var_1"
    ],
    "code": [
      "heapq",
      ".",
      "nlargest",
      "(",
      "10",
      ",",
      "range",
      "(",
      "len",
      "(",
      "var_0",
      ")",
      ")",
      ",",
      "key",
      "=",
      "lambda",
      "i",
      ":",
      "abs",
      "(",
      "var_0",
      "[",
      "i",
      "]",
      "-",
      "var_1",
      "[",
      "i",
      "]",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "l1",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "l2",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      45,
      336,
      411,
      433,
      267,
      21,
      340,
      1,
      2,
      4,
      25,
      29,
      4,
      61
    ],
    "code_indx_copy": [
      524,
      22,
      524,
      1,
      4,
      8,
      104,
      1,
      32,
      1,
      34,
      17,
      17,
      8,
      102,
      19,
      44,
      6,
      13,
      359,
      1,
      34,
      12,
      6,
      16,
      14,
      91,
      12,
      6,
      16,
      17,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      524,
      1,
      4,
      8,
      104,
      1,
      32,
      1,
      34,
      17,
      17,
      8,
      102,
      19,
      44,
      6,
      13,
      359,
      1,
      34,
      12,
      6,
      16,
      14,
      91,
      12,
      6,
      16,
      17,
      17
    ]
  },
  {
    "intent": [
      "beautifulsoup",
      "find",
      "all",
      "str_0",
      "element",
      "in",
      "html",
      "string",
      "var_0",
      "with",
      "class",
      "of",
      "str_1"
    ],
    "code": [
      "var_0",
      ".",
      "find_all",
      "(",
      "'str_0'",
      ",",
      "{",
      "'class'",
      ":",
      "'str_1'",
      "}",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "span",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "soup",
        "quote": "`",
        "type": "var"
      },
      "str_1": {
        "value": "starGryB sp",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      68,
      45,
      36,
      5,
      1,
      23,
      295,
      13,
      25,
      77,
      299,
      2,
      30
    ],
    "code_indx_copy": [
      34,
      22,
      62,
      1,
      29,
      8,
      52,
      524,
      13,
      63,
      53,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      62,
      1,
      29,
      8,
      52,
      524,
      13,
      63,
      53,
      17
    ]
  },
  {
    "intent": [
      "write",
      "record",
      "in",
      "dataframe",
      "var_0",
      "to",
      "table",
      "str_0",
      "in",
      "schema",
      "str_1"
    ],
    "code": [
      "var_0",
      ".",
      "to_sql",
      "(",
      "'str_0'",
      ",",
      "engine",
      ",",
      "schema",
      "=",
      "'str_1'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "test",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "a_schema",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      162,
      84,
      23,
      41,
      25,
      8,
      369,
      5,
      23,
      433,
      30
    ],
    "code_indx_copy": [
      34,
      22,
      524,
      1,
      29,
      8,
      524,
      8,
      537,
      19,
      63,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      524,
      1,
      29,
      8,
      524,
      8,
      524,
      19,
      63,
      17
    ]
  },
  {
    "intent": [
      "extract",
      "bracket",
      "from",
      "string",
      "var_0"
    ],
    "code": [
      "brackets",
      "=",
      "re",
      ".",
      "sub",
      "(",
      "'[^(){}[\\\\]]'",
      ",",
      "''",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      101,
      433,
      56,
      13,
      25
    ],
    "code_indx_copy": [
      524,
      19,
      39,
      22,
      40,
      1,
      524,
      8,
      21,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      39,
      22,
      40,
      1,
      524,
      8,
      21,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "duplicate",
      "element",
      "from",
      "list",
      "str_0"
    ],
    "code": [
      "list",
      "(",
      "dict",
      "(",
      "(",
      "x",
      "[",
      "0",
      "]",
      ",",
      "x",
      ")",
      "for",
      "x",
      "in",
      "str_0",
      ")",
      ".",
      "values",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "L",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      257,
      320,
      1,
      56,
      4,
      5
    ],
    "code_indx_copy": [
      33,
      1,
      70,
      1,
      1,
      26,
      12,
      43,
      16,
      8,
      26,
      17,
      7,
      26,
      9,
      11,
      17,
      22,
      166,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      33,
      1,
      70,
      1,
      1,
      26,
      12,
      43,
      16,
      8,
      26,
      17,
      7,
      26,
      9,
      11,
      17,
      22,
      166,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "read",
      "a",
      "file",
      "var_0",
      "without",
      "newlines"
    ],
    "code": [
      "[",
      "line",
      ".",
      "rstrip",
      "(",
      "'\\n'",
      ")",
      "for",
      "line",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "file",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      123,
      3,
      125,
      25,
      100,
      433
    ],
    "code_indx_copy": [
      12,
      315,
      22,
      172,
      1,
      133,
      17,
      7,
      315,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      12,
      315,
      22,
      172,
      1,
      133,
      17,
      7,
      315,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "position",
      "of",
      "item",
      "1",
      "in",
      "var_0"
    ],
    "code": [
      "[",
      "i",
      "for",
      "i",
      ",",
      "x",
      "in",
      "enumerate",
      "(",
      "var_0",
      ")",
      "if",
      "x",
      "==",
      "1",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "testlist",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      16,
      17,
      290,
      2,
      37,
      228,
      23,
      25
    ],
    "code_indx_copy": [
      12,
      6,
      7,
      6,
      8,
      26,
      9,
      10,
      1,
      34,
      17,
      67,
      26,
      76,
      15,
      16
    ],
    "code_indx_nocopy": [
      12,
      6,
      7,
      6,
      8,
      26,
      9,
      10,
      1,
      34,
      17,
      67,
      26,
      76,
      15,
      16
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "position",
      "of",
      "item",
      "1",
      "in",
      "var_0"
    ],
    "code": [
      "[",
      "i",
      "for",
      "i",
      ",",
      "x",
      "in",
      "enumerate",
      "(",
      "var_0",
      ")",
      "if",
      "x",
      "==",
      "1",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "testlist",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      16,
      17,
      290,
      2,
      37,
      228,
      23,
      25
    ],
    "code_indx_copy": [
      12,
      6,
      7,
      6,
      8,
      26,
      9,
      10,
      1,
      34,
      17,
      67,
      26,
      76,
      15,
      16
    ],
    "code_indx_nocopy": [
      12,
      6,
      7,
      6,
      8,
      26,
      9,
      10,
      1,
      34,
      17,
      67,
      26,
      76,
      15,
      16
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "position",
      "of",
      "item",
      "1",
      "in",
      "var_0"
    ],
    "code": [
      "for",
      "i",
      "in",
      "[",
      "i",
      "for",
      "i",
      ",",
      "x",
      "in",
      "enumerate",
      "(",
      "var_0",
      ")",
      "if",
      "x",
      "==",
      "1",
      "]",
      ":",
      "\n",
      "    ",
      "pass",
      ""
    ],
    "slot_map": {
      "var_0": {
        "value": "testlist",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      16,
      17,
      290,
      2,
      37,
      228,
      23,
      25
    ],
    "code_indx_copy": [
      7,
      6,
      9,
      12,
      6,
      7,
      6,
      8,
      26,
      9,
      10,
      1,
      34,
      17,
      67,
      26,
      76,
      15,
      16,
      13,
      161,
      216,
      217,
      218
    ],
    "code_indx_nocopy": [
      7,
      6,
      9,
      12,
      6,
      7,
      6,
      8,
      26,
      9,
      10,
      1,
      34,
      17,
      67,
      26,
      76,
      15,
      16,
      13,
      161,
      216,
      217,
      218
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "position",
      "of",
      "item",
      "1",
      "in",
      "var_0"
    ],
    "code": [
      "for",
      "i",
      "in",
      "(",
      "i",
      "for",
      "i",
      ",",
      "x",
      "in",
      "enumerate",
      "(",
      "var_0",
      ")",
      "if",
      "x",
      "==",
      "1",
      ")",
      ":",
      "\n",
      "    ",
      "pass",
      ""
    ],
    "slot_map": {
      "var_0": {
        "value": "testlist",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      16,
      17,
      290,
      2,
      37,
      228,
      23,
      25
    ],
    "code_indx_copy": [
      7,
      6,
      9,
      1,
      6,
      7,
      6,
      8,
      26,
      9,
      10,
      1,
      34,
      17,
      67,
      26,
      76,
      15,
      17,
      13,
      161,
      216,
      217,
      218
    ],
    "code_indx_nocopy": [
      7,
      6,
      9,
      1,
      6,
      7,
      6,
      8,
      26,
      9,
      10,
      1,
      34,
      17,
      67,
      26,
      76,
      15,
      17,
      13,
      161,
      216,
      217,
      218
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "position",
      "of",
      "item",
      "1",
      "in",
      "var_0"
    ],
    "code": [
      "gen",
      "=",
      "(",
      "i",
      "for",
      "i",
      ",",
      "x",
      "in",
      "enumerate",
      "(",
      "var_0",
      ")",
      "if",
      "x",
      "==",
      "1",
      ")",
      "\n",
      "for",
      "i",
      "in",
      "gen",
      ":",
      "\n",
      "    ",
      "pass",
      ""
    ],
    "slot_map": {
      "var_0": {
        "value": "testlist",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      16,
      17,
      290,
      2,
      37,
      228,
      23,
      25
    ],
    "code_indx_copy": [
      524,
      19,
      1,
      6,
      7,
      6,
      8,
      26,
      9,
      10,
      1,
      34,
      17,
      67,
      26,
      76,
      15,
      17,
      161,
      7,
      6,
      9,
      524,
      13,
      161,
      216,
      217,
      218
    ],
    "code_indx_nocopy": [
      524,
      19,
      1,
      6,
      7,
      6,
      8,
      26,
      9,
      10,
      1,
      34,
      17,
      67,
      26,
      76,
      15,
      17,
      161,
      7,
      6,
      9,
      524,
      13,
      161,
      216,
      217,
      218
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "position",
      "of",
      "item",
      "var_0",
      "in",
      "list",
      "var_1"
    ],
    "code": [
      "print",
      "(",
      "var_1",
      ".",
      "index",
      "(",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "element",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "testlist",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      16,
      17,
      290,
      2,
      37,
      25,
      23,
      4,
      61
    ],
    "code_indx_copy": [
      49,
      1,
      91,
      22,
      160,
      1,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      91,
      22,
      160,
      1,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "position",
      "of",
      "item",
      "var_0",
      "in",
      "list",
      "var_1"
    ],
    "code": [
      "try",
      ":",
      "\n",
      "    ",
      "print",
      "(",
      "var_1",
      ".",
      "index",
      "(",
      "var_0",
      ")",
      ")",
      "\n",
      "",
      "except",
      "ValueError",
      ":",
      "\n",
      "    ",
      "pass",
      ""
    ],
    "slot_map": {
      "var_0": {
        "value": "element",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "testlist",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      16,
      17,
      290,
      2,
      37,
      25,
      23,
      4,
      61
    ],
    "code_indx_copy": [
      338,
      13,
      161,
      216,
      49,
      1,
      91,
      22,
      160,
      1,
      34,
      17,
      17,
      161,
      218,
      339,
      515,
      13,
      161,
      216,
      217,
      218
    ],
    "code_indx_nocopy": [
      338,
      13,
      161,
      216,
      49,
      1,
      91,
      22,
      160,
      1,
      34,
      17,
      17,
      161,
      218,
      339,
      515,
      13,
      161,
      216,
      217,
      218
    ]
  },
  {
    "intent": [
      "find",
      "the",
      "first",
      "element",
      "of",
      "the",
      "tuple",
      "with",
      "the",
      "maximum",
      "second",
      "element",
      "in",
      "a",
      "list",
      "of",
      "tuples",
      "var_0"
    ],
    "code": [
      "max",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "lambda",
      "item",
      ":",
      "item",
      "[",
      "1",
      "]",
      ")",
      "[",
      "0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "lis",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      45,
      17,
      147,
      1,
      2,
      17,
      111,
      77,
      17,
      218,
      117,
      1,
      23,
      3,
      4,
      2,
      31,
      25
    ],
    "code_indx_copy": [
      179,
      1,
      34,
      8,
      102,
      19,
      44,
      387,
      13,
      387,
      12,
      15,
      16,
      17,
      12,
      43,
      16
    ],
    "code_indx_nocopy": [
      179,
      1,
      34,
      8,
      102,
      19,
      44,
      387,
      13,
      387,
      12,
      15,
      16,
      17,
      12,
      43,
      16
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "item",
      "at",
      "index",
      "0",
      "from",
      "the",
      "tuple",
      "that",
      "ha",
      "maximum",
      "value",
      "at",
      "index",
      "1",
      "in",
      "list",
      "var_0"
    ],
    "code": [
      "max",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "itemgetter",
      "(",
      "1",
      ")",
      ")",
      "[",
      "0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "lis",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      16,
      17,
      37,
      33,
      35,
      104,
      56,
      17,
      111,
      188,
      321,
      218,
      19,
      33,
      35,
      228,
      23,
      4,
      25
    ],
    "code_indx_copy": [
      179,
      1,
      34,
      8,
      102,
      19,
      128,
      1,
      15,
      17,
      17,
      12,
      43,
      16
    ],
    "code_indx_nocopy": [
      179,
      1,
      34,
      8,
      102,
      19,
      128,
      1,
      15,
      17,
      17,
      12,
      43,
      16
    ]
  },
  {
    "intent": [
      "make",
      "a",
      "delay",
      "of",
      "1",
      "second"
    ],
    "code": [
      "time",
      ".",
      "sleep",
      "(",
      "1",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      184,
      3,
      359,
      2,
      228,
      117
    ],
    "code_indx_copy": [
      84,
      22,
      312,
      1,
      15,
      17
    ],
    "code_indx_nocopy": [
      84,
      22,
      312,
      1,
      15,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "list",
      "of",
      "tuples",
      "var_0",
      "to",
      "a",
      "string"
    ],
    "code": [
      "\"\"\", \"\"\"",
      ".",
      "join",
      "(",
      "'('",
      "+",
      "', '",
      ".",
      "join",
      "(",
      "i",
      ")",
      "+",
      "')'",
      "for",
      "i",
      "in",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "L",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      10,
      4,
      2,
      31,
      25,
      8,
      3,
      13
    ],
    "code_indx_copy": [
      122,
      22,
      23,
      1,
      524,
      96,
      419,
      22,
      23,
      1,
      6,
      17,
      96,
      524,
      7,
      6,
      9,
      34,
      17
    ],
    "code_indx_nocopy": [
      122,
      22,
      23,
      1,
      524,
      96,
      419,
      22,
      23,
      1,
      6,
      17,
      96,
      524,
      7,
      6,
      9,
      34,
      17
    ]
  },
  {
    "intent": [
      "django",
      "set",
      "default",
      "value",
      "of",
      "field",
      "var_0",
      "equal",
      "to",
      "str_0"
    ],
    "code": [
      "var_0",
      "=",
      "models",
      ".",
      "CharField",
      "(",
      "max_length",
      "=",
      "7",
      ",",
      "default",
      "=",
      "'str_0'",
      ",",
      "editable",
      "=",
      "False",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "b",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "0000000",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      85,
      57,
      225,
      19,
      2,
      300,
      25,
      103,
      8,
      5
    ],
    "code_indx_copy": [
      34,
      19,
      524,
      22,
      524,
      1,
      524,
      19,
      219,
      8,
      530,
      19,
      29,
      8,
      524,
      19,
      87,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      524,
      22,
      524,
      1,
      524,
      19,
      219,
      8,
      524,
      19,
      29,
      8,
      524,
      19,
      87,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "li",
      "var_0",
      "in",
      "ascending",
      "order",
      "based",
      "on",
      "the",
      "degree",
      "value",
      "of",
      "it",
      "element"
    ],
    "code": [
      "sorted",
      "(",
      "var_0",
      ",",
      "lambda",
      "x",
      ":",
      "(",
      "degree",
      "(",
      "x",
      ")",
      ",",
      "x",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "list5",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      116,
      433,
      25,
      23,
      118,
      157,
      198,
      139,
      17,
      433,
      19,
      2,
      89,
      1
    ],
    "code_indx_copy": [
      101,
      1,
      34,
      8,
      44,
      26,
      13,
      1,
      537,
      1,
      26,
      17,
      8,
      26,
      17,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      34,
      8,
      44,
      26,
      13,
      1,
      524,
      1,
      26,
      17,
      8,
      26,
      17,
      17
    ]
  },
  {
    "intent": [
      "how",
      "do",
      "i",
      "perform",
      "secondary",
      "sorting",
      "in",
      "python",
      "?"
    ],
    "code": [
      "sorted",
      "(",
      "list5",
      ",",
      "key",
      "=",
      "lambda",
      "vertex",
      ":",
      "(",
      "degree",
      "(",
      "vertex",
      ")",
      ",",
      "vertex",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      75,
      311,
      312,
      433,
      433,
      272,
      23,
      47,
      49
    ],
    "code_indx_copy": [
      101,
      1,
      524,
      8,
      102,
      19,
      44,
      524,
      13,
      1,
      524,
      1,
      524,
      17,
      8,
      524,
      17,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      524,
      8,
      102,
      19,
      44,
      524,
      13,
      1,
      524,
      1,
      524,
      17,
      8,
      524,
      17,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "list",
      "into",
      "a",
      "generator",
      "object"
    ],
    "code": [
      "(",
      "n",
      "for",
      "n",
      "in",
      "[",
      "1",
      ",",
      "2",
      ",",
      "3",
      ",",
      "5",
      "]",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      10,
      3,
      4,
      11,
      3,
      141,
      14
    ],
    "code_indx_copy": [
      1,
      307,
      7,
      307,
      9,
      12,
      15,
      8,
      82,
      8,
      54,
      8,
      185,
      16,
      17
    ],
    "code_indx_nocopy": [
      1,
      307,
      7,
      307,
      9,
      12,
      15,
      8,
      82,
      8,
      54,
      8,
      185,
      16,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "element",
      "from",
      "list",
      "var_0",
      "that",
      "have",
      "an",
      "index",
      "number",
      "mentioned",
      "in",
      "list",
      "var_1"
    ],
    "code": [
      "newlist",
      "=",
      "[",
      "v",
      "for",
      "i",
      ",",
      "v",
      "in",
      "enumerate",
      "(",
      "var_0",
      ")",
      "if",
      "i",
      "not",
      "in",
      "var_1",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "oldlist",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "removelist",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      257,
      1,
      56,
      4,
      25,
      188,
      189,
      216,
      35,
      74,
      433,
      23,
      4,
      61
    ],
    "code_indx_copy": [
      524,
      19,
      12,
      90,
      7,
      6,
      8,
      90,
      9,
      10,
      1,
      34,
      17,
      67,
      6,
      281,
      9,
      91,
      16
    ],
    "code_indx_nocopy": [
      524,
      19,
      12,
      90,
      7,
      6,
      8,
      90,
      9,
      10,
      1,
      34,
      17,
      67,
      6,
      281,
      9,
      91,
      16
    ]
  },
  {
    "intent": [
      "open",
      "a",
      "file",
      "str_0",
      "in",
      "write",
      "mode"
    ],
    "code": [
      "f",
      "=",
      "open",
      "(",
      "'str_0'",
      ",",
      "'w'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "yourfile.txt",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      273,
      3,
      125,
      5,
      23,
      162,
      274
    ],
    "code_indx_copy": [
      190,
      19,
      105,
      1,
      29,
      8,
      497,
      17
    ],
    "code_indx_nocopy": [
      190,
      19,
      105,
      1,
      29,
      8,
      497,
      17
    ]
  },
  {
    "intent": [
      "get",
      "attribute",
      "str_0",
      "from",
      "object",
      "var_0"
    ],
    "code": [
      "getattr",
      "(",
      "var_0",
      ",",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "attr",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "obj",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      16,
      325,
      5,
      56,
      14,
      25
    ],
    "code_indx_copy": [
      300,
      1,
      34,
      8,
      29,
      17
    ],
    "code_indx_nocopy": [
      300,
      1,
      34,
      8,
      29,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "tuple",
      "of",
      "tuples",
      "str_0",
      "to",
      "tuple"
    ],
    "code": [
      "from",
      "functools",
      "import",
      "reduce",
      "\n",
      "reduce",
      "(",
      "lambda",
      "a",
      ",",
      "b",
      ":",
      "a",
      "+",
      "b",
      ",",
      "(",
      "str_0",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "(('aa',), ('bb',), ('cc',))",
        "quote": "`",
        "type": "str"
      },
      "(str_0)": {
        "value": "(('aa',), ('bb',), ('cc',))",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      10,
      111,
      2,
      31,
      5,
      8,
      111
    ],
    "code_indx_copy": [
      392,
      524,
      393,
      394,
      161,
      394,
      1,
      44,
      95,
      8,
      97,
      13,
      95,
      96,
      97,
      8,
      1,
      11,
      17,
      17
    ],
    "code_indx_nocopy": [
      392,
      524,
      393,
      394,
      161,
      394,
      1,
      44,
      95,
      8,
      97,
      13,
      95,
      96,
      97,
      8,
      1,
      11,
      17,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "tuple",
      "of",
      "tuples",
      "str_0",
      "to",
      "list",
      "in",
      "one",
      "line"
    ],
    "code": [
      "map",
      "(",
      "lambda",
      "a",
      ":",
      "a",
      "[",
      "0",
      "]",
      ",",
      "(",
      "str_0",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "(('aa',), ('bb',), ('cc',))",
        "quote": "`",
        "type": "str"
      },
      "(str_0)": {
        "value": "(('aa',), ('bb',), ('cc',))",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      10,
      111,
      2,
      31,
      5,
      8,
      4,
      23,
      292,
      166
    ],
    "code_indx_copy": [
      24,
      1,
      44,
      95,
      13,
      95,
      12,
      43,
      16,
      8,
      1,
      11,
      17,
      17
    ],
    "code_indx_nocopy": [
      24,
      1,
      44,
      95,
      13,
      95,
      12,
      43,
      16,
      8,
      1,
      11,
      17,
      17
    ]
  },
  {
    "intent": [
      "python",
      "panda",
      ":",
      "how",
      "to",
      "replace",
      "a",
      "character",
      "in",
      "a",
      "column",
      "of",
      "a",
      "dataframe",
      "?"
    ],
    "code": [
      "df",
      "[",
      "'range'",
      "]",
      ".",
      "replace",
      "(",
      "','",
      ",",
      "'-'",
      ",",
      "inplace",
      "=",
      "True",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      47,
      40,
      127,
      75,
      8,
      130,
      3,
      95,
      23,
      3,
      59,
      2,
      3,
      41,
      49
    ],
    "code_indx_copy": [
      149,
      12,
      524,
      16,
      22,
      107,
      1,
      73,
      8,
      524,
      8,
      279,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      149,
      12,
      524,
      16,
      22,
      107,
      1,
      73,
      8,
      524,
      8,
      279,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "unzip",
      "the",
      "list",
      "str_0"
    ],
    "code": [
      "zip",
      "(",
      "*",
      "[",
      "str_0",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "[('a', 1), ('b', 2), ('c', 3), ('d', 4)]",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "[('a', 1), ('b', 2), ('c', 3), ('d', 4)]",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      433,
      17,
      4,
      5
    ],
    "code_indx_copy": [
      36,
      1,
      3,
      12,
      11,
      16,
      17
    ],
    "code_indx_nocopy": [
      36,
      1,
      3,
      12,
      11,
      16,
      17
    ]
  },
  {
    "intent": [
      "unzip",
      "the",
      "list",
      "str_0"
    ],
    "code": [
      "zip",
      "(",
      "*",
      "[",
      "str_0",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "[('a', 1), ('b', 2), ('c', 3), ('d', 4)]",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "[('a', 1), ('b', 2), ('c', 3), ('d', 4)]",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      433,
      17,
      4,
      5
    ],
    "code_indx_copy": [
      36,
      1,
      3,
      12,
      11,
      16,
      17
    ],
    "code_indx_nocopy": [
      36,
      1,
      3,
      12,
      11,
      16,
      17
    ]
  },
  {
    "intent": [
      "unzip",
      "list",
      "var_0"
    ],
    "code": [
      "result",
      "=",
      "[",
      "a",
      "for",
      "a",
      ",",
      "b",
      "in",
      "var_0",
      "]",
      ",",
      "[",
      "b",
      "for",
      "a",
      ",",
      "b",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "original",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      433,
      4,
      25
    ],
    "code_indx_copy": [
      524,
      19,
      12,
      95,
      7,
      95,
      8,
      97,
      9,
      34,
      16,
      8,
      12,
      97,
      7,
      95,
      8,
      97,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      524,
      19,
      12,
      95,
      7,
      95,
      8,
      97,
      9,
      34,
      16,
      8,
      12,
      97,
      7,
      95,
      8,
      97,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "unzip",
      "list",
      "var_0",
      "and",
      "return",
      "a",
      "generator"
    ],
    "code": [
      "result",
      "=",
      "(",
      "a",
      "for",
      "a",
      ",",
      "b",
      "in",
      "var_0",
      ")",
      ",",
      "(",
      "b",
      "for",
      "a",
      ",",
      "b",
      "in",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "original",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      433,
      4,
      25,
      29,
      155,
      3,
      141
    ],
    "code_indx_copy": [
      524,
      19,
      1,
      95,
      7,
      95,
      8,
      97,
      9,
      34,
      17,
      8,
      1,
      97,
      7,
      95,
      8,
      97,
      9,
      34,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      1,
      95,
      7,
      95,
      8,
      97,
      9,
      34,
      17,
      8,
      1,
      97,
      7,
      95,
      8,
      97,
      9,
      34,
      17
    ]
  },
  {
    "intent": [
      "unzip",
      "list",
      "str_0"
    ],
    "code": [
      "zip",
      "(",
      "*",
      "[",
      "(",
      "'a'",
      ",",
      "1",
      ")",
      ",",
      "(",
      "'b'",
      ",",
      "2",
      ")",
      ",",
      "(",
      "'c'",
      ",",
      "3",
      ")",
      ",",
      "(",
      "'d'",
      ",",
      "4",
      ")",
      ",",
      "(",
      "'e'",
      ",",
      ")",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "[('a', 1), ('b', 2), ('c', 3), ('d', 4), ('e', )]",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "[('a', 1), ('b', 2), ('c', 3), ('d', 4), ('e', )]",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      433,
      4,
      5
    ],
    "code_indx_copy": [
      36,
      1,
      3,
      12,
      1,
      413,
      8,
      15,
      17,
      8,
      1,
      293,
      8,
      82,
      17,
      8,
      1,
      524,
      8,
      54,
      17,
      8,
      1,
      438,
      8,
      184,
      17,
      8,
      1,
      524,
      8,
      17,
      16,
      17
    ],
    "code_indx_nocopy": [
      36,
      1,
      3,
      12,
      1,
      413,
      8,
      15,
      17,
      8,
      1,
      293,
      8,
      82,
      17,
      8,
      1,
      524,
      8,
      54,
      17,
      8,
      1,
      438,
      8,
      184,
      17,
      8,
      1,
      524,
      8,
      17,
      16,
      17
    ]
  },
  {
    "intent": [
      "unzip",
      "list",
      "str_0",
      "and",
      "fill",
      "empty",
      "result",
      "with",
      "none"
    ],
    "code": [
      "map",
      "(",
      "None",
      ",",
      "*",
      "[",
      "(",
      "'a'",
      ",",
      "1",
      ")",
      ",",
      "(",
      "'b'",
      ",",
      "2",
      ")",
      ",",
      "(",
      "'c'",
      ",",
      "3",
      ")",
      ",",
      "(",
      "'d'",
      ",",
      "4",
      ")",
      ",",
      "(",
      "'e'",
      ",",
      ")",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "[('a', 1), ('b', 2), ('c', 3), ('d', 4), ('e', )]",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "[('a', 1), ('b', 2), ('c', 3), ('d', 4), ('e', )]",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      433,
      4,
      5,
      29,
      433,
      143,
      433,
      77,
      433
    ],
    "code_indx_copy": [
      24,
      1,
      209,
      8,
      3,
      12,
      1,
      413,
      8,
      15,
      17,
      8,
      1,
      293,
      8,
      82,
      17,
      8,
      1,
      524,
      8,
      54,
      17,
      8,
      1,
      438,
      8,
      184,
      17,
      8,
      1,
      524,
      8,
      17,
      16,
      17
    ],
    "code_indx_nocopy": [
      24,
      1,
      209,
      8,
      3,
      12,
      1,
      413,
      8,
      15,
      17,
      8,
      1,
      293,
      8,
      82,
      17,
      8,
      1,
      524,
      8,
      54,
      17,
      8,
      1,
      438,
      8,
      184,
      17,
      8,
      1,
      524,
      8,
      17,
      16,
      17
    ]
  },
  {
    "intent": [
      "encode",
      "str_0",
      "to",
      "a",
      "json",
      "string"
    ],
    "code": [
      "json",
      ".",
      "dumps",
      "(",
      "Decimal",
      "(",
      "'3.9'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "Decimal('3.9')",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      415,
      5,
      8,
      3,
      175,
      13
    ],
    "code_indx_copy": [
      140,
      22,
      141,
      1,
      524,
      1,
      524,
      17,
      17
    ],
    "code_indx_nocopy": [
      140,
      22,
      141,
      1,
      524,
      1,
      524,
      17,
      17
    ]
  },
  {
    "intent": [
      "add",
      "key",
      "str_0",
      "to",
      "dictionary",
      "var_0",
      "with",
      "value",
      "str_1"
    ],
    "code": [
      "var_0",
      "[",
      "'str_0'",
      "]",
      "=",
      "'str_1'"
    ],
    "slot_map": {
      "str_0": {
        "value": "mynewkey",
        "quote": "\"",
        "type": "str"
      },
      "var_0": {
        "value": "d",
        "quote": "`",
        "type": "var"
      },
      "str_1": {
        "value": "mynewvalue",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      58,
      22,
      5,
      8,
      24,
      25,
      77,
      19,
      30
    ],
    "code_indx_copy": [
      34,
      12,
      29,
      16,
      19,
      63
    ],
    "code_indx_nocopy": [
      34,
      12,
      29,
      16,
      19,
      63
    ]
  },
  {
    "intent": [
      "add",
      "key",
      "str_0",
      "to",
      "dictionary",
      "var_0",
      "with",
      "value",
      "1"
    ],
    "code": [
      "var_0",
      ".",
      "update",
      "(",
      "{",
      "'str_0'",
      ":",
      "1",
      "}",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "a",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "data",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      58,
      22,
      5,
      8,
      24,
      25,
      77,
      19,
      228
    ],
    "code_indx_copy": [
      34,
      22,
      69,
      1,
      52,
      29,
      13,
      15,
      53,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      69,
      1,
      52,
      29,
      13,
      15,
      53,
      17
    ]
  },
  {
    "intent": [
      "add",
      "key",
      "str_0",
      "to",
      "dictionary",
      "var_0",
      "with",
      "value",
      "1"
    ],
    "code": [
      "var_0",
      ".",
      "update",
      "(",
      "dict",
      "(",
      "str_0",
      "=",
      "1",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "a",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "data",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      58,
      22,
      5,
      8,
      24,
      25,
      77,
      19,
      228
    ],
    "code_indx_copy": [
      34,
      22,
      69,
      1,
      70,
      1,
      11,
      19,
      15,
      17,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      69,
      1,
      70,
      1,
      11,
      19,
      15,
      17,
      17
    ]
  },
  {
    "intent": [
      "add",
      "key",
      "str_0",
      "to",
      "dictionary",
      "var_0",
      "with",
      "value",
      "1"
    ],
    "code": [
      "var_0",
      ".",
      "update",
      "(",
      "str_0",
      "=",
      "1",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "a",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "data",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      58,
      22,
      5,
      8,
      24,
      25,
      77,
      19,
      228
    ],
    "code_indx_copy": [
      34,
      22,
      69,
      1,
      11,
      19,
      15,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      69,
      1,
      11,
      19,
      15,
      17
    ]
  },
  {
    "intent": [
      "find",
      "maximal",
      "value",
      "in",
      "matrix",
      "var_0"
    ],
    "code": [
      "max",
      "(",
      "[",
      "max",
      "(",
      "i",
      ")",
      "for",
      "i",
      "in",
      "var_0",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "matrix",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      45,
      433,
      19,
      23,
      182,
      25
    ],
    "code_indx_copy": [
      179,
      1,
      12,
      179,
      1,
      6,
      17,
      7,
      6,
      9,
      34,
      16,
      17
    ],
    "code_indx_nocopy": [
      179,
      1,
      12,
      179,
      1,
      6,
      17,
      7,
      6,
      9,
      34,
      16,
      17
    ]
  },
  {
    "intent": [
      "round",
      "number",
      "var_0",
      "to",
      "2",
      "precision",
      "after",
      "the",
      "decimal",
      "point"
    ],
    "code": [
      "var_0",
      "=",
      "str",
      "(",
      "round",
      "(",
      "var_0",
      ",",
      "2",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "answer",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      243,
      74,
      25,
      8,
      79,
      433,
      194,
      17,
      245,
      260
    ],
    "code_indx_copy": [
      34,
      19,
      25,
      1,
      208,
      1,
      34,
      8,
      82,
      17,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      25,
      1,
      208,
      1,
      34,
      8,
      82,
      17,
      17
    ]
  },
  {
    "intent": [
      "extract",
      "ip",
      "address",
      "from",
      "an",
      "html",
      "string"
    ],
    "code": [
      "ip",
      "=",
      "re",
      ".",
      "findall",
      "(",
      "'[0-9]+(?:\\\\.[0-9]+){3}'",
      ",",
      "s",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      101,
      433,
      433,
      56,
      216,
      295,
      13
    ],
    "code_indx_copy": [
      529,
      19,
      39,
      22,
      48,
      1,
      524,
      8,
      181,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      39,
      22,
      48,
      1,
      524,
      8,
      181,
      17
    ]
  },
  {
    "intent": [
      "filter",
      "dataframe",
      "var_0",
      "by",
      "value",
      "in",
      "column",
      "var_1",
      "that",
      "appear",
      "more",
      "than",
      "once"
    ],
    "code": [
      "var_0",
      ".",
      "groupby",
      "(",
      "'var_1'",
      ")",
      ".",
      "filter",
      "(",
      "lambda",
      "x",
      ":",
      "len",
      "(",
      "x",
      ")",
      ">",
      "1",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "A",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      208,
      41,
      25,
      42,
      19,
      23,
      59,
      61,
      188,
      433,
      399,
      253,
      433
    ],
    "code_indx_copy": [
      34,
      22,
      157,
      1,
      57,
      17,
      22,
      79,
      1,
      44,
      26,
      13,
      32,
      1,
      26,
      17,
      214,
      15,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      157,
      1,
      57,
      17,
      22,
      79,
      1,
      44,
      26,
      13,
      32,
      1,
      26,
      17,
      214,
      15,
      17
    ]
  },
  {
    "intent": [
      "append",
      "each",
      "line",
      "in",
      "file",
      "var_0",
      "into",
      "a",
      "list"
    ],
    "code": [
      "[",
      "x",
      "for",
      "x",
      "in",
      "var_0",
      ".",
      "splitlines",
      "(",
      ")",
      "if",
      "x",
      "!=",
      "''",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "myfile",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      109,
      21,
      166,
      23,
      125,
      25,
      11,
      3,
      4
    ],
    "code_indx_copy": [
      12,
      26,
      7,
      26,
      9,
      34,
      22,
      524,
      1,
      17,
      67,
      26,
      88,
      21,
      16
    ],
    "code_indx_nocopy": [
      12,
      26,
      7,
      26,
      9,
      34,
      22,
      524,
      1,
      17,
      67,
      26,
      88,
      21,
      16
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "list",
      "of",
      "integer",
      "var_0",
      "from",
      "a",
      "file",
      "str_0"
    ],
    "code": [
      "var_0",
      "=",
      "map",
      "(",
      "int",
      ",",
      "open",
      "(",
      "'str_0'",
      ")",
      ".",
      "readlines",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "lst",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "filename.txt",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      16,
      3,
      4,
      2,
      7,
      25,
      56,
      3,
      125,
      5
    ],
    "code_indx_copy": [
      34,
      19,
      24,
      1,
      20,
      8,
      105,
      1,
      29,
      17,
      22,
      498,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      24,
      1,
      20,
      8,
      105,
      1,
      29,
      17,
      22,
      498,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "add",
      "color",
      "bar",
      "with",
      "image",
      "var_0",
      "to",
      "plot",
      "var_1"
    ],
    "code": [
      "var_1",
      ".",
      "colorbar",
      "(",
      "var_0",
      "=",
      "var_0",
      ",",
      "cax",
      "=",
      "ax3",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "mappable",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "plt",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      58,
      213,
      433,
      77,
      288,
      25,
      8,
      234,
      61
    ],
    "code_indx_copy": [
      91,
      22,
      524,
      1,
      34,
      19,
      34,
      8,
      524,
      19,
      524,
      17
    ],
    "code_indx_nocopy": [
      91,
      22,
      524,
      1,
      34,
      19,
      34,
      8,
      524,
      19,
      524,
      17
    ]
  },
  {
    "intent": [
      "count",
      "most",
      "frequent",
      "100",
      "word",
      "in",
      "column",
      "str_0",
      "of",
      "dataframe",
      "var_0"
    ],
    "code": [
      "Counter",
      "(",
      "' '",
      ".",
      "join",
      "(",
      "var_0",
      "[",
      "'str_0'",
      "]",
      ")",
      ".",
      "split",
      "(",
      ")",
      ")",
      ".",
      "most_common",
      "(",
      "100",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "text",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      172,
      433,
      433,
      358,
      39,
      23,
      59,
      5,
      2,
      41,
      25
    ],
    "code_indx_copy": [
      500,
      1,
      108,
      22,
      23,
      1,
      34,
      12,
      29,
      16,
      17,
      22,
      71,
      1,
      17,
      17,
      22,
      524,
      1,
      267,
      17
    ],
    "code_indx_nocopy": [
      500,
      1,
      108,
      22,
      23,
      1,
      34,
      12,
      29,
      16,
      17,
      22,
      71,
      1,
      17,
      17,
      22,
      524,
      1,
      267,
      17
    ]
  },
  {
    "intent": [
      "python",
      "split",
      "a",
      "string",
      "using",
      "regex"
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'(.+?):(.+?)\\\\b ?'",
      ",",
      "text",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      47,
      138,
      3,
      13,
      107,
      38
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      524,
      8,
      355,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      524,
      8,
      355,
      17
    ]
  },
  {
    "intent": [
      "generate",
      "all",
      "2-element",
      "subset",
      "of",
      "tuple",
      "str_0"
    ],
    "code": [
      "list",
      "(",
      "itertools",
      ".",
      "combinations",
      "(",
      "(",
      "str_0",
      ")",
      ",",
      "2",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "(1, 2, 3)",
        "quote": "`",
        "type": "str"
      },
      "(str_0)": {
        "value": "(1, 2, 3)",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      53,
      36,
      433,
      350,
      2,
      111,
      5
    ],
    "code_indx_copy": [
      33,
      1,
      50,
      22,
      51,
      1,
      1,
      11,
      17,
      8,
      82,
      17,
      17
    ],
    "code_indx_nocopy": [
      33,
      1,
      50,
      22,
      51,
      1,
      1,
      11,
      17,
      8,
      82,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "value",
      "of",
      "datetime.today",
      "(",
      ")",
      "in",
      "the",
      "utc",
      "time",
      "zone"
    ],
    "code": [
      "datetime",
      ".",
      "now",
      "(",
      "pytz",
      ".",
      "utc",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      16,
      3,
      19,
      2,
      433,
      202,
      26,
      23,
      17,
      174,
      134,
      433
    ],
    "code_indx_copy": [
      27,
      22,
      294,
      1,
      524,
      22,
      537,
      17
    ],
    "code_indx_nocopy": [
      27,
      22,
      294,
      1,
      524,
      22,
      524,
      17
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "new",
      "list",
      "var_0by",
      "removing",
      "empty",
      "list",
      "from",
      "a",
      "list",
      "of",
      "list",
      "var_1"
    ],
    "code": [
      "var_0",
      "=",
      "[",
      "x",
      "for",
      "x",
      "in",
      "var_1",
      "if",
      "x",
      "!=",
      "[",
      "]",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "list2",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "list1",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      16,
      3,
      185,
      4,
      433,
      96,
      143,
      4,
      56,
      3,
      4,
      2,
      4,
      61
    ],
    "code_indx_copy": [
      34,
      19,
      12,
      26,
      7,
      26,
      9,
      91,
      67,
      26,
      88,
      12,
      16,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      12,
      26,
      7,
      26,
      9,
      91,
      67,
      26,
      88,
      12,
      16,
      16
    ]
  },
  {
    "intent": [
      "create",
      "var_0",
      "to",
      "contain",
      "the",
      "list",
      "from",
      "list",
      "var_1",
      "excluding",
      "the",
      "empty",
      "list",
      "from",
      "var_1"
    ],
    "code": [
      "var_0",
      "=",
      "[",
      "x",
      "for",
      "x",
      "in",
      "var_2",
      "if",
      "x",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "list2",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "list1",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "list1",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      144,
      25,
      8,
      310,
      17,
      4,
      56,
      4,
      61,
      433,
      17,
      143,
      4,
      56,
      61
    ],
    "code_indx_copy": [
      34,
      19,
      12,
      26,
      7,
      26,
      9,
      94,
      67,
      26,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      12,
      26,
      7,
      26,
      9,
      94,
      67,
      26,
      16
    ]
  },
  {
    "intent": [
      "django",
      "response",
      "with",
      "json",
      "var_0"
    ],
    "code": [
      "return",
      "HttpResponse",
      "(",
      "var_0",
      ",",
      "mimetype",
      "=",
      "'application/json'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "data",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      85,
      433,
      77,
      175,
      25
    ],
    "code_indx_copy": [
      118,
      524,
      1,
      34,
      8,
      524,
      19,
      524,
      17
    ],
    "code_indx_nocopy": [
      118,
      524,
      1,
      34,
      8,
      524,
      19,
      524,
      17
    ]
  },
  {
    "intent": [
      "get",
      "all",
      "text",
      "that",
      "is",
      "not",
      "enclosed",
      "within",
      "square",
      "bracket",
      "in",
      "string",
      "var_0"
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'(.*?)\\\\[.*?\\\\]'",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "example_str",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      16,
      36,
      256,
      188,
      148,
      102,
      433,
      52,
      241,
      433,
      23,
      13,
      25
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      524,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      524,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "use",
      "a",
      "regex",
      "to",
      "get",
      "all",
      "text",
      "in",
      "a",
      "string",
      "var_0",
      "that",
      "is",
      "not",
      "surrounded",
      "by",
      "square",
      "bracket"
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'(.*?)(?:\\\\[.*?\\\\]|$)'",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "example_str",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      297,
      3,
      38,
      8,
      16,
      36,
      256,
      23,
      3,
      13,
      25,
      188,
      148,
      102,
      433,
      42,
      241,
      433
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      524,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      524,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "get",
      "whatever",
      "is",
      "between",
      "parenthesis",
      "a",
      "a",
      "single",
      "match",
      ",",
      "and",
      "any",
      "char",
      "outside",
      "a",
      "an",
      "individual",
      "match",
      "in",
      "string",
      "str_0"
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'\\\\(.+?\\\\)|\\\\w'",
      ",",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "(zyx)bc",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      16,
      433,
      148,
      267,
      106,
      3,
      3,
      9,
      105,
      60,
      29,
      261,
      433,
      433,
      3,
      216,
      433,
      105,
      23,
      13,
      5
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      524,
      8,
      29,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      524,
      8,
      29,
      17
    ]
  },
  {
    "intent": [
      "match",
      "regex",
      "str_0",
      "with",
      "string",
      "str_1"
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'str_0'",
      ",",
      "'str_1'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "\\((.*?)\\)|(\\w)",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "(zyx)bc",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      105,
      38,
      5,
      77,
      13,
      30
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      29,
      8,
      63,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      29,
      8,
      63,
      17
    ]
  },
  {
    "intent": [
      "match",
      "multiple",
      "regex",
      "pattern",
      "with",
      "the",
      "alternation",
      "operator",
      "str_0",
      "in",
      "a",
      "string",
      "str_1"
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'\\\\(.*?\\\\)|\\\\w'",
      ",",
      "'str_1'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "|",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": "(zyx)bc",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      105,
      6,
      38,
      51,
      77,
      17,
      433,
      433,
      5,
      23,
      3,
      13,
      30
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      524,
      8,
      63,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      524,
      8,
      63,
      17
    ]
  },
  {
    "intent": [
      "formate",
      "each",
      "string",
      "cin",
      "list",
      "var_0",
      "into",
      "pattern",
      "str_0"
    ],
    "code": [
      "var_0",
      "=",
      "[",
      "'str_0'",
      ".",
      "format",
      "(",
      "element",
      ")",
      "for",
      "element",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "elements",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "%{0}%",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      433,
      21,
      13,
      433,
      4,
      25,
      11,
      51,
      5
    ],
    "code_indx_copy": [
      34,
      19,
      12,
      29,
      22,
      38,
      1,
      510,
      17,
      7,
      510,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      12,
      29,
      22,
      38,
      1,
      510,
      17,
      7,
      510,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "open",
      "a",
      "background",
      "process",
      "str_0",
      "with",
      "argument",
      "str_1"
    ],
    "code": [
      "subprocess",
      ".",
      "Popen",
      "(",
      "[",
      "'str_0'",
      ",",
      "'str_1'",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "background-process",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "arguments",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      273,
      3,
      433,
      282,
      5,
      77,
      294,
      30
    ],
    "code_indx_copy": [
      229,
      22,
      441,
      1,
      12,
      29,
      8,
      63,
      16,
      17
    ],
    "code_indx_nocopy": [
      229,
      22,
      441,
      1,
      12,
      29,
      8,
      63,
      16,
      17
    ]
  },
  {
    "intent": [
      "get",
      "list",
      "of",
      "value",
      "from",
      "dictionary",
      "str_0",
      "w.r.t",
      ".",
      "list",
      "of",
      "key",
      "str_1"
    ],
    "code": [
      "[",
      "str_0",
      "[",
      "x",
      "]",
      "for",
      "x",
      "in",
      "str_1",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "mydict",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "mykeys",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      16,
      4,
      2,
      19,
      56,
      24,
      5,
      433,
      154,
      4,
      2,
      22,
      30
    ],
    "code_indx_copy": [
      12,
      11,
      12,
      26,
      16,
      7,
      26,
      9,
      37,
      16
    ],
    "code_indx_nocopy": [
      12,
      11,
      12,
      26,
      16,
      7,
      26,
      9,
      37,
      16
    ]
  },
  {
    "intent": [
      "convert",
      "list",
      "str_0",
      "into",
      "a",
      "dictionary"
    ],
    "code": [
      "dict",
      "(",
      "[",
      "str_0",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "[('Name', 'Joe'), ('Age', 22)]",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "[('Name', 'Joe'), ('Age', 22)]",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      10,
      4,
      5,
      11,
      3,
      24
    ],
    "code_indx_copy": [
      70,
      1,
      12,
      11,
      16,
      17
    ],
    "code_indx_nocopy": [
      70,
      1,
      12,
      11,
      16,
      17
    ]
  },
  {
    "intent": [
      "average",
      "each",
      "two",
      "column",
      "of",
      "array",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "reshape",
      "(",
      "-",
      "1",
      ",",
      "j",
      ")",
      ".",
      "mean",
      "(",
      "axis",
      "=",
      "1",
      ")",
      ".",
      "reshape",
      "(",
      "var_0",
      ".",
      "shape",
      "[",
      "0",
      "]",
      ",",
      "-",
      "1",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "data",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      18,
      21,
      28,
      59,
      2,
      82,
      25
    ],
    "code_indx_copy": [
      34,
      22,
      361,
      1,
      14,
      15,
      8,
      30,
      17,
      22,
      390,
      1,
      42,
      19,
      15,
      17,
      22,
      361,
      1,
      34,
      22,
      223,
      12,
      43,
      16,
      8,
      14,
      15,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      361,
      1,
      14,
      15,
      8,
      30,
      17,
      22,
      390,
      1,
      42,
      19,
      15,
      17,
      22,
      361,
      1,
      34,
      22,
      223,
      12,
      43,
      16,
      8,
      14,
      15,
      17
    ]
  },
  {
    "intent": [
      "double",
      "backslash",
      "escape",
      "all",
      "double",
      "quote",
      "in",
      "string",
      "var_0"
    ],
    "code": [
      "print",
      "(",
      "var_0",
      ".",
      "encode",
      "(",
      "'unicode-escape'",
      ")",
      ".",
      "replace",
      "(",
      "'\"'",
      ",",
      "'\\\\\"'",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      433,
      433,
      286,
      36,
      433,
      433,
      23,
      13,
      25
    ],
    "code_indx_copy": [
      49,
      1,
      34,
      22,
      239,
      1,
      463,
      17,
      22,
      107,
      1,
      524,
      8,
      524,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      34,
      22,
      239,
      1,
      463,
      17,
      22,
      107,
      1,
      524,
      8,
      524,
      17,
      17
    ]
  },
  {
    "intent": [
      "split",
      "a",
      "string",
      "into",
      "a",
      "list",
      "of",
      "word",
      "and",
      "whitespace"
    ],
    "code": [
      "re",
      ".",
      "split",
      "(",
      "'(\\\\W+)'",
      ",",
      "s",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      138,
      3,
      13,
      11,
      3,
      4,
      2,
      39,
      29,
      201
    ],
    "code_indx_copy": [
      39,
      22,
      71,
      1,
      524,
      8,
      181,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      71,
      1,
      524,
      8,
      181,
      17
    ]
  },
  {
    "intent": [
      "plotting",
      "stacked",
      "barplots",
      "on",
      "a",
      "panda",
      "data",
      "frame"
    ],
    "code": [
      "df",
      ".",
      "plot",
      "(",
      "kind",
      "=",
      "'barh'",
      ",",
      "stacked",
      "=",
      "True",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      433,
      433,
      433,
      139,
      3,
      40,
      63,
      64
    ],
    "code_indx_copy": [
      149,
      22,
      290,
      1,
      524,
      19,
      524,
      8,
      529,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      149,
      22,
      290,
      1,
      524,
      19,
      524,
      8,
      524,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "reverse",
      "the",
      "key",
      "and",
      "value",
      "in",
      "a",
      "dictionary",
      "var_0"
    ],
    "code": [
      "{",
      "i",
      "[",
      "1",
      "]",
      ":",
      "i",
      "[",
      "0",
      "]",
      "for",
      "i",
      "in",
      "list",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      "}"
    ],
    "slot_map": {
      "var_0": {
        "value": "myDictionary",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      271,
      17,
      22,
      29,
      19,
      23,
      3,
      24,
      25
    ],
    "code_indx_copy": [
      52,
      6,
      12,
      15,
      16,
      13,
      6,
      12,
      43,
      16,
      7,
      6,
      9,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      53
    ],
    "code_indx_nocopy": [
      52,
      6,
      12,
      15,
      16,
      13,
      6,
      12,
      43,
      16,
      7,
      6,
      9,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      53
    ]
  },
  {
    "intent": [
      "finding",
      "the",
      "index",
      "of",
      "element",
      "containing",
      "substring",
      "str_0",
      "and",
      "str_1",
      "in",
      "a",
      "list",
      "of",
      "string",
      "str_2",
      "."
    ],
    "code": [
      "[",
      "i",
      "for",
      "i",
      ",",
      "j",
      "in",
      "enumerate",
      "(",
      "str_2",
      ")",
      "if",
      "'str_0'",
      "in",
      "j",
      ".",
      "lower",
      "(",
      ")",
      "or",
      "'str_1'",
      "in",
      "j",
      ".",
      "lower",
      "(",
      ")",
      "\n",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "how",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "what",
        "quote": "'",
        "type": "str"
      },
      "str_2": {
        "value": "myList",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      433,
      17,
      35,
      2,
      1,
      32,
      339,
      5,
      29,
      30,
      23,
      3,
      4,
      2,
      13,
      187,
      154
    ],
    "code_indx_copy": [
      12,
      6,
      7,
      6,
      8,
      30,
      9,
      10,
      1,
      183,
      17,
      67,
      29,
      9,
      30,
      22,
      152,
      1,
      17,
      524,
      63,
      9,
      30,
      22,
      152,
      1,
      17,
      161,
      16
    ],
    "code_indx_nocopy": [
      12,
      6,
      7,
      6,
      8,
      30,
      9,
      10,
      1,
      183,
      17,
      67,
      29,
      9,
      30,
      22,
      152,
      1,
      17,
      524,
      63,
      9,
      30,
      22,
      152,
      1,
      17,
      161,
      16
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "object",
      "var_0",
      "is",
      "a",
      "string"
    ],
    "code": [
      "isinstance",
      "(",
      "var_0",
      ",",
      "str",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "obj",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      226,
      146,
      14,
      25,
      148,
      3,
      13
    ],
    "code_indx_copy": [
      206,
      1,
      34,
      8,
      25,
      17
    ],
    "code_indx_nocopy": [
      206,
      1,
      34,
      8,
      25,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "object",
      "var_0",
      "is",
      "a",
      "string"
    ],
    "code": [
      "isinstance",
      "(",
      "var_0",
      ",",
      "str",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "o",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      226,
      146,
      14,
      25,
      148,
      3,
      13
    ],
    "code_indx_copy": [
      206,
      1,
      34,
      8,
      25,
      17
    ],
    "code_indx_nocopy": [
      206,
      1,
      34,
      8,
      25,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "object",
      "var_0",
      "is",
      "a",
      "string"
    ],
    "code": [
      "type",
      "(",
      "var_0",
      ")",
      "is",
      "str"
    ],
    "slot_map": {
      "var_0": {
        "value": "o",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      226,
      146,
      14,
      25,
      148,
      3,
      13
    ],
    "code_indx_copy": [
      524,
      1,
      34,
      17,
      335,
      25
    ],
    "code_indx_nocopy": [
      524,
      1,
      34,
      17,
      335,
      25
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "object",
      "var_0",
      "is",
      "a",
      "string"
    ],
    "code": [
      "isinstance",
      "(",
      "var_0",
      ",",
      "str",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "o",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      226,
      146,
      14,
      25,
      148,
      3,
      13
    ],
    "code_indx_copy": [
      206,
      1,
      34,
      8,
      25,
      17
    ],
    "code_indx_nocopy": [
      206,
      1,
      34,
      8,
      25,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "var_0",
      "is",
      "a",
      "string"
    ],
    "code": [
      "isinstance",
      "(",
      "var_0",
      ",",
      "str",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "obj_to_test",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      226,
      146,
      25,
      148,
      3,
      13
    ],
    "code_indx_copy": [
      206,
      1,
      34,
      8,
      25,
      17
    ],
    "code_indx_nocopy": [
      206,
      1,
      34,
      8,
      25,
      17
    ]
  },
  {
    "intent": [
      "append",
      "list",
      "var_0",
      "to",
      "var_1"
    ],
    "code": [
      "var_1",
      ".",
      "extend",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "list1",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "list2",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      109,
      4,
      25,
      8,
      61
    ],
    "code_indx_copy": [
      91,
      22,
      524,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      91,
      22,
      524,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "append",
      "list",
      "var_0",
      "to",
      "var_1"
    ],
    "code": [
      "var_1",
      ".",
      "extend",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "mylog",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "list1",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      109,
      4,
      25,
      8,
      61
    ],
    "code_indx_copy": [
      91,
      22,
      524,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      91,
      22,
      524,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "append",
      "list",
      "var_0",
      "to",
      "var_1"
    ],
    "code": [
      "var_1",
      ".",
      "extend",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "c",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      109,
      4,
      25,
      8,
      61
    ],
    "code_indx_copy": [
      91,
      22,
      524,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      91,
      22,
      524,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "append",
      "item",
      "in",
      "list",
      "var_0",
      "to",
      "var_1"
    ],
    "code": [
      "for",
      "line",
      "in",
      "var_0",
      ":",
      "\n",
      "    ",
      "var_1",
      ".",
      "append",
      "(",
      "line",
      ")",
      ""
    ],
    "slot_map": {
      "var_0": {
        "value": "mylog",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "list1",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      109,
      37,
      23,
      4,
      25,
      8,
      61
    ],
    "code_indx_copy": [
      7,
      315,
      9,
      34,
      13,
      161,
      216,
      91,
      22,
      146,
      1,
      315,
      17,
      218
    ],
    "code_indx_nocopy": [
      7,
      315,
      9,
      34,
      13,
      161,
      216,
      91,
      22,
      146,
      1,
      315,
      17,
      218
    ]
  },
  {
    "intent": [
      "append",
      "a",
      "tuple",
      "of",
      "element",
      "from",
      "list",
      "var_0",
      "with",
      "index",
      "str_0",
      "to",
      "list",
      "var_1"
    ],
    "code": [
      "var_1",
      ".",
      "append",
      "(",
      "(",
      "var_0",
      "[",
      "0",
      "]",
      "[",
      "0",
      "]",
      ",",
      "var_0",
      "[",
      "0",
      "]",
      "[",
      "2",
      "]",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "[0][0] [0][2]",
        "quote": "'",
        "type": "str"
      },
      "var_1": {
        "value": "b",
        "quote": "`",
        "type": "var"
      },
      "[str_0]": {
        "value": "[0][0] [0][2]",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      109,
      3,
      111,
      2,
      1,
      56,
      4,
      25,
      77,
      35,
      5,
      8,
      4,
      61
    ],
    "code_indx_copy": [
      91,
      22,
      146,
      1,
      1,
      34,
      12,
      43,
      16,
      12,
      43,
      16,
      8,
      34,
      12,
      43,
      16,
      12,
      82,
      16,
      17,
      17
    ],
    "code_indx_nocopy": [
      91,
      22,
      146,
      1,
      1,
      34,
      12,
      43,
      16,
      12,
      43,
      16,
      8,
      34,
      12,
      43,
      16,
      12,
      82,
      16,
      17,
      17
    ]
  },
  {
    "intent": [
      "initialize",
      "var_0",
      "in",
      "flask",
      "config",
      "with",
      "str_0"
    ],
    "code": [
      "app",
      ".",
      "config",
      "[",
      "'var_0'",
      "]",
      "=",
      "'str_0'"
    ],
    "slot_map": {
      "var_0": {
        "value": "SECRET_KEY",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "Your_secret_string",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      433,
      25,
      23,
      384,
      433,
      77,
      5
    ],
    "code_indx_copy": [
      524,
      22,
      532,
      12,
      56,
      16,
      19,
      29
    ],
    "code_indx_nocopy": [
      524,
      22,
      524,
      12,
      56,
      16,
      19,
      29
    ]
  },
  {
    "intent": [
      "unpack",
      "a",
      "series",
      "of",
      "tuples",
      "in",
      "panda",
      "into",
      "a",
      "dataframe",
      "with",
      "column",
      "name",
      "str_0",
      "and",
      "str_1"
    ],
    "code": [
      "pd",
      ".",
      "DataFrame",
      "(",
      "out",
      ".",
      "tolist",
      "(",
      ")",
      ",",
      "columns",
      "=",
      "[",
      "'str_0'",
      ",",
      "'str_1'",
      "]",
      ",",
      "index",
      "=",
      "out",
      ".",
      "index",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "out-1",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "out-2",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      142,
      3,
      323,
      2,
      31,
      23,
      40,
      11,
      3,
      41,
      77,
      59,
      129,
      5,
      29,
      30
    ],
    "code_indx_copy": [
      162,
      22,
      164,
      1,
      524,
      22,
      306,
      1,
      17,
      8,
      192,
      19,
      12,
      29,
      8,
      63,
      16,
      8,
      160,
      19,
      524,
      22,
      160,
      17
    ],
    "code_indx_nocopy": [
      162,
      22,
      164,
      1,
      524,
      22,
      306,
      1,
      17,
      8,
      192,
      19,
      12,
      29,
      8,
      63,
      16,
      8,
      160,
      19,
      524,
      22,
      160,
      17
    ]
  },
  {
    "intent": [
      "find",
      "the",
      "index",
      "of",
      "an",
      "element",
      "str_0",
      "in",
      "a",
      "list",
      "var_0"
    ],
    "code": [
      "[",
      "x",
      "for",
      "x",
      "in",
      "range",
      "(",
      "len",
      "(",
      "var_0",
      ")",
      ")",
      "if",
      "var_0",
      "[",
      "x",
      "]",
      "==",
      "'str_0'",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "MSFT",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "stocks_list",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      45,
      17,
      35,
      2,
      216,
      1,
      5,
      23,
      3,
      4,
      25
    ],
    "code_indx_copy": [
      12,
      26,
      7,
      26,
      9,
      104,
      1,
      32,
      1,
      34,
      17,
      17,
      67,
      34,
      12,
      26,
      16,
      76,
      29,
      16
    ],
    "code_indx_nocopy": [
      12,
      26,
      7,
      26,
      9,
      104,
      1,
      32,
      1,
      34,
      17,
      17,
      67,
      34,
      12,
      26,
      16,
      76,
      29,
      16
    ]
  },
  {
    "intent": [
      "rotate",
      "the",
      "xtick",
      "label",
      "of",
      "matplotlib",
      "plot",
      "var_0",
      "by",
      "str_0",
      "degree",
      "to",
      "make",
      "long",
      "label",
      "readable"
    ],
    "code": [
      "var_0",
      ".",
      "set_xticklabels",
      "(",
      "labels",
      ",",
      "rotation",
      "=",
      "45",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "ax",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "45",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      433,
      17,
      433,
      308,
      2,
      335,
      234,
      25,
      42,
      5,
      433,
      8,
      184,
      433,
      308,
      433
    ],
    "code_indx_copy": [
      34,
      22,
      524,
      1,
      524,
      8,
      524,
      19,
      524,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      524,
      1,
      524,
      8,
      524,
      19,
      524,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "symbol",
      "from",
      "a",
      "string",
      "var_0"
    ],
    "code": [
      "re",
      ".",
      "sub",
      "(",
      "'[^\\\\w]'",
      ",",
      "' '",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      257,
      433,
      56,
      3,
      13,
      25
    ],
    "code_indx_copy": [
      39,
      22,
      40,
      1,
      524,
      8,
      108,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      40,
      1,
      524,
      8,
      108,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "current",
      "directory",
      "of",
      "a",
      "script"
    ],
    "code": [
      "os",
      ".",
      "path",
      ".",
      "basename",
      "(",
      "os",
      ".",
      "path",
      ".",
      "dirname",
      "(",
      "os",
      ".",
      "path",
      ".",
      "realpath",
      "(",
      "__file__",
      ")",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      16,
      17,
      173,
      169,
      2,
      3,
      235
    ],
    "code_indx_copy": [
      113,
      22,
      114,
      22,
      524,
      1,
      113,
      22,
      114,
      22,
      378,
      1,
      113,
      22,
      114,
      22,
      188,
      1,
      383,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      114,
      22,
      524,
      1,
      113,
      22,
      114,
      22,
      378,
      1,
      113,
      22,
      114,
      22,
      188,
      1,
      383,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "find",
      "octal",
      "character",
      "match",
      "from",
      "a",
      "string",
      "var_0",
      "using",
      "regex"
    ],
    "code": [
      "print",
      "(",
      "re",
      ".",
      "findall",
      "(",
      "\"'\\\\\\\\[0-7]{1,3}'\"",
      ",",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "str",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      45,
      433,
      95,
      105,
      56,
      3,
      13,
      25,
      107,
      38
    ],
    "code_indx_copy": [
      49,
      1,
      39,
      22,
      48,
      1,
      524,
      8,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      39,
      22,
      48,
      1,
      524,
      8,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "split",
      "string",
      "var_0",
      "based",
      "on",
      "occurrence",
      "of",
      "regex",
      "pattern",
      "str_0"
    ],
    "code": [
      "re",
      ".",
      "split",
      "(",
      "'str_0'",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "input",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "[ ](?=[A-Z]+\\b)",
        "quote": "'",
        "type": "str"
      },
      "[str_0)": {
        "value": "[ ](?=[A-Z]+\\b)",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      138,
      13,
      25,
      198,
      139,
      50,
      2,
      38,
      51,
      5
    ],
    "code_indx_copy": [
      39,
      22,
      71,
      1,
      29,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      71,
      1,
      29,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "split",
      "string",
      "var_0",
      "at",
      "every",
      "space",
      "followed",
      "by",
      "an",
      "upper-case",
      "letter"
    ],
    "code": [
      "re",
      ".",
      "split",
      "(",
      "'[ ](?=[A-Z])'",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "input",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      138,
      13,
      25,
      33,
      268,
      132,
      354,
      42,
      216,
      433,
      346
    ],
    "code_indx_copy": [
      39,
      22,
      71,
      1,
      524,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      71,
      1,
      524,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "send",
      "multipart",
      "encoded",
      "file",
      "var_0",
      "to",
      "url",
      "var_1",
      "with",
      "header",
      "var_2",
      "and",
      "metadata",
      "var_3"
    ],
    "code": [
      "r",
      "=",
      "requests",
      ".",
      "post",
      "(",
      "var_1",
      ",",
      "var_0",
      "=",
      "var_0",
      ",",
      "var_2",
      "=",
      "var_2",
      ",",
      "var_3",
      "=",
      "var_3",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "files",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "url",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "headers",
        "quote": "`",
        "type": "var"
      },
      "var_3": {
        "value": "data",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      433,
      433,
      285,
      125,
      25,
      8,
      99,
      61,
      77,
      401,
      62,
      29,
      433,
      65
    ],
    "code_indx_copy": [
      18,
      19,
      85,
      22,
      379,
      1,
      91,
      8,
      34,
      19,
      34,
      8,
      94,
      19,
      94,
      8,
      55,
      19,
      55,
      17
    ],
    "code_indx_nocopy": [
      18,
      19,
      85,
      22,
      379,
      1,
      91,
      8,
      34,
      19,
      34,
      8,
      94,
      19,
      94,
      8,
      55,
      19,
      55,
      17
    ]
  },
  {
    "intent": [
      "write",
      "byte",
      "var_0",
      "to",
      "a",
      "file",
      "var_1",
      "in",
      "python",
      "3"
    ],
    "code": [
      "open",
      "(",
      "'var_1'",
      ",",
      "'wb'",
      ")",
      ".",
      "write",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "bytes_",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "filename",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      162,
      221,
      25,
      8,
      3,
      125,
      61,
      23,
      47,
      55
    ],
    "code_indx_copy": [
      105,
      1,
      57,
      8,
      524,
      17,
      22,
      131,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      105,
      1,
      57,
      8,
      524,
      17,
      22,
      131,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "list",
      "from",
      "a",
      "list",
      "var_0",
      "with",
      "value",
      "mapped",
      "into",
      "a",
      "dictionary",
      "var_1"
    ],
    "code": [
      "[",
      "var_1",
      "[",
      "k",
      "]",
      "for",
      "k",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "lst",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "dct",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      16,
      3,
      4,
      56,
      3,
      4,
      25,
      77,
      19,
      433,
      11,
      3,
      24,
      61
    ],
    "code_indx_copy": [
      12,
      91,
      12,
      89,
      16,
      7,
      89,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      12,
      91,
      12,
      89,
      16,
      7,
      89,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "find",
      "duplicate",
      "name",
      "in",
      "column",
      "str_0",
      "of",
      "the",
      "dataframe",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "set_index",
      "(",
      "'str_0'",
      ")",
      ".",
      "index",
      ".",
      "get_duplicates",
      "(",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "name",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "x",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      45,
      320,
      129,
      23,
      59,
      5,
      2,
      17,
      41,
      25
    ],
    "code_indx_copy": [
      34,
      22,
      203,
      1,
      29,
      17,
      22,
      160,
      22,
      524,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      203,
      1,
      29,
      17,
      22,
      160,
      22,
      524,
      1,
      17
    ]
  },
  {
    "intent": [
      "truncate",
      "float",
      "1.923328437452",
      "to",
      "3",
      "decimal",
      "place"
    ],
    "code": [
      "round",
      "(",
      "1.923328437452",
      ",",
      "3",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      433,
      92,
      433,
      8,
      55,
      245,
      246
    ],
    "code_indx_copy": [
      208,
      1,
      530,
      8,
      54,
      17
    ],
    "code_indx_nocopy": [
      208,
      1,
      524,
      8,
      54,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "list",
      "var_0",
      "in",
      "descending",
      "order",
      "based",
      "on",
      "the",
      "date",
      "value",
      "in",
      "second",
      "element",
      "of",
      "each",
      "list",
      "in",
      "list",
      "var_0"
    ],
    "code": [
      "sorted",
      "(",
      "var_1",
      ",",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "datetime",
      ".",
      "strptime",
      "(",
      "x",
      "[",
      "1",
      "]",
      ",",
      "'%d/%m/%Y'",
      ")",
      ",",
      "reverse",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "li",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "li",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      116,
      4,
      25,
      23,
      120,
      157,
      198,
      139,
      17,
      133,
      19,
      23,
      117,
      1,
      2,
      21,
      4,
      23,
      4,
      25
    ],
    "code_indx_copy": [
      101,
      1,
      91,
      8,
      102,
      19,
      44,
      26,
      13,
      27,
      22,
      28,
      1,
      26,
      12,
      15,
      16,
      8,
      524,
      17,
      8,
      129,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      91,
      8,
      102,
      19,
      44,
      26,
      13,
      27,
      22,
      28,
      1,
      26,
      12,
      15,
      16,
      8,
      524,
      17,
      8,
      129,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "place",
      "the",
      "radial",
      "tick",
      "in",
      "plot",
      "var_0",
      "at",
      "135",
      "degree"
    ],
    "code": [
      "var_0",
      ".",
      "set_rlabel_position",
      "(",
      "135",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "ax",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      246,
      17,
      433,
      433,
      23,
      234,
      25,
      33,
      433,
      433
    ],
    "code_indx_copy": [
      34,
      22,
      524,
      1,
      536,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      524,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "path",
      "var_0",
      "is",
      "an",
      "absolute",
      "path"
    ],
    "code": [
      "os",
      ".",
      "path",
      ".",
      "isabs",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "my_path",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      226,
      146,
      192,
      25,
      148,
      216,
      433,
      192
    ],
    "code_indx_copy": [
      113,
      22,
      114,
      22,
      524,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      114,
      22,
      524,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "get",
      "number",
      "of",
      "key",
      "in",
      "dictionary",
      "var_0"
    ],
    "code": [
      "len",
      "(",
      "list",
      "(",
      "var_0",
      ".",
      "keys",
      "(",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "yourdict",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      16,
      74,
      2,
      22,
      23,
      24,
      25
    ],
    "code_indx_copy": [
      32,
      1,
      33,
      1,
      34,
      22,
      167,
      1,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      32,
      1,
      33,
      1,
      34,
      22,
      167,
      1,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "count",
      "the",
      "number",
      "of",
      "key",
      "in",
      "dictionary",
      "var_0"
    ],
    "code": [
      "len",
      "(",
      "set",
      "(",
      "open",
      "(",
      "var_0",
      ")",
      ".",
      "read",
      "(",
      ")",
      ".",
      "split",
      "(",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "yourdictfile",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      172,
      17,
      74,
      2,
      22,
      23,
      24,
      25
    ],
    "code_indx_copy": [
      32,
      1,
      189,
      1,
      105,
      1,
      34,
      17,
      22,
      106,
      1,
      17,
      22,
      71,
      1,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      32,
      1,
      189,
      1,
      105,
      1,
      34,
      17,
      22,
      106,
      1,
      17,
      22,
      71,
      1,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "panda",
      "dataframe",
      "get",
      "first",
      "row",
      "of",
      "each",
      "group",
      "by",
      "str_0"
    ],
    "code": [
      "df",
      ".",
      "groupby",
      "(",
      "'str_0'",
      ")",
      ".",
      "first",
      "(",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "id",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      40,
      41,
      16,
      147,
      43,
      2,
      21,
      365,
      42,
      5
    ],
    "code_indx_copy": [
      149,
      22,
      157,
      1,
      29,
      17,
      22,
      531,
      1,
      17
    ],
    "code_indx_nocopy": [
      149,
      22,
      157,
      1,
      29,
      17,
      22,
      524,
      1,
      17
    ]
  },
  {
    "intent": [
      "split",
      "a",
      "list",
      "in",
      "first",
      "column",
      "into",
      "multiple",
      "column",
      "keeping",
      "other",
      "column",
      "a",
      "well",
      "in",
      "panda",
      "data",
      "frame"
    ],
    "code": [
      "pd",
      ".",
      "concat",
      "(",
      "[",
      "df",
      "[",
      "0",
      "]",
      ".",
      "apply",
      "(",
      "pd",
      ".",
      "Series",
      ")",
      ",",
      "df",
      "[",
      "1",
      "]",
      "]",
      ",",
      "axis",
      "=",
      "1",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      138,
      3,
      4,
      23,
      147,
      59,
      11,
      6,
      59,
      433,
      186,
      59,
      3,
      433,
      23,
      40,
      63,
      64
    ],
    "code_indx_copy": [
      162,
      22,
      163,
      1,
      12,
      149,
      12,
      43,
      16,
      22,
      59,
      1,
      162,
      22,
      467,
      17,
      8,
      149,
      12,
      15,
      16,
      16,
      8,
      42,
      19,
      15,
      17
    ],
    "code_indx_nocopy": [
      162,
      22,
      163,
      1,
      12,
      149,
      12,
      43,
      16,
      22,
      59,
      1,
      162,
      22,
      467,
      17,
      8,
      149,
      12,
      15,
      16,
      16,
      8,
      42,
      19,
      15,
      17
    ]
  },
  {
    "intent": [
      "extract",
      "attribute",
      "str_0",
      "from",
      "string",
      "var_0"
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'str_0'",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "src=\"js/([^\"]*\\bjquery\\b[^\"]*)\"",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "data",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      101,
      325,
      5,
      56,
      13,
      25
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      29,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      29,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "sum",
      "integer",
      "contained",
      "in",
      "string",
      "in",
      "list",
      "str_0"
    ],
    "code": [
      "sum",
      "(",
      "int",
      "(",
      "float",
      "(",
      "item",
      ")",
      ")",
      "for",
      "item",
      "in",
      "[",
      "_f",
      "for",
      "_f",
      "in",
      "[",
      "str_0",
      "]",
      "if",
      "\n",
      "_f",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "['', '3.4', '', '', '1.0']",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "['', '3.4', '', '', '1.0']",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      110,
      7,
      433,
      23,
      13,
      23,
      4,
      5
    ],
    "code_indx_copy": [
      0,
      1,
      20,
      1,
      225,
      1,
      387,
      17,
      17,
      7,
      387,
      9,
      12,
      514,
      7,
      514,
      9,
      12,
      11,
      16,
      67,
      161,
      514,
      16,
      17
    ],
    "code_indx_nocopy": [
      0,
      1,
      20,
      1,
      225,
      1,
      387,
      17,
      17,
      7,
      387,
      9,
      12,
      514,
      7,
      514,
      9,
      12,
      11,
      16,
      67,
      161,
      514,
      16,
      17
    ]
  },
  {
    "intent": [
      "call",
      "a",
      "subprocess",
      "with",
      "argument",
      "str_0",
      "that",
      "may",
      "contain",
      "space"
    ],
    "code": [
      "subprocess",
      ".",
      "Popen",
      "(",
      "[",
      "'str_0'",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "c:\\Program Files\\VMware\\VMware Server\\vmware-cmd.bat",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      293,
      3,
      279,
      77,
      294,
      5,
      188,
      433,
      310,
      132
    ],
    "code_indx_copy": [
      229,
      22,
      441,
      1,
      12,
      29,
      16,
      17
    ],
    "code_indx_nocopy": [
      229,
      22,
      441,
      1,
      12,
      29,
      16,
      17
    ]
  },
  {
    "intent": [
      "reverse",
      "a",
      "priority",
      "queue",
      "var_0",
      "in",
      "python",
      "without",
      "using",
      "class"
    ],
    "code": [
      "var_0",
      ".",
      "put",
      "(",
      "(",
      "-",
      "n",
      ",",
      "n",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "q",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      271,
      3,
      433,
      433,
      25,
      23,
      47,
      100,
      107,
      299
    ],
    "code_indx_copy": [
      34,
      22,
      524,
      1,
      1,
      14,
      307,
      8,
      307,
      17,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      524,
      1,
      1,
      14,
      307,
      8,
      307,
      17,
      17
    ]
  },
  {
    "intent": [
      "make",
      "a",
      "barplot",
      "of",
      "data",
      "in",
      "column",
      "var_0",
      "of",
      "dataframe",
      "var_1",
      "colour-coded",
      "according",
      "to",
      "list",
      "var_2"
    ],
    "code": [
      "var_1",
      "[",
      "'var_0'",
      "]",
      ".",
      "plot",
      "(",
      "kind",
      "=",
      "'bar'",
      ",",
      "var_2",
      "=",
      "[",
      "'r'",
      ",",
      "'g'",
      ",",
      "'b'",
      ",",
      "'r'",
      ",",
      "'g'",
      ",",
      "'b'",
      ",",
      "'r'",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "group",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "color",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      184,
      3,
      433,
      2,
      63,
      23,
      59,
      25,
      2,
      41,
      61,
      433,
      361,
      8,
      4,
      62
    ],
    "code_indx_copy": [
      91,
      12,
      56,
      16,
      22,
      290,
      1,
      524,
      19,
      485,
      8,
      94,
      19,
      12,
      365,
      8,
      524,
      8,
      293,
      8,
      365,
      8,
      524,
      8,
      293,
      8,
      365,
      16,
      17
    ],
    "code_indx_nocopy": [
      91,
      12,
      56,
      16,
      22,
      290,
      1,
      524,
      19,
      485,
      8,
      94,
      19,
      12,
      365,
      8,
      524,
      8,
      293,
      8,
      365,
      8,
      524,
      8,
      293,
      8,
      365,
      16,
      17
    ]
  },
  {
    "intent": [
      "find",
      "all",
      "match",
      "of",
      "regex",
      "pattern",
      "str_0",
      "in",
      "string",
      "var_0"
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'str_0'",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "([a-fA-F\\d]{32})",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "data",
        "quote": "`",
        "type": "var"
      },
      "(str_0)": {
        "value": "([a-fA-F\\d]{32})",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      45,
      36,
      105,
      2,
      38,
      51,
      5,
      23,
      13,
      25
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      29,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      29,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "length",
      "of",
      "list",
      "var_0"
    ],
    "code": [
      "len",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "my_list",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      16,
      17,
      199,
      2,
      4,
      25
    ],
    "code_indx_copy": [
      32,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      32,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "getting",
      "the",
      "length",
      "of",
      "array",
      "var_0"
    ],
    "code": [
      "len",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "l",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      381,
      17,
      199,
      2,
      82,
      25
    ],
    "code_indx_copy": [
      32,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      32,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "getting",
      "the",
      "length",
      "of",
      "array",
      "var_0"
    ],
    "code": [
      "len",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      381,
      17,
      199,
      2,
      82,
      25
    ],
    "code_indx_copy": [
      32,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      32,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "getting",
      "the",
      "length",
      "of",
      "var_0"
    ],
    "code": [
      "len",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "my_tuple",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      381,
      17,
      199,
      2,
      25
    ],
    "code_indx_copy": [
      32,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      32,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "getting",
      "the",
      "length",
      "of",
      "var_0"
    ],
    "code": [
      "len",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "my_string",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      381,
      17,
      199,
      2,
      25
    ],
    "code_indx_copy": [
      32,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      32,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "escape",
      "character",
      "from",
      "string",
      "str_0"
    ],
    "code": [
      "\"\"\"str_0\"\"\"",
      ".",
      "decode",
      "(",
      "'string_escape'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "\\a",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      257,
      286,
      95,
      56,
      13,
      5
    ],
    "code_indx_copy": [
      212,
      22,
      99,
      1,
      256,
      17
    ],
    "code_indx_nocopy": [
      212,
      22,
      99,
      1,
      256,
      17
    ]
  },
  {
    "intent": [
      "replace",
      "each",
      "str_0",
      "with",
      "str_1",
      "and",
      "each",
      "str_1",
      "with",
      "str_0",
      "in",
      "the",
      "string",
      "str_4",
      "in",
      "a",
      "single",
      "pas",
      "."
    ],
    "code": [
      "\"\"\"str_4\"\"\"",
      ".",
      "replace",
      "(",
      "'str_3'",
      ",",
      "'%temp%'",
      ")",
      ".",
      "replace",
      "(",
      "'str_2'",
      ",",
      "'str_3'",
      ")",
      ".",
      "replace",
      "(",
      "\n",
      "'%temp%'",
      ",",
      "'str_2'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "a",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "b",
        "quote": "'",
        "type": "str"
      },
      "str_2": {
        "value": "b",
        "quote": "'",
        "type": "str"
      },
      "str_3": {
        "value": "a",
        "quote": "'",
        "type": "str"
      },
      "str_4": {
        "value": "obama",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      130,
      21,
      5,
      77,
      30,
      29,
      21,
      30,
      77,
      5,
      23,
      17,
      13,
      433,
      23,
      3,
      9,
      433,
      154
    ],
    "code_indx_copy": [
      524,
      22,
      107,
      1,
      173,
      8,
      524,
      17,
      22,
      107,
      1,
      150,
      8,
      173,
      17,
      22,
      107,
      1,
      161,
      524,
      8,
      150,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      107,
      1,
      173,
      8,
      524,
      17,
      22,
      107,
      1,
      150,
      8,
      173,
      17,
      22,
      107,
      1,
      161,
      524,
      8,
      150,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "directory",
      "tree",
      "str_0"
    ],
    "code": [
      "shutil",
      ".",
      "rmtree",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "/folder_name",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      257,
      169,
      433,
      5
    ],
    "code_indx_copy": [
      384,
      22,
      524,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      384,
      22,
      524,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "new",
      "column",
      "var_0",
      "in",
      "panda",
      "data",
      "frame",
      "var_1",
      "based",
      "on",
      "the",
      "value",
      "in",
      "column",
      "var_2"
    ],
    "code": [
      "var_1",
      "[",
      "'var_0'",
      "]",
      "=",
      "var_1",
      "[",
      "'var_2'",
      "]",
      ".",
      "apply",
      "(",
      "lambda",
      "x",
      ":",
      "x",
      ".",
      "var_0",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "weekday",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "data",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "my_dt",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      144,
      3,
      185,
      59,
      25,
      23,
      40,
      63,
      64,
      61,
      198,
      139,
      17,
      19,
      23,
      59,
      62
    ],
    "code_indx_copy": [
      91,
      12,
      56,
      16,
      19,
      91,
      12,
      58,
      16,
      22,
      59,
      1,
      44,
      26,
      13,
      26,
      22,
      34,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      91,
      12,
      56,
      16,
      19,
      91,
      12,
      58,
      16,
      22,
      59,
      1,
      44,
      26,
      13,
      26,
      22,
      34,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "reverse",
      "sort",
      "counter",
      "var_0",
      "by",
      "value"
    ],
    "code": [
      "sorted",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "var_0",
      ".",
      "get",
      ",",
      "reverse",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "x",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      271,
      116,
      433,
      25,
      42,
      19
    ],
    "code_indx_copy": [
      101,
      1,
      34,
      8,
      102,
      19,
      34,
      22,
      86,
      8,
      129,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      34,
      8,
      102,
      19,
      34,
      22,
      86,
      8,
      129,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "reverse",
      "sort",
      "counter",
      "var_0",
      "by",
      "value"
    ],
    "code": [
      "sorted",
      "(",
      "list",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      ",",
      "key",
      "=",
      "lambda",
      "pair",
      ":",
      "pair",
      "[",
      "1",
      "]",
      ",",
      "reverse",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "x",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      271,
      116,
      433,
      25,
      42,
      19
    ],
    "code_indx_copy": [
      101,
      1,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      8,
      102,
      19,
      44,
      320,
      13,
      320,
      12,
      15,
      16,
      8,
      129,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      8,
      102,
      19,
      44,
      320,
      13,
      320,
      12,
      15,
      16,
      8,
      129,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "append",
      "a",
      "numpy",
      "array",
      "str_0",
      "to",
      "a",
      "numpy",
      "array",
      "str_1"
    ],
    "code": [
      "np",
      ".",
      "vstack",
      "(",
      "(",
      "str_1",
      ",",
      "str_0",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "b",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "a",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      109,
      3,
      81,
      82,
      5,
      8,
      3,
      81,
      82,
      30
    ],
    "code_indx_copy": [
      74,
      22,
      524,
      1,
      1,
      37,
      8,
      11,
      17,
      17
    ],
    "code_indx_nocopy": [
      74,
      22,
      524,
      1,
      1,
      37,
      8,
      11,
      17,
      17
    ]
  },
  {
    "intent": [
      "numpy",
      "concatenate",
      "two",
      "array",
      "var_0",
      "and",
      "var_1",
      "along",
      "the",
      "first",
      "axis"
    ],
    "code": [
      "print",
      "(",
      "concatenate",
      "(",
      "(",
      "var_0",
      ",",
      "var_1",
      ")",
      ",",
      "axis",
      "=",
      "0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "b",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      81,
      0,
      28,
      82,
      25,
      29,
      61,
      433,
      17,
      147,
      419
    ],
    "code_indx_copy": [
      49,
      1,
      491,
      1,
      1,
      34,
      8,
      91,
      17,
      8,
      42,
      19,
      43,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      491,
      1,
      1,
      34,
      8,
      91,
      17,
      8,
      42,
      19,
      43,
      17,
      17
    ]
  },
  {
    "intent": [
      "numpy",
      "concatenate",
      "two",
      "array",
      "var_0",
      "and",
      "var_1",
      "along",
      "the",
      "second",
      "axis"
    ],
    "code": [
      "print",
      "(",
      "concatenate",
      "(",
      "(",
      "var_0",
      ",",
      "var_1",
      ")",
      ",",
      "axis",
      "=",
      "1",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "b",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      81,
      0,
      28,
      82,
      25,
      29,
      61,
      433,
      17,
      117,
      419
    ],
    "code_indx_copy": [
      49,
      1,
      491,
      1,
      1,
      34,
      8,
      91,
      17,
      8,
      42,
      19,
      15,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      491,
      1,
      1,
      34,
      8,
      91,
      17,
      8,
      42,
      19,
      15,
      17,
      17
    ]
  },
  {
    "intent": [
      "numpy",
      "concatenate",
      "two",
      "array",
      "var_0",
      "and",
      "var_1",
      "along",
      "the",
      "first",
      "axis"
    ],
    "code": [
      "c",
      "=",
      "np",
      ".",
      "r_",
      "[",
      "var_0",
      "[",
      "(",
      "None",
      ")",
      ",",
      ":",
      "]",
      ",",
      "var_1",
      "[",
      "(",
      "None",
      ")",
      ",",
      ":",
      "]",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "b",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      81,
      0,
      28,
      82,
      25,
      29,
      61,
      433,
      17,
      147,
      419
    ],
    "code_indx_copy": [
      66,
      19,
      74,
      22,
      524,
      12,
      34,
      12,
      1,
      209,
      17,
      8,
      13,
      16,
      8,
      91,
      12,
      1,
      209,
      17,
      8,
      13,
      16,
      16
    ],
    "code_indx_nocopy": [
      66,
      19,
      74,
      22,
      524,
      12,
      34,
      12,
      1,
      209,
      17,
      8,
      13,
      16,
      8,
      91,
      12,
      1,
      209,
      17,
      8,
      13,
      16,
      16
    ]
  },
  {
    "intent": [
      "numpy",
      "concatenate",
      "two",
      "array",
      "var_0",
      "and",
      "var_1",
      "along",
      "the",
      "first",
      "axis"
    ],
    "code": [
      "np",
      ".",
      "array",
      "(",
      "(",
      "var_0",
      ",",
      "var_1",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "b",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      81,
      0,
      28,
      82,
      25,
      29,
      61,
      433,
      17,
      147,
      419
    ],
    "code_indx_copy": [
      74,
      22,
      175,
      1,
      1,
      34,
      8,
      91,
      17,
      17
    ],
    "code_indx_nocopy": [
      74,
      22,
      175,
      1,
      1,
      34,
      8,
      91,
      17,
      17
    ]
  },
  {
    "intent": [
      "fetch",
      "address",
      "information",
      "for",
      "host",
      "str_0",
      "ion",
      "port",
      "80"
    ],
    "code": [
      "print",
      "(",
      "socket",
      ".",
      "getaddrinfo",
      "(",
      "'str_0'",
      ",",
      "80",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "google.com",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      433,
      433,
      433,
      20,
      433,
      5,
      433,
      433,
      433
    ],
    "code_indx_copy": [
      49,
      1,
      524,
      22,
      524,
      1,
      29,
      8,
      536,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      524,
      22,
      524,
      1,
      29,
      8,
      524,
      17,
      17
    ]
  },
  {
    "intent": [
      "add",
      "a",
      "column",
      "str_0",
      "with",
      "value",
      "str_1",
      "to",
      "dataframe",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "xs",
      "(",
      "'str_1'",
      ",",
      "level",
      "=",
      "'str_0'",
      ",",
      "drop_level",
      "=",
      "False",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "day",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "sat",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      58,
      3,
      59,
      5,
      77,
      19,
      30,
      8,
      41,
      25
    ],
    "code_indx_copy": [
      34,
      22,
      524,
      1,
      63,
      8,
      158,
      19,
      29,
      8,
      524,
      19,
      87,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      524,
      1,
      63,
      8,
      158,
      19,
      29,
      8,
      524,
      19,
      87,
      17
    ]
  },
  {
    "intent": [
      "return",
      "a",
      "401",
      "unauthorized",
      "in",
      "django"
    ],
    "code": [
      "return",
      "HttpResponse",
      "(",
      "'Unauthorized'",
      ",",
      "status",
      "=",
      "401",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      155,
      3,
      433,
      433,
      23,
      85
    ],
    "code_indx_copy": [
      118,
      524,
      1,
      524,
      8,
      524,
      19,
      530,
      17
    ],
    "code_indx_nocopy": [
      118,
      524,
      1,
      524,
      8,
      524,
      19,
      524,
      17
    ]
  },
  {
    "intent": [
      "flask",
      "set",
      "folder",
      "str_0",
      "a",
      "the",
      "default",
      "template",
      "folder"
    ],
    "code": [
      "Flask",
      "(",
      "__name__",
      ",",
      "template_folder",
      "=",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "wherever",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      384,
      57,
      385,
      5,
      3,
      17,
      225,
      433,
      385
    ],
    "code_indx_copy": [
      524,
      1,
      250,
      8,
      524,
      19,
      29,
      17
    ],
    "code_indx_nocopy": [
      524,
      1,
      250,
      8,
      524,
      19,
      29,
      17
    ]
  },
  {
    "intent": [
      "how",
      "do",
      "i",
      "insert",
      "into",
      "t1",
      "(",
      "select",
      "*",
      "from",
      "t2",
      ")",
      "in",
      "sqlalchemy",
      "?"
    ],
    "code": [
      "session",
      ".",
      "execute",
      "(",
      "'INSERT INTO t1 (SELECT * FROM t2)'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      75,
      311,
      312,
      266,
      11,
      433,
      202,
      76,
      433,
      56,
      433,
      26,
      23,
      355,
      49
    ],
    "code_indx_copy": [
      425,
      22,
      411,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      425,
      22,
      411,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "list",
      "of",
      "list",
      "str_0",
      "such",
      "that",
      "third",
      "row",
      "come",
      "first"
    ],
    "code": [
      "str_0",
      ".",
      "sort",
      "(",
      "key",
      "=",
      "lambda",
      "row",
      ":",
      "row",
      "[",
      "2",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "c2",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      116,
      3,
      4,
      2,
      4,
      5,
      433,
      188,
      119,
      43,
      433,
      147
    ],
    "code_indx_copy": [
      11,
      22,
      124,
      1,
      102,
      19,
      44,
      262,
      13,
      262,
      12,
      82,
      16,
      17
    ],
    "code_indx_nocopy": [
      11,
      22,
      124,
      1,
      102,
      19,
      44,
      262,
      13,
      262,
      12,
      82,
      16,
      17
    ]
  },
  {
    "intent": [
      "sorting",
      "a",
      "list",
      "of",
      "list",
      "in",
      "python"
    ],
    "code": [
      "c2",
      ".",
      "sort",
      "(",
      "key",
      "=",
      "lambda",
      "row",
      ":",
      "(",
      "row",
      "[",
      "2",
      "]",
      ",",
      "row",
      "[",
      "1",
      "]",
      ",",
      "row",
      "[",
      "0",
      "]",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      272,
      3,
      4,
      2,
      4,
      23,
      47
    ],
    "code_indx_copy": [
      524,
      22,
      124,
      1,
      102,
      19,
      44,
      262,
      13,
      1,
      262,
      12,
      82,
      16,
      8,
      262,
      12,
      15,
      16,
      8,
      262,
      12,
      43,
      16,
      17,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      124,
      1,
      102,
      19,
      44,
      262,
      13,
      1,
      262,
      12,
      82,
      16,
      8,
      262,
      12,
      15,
      16,
      8,
      262,
      12,
      43,
      16,
      17,
      17
    ]
  },
  {
    "intent": [
      "sorting",
      "a",
      "list",
      "of",
      "list",
      "in",
      "python"
    ],
    "code": [
      "c2",
      ".",
      "sort",
      "(",
      "key",
      "=",
      "lambda",
      "row",
      ":",
      "(",
      "row",
      "[",
      "2",
      "]",
      ",",
      "row",
      "[",
      "1",
      "]",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      272,
      3,
      4,
      2,
      4,
      23,
      47
    ],
    "code_indx_copy": [
      524,
      22,
      124,
      1,
      102,
      19,
      44,
      262,
      13,
      1,
      262,
      12,
      82,
      16,
      8,
      262,
      12,
      15,
      16,
      17,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      124,
      1,
      102,
      19,
      44,
      262,
      13,
      1,
      262,
      12,
      82,
      16,
      8,
      262,
      12,
      15,
      16,
      17,
      17
    ]
  },
  {
    "intent": [
      "set",
      "font",
      "var_0",
      "to",
      "display",
      "non-ascii",
      "character",
      "in",
      "matplotlib"
    ],
    "code": [
      "matplotlib",
      ".",
      "rc",
      "(",
      "'font'",
      ",",
      "**",
      "{",
      "'sans-serif'",
      ":",
      "'var_0'",
      ",",
      "'family'",
      ":",
      "'sans-serif'",
      "}",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "Arial",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      57,
      433,
      25,
      8,
      349,
      319,
      95,
      23,
      335
    ],
    "code_indx_copy": [
      536,
      22,
      524,
      1,
      524,
      8,
      5,
      52,
      524,
      13,
      56,
      8,
      524,
      13,
      524,
      53,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      524,
      1,
      524,
      8,
      5,
      52,
      524,
      13,
      56,
      8,
      524,
      13,
      524,
      53,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "datetime",
      "column",
      "str_0",
      "of",
      "panda",
      "dataframe",
      "str_1",
      "to",
      "ordinal"
    ],
    "code": [
      "str_1",
      "[",
      "'str_0'",
      "]",
      ".",
      "apply",
      "(",
      "lambda",
      "x",
      ":",
      "x",
      ".",
      "toordinal",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "date",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "df",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      10,
      12,
      59,
      5,
      2,
      40,
      41,
      30,
      8,
      433
    ],
    "code_indx_copy": [
      37,
      12,
      29,
      16,
      22,
      59,
      1,
      44,
      26,
      13,
      26,
      22,
      524,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      37,
      12,
      29,
      16,
      22,
      59,
      1,
      44,
      26,
      13,
      26,
      22,
      524,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "html",
      "source",
      "of",
      "selenium",
      "webelement",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "get_attribute",
      "(",
      "'innerHTML'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "element",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      16,
      295,
      433,
      2,
      48,
      433,
      25
    ],
    "code_indx_copy": [
      34,
      22,
      524,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      524,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "integer",
      "location",
      "of",
      "a",
      "key",
      "var_0",
      "in",
      "a",
      "panda",
      "data",
      "frame"
    ],
    "code": [
      "df",
      ".",
      "index",
      ".",
      "get_loc",
      "(",
      "'var_0'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "bob",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      16,
      17,
      7,
      433,
      2,
      3,
      22,
      25,
      23,
      3,
      40,
      63,
      64
    ],
    "code_indx_copy": [
      149,
      22,
      160,
      22,
      524,
      1,
      56,
      17
    ],
    "code_indx_nocopy": [
      149,
      22,
      160,
      22,
      524,
      1,
      56,
      17
    ]
  },
  {
    "intent": [
      "open",
      "a",
      "str_0",
      "terminal",
      "from",
      "python",
      "script",
      "and",
      "run",
      "str_1",
      "command",
      "."
    ],
    "code": [
      "os",
      ".",
      "system",
      "(",
      "'gnome-terminal -e \\'bash -c \"sudo apt-get update; exec bash\"\\''",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "gnome",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "sudo apt-get update",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      273,
      3,
      5,
      433,
      56,
      47,
      235,
      29,
      240,
      30,
      137,
      154
    ],
    "code_indx_copy": [
      113,
      22,
      119,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      119,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "add",
      "an",
      "item",
      "with",
      "key",
      "str_0",
      "and",
      "value",
      "1",
      "to",
      "an",
      "dictionary",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "update",
      "(",
      "{",
      "'str_0'",
      ":",
      "1",
      "}",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "third_key",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "my_dict",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      58,
      216,
      37,
      77,
      22,
      5,
      29,
      19,
      228,
      8,
      216,
      24,
      25
    ],
    "code_indx_copy": [
      34,
      22,
      69,
      1,
      52,
      29,
      13,
      15,
      53,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      69,
      1,
      52,
      29,
      13,
      15,
      53,
      17
    ]
  },
  {
    "intent": [
      "declare",
      "an",
      "array"
    ],
    "code": [
      "my_list",
      "=",
      "[",
      "]"
    ],
    "slot_map": {},
    "intent_indx": [
      433,
      216,
      82
    ],
    "code_indx_copy": [
      240,
      19,
      12,
      16
    ],
    "code_indx_nocopy": [
      240,
      19,
      12,
      16
    ]
  },
  {
    "intent": [
      "insert",
      "item",
      "str_0",
      "to",
      "a",
      "list",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "append",
      "(",
      "12",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "12",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "my_list",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      266,
      37,
      5,
      8,
      3,
      4,
      25
    ],
    "code_indx_copy": [
      34,
      22,
      146,
      1,
      348,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      146,
      1,
      348,
      17
    ]
  },
  {
    "intent": [
      "add",
      "an",
      "entry",
      "str_0",
      "at",
      "the",
      "beginning",
      "of",
      "list",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "insert",
      "(",
      "0",
      ",",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "wuggah",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "myList",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      58,
      216,
      244,
      5,
      33,
      17,
      165,
      2,
      4,
      25
    ],
    "code_indx_copy": [
      34,
      22,
      319,
      1,
      43,
      8,
      29,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      319,
      1,
      43,
      8,
      29,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "hex-string",
      "representation",
      "to",
      "actual",
      "byte"
    ],
    "code": [
      "\"\"\"\\\\xF3\\\\xBE\\\\x80\\\\x80\"\"\"",
      ".",
      "replace",
      "(",
      "'\\\\x'",
      ",",
      "''",
      ")",
      ".",
      "decode",
      "(",
      "'hex'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      10,
      3,
      433,
      115,
      8,
      433,
      221
    ],
    "code_indx_copy": [
      524,
      22,
      107,
      1,
      524,
      8,
      21,
      17,
      22,
      99,
      1,
      100,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      107,
      1,
      524,
      8,
      21,
      17,
      22,
      99,
      1,
      100,
      17
    ]
  },
  {
    "intent": [
      "select",
      "the",
      "last",
      "column",
      "of",
      "dataframe",
      "var_0"
    ],
    "code": [
      "var_0",
      "[",
      "var_0",
      ".",
      "columns",
      "[",
      "-",
      "1",
      "]",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      76,
      17,
      164,
      59,
      2,
      41,
      25
    ],
    "code_indx_copy": [
      34,
      12,
      34,
      22,
      192,
      12,
      14,
      15,
      16,
      16
    ],
    "code_indx_nocopy": [
      34,
      12,
      34,
      22,
      192,
      12,
      14,
      15,
      16,
      16
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "first",
      "value",
      "from",
      "dataframe",
      "var_0",
      "where",
      "column",
      "str_0",
      "is",
      "equal",
      "to",
      "str_1"
    ],
    "code": [
      "var_0",
      ".",
      "loc",
      "[",
      "var_0",
      "[",
      "'str_0'",
      "]",
      "==",
      "'str_1'",
      ",",
      "'str_0'",
      "]",
      ".",
      "values",
      "[",
      "0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "Letters",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "C",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      16,
      17,
      147,
      19,
      56,
      41,
      25,
      151,
      59,
      5,
      148,
      103,
      8,
      30
    ],
    "code_indx_copy": [
      34,
      22,
      202,
      12,
      34,
      12,
      29,
      16,
      76,
      63,
      8,
      29,
      16,
      22,
      166,
      12,
      43,
      16
    ],
    "code_indx_nocopy": [
      34,
      22,
      202,
      12,
      34,
      12,
      29,
      16,
      76,
      63,
      8,
      29,
      16,
      22,
      166,
      12,
      43,
      16
    ]
  },
  {
    "intent": [
      "converting",
      "two",
      "list",
      "str_0",
      "and",
      "str_1",
      "into",
      "a",
      "matrix"
    ],
    "code": [
      "np",
      ".",
      "column_stack",
      "(",
      "(",
      "[",
      "str_0",
      "]",
      ",",
      "[",
      "str_1",
      "]",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "[1, 2, 3]",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": "[4, 5, 6]",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "[1, 2, 3]",
        "quote": "`",
        "type": "str"
      },
      "[str_1]": {
        "value": "[4, 5, 6]",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      113,
      28,
      4,
      5,
      29,
      30,
      11,
      3,
      182
    ],
    "code_indx_copy": [
      74,
      22,
      524,
      1,
      1,
      12,
      11,
      16,
      8,
      12,
      37,
      16,
      17,
      17
    ],
    "code_indx_nocopy": [
      74,
      22,
      524,
      1,
      1,
      12,
      11,
      16,
      8,
      12,
      37,
      16,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "type",
      "of",
      "var_0"
    ],
    "code": [
      "type",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "i",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      16,
      17,
      314,
      2,
      25
    ],
    "code_indx_copy": [
      530,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      524,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "determine",
      "the",
      "type",
      "of",
      "variable",
      "var_0"
    ],
    "code": [
      "type",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "v",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      433,
      17,
      314,
      2,
      93,
      25
    ],
    "code_indx_copy": [
      530,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      524,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "determine",
      "the",
      "type",
      "of",
      "variable",
      "var_0"
    ],
    "code": [
      "type",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "v",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      433,
      17,
      314,
      2,
      93,
      25
    ],
    "code_indx_copy": [
      530,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      524,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "determine",
      "the",
      "type",
      "of",
      "variable",
      "var_0"
    ],
    "code": [
      "type",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "v",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      433,
      17,
      314,
      2,
      93,
      25
    ],
    "code_indx_copy": [
      530,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      524,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "determine",
      "the",
      "type",
      "of",
      "variable",
      "var_0"
    ],
    "code": [
      "type",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "v",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      433,
      17,
      314,
      2,
      93,
      25
    ],
    "code_indx_copy": [
      530,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      524,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "type",
      "of",
      "variable",
      "var_0"
    ],
    "code": [
      "print",
      "(",
      "type",
      "(",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "variable_name",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      16,
      17,
      314,
      2,
      93,
      25
    ],
    "code_indx_copy": [
      49,
      1,
      530,
      1,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      524,
      1,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "5th",
      "item",
      "of",
      "a",
      "generator"
    ],
    "code": [
      "next",
      "(",
      "itertools",
      ".",
      "islice",
      "(",
      "range",
      "(",
      "10",
      ")",
      ",",
      "5",
      ",",
      "5",
      "+",
      "1",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      16,
      17,
      433,
      37,
      2,
      3,
      141
    ],
    "code_indx_copy": [
      496,
      1,
      50,
      22,
      524,
      1,
      104,
      1,
      4,
      17,
      8,
      185,
      8,
      185,
      96,
      15,
      17,
      17
    ],
    "code_indx_nocopy": [
      496,
      1,
      50,
      22,
      524,
      1,
      104,
      1,
      4,
      17,
      8,
      185,
      8,
      185,
      96,
      15,
      17,
      17
    ]
  },
  {
    "intent": [
      "print",
      "a",
      "string",
      "var_0",
      "with",
      "string",
      "format"
    ],
    "code": [
      "print",
      "(",
      "'\"{}\"'",
      ".",
      "format",
      "(",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "word",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      160,
      3,
      13,
      25,
      77,
      13,
      15
    ],
    "code_indx_copy": [
      49,
      1,
      524,
      22,
      38,
      1,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      524,
      22,
      38,
      1,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "join",
      "a",
      "list",
      "of",
      "string",
      "var_0",
      "using",
      "a",
      "space",
      "str_0"
    ],
    "code": [
      "\"\"\" \"\"\"",
      ".",
      "join",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "list",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      270,
      3,
      4,
      2,
      13,
      25,
      107,
      3,
      132,
      5
    ],
    "code_indx_copy": [
      215,
      22,
      23,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      215,
      22,
      23,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "create",
      "list",
      "var_0",
      "containing",
      "two",
      "empty",
      "list"
    ],
    "code": [
      "var_0",
      "=",
      "[",
      "[",
      "]",
      "for",
      "n",
      "in",
      "range",
      "(",
      "2",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "y",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      144,
      4,
      25,
      32,
      28,
      143,
      4
    ],
    "code_indx_copy": [
      34,
      19,
      12,
      12,
      16,
      7,
      307,
      9,
      104,
      1,
      82,
      17,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      12,
      12,
      16,
      7,
      307,
      9,
      104,
      1,
      82,
      17,
      16
    ]
  },
  {
    "intent": [
      "read",
      "a",
      "file",
      "str_0",
      "into",
      "a",
      "list",
      "var_0"
    ],
    "code": [
      "var_0",
      "=",
      "[",
      "line",
      ".",
      "strip",
      "(",
      ")",
      "for",
      "line",
      "in",
      "open",
      "(",
      "'str_0'",
      ",",
      "'r'",
      ")",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "C:/name/MyDocuments/numbers",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "data",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      123,
      3,
      125,
      5,
      11,
      3,
      4,
      25
    ],
    "code_indx_copy": [
      34,
      19,
      12,
      315,
      22,
      170,
      1,
      17,
      7,
      315,
      9,
      105,
      1,
      29,
      8,
      365,
      17,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      12,
      315,
      22,
      170,
      1,
      17,
      7,
      315,
      9,
      105,
      1,
      29,
      8,
      365,
      17,
      16
    ]
  },
  {
    "intent": [
      "delete",
      "all",
      "occurrence",
      "of",
      "character",
      "str_0",
      "in",
      "string",
      "str_1"
    ],
    "code": [
      "\"\"\"\"\"\"",
      ".",
      "join",
      "(",
      "[",
      "char",
      "for",
      "char",
      "in",
      "'str_1'",
      "if",
      "char",
      "!=",
      "'str_0'",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "i",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "it is icy",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      83,
      36,
      50,
      2,
      95,
      5,
      23,
      13,
      30
    ],
    "code_indx_copy": [
      287,
      22,
      23,
      1,
      12,
      524,
      7,
      524,
      9,
      63,
      67,
      524,
      88,
      29,
      16,
      17
    ],
    "code_indx_nocopy": [
      287,
      22,
      23,
      1,
      12,
      524,
      7,
      524,
      9,
      63,
      67,
      524,
      88,
      29,
      16,
      17
    ]
  },
  {
    "intent": [
      "delete",
      "all",
      "instance",
      "of",
      "a",
      "character",
      "str_0",
      "in",
      "a",
      "string",
      "str_1"
    ],
    "code": [
      "re",
      ".",
      "sub",
      "(",
      "'str_0'",
      ",",
      "''",
      ",",
      "'str_1'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "i",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "it is icy",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      83,
      36,
      344,
      2,
      3,
      95,
      5,
      23,
      3,
      13,
      30
    ],
    "code_indx_copy": [
      39,
      22,
      40,
      1,
      29,
      8,
      21,
      8,
      63,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      40,
      1,
      29,
      8,
      21,
      8,
      63,
      17
    ]
  },
  {
    "intent": [
      "delete",
      "all",
      "character",
      "str_0",
      "in",
      "string",
      "str_1"
    ],
    "code": [
      "\"\"\"str_1\"\"\"",
      ".",
      "replace",
      "(",
      "'str_0'",
      ",",
      "''",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "i",
        "quote": "\"",
        "type": "str"
      },
      "str_1": {
        "value": "it is icy",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      83,
      36,
      95,
      5,
      23,
      13,
      30
    ],
    "code_indx_copy": [
      439,
      22,
      107,
      1,
      29,
      8,
      21,
      17
    ],
    "code_indx_nocopy": [
      439,
      22,
      107,
      1,
      29,
      8,
      21,
      17
    ]
  },
  {
    "intent": [
      "how",
      "to",
      "delete",
      "all",
      "instance",
      "of",
      "a",
      "character",
      "in",
      "a",
      "string",
      "in",
      "python",
      "?"
    ],
    "code": [
      "\"\"\"\"\"\"",
      ".",
      "join",
      "(",
      "[",
      "char",
      "for",
      "char",
      "in",
      "'it is icy'",
      "if",
      "char",
      "!=",
      "'i'",
      "]",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      75,
      8,
      83,
      36,
      344,
      2,
      3,
      95,
      23,
      3,
      13,
      23,
      47,
      49
    ],
    "code_indx_copy": [
      287,
      22,
      23,
      1,
      12,
      524,
      7,
      524,
      9,
      524,
      67,
      524,
      88,
      524,
      16,
      17
    ],
    "code_indx_nocopy": [
      287,
      22,
      23,
      1,
      12,
      524,
      7,
      524,
      9,
      524,
      67,
      524,
      88,
      524,
      16,
      17
    ]
  },
  {
    "intent": [
      "drop",
      "row",
      "of",
      "panda",
      "dataframe",
      "var_0",
      "having",
      "nan",
      "in",
      "column",
      "at",
      "index",
      "str_0"
    ],
    "code": [
      "var_0",
      ".",
      "dropna",
      "(",
      "subset",
      "=",
      "[",
      "1",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "1",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      251,
      43,
      2,
      40,
      41,
      25,
      90,
      278,
      23,
      59,
      33,
      35,
      5
    ],
    "code_indx_copy": [
      34,
      22,
      388,
      1,
      524,
      19,
      12,
      15,
      16,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      388,
      1,
      524,
      19,
      12,
      15,
      16,
      17
    ]
  },
  {
    "intent": [
      "get",
      "element",
      "from",
      "list",
      "var_0",
      ",",
      "that",
      "have",
      "a",
      "field",
      "var_1",
      "value",
      "30"
    ],
    "code": [
      "[",
      "x",
      "for",
      "x",
      "in",
      "var_0",
      "if",
      "x",
      ".",
      "var_1",
      "==",
      "30",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "myList",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "n",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      16,
      1,
      56,
      4,
      25,
      60,
      188,
      189,
      3,
      300,
      61,
      19,
      433
    ],
    "code_indx_copy": [
      12,
      26,
      7,
      26,
      9,
      34,
      67,
      26,
      22,
      91,
      76,
      540,
      16
    ],
    "code_indx_nocopy": [
      12,
      26,
      7,
      26,
      9,
      34,
      67,
      26,
      22,
      91,
      76,
      524,
      16
    ]
  },
  {
    "intent": [
      "converting",
      "list",
      "of",
      "string",
      "var_0",
      "to",
      "list",
      "of",
      "integer",
      "var_1"
    ],
    "code": [
      "var_1",
      "=",
      "[",
      "int",
      "(",
      "x",
      ")",
      "for",
      "x",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "intstringlist",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "nums",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      113,
      4,
      2,
      13,
      25,
      8,
      4,
      2,
      7,
      61
    ],
    "code_indx_copy": [
      91,
      19,
      12,
      20,
      1,
      26,
      17,
      7,
      26,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      91,
      19,
      12,
      20,
      1,
      26,
      17,
      7,
      26,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "convert",
      "list",
      "of",
      "string",
      "number",
      "into",
      "list",
      "of",
      "integer"
    ],
    "code": [
      "map",
      "(",
      "int",
      ",",
      "eval",
      "(",
      "input",
      "(",
      "'Enter the unfriendly numbers: '",
      ")",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      10,
      4,
      2,
      13,
      74,
      11,
      4,
      2,
      7
    ],
    "code_indx_copy": [
      24,
      1,
      20,
      8,
      321,
      1,
      251,
      1,
      524,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      24,
      1,
      20,
      8,
      321,
      1,
      251,
      1,
      524,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "print",
      "str_0",
      "without",
      "newline"
    ],
    "code": [
      "sys",
      ".",
      "stdout",
      ".",
      "write",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": ".",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      160,
      5,
      100,
      376
    ],
    "code_indx_copy": [
      153,
      22,
      354,
      22,
      131,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      153,
      22,
      354,
      22,
      131,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "round",
      "off",
      "the",
      "float",
      "that",
      "is",
      "the",
      "product",
      "of",
      "str_0",
      "and",
      "convert",
      "it",
      "to",
      "an",
      "int"
    ],
    "code": [
      "int",
      "(",
      "round",
      "(",
      "2.51",
      "*",
      "100",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "2.52 * 100",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      243,
      433,
      17,
      92,
      188,
      148,
      17,
      158,
      2,
      5,
      29,
      10,
      89,
      8,
      216,
      72
    ],
    "code_indx_copy": [
      20,
      1,
      208,
      1,
      524,
      3,
      267,
      17,
      17
    ],
    "code_indx_nocopy": [
      20,
      1,
      208,
      1,
      524,
      3,
      267,
      17,
      17
    ]
  },
  {
    "intent": [
      "find",
      "all",
      "file",
      "in",
      "directory",
      "str_0",
      "with",
      "extension",
      "str_1"
    ],
    "code": [
      "os",
      ".",
      "chdir",
      "(",
      "'str_0'",
      ")",
      "\n",
      "for",
      "file",
      "in",
      "glob",
      ".",
      "glob",
      "(",
      "'*.txt'",
      ")",
      ":",
      "\n",
      "    ",
      "pass",
      ""
    ],
    "slot_map": {
      "str_0": {
        "value": "/mydir",
        "quote": "\"",
        "type": "str"
      },
      "str_1": {
        "value": ".txt",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      45,
      36,
      125,
      23,
      169,
      5,
      77,
      433,
      30
    ],
    "code_indx_copy": [
      113,
      22,
      445,
      1,
      29,
      17,
      161,
      7,
      403,
      9,
      478,
      22,
      478,
      1,
      524,
      17,
      13,
      161,
      216,
      217,
      218
    ],
    "code_indx_nocopy": [
      113,
      22,
      445,
      1,
      29,
      17,
      161,
      7,
      403,
      9,
      478,
      22,
      478,
      1,
      524,
      17,
      13,
      161,
      216,
      217,
      218
    ]
  },
  {
    "intent": [
      "find",
      "all",
      "file",
      "in",
      "directory",
      "str_0",
      "with",
      "extension",
      "str_1"
    ],
    "code": [
      "for",
      "file",
      "in",
      "os",
      ".",
      "listdir",
      "(",
      "'str_0'",
      ")",
      ":",
      "\n",
      "    ",
      "if",
      "file",
      ".",
      "endswith",
      "(",
      "'str_1'",
      ")",
      ":",
      "\n",
      "        ",
      "pass",
      "",
      ""
    ],
    "slot_map": {
      "str_0": {
        "value": "/mydir",
        "quote": "\"",
        "type": "str"
      },
      "str_1": {
        "value": ".txt",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      45,
      36,
      125,
      23,
      169,
      5,
      77,
      433,
      30
    ],
    "code_indx_copy": [
      7,
      403,
      9,
      113,
      22,
      198,
      1,
      29,
      17,
      13,
      161,
      216,
      67,
      403,
      22,
      199,
      1,
      63,
      17,
      13,
      161,
      368,
      217,
      218,
      218
    ],
    "code_indx_nocopy": [
      7,
      403,
      9,
      113,
      22,
      198,
      1,
      29,
      17,
      13,
      161,
      216,
      67,
      403,
      22,
      199,
      1,
      63,
      17,
      13,
      161,
      368,
      217,
      218,
      218
    ]
  },
  {
    "intent": [
      "find",
      "all",
      "file",
      "in",
      "directory",
      "str_0",
      "with",
      "extension",
      "str_1"
    ],
    "code": [
      "for",
      "root",
      ",",
      "dirs",
      ",",
      "files",
      "in",
      "os",
      ".",
      "walk",
      "(",
      "'str_0'",
      ")",
      ":",
      "\n",
      "    ",
      "for",
      "file",
      "in",
      "files",
      ":",
      "\n",
      "        ",
      "if",
      "file",
      ".",
      "endswith",
      "(",
      "'str_1'",
      ")",
      ":",
      "\n",
      "            ",
      "pass",
      "",
      "",
      ""
    ],
    "slot_map": {
      "str_0": {
        "value": "/mydir",
        "quote": "\"",
        "type": "str"
      },
      "str_1": {
        "value": ".txt",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      45,
      36,
      125,
      23,
      169,
      5,
      77,
      433,
      30
    ],
    "code_indx_copy": [
      7,
      174,
      8,
      524,
      8,
      524,
      9,
      113,
      22,
      477,
      1,
      29,
      17,
      13,
      161,
      216,
      7,
      403,
      9,
      524,
      13,
      161,
      368,
      67,
      403,
      22,
      199,
      1,
      63,
      17,
      13,
      161,
      524,
      217,
      218,
      218,
      218
    ],
    "code_indx_nocopy": [
      7,
      174,
      8,
      524,
      8,
      524,
      9,
      113,
      22,
      477,
      1,
      29,
      17,
      13,
      161,
      216,
      7,
      403,
      9,
      524,
      13,
      161,
      368,
      67,
      403,
      22,
      199,
      1,
      63,
      17,
      13,
      161,
      524,
      217,
      218,
      218,
      218
    ]
  },
  {
    "intent": [
      "plot",
      "dataframe",
      "var_0",
      "without",
      "a",
      "legend"
    ],
    "code": [
      "var_0",
      ".",
      "plot",
      "(",
      "legend",
      "=",
      "False",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      234,
      41,
      25,
      100,
      3,
      391
    ],
    "code_indx_copy": [
      34,
      22,
      290,
      1,
      404,
      19,
      87,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      290,
      1,
      404,
      19,
      87,
      17
    ]
  },
  {
    "intent": [
      "loop",
      "through",
      "the",
      "ip",
      "address",
      "range",
      "str_0"
    ],
    "code": [
      "for",
      "i",
      "in",
      "range",
      "(",
      "256",
      ")",
      ":",
      "\n",
      "    ",
      "for",
      "j",
      "in",
      "range",
      "(",
      "256",
      ")",
      ":",
      "\n",
      "        ",
      "ip",
      "=",
      "'192.168.%d.%d'",
      "%",
      "(",
      "i",
      ",",
      "j",
      ")",
      "\n",
      "print",
      "(",
      "ip",
      ")",
      "",
      ""
    ],
    "slot_map": {
      "str_0": {
        "value": "192.168.x.x",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      433,
      280,
      17,
      433,
      433,
      122,
      5
    ],
    "code_indx_copy": [
      7,
      6,
      9,
      104,
      1,
      524,
      17,
      13,
      161,
      216,
      7,
      30,
      9,
      104,
      1,
      524,
      17,
      13,
      161,
      368,
      531,
      19,
      524,
      117,
      1,
      6,
      8,
      30,
      17,
      161,
      49,
      1,
      531,
      17,
      218,
      218
    ],
    "code_indx_nocopy": [
      7,
      6,
      9,
      104,
      1,
      524,
      17,
      13,
      161,
      216,
      7,
      30,
      9,
      104,
      1,
      524,
      17,
      13,
      161,
      368,
      524,
      19,
      524,
      117,
      1,
      6,
      8,
      30,
      17,
      161,
      49,
      1,
      524,
      17,
      218,
      218
    ]
  },
  {
    "intent": [
      "loop",
      "through",
      "the",
      "ip",
      "address",
      "range",
      "str_0"
    ],
    "code": [
      "for",
      "i",
      ",",
      "j",
      "in",
      "product",
      "(",
      "list",
      "(",
      "range",
      "(",
      "256",
      ")",
      ")",
      ",",
      "list",
      "(",
      "range",
      "(",
      "256",
      ")",
      ")",
      ")",
      ":",
      "\n",
      "    ",
      "pass",
      ""
    ],
    "slot_map": {
      "str_0": {
        "value": "192.168.x.x",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      433,
      280,
      17,
      433,
      433,
      122,
      5
    ],
    "code_indx_copy": [
      7,
      6,
      8,
      30,
      9,
      328,
      1,
      33,
      1,
      104,
      1,
      524,
      17,
      17,
      8,
      33,
      1,
      104,
      1,
      524,
      17,
      17,
      17,
      13,
      161,
      216,
      217,
      218
    ],
    "code_indx_nocopy": [
      7,
      6,
      8,
      30,
      9,
      328,
      1,
      33,
      1,
      104,
      1,
      524,
      17,
      17,
      8,
      33,
      1,
      104,
      1,
      524,
      17,
      17,
      17,
      13,
      161,
      216,
      217,
      218
    ]
  },
  {
    "intent": [
      "loop",
      "through",
      "the",
      "ip",
      "address",
      "range",
      "str_0"
    ],
    "code": [
      "generator",
      "=",
      "iter_iprange",
      "(",
      "'192.168.1.1'",
      ",",
      "'192.168.255.255'",
      ",",
      "step",
      "=",
      "1",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "192.168.x.x",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      433,
      280,
      17,
      433,
      433,
      122,
      5
    ],
    "code_indx_copy": [
      524,
      19,
      524,
      1,
      524,
      8,
      524,
      8,
      524,
      19,
      15,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      524,
      1,
      524,
      8,
      524,
      8,
      524,
      19,
      15,
      17
    ]
  },
  {
    "intent": [
      "sum",
      "the",
      "corresponding",
      "decimal",
      "value",
      "for",
      "binary",
      "value",
      "of",
      "each",
      "boolean",
      "element",
      "in",
      "list",
      "var_0"
    ],
    "code": [
      "sum",
      "(",
      "1",
      "<<",
      "i",
      "for",
      "i",
      ",",
      "b",
      "in",
      "enumerate",
      "(",
      "var_0",
      ")",
      "if",
      "b",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "x",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      110,
      17,
      332,
      245,
      19,
      20,
      265,
      19,
      2,
      21,
      352,
      1,
      23,
      4,
      25
    ],
    "code_indx_copy": [
      0,
      1,
      15,
      524,
      6,
      7,
      6,
      8,
      97,
      9,
      10,
      1,
      34,
      17,
      67,
      97,
      17
    ],
    "code_indx_nocopy": [
      0,
      1,
      15,
      524,
      6,
      7,
      6,
      8,
      97,
      9,
      10,
      1,
      34,
      17,
      67,
      97,
      17
    ]
  },
  {
    "intent": [
      "write",
      "multiple",
      "string",
      "var_0",
      ",",
      "var_1",
      "and",
      "var_2",
      "in",
      "one",
      "line",
      "in",
      "a",
      "file",
      "var_3"
    ],
    "code": [
      "var_3",
      ".",
      "write",
      "(",
      "'%r\\n%r\\n%r\\n'",
      "%",
      "(",
      "var_0",
      ",",
      "var_1",
      ",",
      "var_2",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "line1",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "line2",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "line3",
        "quote": "`",
        "type": "var"
      },
      "var_3": {
        "value": "target",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      162,
      6,
      13,
      25,
      60,
      61,
      29,
      62,
      23,
      292,
      166,
      23,
      3,
      125,
      65
    ],
    "code_indx_copy": [
      55,
      22,
      131,
      1,
      524,
      117,
      1,
      34,
      8,
      91,
      8,
      94,
      17,
      17
    ],
    "code_indx_nocopy": [
      55,
      22,
      131,
      1,
      524,
      117,
      1,
      34,
      8,
      91,
      8,
      94,
      17,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "list",
      "of",
      "list",
      "var_0",
      "into",
      "a",
      "flat",
      "list"
    ],
    "code": [
      "[",
      "y",
      "for",
      "x",
      "in",
      "var_0",
      "for",
      "y",
      "in",
      "(",
      "x",
      "if",
      "isinstance",
      "(",
      "x",
      ",",
      "list",
      ")",
      "else",
      "[",
      "x",
      "]",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "data",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      10,
      4,
      2,
      4,
      25,
      11,
      3,
      363,
      4
    ],
    "code_indx_copy": [
      12,
      103,
      7,
      26,
      9,
      34,
      7,
      103,
      9,
      1,
      26,
      67,
      206,
      1,
      26,
      8,
      33,
      17,
      211,
      12,
      26,
      16,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      103,
      7,
      26,
      9,
      34,
      7,
      103,
      9,
      1,
      26,
      67,
      206,
      1,
      26,
      8,
      33,
      17,
      211,
      12,
      26,
      16,
      17,
      16
    ]
  },
  {
    "intent": [
      "print",
      "new",
      "line",
      "character",
      "a",
      "str_0",
      "in",
      "a",
      "string",
      "str_1"
    ],
    "code": [
      "print",
      "(",
      "'str_1'",
      ".",
      "encode",
      "(",
      "'string_escape'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "\n",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": "foo\nbar",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      160,
      185,
      166,
      95,
      3,
      5,
      23,
      3,
      13,
      30
    ],
    "code_indx_copy": [
      49,
      1,
      63,
      22,
      239,
      1,
      256,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      63,
      22,
      239,
      1,
      256,
      17,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "last",
      "comma",
      "character",
      "str_0",
      "in",
      "string",
      "var_0"
    ],
    "code": [
      "\"\"\"\"\"\"",
      ".",
      "join",
      "(",
      "var_0",
      ".",
      "rsplit",
      "(",
      "'str_0'",
      ",",
      "1",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": ",",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      257,
      164,
      249,
      95,
      5,
      23,
      13,
      25
    ],
    "code_indx_copy": [
      287,
      22,
      23,
      1,
      34,
      22,
      268,
      1,
      29,
      8,
      15,
      17,
      17
    ],
    "code_indx_nocopy": [
      287,
      22,
      23,
      1,
      34,
      22,
      268,
      1,
      29,
      8,
      15,
      17,
      17
    ]
  },
  {
    "intent": [
      "calculate",
      "the",
      "mean",
      "of",
      "each",
      "element",
      "in",
      "array",
      "var_0",
      "with",
      "the",
      "element",
      "previous",
      "to",
      "it"
    ],
    "code": [
      "(",
      "var_0",
      "[",
      "1",
      ":",
      "]",
      "+",
      "var_0",
      "[",
      ":",
      "-",
      "1",
      "]",
      ")",
      "/",
      "2"
    ],
    "slot_map": {
      "var_0": {
        "value": "x",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      242,
      17,
      388,
      2,
      21,
      1,
      23,
      82,
      25,
      77,
      17,
      1,
      433,
      8,
      89
    ],
    "code_indx_copy": [
      1,
      34,
      12,
      15,
      13,
      16,
      96,
      34,
      12,
      13,
      14,
      15,
      16,
      17,
      31,
      82
    ],
    "code_indx_nocopy": [
      1,
      34,
      12,
      15,
      13,
      16,
      96,
      34,
      12,
      13,
      14,
      15,
      16,
      17,
      31,
      82
    ]
  },
  {
    "intent": [
      "get",
      "an",
      "array",
      "of",
      "the",
      "mean",
      "of",
      "each",
      "two",
      "consecutive",
      "value",
      "in",
      "numpy",
      "array",
      "var_0"
    ],
    "code": [
      "var_0",
      "[",
      ":",
      "-",
      "1",
      "]",
      "+",
      "(",
      "var_0",
      "[",
      "1",
      ":",
      "]",
      "-",
      "var_0",
      "[",
      ":",
      "-",
      "1",
      "]",
      ")",
      "/",
      "2"
    ],
    "slot_map": {
      "var_0": {
        "value": "x",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      16,
      216,
      82,
      2,
      17,
      388,
      2,
      21,
      28,
      408,
      19,
      23,
      81,
      82,
      25
    ],
    "code_indx_copy": [
      34,
      12,
      13,
      14,
      15,
      16,
      96,
      1,
      34,
      12,
      15,
      13,
      16,
      14,
      34,
      12,
      13,
      14,
      15,
      16,
      17,
      31,
      82
    ],
    "code_indx_nocopy": [
      34,
      12,
      13,
      14,
      15,
      16,
      96,
      1,
      34,
      12,
      15,
      13,
      16,
      14,
      34,
      12,
      13,
      14,
      15,
      16,
      17,
      31,
      82
    ]
  },
  {
    "intent": [
      "load",
      "data",
      "containing",
      "str_0",
      "from",
      "file",
      "str_1",
      "into",
      "numpy",
      "array",
      "var_0"
    ],
    "code": [
      "var_0",
      "=",
      "numpy",
      ".",
      "fromiter",
      "(",
      "codecs",
      ".",
      "open",
      "(",
      "'str_1'",
      ",",
      "encoding",
      "=",
      "'str_0'",
      ")",
      ",",
      "dtype",
      "=",
      "'<U2'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "utf-8",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": "new.txt",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "arr",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      238,
      63,
      32,
      5,
      56,
      125,
      30,
      11,
      81,
      82,
      25
    ],
    "code_indx_copy": [
      34,
      19,
      147,
      22,
      524,
      1,
      524,
      22,
      105,
      1,
      63,
      8,
      524,
      19,
      29,
      17,
      8,
      177,
      19,
      524,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      147,
      22,
      524,
      1,
      524,
      22,
      105,
      1,
      63,
      8,
      524,
      19,
      29,
      17,
      8,
      177,
      19,
      524,
      17
    ]
  },
  {
    "intent": [
      "reverse",
      "sort",
      "list",
      "of",
      "dicts",
      "var_0",
      "by",
      "value",
      "for",
      "key",
      "var_1"
    ],
    "code": [
      "var_0",
      "=",
      "sorted",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "itemgetter",
      "(",
      "'var_1'",
      ")",
      ",",
      "reverse",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "l",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "time",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      271,
      116,
      4,
      2,
      433,
      25,
      42,
      19,
      20,
      22,
      61
    ],
    "code_indx_copy": [
      34,
      19,
      101,
      1,
      34,
      8,
      102,
      19,
      128,
      1,
      57,
      17,
      8,
      129,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      101,
      1,
      34,
      8,
      102,
      19,
      128,
      1,
      57,
      17,
      8,
      129,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "list",
      "of",
      "dictionary",
      "var_0",
      "based",
      "on",
      "key",
      "var_1",
      "in",
      "descending",
      "order"
    ],
    "code": [
      "var_0",
      "=",
      "sorted",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "lambda",
      "a",
      ":",
      "a",
      "[",
      "'var_1'",
      "]",
      ",",
      "reverse",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "l",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "time",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      116,
      3,
      4,
      2,
      24,
      25,
      198,
      139,
      22,
      61,
      23,
      120,
      157
    ],
    "code_indx_copy": [
      34,
      19,
      101,
      1,
      34,
      8,
      102,
      19,
      44,
      95,
      13,
      95,
      12,
      57,
      16,
      8,
      129,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      101,
      1,
      34,
      8,
      102,
      19,
      44,
      95,
      13,
      95,
      12,
      57,
      16,
      8,
      129,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "get",
      "row",
      "of",
      "dataframe",
      "var_0",
      "that",
      "match",
      "regex",
      "str_0"
    ],
    "code": [
      "var_0",
      ".",
      "loc",
      "[",
      "var_0",
      "[",
      "0",
      "]",
      ".",
      "str",
      ".",
      "contains",
      "(",
      "'str_0'",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "(Hel|Just)",
        "quote": "'",
        "type": "str"
      },
      "(str_0)": {
        "value": "(Hel|Just)",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      16,
      43,
      2,
      41,
      25,
      188,
      105,
      38,
      5
    ],
    "code_indx_copy": [
      34,
      22,
      202,
      12,
      34,
      12,
      43,
      16,
      22,
      25,
      22,
      524,
      1,
      29,
      17,
      16
    ],
    "code_indx_nocopy": [
      34,
      22,
      202,
      12,
      34,
      12,
      43,
      16,
      22,
      25,
      22,
      524,
      1,
      29,
      17,
      16
    ]
  },
  {
    "intent": [
      "find",
      "the",
      "string",
      "in",
      "var_0",
      "between",
      "two",
      "special",
      "character",
      "str_0",
      "and",
      "str_1"
    ],
    "code": [
      "re",
      ".",
      "search",
      "(",
      "'\\\\[(.*)\\\\]'",
      ",",
      "var_0",
      ")",
      ".",
      "group",
      "(",
      "1",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "your_string",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "[",
        "quote": "\"",
        "type": "str"
      },
      "str_1": {
        "value": "]",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      45,
      17,
      13,
      23,
      25,
      267,
      28,
      433,
      95,
      5,
      29,
      30
    ],
    "code_indx_copy": [
      39,
      22,
      93,
      1,
      524,
      8,
      34,
      17,
      22,
      120,
      1,
      15,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      93,
      1,
      524,
      8,
      34,
      17,
      22,
      120,
      1,
      15,
      17
    ]
  },
  {
    "intent": [
      "how",
      "to",
      "create",
      "a",
      "list",
      "of",
      "date",
      "string",
      "in",
      "str_0",
      "format",
      "with",
      "python",
      "panda",
      "?"
    ],
    "code": [
      "[",
      "d",
      ".",
      "strftime",
      "(",
      "'%Y%m%d'",
      ")",
      "for",
      "d",
      "in",
      "pandas",
      ".",
      "date_range",
      "(",
      "'20130226'",
      ",",
      "'20130302'",
      ")",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "yyyymmdd",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      75,
      8,
      144,
      3,
      4,
      2,
      133,
      13,
      23,
      5,
      15,
      77,
      47,
      40,
      49
    ],
    "code_indx_copy": [
      12,
      2,
      22,
      65,
      1,
      524,
      17,
      7,
      2,
      9,
      276,
      22,
      524,
      1,
      524,
      8,
      524,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      2,
      22,
      65,
      1,
      524,
      17,
      7,
      2,
      9,
      276,
      22,
      524,
      1,
      524,
      8,
      524,
      17,
      16
    ]
  },
  {
    "intent": [
      "count",
      "number",
      "of",
      "time",
      "string",
      "str_0",
      "occurred",
      "in",
      "string",
      "str_1"
    ],
    "code": [
      "\"\"\"str_1\"\"\"",
      ".",
      "count",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "brown",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "The big brown fox is brown",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      172,
      74,
      2,
      134,
      13,
      5,
      433,
      23,
      13,
      30
    ],
    "code_indx_copy": [
      439,
      22,
      386,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      439,
      22,
      386,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "decode",
      "json",
      "string",
      "str_0",
      "to",
      "python",
      "dict"
    ],
    "code": [
      "json",
      ".",
      "loads",
      "(",
      "request",
      ".",
      "body",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "request.body",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      177,
      175,
      13,
      5,
      8,
      47,
      181
    ],
    "code_indx_copy": [
      140,
      22,
      204,
      1,
      233,
      22,
      524,
      17
    ],
    "code_indx_nocopy": [
      140,
      22,
      204,
      1,
      233,
      22,
      524,
      17
    ]
  },
  {
    "intent": [
      "download",
      "the",
      "file",
      "from",
      "url",
      "var_0",
      "and",
      "save",
      "it",
      "under",
      "file",
      "var_1"
    ],
    "code": [
      "urllib",
      ".",
      "request",
      ".",
      "urlretrieve",
      "(",
      "var_0",
      ",",
      "var_1",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "url",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "file_name",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      390,
      17,
      125,
      56,
      99,
      25,
      29,
      317,
      89,
      433,
      125,
      61
    ],
    "code_indx_copy": [
      232,
      22,
      233,
      22,
      353,
      1,
      34,
      8,
      91,
      17
    ],
    "code_indx_nocopy": [
      232,
      22,
      233,
      22,
      353,
      1,
      34,
      8,
      91,
      17
    ]
  },
  {
    "intent": [
      "split",
      "string",
      "var_0",
      "by",
      "space"
    ],
    "code": [
      "var_0",
      ".",
      "split",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "text",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      138,
      13,
      25,
      42,
      132
    ],
    "code_indx_copy": [
      34,
      22,
      71,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      71,
      1,
      17
    ]
  },
  {
    "intent": [
      "split",
      "string",
      "var_0",
      "by",
      "str_0"
    ],
    "code": [
      "var_0",
      ".",
      "split",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "text",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": ",",
        "quote": "\"",
        "type": "str"
      }
    },
    "intent_indx": [
      138,
      13,
      25,
      42,
      5
    ],
    "code_indx_copy": [
      34,
      22,
      71,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      71,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "split",
      "string",
      "var_0",
      "into",
      "a",
      "list",
      "by",
      "whitespace"
    ],
    "code": [
      "var_0",
      ".",
      "split",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "line",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      138,
      13,
      25,
      11,
      3,
      4,
      42,
      201
    ],
    "code_indx_copy": [
      34,
      22,
      71,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      71,
      1,
      17
    ]
  },
  {
    "intent": [
      "replace",
      "dot",
      "character",
      "str_0",
      "associated",
      "with",
      "ascii",
      "letter",
      "in",
      "list",
      "var_0",
      "with",
      "space",
      "str_1"
    ],
    "code": [
      "[",
      "re",
      ".",
      "sub",
      "(",
      "'(?<!\\\\d)\\\\.(?!\\\\d)'",
      ",",
      "' '",
      ",",
      "i",
      ")",
      "for",
      "i",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": ".",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      },
      "str_1": {
        "value": "",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      130,
      128,
      95,
      5,
      275,
      77,
      366,
      346,
      23,
      4,
      25,
      77,
      132,
      30
    ],
    "code_indx_copy": [
      12,
      39,
      22,
      40,
      1,
      524,
      8,
      108,
      8,
      6,
      17,
      7,
      6,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      12,
      39,
      22,
      40,
      1,
      524,
      8,
      108,
      8,
      6,
      17,
      7,
      6,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "sort",
      "list",
      "var_0",
      "based",
      "on",
      "second",
      "index",
      "of",
      "each",
      "string",
      "var_1"
    ],
    "code": [
      "sorted",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "lambda",
      "var_1",
      ":",
      "var_1",
      ".",
      "split",
      "(",
      "','",
      ")",
      "[",
      "1",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "list_of_strings",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      116,
      4,
      25,
      198,
      139,
      117,
      35,
      2,
      21,
      13,
      61
    ],
    "code_indx_copy": [
      101,
      1,
      34,
      8,
      102,
      19,
      44,
      91,
      13,
      91,
      22,
      71,
      1,
      73,
      17,
      12,
      15,
      16,
      17
    ],
    "code_indx_nocopy": [
      101,
      1,
      34,
      8,
      102,
      19,
      44,
      91,
      13,
      91,
      22,
      71,
      1,
      73,
      17,
      12,
      15,
      16,
      17
    ]
  },
  {
    "intent": [
      "call",
      "multiple",
      "bash",
      "function",
      "\u2018",
      "vasp",
      "\u2019",
      "and",
      "\u2018",
      "tee",
      "tee_output",
      "\u2019",
      "using",
      "\u2018",
      "|",
      "\u2019"
    ],
    "code": [
      "subprocess",
      ".",
      "check_call",
      "(",
      "'vasp | tee tee_output'",
      ",",
      "shell",
      "=",
      "True",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      293,
      6,
      347,
      67,
      377,
      433,
      378,
      29,
      377,
      433,
      433,
      378,
      107,
      377,
      433,
      378
    ],
    "code_indx_copy": [
      229,
      22,
      524,
      1,
      524,
      8,
      231,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      229,
      22,
      524,
      1,
      524,
      8,
      231,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "eliminate",
      "all",
      "string",
      "from",
      "list",
      "var_0"
    ],
    "code": [
      "[",
      "element",
      "for",
      "element",
      "in",
      "var_0",
      "if",
      "isinstance",
      "(",
      "element",
      ",",
      "int",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "lst",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      433,
      36,
      13,
      56,
      4,
      25
    ],
    "code_indx_copy": [
      12,
      510,
      7,
      510,
      9,
      34,
      67,
      206,
      1,
      510,
      8,
      20,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      510,
      7,
      510,
      9,
      34,
      67,
      206,
      1,
      510,
      8,
      20,
      17,
      16
    ]
  },
  {
    "intent": [
      "get",
      "all",
      "the",
      "element",
      "except",
      "string",
      "from",
      "the",
      "list",
      "str_0",
      "."
    ],
    "code": [
      "[",
      "element",
      "for",
      "element",
      "in",
      "str_0",
      "if",
      "not",
      "isinstance",
      "(",
      "element",
      ",",
      "str",
      ")",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "lst",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      16,
      36,
      17,
      1,
      433,
      13,
      56,
      17,
      4,
      5,
      154
    ],
    "code_indx_copy": [
      12,
      510,
      7,
      510,
      9,
      11,
      67,
      281,
      206,
      1,
      510,
      8,
      25,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      510,
      7,
      510,
      9,
      11,
      67,
      281,
      206,
      1,
      510,
      8,
      25,
      17,
      16
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "list",
      "of",
      "dictionary",
      "var_0",
      "by",
      "the",
      "value",
      "of",
      "the",
      "dictionary",
      "key",
      "var_1"
    ],
    "code": [
      "newlist",
      "=",
      "sorted",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "lambda",
      "k",
      ":",
      "k",
      "[",
      "'var_1'",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "list_to_be_sorted",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "name",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      116,
      3,
      4,
      2,
      24,
      25,
      42,
      17,
      19,
      2,
      17,
      24,
      22,
      61
    ],
    "code_indx_copy": [
      524,
      19,
      101,
      1,
      34,
      8,
      102,
      19,
      44,
      89,
      13,
      89,
      12,
      57,
      16,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      101,
      1,
      34,
      8,
      102,
      19,
      44,
      89,
      13,
      89,
      12,
      57,
      16,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "list",
      "of",
      "dictionary",
      "var_0",
      "by",
      "value",
      "in",
      "key",
      "var_1",
      "in",
      "descending",
      "order"
    ],
    "code": [
      "newlist",
      "=",
      "sorted",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "itemgetter",
      "(",
      "'var_1'",
      ")",
      ",",
      "reverse",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "l",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "name",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      116,
      3,
      4,
      2,
      24,
      25,
      42,
      19,
      23,
      22,
      61,
      23,
      120,
      157
    ],
    "code_indx_copy": [
      524,
      19,
      101,
      1,
      34,
      8,
      102,
      19,
      128,
      1,
      57,
      17,
      8,
      129,
      19,
      109,
      17
    ],
    "code_indx_nocopy": [
      524,
      19,
      101,
      1,
      34,
      8,
      102,
      19,
      128,
      1,
      57,
      17,
      8,
      129,
      19,
      109,
      17
    ]
  },
  {
    "intent": [
      "how",
      "do",
      "i",
      "sort",
      "a",
      "list",
      "of",
      "dictionary",
      "by",
      "value",
      "of",
      "the",
      "dictionary",
      "in",
      "python",
      "?"
    ],
    "code": [
      "list_of_dicts",
      ".",
      "sort",
      "(",
      "key",
      "=",
      "operator",
      ".",
      "itemgetter",
      "(",
      "'name'",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      75,
      311,
      312,
      116,
      3,
      4,
      2,
      24,
      42,
      19,
      2,
      17,
      24,
      23,
      47,
      49
    ],
    "code_indx_copy": [
      524,
      22,
      124,
      1,
      102,
      19,
      127,
      22,
      128,
      1,
      442,
      17,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      124,
      1,
      102,
      19,
      127,
      22,
      128,
      1,
      442,
      17,
      17
    ]
  },
  {
    "intent": [
      "how",
      "do",
      "i",
      "sort",
      "a",
      "list",
      "of",
      "dictionary",
      "by",
      "value",
      "of",
      "the",
      "dictionary",
      "in",
      "python",
      "?"
    ],
    "code": [
      "list_of_dicts",
      ".",
      "sort",
      "(",
      "key",
      "=",
      "operator",
      ".",
      "itemgetter",
      "(",
      "'age'",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      75,
      311,
      312,
      116,
      3,
      4,
      2,
      24,
      42,
      19,
      2,
      17,
      24,
      23,
      47,
      49
    ],
    "code_indx_copy": [
      524,
      22,
      124,
      1,
      102,
      19,
      127,
      22,
      128,
      1,
      524,
      17,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      124,
      1,
      102,
      19,
      127,
      22,
      128,
      1,
      524,
      17,
      17
    ]
  },
  {
    "intent": [
      "how",
      "to",
      "sort",
      "a",
      "dataframe",
      "by",
      "the",
      "ocurrences",
      "in",
      "a",
      "column",
      "in",
      "python",
      "(",
      "panda",
      ")"
    ],
    "code": [
      "df",
      ".",
      "groupby",
      "(",
      "'prots'",
      ")",
      ".",
      "sum",
      "(",
      ")",
      ".",
      "sort",
      "(",
      "'scores'",
      ",",
      "ascending",
      "=",
      "False",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      75,
      8,
      116,
      3,
      41,
      42,
      17,
      433,
      23,
      3,
      59,
      23,
      47,
      202,
      40,
      26
    ],
    "code_indx_copy": [
      149,
      22,
      157,
      1,
      524,
      17,
      22,
      0,
      1,
      17,
      22,
      124,
      1,
      524,
      8,
      278,
      19,
      87,
      17
    ],
    "code_indx_nocopy": [
      149,
      22,
      157,
      1,
      524,
      17,
      22,
      0,
      1,
      17,
      22,
      124,
      1,
      524,
      8,
      278,
      19,
      87,
      17
    ]
  },
  {
    "intent": [
      "join",
      "together",
      "with",
      "str_0",
      "element",
      "inside",
      "a",
      "list",
      "indexed",
      "with",
      "str_1",
      "within",
      "a",
      "dictionary",
      "var_0"
    ],
    "code": [
      "\"\"\"str_0\"\"\"",
      ".",
      "join",
      "(",
      "var_0",
      "[",
      "'str_1'",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": ",",
        "quote": "\"",
        "type": "str"
      },
      "str_1": {
        "value": "category",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "trans",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      270,
      433,
      77,
      5,
      1,
      44,
      3,
      4,
      433,
      77,
      30,
      52,
      3,
      24,
      25
    ],
    "code_indx_copy": [
      212,
      22,
      23,
      1,
      34,
      12,
      63,
      16,
      17
    ],
    "code_indx_nocopy": [
      212,
      22,
      23,
      1,
      34,
      12,
      63,
      16,
      17
    ]
  },
  {
    "intent": [
      "concatenate",
      "array",
      "of",
      "string",
      "str_0",
      "into",
      "a",
      "string"
    ],
    "code": [
      "\"\"\"\"\"\"",
      ".",
      "join",
      "(",
      "[",
      "str_0",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "['A', 'B', 'C', 'D']",
        "quote": "`",
        "type": "str"
      },
      "[str_0]": {
        "value": "['A', 'B', 'C', 'D']",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      0,
      82,
      2,
      13,
      5,
      11,
      3,
      13
    ],
    "code_indx_copy": [
      287,
      22,
      23,
      1,
      12,
      11,
      16,
      17
    ],
    "code_indx_nocopy": [
      287,
      22,
      23,
      1,
      12,
      11,
      16,
      17
    ]
  },
  {
    "intent": [
      "get",
      "json",
      "data",
      "from",
      "restful",
      "service",
      "str_0"
    ],
    "code": [
      "json",
      ".",
      "load",
      "(",
      "urllib",
      ".",
      "request",
      ".",
      "urlopen",
      "(",
      "'str_0'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "url",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      16,
      175,
      63,
      56,
      433,
      433,
      5
    ],
    "code_indx_copy": [
      140,
      22,
      154,
      1,
      232,
      22,
      233,
      22,
      234,
      1,
      29,
      17,
      17
    ],
    "code_indx_nocopy": [
      140,
      22,
      154,
      1,
      232,
      22,
      233,
      22,
      234,
      1,
      29,
      17,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "all",
      "string",
      "from",
      "a",
      "list",
      "a",
      "string",
      "var_0",
      "where",
      "the",
      "value",
      "start",
      "with",
      "str_0",
      "or",
      "str_1"
    ],
    "code": [
      "[",
      "x",
      "for",
      "x",
      "in",
      "var_0",
      "if",
      "not",
      "x",
      ".",
      "startswith",
      "(",
      "'str_0'",
      ")",
      "and",
      "not",
      "x",
      ".",
      "startswith",
      "(",
      "'str_1'",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "sents",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "@$\t",
        "quote": "`",
        "type": "str"
      },
      "str_1": {
        "value": "#",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      257,
      36,
      13,
      56,
      3,
      4,
      3,
      13,
      25,
      151,
      17,
      19,
      412,
      77,
      5,
      329,
      30
    ],
    "code_indx_copy": [
      12,
      26,
      7,
      26,
      9,
      34,
      67,
      281,
      26,
      22,
      453,
      1,
      29,
      17,
      458,
      281,
      26,
      22,
      453,
      1,
      63,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      26,
      7,
      26,
      9,
      34,
      67,
      281,
      26,
      22,
      453,
      1,
      29,
      17,
      458,
      281,
      26,
      22,
      453,
      1,
      63,
      17,
      16
    ]
  },
  {
    "intent": [
      "django",
      "filter",
      "by",
      "hour"
    ],
    "code": [
      "Entry",
      ".",
      "objects",
      ".",
      "filter",
      "(",
      "pub_date__contains",
      "=",
      "'08:00'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      85,
      208,
      42,
      342
    ],
    "code_indx_copy": [
      524,
      22,
      78,
      22,
      79,
      1,
      524,
      19,
      524,
      17
    ],
    "code_indx_nocopy": [
      524,
      22,
      78,
      22,
      79,
      1,
      524,
      19,
      524,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "list",
      "of",
      "dictionary",
      "var_0",
      "first",
      "by",
      "key",
      "var_1",
      "and",
      "then",
      "by",
      "var_2"
    ],
    "code": [
      "var_0",
      ".",
      "sort",
      "(",
      "key",
      "=",
      "lambda",
      "item",
      ":",
      "(",
      "item",
      "[",
      "'var_1'",
      "]",
      ",",
      "item",
      "[",
      "'var_2'",
      "]",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "list",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "points",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "time",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      116,
      3,
      4,
      2,
      24,
      25,
      147,
      42,
      22,
      61,
      29,
      250,
      42,
      62
    ],
    "code_indx_copy": [
      34,
      22,
      124,
      1,
      102,
      19,
      44,
      387,
      13,
      1,
      387,
      12,
      57,
      16,
      8,
      387,
      12,
      58,
      16,
      17,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      124,
      1,
      102,
      19,
      44,
      387,
      13,
      1,
      387,
      12,
      57,
      16,
      8,
      387,
      12,
      58,
      16,
      17,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "datetime",
      "object",
      "str_0",
      "to",
      "second"
    ],
    "code": [
      "(",
      "t",
      "-",
      "datetime",
      ".",
      "datetime",
      "(",
      "str_0",
      ")",
      ")",
      ".",
      "total_seconds",
      "(",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "(1970, 1, 1)",
        "quote": "`",
        "type": "str"
      },
      "(str_0)": {
        "value": "(1970, 1, 1)",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      10,
      12,
      14,
      5,
      8,
      117
    ],
    "code_indx_copy": [
      1,
      45,
      14,
      27,
      22,
      27,
      1,
      11,
      17,
      17,
      22,
      524,
      1,
      17
    ],
    "code_indx_nocopy": [
      1,
      45,
      14,
      27,
      22,
      27,
      1,
      11,
      17,
      17,
      22,
      524,
      1,
      17
    ]
  },
  {
    "intent": [
      "insert",
      "var_0",
      "before",
      "the",
      "file",
      "extension",
      "in",
      "str_0",
      "or",
      "replace",
      "var_1",
      "with",
      "var_2",
      "if",
      "it",
      "precedes",
      "the",
      "extension",
      "."
    ],
    "code": [
      "re",
      ".",
      "sub",
      "(",
      "'(\\\\_a)?\\\\.([^\\\\.]*)$'",
      ",",
      "'_suff.\\\\2'",
      ",",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "_suff",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "long.file.name.jpg",
        "quote": "`",
        "type": "str"
      },
      "var_1": {
        "value": "_a",
        "quote": "`",
        "type": "var"
      },
      "var_2": {
        "value": "suff",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      266,
      25,
      269,
      17,
      125,
      433,
      23,
      5,
      329,
      130,
      61,
      77,
      62,
      146,
      89,
      433,
      17,
      433,
      154
    ],
    "code_indx_copy": [
      39,
      22,
      40,
      1,
      524,
      8,
      524,
      8,
      29,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      40,
      1,
      524,
      8,
      524,
      8,
      29,
      17
    ]
  },
  {
    "intent": [
      "reload",
      "a",
      "module",
      "var_0"
    ],
    "code": [
      "import",
      "imp",
      "\n",
      "imp",
      ".",
      "reload",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "module",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      433,
      3,
      326,
      25
    ],
    "code_indx_copy": [
      393,
      524,
      161,
      524,
      22,
      528,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      393,
      524,
      161,
      524,
      22,
      524,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "integer",
      "var_0",
      "into",
      "an",
      "unassigned",
      "integer"
    ],
    "code": [
      "struct",
      ".",
      "unpack",
      "(",
      "'H'",
      ",",
      "struct",
      ".",
      "pack",
      "(",
      "'h'",
      ",",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "number",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      10,
      7,
      25,
      11,
      216,
      433,
      7
    ],
    "code_indx_copy": [
      317,
      22,
      406,
      1,
      524,
      8,
      317,
      22,
      318,
      1,
      524,
      8,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      317,
      22,
      406,
      1,
      524,
      8,
      317,
      22,
      318,
      1,
      524,
      8,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "int",
      "value",
      "in",
      "list",
      "var_0",
      "to",
      "float"
    ],
    "code": [
      "var_0",
      "=",
      "[",
      "float",
      "(",
      "x",
      ")",
      "for",
      "x",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "numlist",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      10,
      72,
      19,
      23,
      4,
      25,
      8,
      92
    ],
    "code_indx_copy": [
      34,
      19,
      12,
      225,
      1,
      26,
      17,
      7,
      26,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      12,
      225,
      1,
      26,
      17,
      7,
      26,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "write",
      "dataframe",
      "var_0",
      ",",
      "excluding",
      "index",
      ",",
      "to",
      "a",
      "csv",
      "file"
    ],
    "code": [
      "var_0",
      ".",
      "to_csv",
      "(",
      "filename",
      ",",
      "index",
      "=",
      "False",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "df",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      162,
      41,
      25,
      60,
      433,
      35,
      60,
      8,
      3,
      276,
      125
    ],
    "code_indx_copy": [
      34,
      22,
      227,
      1,
      402,
      8,
      160,
      19,
      87,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      227,
      1,
      402,
      8,
      160,
      19,
      87,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "urllib",
      "unquoted",
      "string",
      "var_0",
      "to",
      "a",
      "json",
      "data",
      "var_1"
    ],
    "code": [
      "var_1",
      "=",
      "json",
      ".",
      "loads",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "unescaped",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "json_data",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      10,
      3,
      433,
      433,
      13,
      25,
      8,
      3,
      175,
      63,
      61
    ],
    "code_indx_copy": [
      91,
      19,
      140,
      22,
      204,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      91,
      19,
      140,
      22,
      204,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "list",
      "containing",
      "all",
      "ascii",
      "character",
      "a",
      "it",
      "element"
    ],
    "code": [
      "[",
      "chr",
      "(",
      "i",
      ")",
      "for",
      "i",
      "in",
      "range",
      "(",
      "127",
      ")",
      "]"
    ],
    "slot_map": {},
    "intent_indx": [
      144,
      3,
      4,
      32,
      36,
      366,
      95,
      3,
      89,
      1
    ],
    "code_indx_copy": [
      12,
      455,
      1,
      6,
      17,
      7,
      6,
      9,
      104,
      1,
      524,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      455,
      1,
      6,
      17,
      7,
      6,
      9,
      104,
      1,
      524,
      17,
      16
    ]
  },
  {
    "intent": [
      "write",
      "var_0",
      "to",
      "a",
      "binary",
      "file",
      "var_1"
    ],
    "code": [
      "var_1",
      ".",
      "write",
      "(",
      "struct",
      ".",
      "pack",
      "(",
      "'5B'",
      ",",
      "*",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "newFileBytes",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "newFile",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      162,
      25,
      8,
      3,
      265,
      125,
      61
    ],
    "code_indx_copy": [
      91,
      22,
      131,
      1,
      317,
      22,
      318,
      1,
      524,
      8,
      3,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      91,
      22,
      131,
      1,
      317,
      22,
      318,
      1,
      524,
      8,
      3,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "python",
      "regex",
      "-",
      "check",
      "for",
      "a",
      "capital",
      "letter",
      "with",
      "a",
      "following",
      "lowercase",
      "in",
      "string",
      "var_0"
    ],
    "code": [
      "re",
      ".",
      "sub",
      "(",
      "'^[A-Z0-9]*(?![a-z])'",
      ",",
      "''",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "string",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      47,
      38,
      433,
      226,
      20,
      3,
      433,
      346,
      77,
      3,
      433,
      197,
      23,
      13,
      25
    ],
    "code_indx_copy": [
      39,
      22,
      40,
      1,
      524,
      8,
      21,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      40,
      1,
      524,
      8,
      21,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "last",
      "key",
      "of",
      "dictionary",
      "var_0"
    ],
    "code": [
      "list",
      "(",
      "var_0",
      ".",
      "keys",
      "(",
      ")",
      ")",
      "[",
      "-",
      "1",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "dict",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      16,
      17,
      164,
      22,
      2,
      24,
      25
    ],
    "code_indx_copy": [
      33,
      1,
      34,
      22,
      167,
      1,
      17,
      17,
      12,
      14,
      15,
      16
    ],
    "code_indx_nocopy": [
      33,
      1,
      34,
      22,
      167,
      1,
      17,
      17,
      12,
      14,
      15,
      16
    ]
  },
  {
    "intent": [
      "write",
      "line",
      "str_0",
      "to",
      "file",
      "var_0"
    ],
    "code": [
      "print",
      "(",
      "'str_0'",
      ",",
      "file",
      "=",
      "var_0",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "hi there",
        "quote": "\"",
        "type": "str"
      },
      "var_0": {
        "value": "f",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      162,
      166,
      5,
      8,
      125,
      25
    ],
    "code_indx_copy": [
      49,
      1,
      29,
      8,
      403,
      19,
      34,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      29,
      8,
      403,
      19,
      34,
      17
    ]
  },
  {
    "intent": [
      "write",
      "line",
      "str_0",
      "to",
      "file",
      "var_0"
    ],
    "code": [
      "f",
      "=",
      "open",
      "(",
      "'var_0'",
      ",",
      "'w'",
      ")",
      "\n",
      "f",
      ".",
      "write",
      "(",
      "'hi there\\n'",
      ")",
      "\n",
      "f",
      ".",
      "close",
      "(",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "hi there",
        "quote": "\"",
        "type": "str"
      },
      "var_0": {
        "value": "myfile",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      162,
      166,
      5,
      8,
      125,
      25
    ],
    "code_indx_copy": [
      190,
      19,
      105,
      1,
      56,
      8,
      497,
      17,
      161,
      190,
      22,
      131,
      1,
      524,
      17,
      161,
      190,
      22,
      506,
      1,
      17
    ],
    "code_indx_nocopy": [
      190,
      19,
      105,
      1,
      56,
      8,
      497,
      17,
      161,
      190,
      22,
      131,
      1,
      524,
      17,
      161,
      190,
      22,
      506,
      1,
      17
    ]
  },
  {
    "intent": [
      "write",
      "line",
      "str_0",
      "to",
      "file",
      "str_1"
    ],
    "code": [
      "with",
      "open",
      "(",
      "'str_1'",
      ",",
      "'a'",
      ")",
      "as",
      "the_file",
      ":",
      "\n",
      "    ",
      "the_file",
      ".",
      "write",
      "(",
      "'Hello\\n'",
      ")",
      ""
    ],
    "slot_map": {
      "str_0": {
        "value": "Hello",
        "quote": "\"",
        "type": "str"
      },
      "str_1": {
        "value": "somefile.txt",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      162,
      166,
      5,
      8,
      125,
      30
    ],
    "code_indx_copy": [
      364,
      105,
      1,
      63,
      8,
      413,
      17,
      366,
      524,
      13,
      161,
      216,
      524,
      22,
      131,
      1,
      524,
      17,
      218
    ],
    "code_indx_nocopy": [
      364,
      105,
      1,
      63,
      8,
      413,
      17,
      366,
      524,
      13,
      161,
      216,
      524,
      22,
      131,
      1,
      524,
      17,
      218
    ]
  },
  {
    "intent": [
      "convert",
      "unicode",
      "string",
      "var_0",
      "to",
      "ascii"
    ],
    "code": [
      "var_0",
      ".",
      "encode",
      "(",
      "'iso-8859-15'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      10,
      222,
      13,
      25,
      8,
      366
    ],
    "code_indx_copy": [
      34,
      22,
      239,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      239,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "django",
      "get",
      "maximum",
      "value",
      "associated",
      "with",
      "field",
      "str_0",
      "in",
      "model",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "objects",
      ".",
      "filter",
      "(",
      "group",
      "=",
      "group",
      ")",
      ".",
      "order_by",
      "(",
      "'-added'",
      ")",
      "[",
      "0",
      "]"
    ],
    "slot_map": {
      "str_0": {
        "value": "added",
        "quote": "'",
        "type": "str"
      },
      "var_0": {
        "value": "AuthorizedEmail",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      85,
      16,
      218,
      19,
      275,
      77,
      300,
      5,
      23,
      86,
      25
    ],
    "code_indx_copy": [
      34,
      22,
      78,
      22,
      79,
      1,
      120,
      19,
      120,
      17,
      22,
      136,
      1,
      524,
      17,
      12,
      43,
      16
    ],
    "code_indx_nocopy": [
      34,
      22,
      78,
      22,
      79,
      1,
      120,
      19,
      120,
      17,
      22,
      136,
      1,
      524,
      17,
      12,
      43,
      16
    ]
  },
  {
    "intent": [
      "find",
      "all",
      "number",
      "and",
      "dot",
      "from",
      "a",
      "string",
      "var_0",
      "using",
      "regex"
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'Test([0-9.]*[0-9]+)'",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "text",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      45,
      36,
      74,
      29,
      128,
      56,
      3,
      13,
      25,
      107,
      38
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      524,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      524,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "python",
      "regex",
      "to",
      "find",
      "all",
      "number",
      "and",
      "dot",
      "from",
      "str_0"
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'Test([\\\\d.]*\\\\d+)'",
      ",",
      "str_0",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "text",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      47,
      38,
      8,
      45,
      36,
      74,
      29,
      128,
      56,
      5
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      524,
      8,
      11,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      524,
      8,
      11,
      17
    ]
  },
  {
    "intent": [
      "execute",
      "script",
      "str_0",
      "using",
      "str_1",
      "shell"
    ],
    "code": [
      "os",
      ".",
      "system",
      "(",
      "'str_1'",
      ",",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "script.ps1",
        "quote": "'",
        "type": "str"
      },
      "str_1": {
        "value": "powershell.exe",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      135,
      235,
      5,
      107,
      30,
      281
    ],
    "code_indx_copy": [
      113,
      22,
      119,
      1,
      63,
      8,
      29,
      17
    ],
    "code_indx_nocopy": [
      113,
      22,
      119,
      1,
      63,
      8,
      29,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "list",
      "of",
      "tuples",
      "var_0",
      "by",
      "third",
      "item",
      "in",
      "the",
      "tuple"
    ],
    "code": [
      "var_0",
      ".",
      "sort",
      "(",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "x",
      "[",
      "1",
      "]",
      "[",
      "2",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "b",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      116,
      3,
      4,
      2,
      31,
      25,
      42,
      119,
      37,
      23,
      17,
      111
    ],
    "code_indx_copy": [
      34,
      22,
      124,
      1,
      102,
      19,
      44,
      26,
      13,
      26,
      12,
      15,
      16,
      12,
      82,
      16,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      124,
      1,
      102,
      19,
      44,
      26,
      13,
      26,
      12,
      15,
      16,
      12,
      82,
      16,
      17
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "list",
      "of",
      "all",
      "key",
      "in",
      "cassandra",
      "database",
      "var_0",
      "with",
      "pycassa"
    ],
    "code": [
      "list",
      "(",
      "var_0",
      ".",
      "get_range",
      "(",
      ")",
      ".",
      "get_keys",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "cf",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      16,
      3,
      4,
      2,
      36,
      22,
      23,
      433,
      433,
      25,
      77,
      433
    ],
    "code_indx_copy": [
      33,
      1,
      34,
      22,
      524,
      1,
      17,
      22,
      524,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      33,
      1,
      34,
      22,
      524,
      1,
      17,
      22,
      524,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "datetime",
      "with",
      "the",
      "current",
      "date",
      "&",
      "time"
    ],
    "code": [
      "datetime",
      ".",
      "datetime",
      ".",
      "now",
      "(",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      144,
      3,
      12,
      77,
      17,
      173,
      133,
      433,
      134
    ],
    "code_indx_copy": [
      27,
      22,
      27,
      22,
      294,
      1,
      17
    ],
    "code_indx_nocopy": [
      27,
      22,
      27,
      22,
      294,
      1,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "index",
      "of",
      "an",
      "integer",
      "str_0",
      "from",
      "a",
      "list",
      "var_0",
      "if",
      "the",
      "list",
      "also",
      "contains",
      "boolean",
      "item"
    ],
    "code": [
      "next",
      "(",
      "i",
      "for",
      "i",
      ",",
      "x",
      "in",
      "enumerate",
      "(",
      "var_0",
      ")",
      "if",
      "not",
      "isinstance",
      "(",
      "x",
      ",",
      "bool",
      ")",
      "and",
      "x",
      "==",
      "1",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "1",
        "quote": "`",
        "type": "str"
      },
      "var_0": {
        "value": "lst",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      16,
      17,
      35,
      2,
      216,
      7,
      5,
      56,
      3,
      4,
      25,
      146,
      17,
      4,
      433,
      73,
      352,
      37
    ],
    "code_indx_copy": [
      496,
      1,
      6,
      7,
      6,
      8,
      26,
      9,
      10,
      1,
      34,
      17,
      67,
      281,
      206,
      1,
      26,
      8,
      457,
      17,
      458,
      26,
      76,
      15,
      17
    ],
    "code_indx_nocopy": [
      496,
      1,
      6,
      7,
      6,
      8,
      26,
      9,
      10,
      1,
      34,
      17,
      67,
      281,
      206,
      1,
      26,
      8,
      457,
      17,
      458,
      26,
      76,
      15,
      17
    ]
  },
  {
    "intent": [
      "subtract",
      "13",
      "from",
      "every",
      "number",
      "in",
      "a",
      "list",
      "var_0"
    ],
    "code": [
      "var_0",
      "[",
      ":",
      "]",
      "=",
      "[",
      "(",
      "x",
      "-",
      "13",
      ")",
      "for",
      "x",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      393,
      433,
      56,
      268,
      74,
      23,
      3,
      4,
      25
    ],
    "code_indx_copy": [
      34,
      12,
      13,
      16,
      19,
      12,
      1,
      26,
      14,
      529,
      17,
      7,
      26,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      34,
      12,
      13,
      16,
      19,
      12,
      1,
      26,
      14,
      524,
      17,
      7,
      26,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "choose",
      "a",
      "random",
      "file",
      "from",
      "the",
      "directory",
      "content",
      "of",
      "the",
      "c",
      "drive",
      ",",
      "str_0"
    ],
    "code": [
      "random",
      ".",
      "choice",
      "(",
      "os",
      ".",
      "listdir",
      "(",
      "'str_0'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": {
        "value": "C:\\",
        "quote": "`",
        "type": "str"
      }
    },
    "intent_indx": [
      433,
      3,
      183,
      125,
      56,
      17,
      169,
      124,
      2,
      17,
      433,
      433,
      60,
      5
    ],
    "code_indx_copy": [
      148,
      22,
      210,
      1,
      113,
      22,
      198,
      1,
      29,
      17,
      17
    ],
    "code_indx_nocopy": [
      148,
      22,
      210,
      1,
      113,
      22,
      198,
      1,
      29,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "highest",
      "element",
      "in",
      "absolute",
      "value",
      "in",
      "a",
      "numpy",
      "matrix",
      "var_0"
    ],
    "code": [
      "max",
      "(",
      "var_0",
      ".",
      "min",
      "(",
      ")",
      ",",
      "var_0",
      ".",
      "max",
      "(",
      ")",
      ",",
      "key",
      "=",
      "abs",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "x",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      16,
      17,
      433,
      1,
      23,
      433,
      19,
      23,
      3,
      81,
      182,
      25
    ],
    "code_indx_copy": [
      179,
      1,
      34,
      22,
      111,
      1,
      17,
      8,
      34,
      22,
      179,
      1,
      17,
      8,
      102,
      19,
      359,
      17
    ],
    "code_indx_nocopy": [
      179,
      1,
      34,
      22,
      111,
      1,
      17,
      8,
      34,
      22,
      179,
      1,
      17,
      8,
      102,
      19,
      359,
      17
    ]
  },
  {
    "intent": [
      "get",
      "all",
      "url",
      "within",
      "text",
      "var_0"
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'\"(http.*?)\"'",
      ",",
      "var_0",
      ",",
      "re",
      ".",
      "MULTILINE",
      "|",
      "re",
      ".",
      "DOTALL",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "s",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      16,
      36,
      99,
      52,
      256,
      25
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      524,
      8,
      34,
      8,
      39,
      22,
      524,
      412,
      39,
      22,
      524,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      524,
      8,
      34,
      8,
      39,
      22,
      524,
      412,
      39,
      22,
      524,
      17
    ]
  },
  {
    "intent": [
      "match",
      "url",
      "whose",
      "domain",
      "doe",
      "n't",
      "start",
      "with",
      "var_0",
      "from",
      "string",
      "var_1",
      "using",
      "regex"
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'http://[^t][^s\"]+\\\\.html'",
      ",",
      "var_1",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "t",
        "quote": "`",
        "type": "var"
      },
      "var_1": {
        "value": "document",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      105,
      99,
      220,
      433,
      179,
      433,
      412,
      77,
      25,
      56,
      13,
      61,
      107,
      38
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      524,
      8,
      91,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      524,
      8,
      91,
      17
    ]
  },
  {
    "intent": [
      "split",
      "a",
      "string",
      "var_0",
      "considering",
      "the",
      "space",
      "str_0"
    ],
    "code": [
      "var_0",
      ".",
      "replace",
      "(",
      "' '",
      ",",
      "'! !'",
      ")",
      ".",
      "split",
      "(",
      "'!'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "mystring",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      138,
      3,
      13,
      25,
      433,
      17,
      132,
      5
    ],
    "code_indx_copy": [
      34,
      22,
      107,
      1,
      108,
      8,
      524,
      17,
      22,
      71,
      1,
      524,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      107,
      1,
      108,
      8,
      524,
      17,
      22,
      71,
      1,
      524,
      17
    ]
  },
  {
    "intent": [
      "open",
      "file",
      "var_0",
      "with",
      "mode",
      "str_0"
    ],
    "code": [
      "open",
      "(",
      "var_0",
      ",",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "var_0": {
        "value": "path",
        "quote": "`",
        "type": "var"
      },
      "str_0": {
        "value": "r",
        "quote": "'",
        "type": "str"
      }
    },
    "intent_indx": [
      273,
      125,
      25,
      77,
      274,
      5
    ],
    "code_indx_copy": [
      105,
      1,
      34,
      8,
      29,
      17
    ],
    "code_indx_nocopy": [
      105,
      1,
      34,
      8,
      29,
      17
    ]
  },
  {
    "intent": [
      "sum",
      "element",
      "at",
      "the",
      "same",
      "index",
      "in",
      "list",
      "var_0"
    ],
    "code": [
      "[",
      "[",
      "sum",
      "(",
      "item",
      ")",
      "for",
      "item",
      "in",
      "zip",
      "(",
      "*",
      "items",
      ")",
      "]",
      "for",
      "items",
      "in",
      "zip",
      "(",
      "*",
      "var_0",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "data",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      110,
      1,
      33,
      17,
      34,
      35,
      23,
      4,
      25
    ],
    "code_indx_copy": [
      12,
      12,
      0,
      1,
      387,
      17,
      7,
      387,
      9,
      36,
      1,
      3,
      35,
      17,
      16,
      7,
      35,
      9,
      36,
      1,
      3,
      34,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      12,
      0,
      1,
      387,
      17,
      7,
      387,
      9,
      36,
      1,
      3,
      35,
      17,
      16,
      7,
      35,
      9,
      36,
      1,
      3,
      34,
      17,
      16
    ]
  },
  {
    "intent": [
      "add",
      "a",
      "new",
      "axis",
      "to",
      "array",
      "var_0"
    ],
    "code": [
      "var_0",
      "[",
      ":",
      ",",
      "(",
      "np",
      ".",
      "newaxis",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": {
        "value": "a",
        "quote": "`",
        "type": "var"
      }
    },
    "intent_indx": [
      58,
      3,
      185,
      419,
      8,
      82,
      25
    ],
    "code_indx_copy": [
      34,
      12,
      13,
      8,
      1,
      74,
      22,
      524,
      17,
      16
    ],
    "code_indx_nocopy": [
      34,
      12,
      13,
      8,
      1,
      74,
      22,
      524,
      17,
      16
    ]
  }
]
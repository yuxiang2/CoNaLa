[
  {
    "intent": [
      "send",
      "a",
      "signal",
      "str_0",
      "to",
      "the",
      "current",
      "process"
    ],
    "code": [
      "os",
      ".",
      "kill",
      "(",
      "os",
      ".",
      "getpid",
      "(",
      ")",
      ",",
      "signal",
      ".",
      "SIGUSR1",
      ")"
    ],
    "slot_map": {
      "str_0": "signal.SIGUSR1"
    },
    "intent_indx": [
      433,
      3,
      433,
      5,
      8,
      17,
      174,
      283
    ],
    "code_indx_copy": [
      114,
      22,
      520,
      1,
      114,
      22,
      520,
      1,
      17,
      8,
      526,
      22,
      520,
      17
    ],
    "code_indx_nocopy": [
      114,
      22,
      520,
      1,
      114,
      22,
      520,
      1,
      17,
      8,
      520,
      22,
      520,
      17
    ]
  },
  {
    "intent": [
      "decode",
      "a",
      "hex",
      "string",
      "str_0",
      "to",
      "utf-8",
      "."
    ],
    "code": [
      "bytes",
      ".",
      "fromhex",
      "(",
      "'str_0'",
      ")",
      ".",
      "decode",
      "(",
      "'utf-8'",
      ")"
    ],
    "slot_map": {
      "str_0": "4a4b4c"
    },
    "intent_indx": [
      178,
      3,
      115,
      13,
      5,
      8,
      179,
      155
    ],
    "code_indx_copy": [
      520,
      22,
      520,
      1,
      29,
      17,
      22,
      100,
      1,
      145,
      17
    ],
    "code_indx_nocopy": [
      520,
      22,
      520,
      1,
      29,
      17,
      22,
      100,
      1,
      145,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "all",
      "element",
      "in",
      "list",
      "var_0",
      "are",
      "identical"
    ],
    "code": [
      "all",
      "(",
      "x",
      "==",
      "var_0",
      "[",
      "0",
      "]",
      "for",
      "x",
      "in",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": "myList"
    },
    "intent_indx": [
      227,
      147,
      36,
      1,
      23,
      4,
      25,
      234,
      433
    ],
    "code_indx_copy": [
      77,
      1,
      26,
      76,
      34,
      12,
      43,
      16,
      7,
      26,
      9,
      34,
      17
    ],
    "code_indx_nocopy": [
      77,
      1,
      26,
      76,
      34,
      12,
      43,
      16,
      7,
      26,
      9,
      34,
      17
    ]
  },
  {
    "intent": [
      "format",
      "number",
      "of",
      "space",
      "between",
      "string",
      "var_0",
      ",",
      "str_0",
      "and",
      "str_1",
      "to",
      "be",
      "str_2"
    ],
    "code": [
      "print",
      "(",
      "'%*s : %*s'",
      "%",
      "(",
      "str_2",
      ",",
      "'var_0'",
      ",",
      "str_2",
      ",",
      "'str_1'",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": "Python",
      "str_0": ":",
      "str_1": "Very Good",
      "str_2": "20"
    },
    "intent_indx": [
      15,
      74,
      2,
      133,
      269,
      13,
      25,
      60,
      5,
      29,
      30,
      8,
      349,
      188
    ],
    "code_indx_copy": [
      49,
      1,
      520,
      118,
      1,
      185,
      8,
      56,
      8,
      185,
      8,
      63,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      520,
      118,
      1,
      185,
      8,
      56,
      8,
      185,
      8,
      63,
      17,
      17
    ]
  },
  {
    "intent": [
      "how",
      "to",
      "convert",
      "a",
      "string",
      "from",
      "cp-1251",
      "to",
      "utf-8",
      "?"
    ],
    "code": [
      "d",
      ".",
      "decode",
      "(",
      "'cp1251'",
      ")",
      ".",
      "encode",
      "(",
      "'utf8'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      75,
      8,
      10,
      3,
      13,
      56,
      433,
      8,
      179,
      49
    ],
    "code_indx_copy": [
      2,
      22,
      100,
      1,
      520,
      17,
      22,
      242,
      1,
      202,
      17
    ],
    "code_indx_nocopy": [
      2,
      22,
      100,
      1,
      520,
      17,
      22,
      242,
      1,
      202,
      17
    ]
  },
  {
    "intent": [
      "get",
      "rid",
      "of",
      "none",
      "value",
      "in",
      "dictionary",
      "var_0"
    ],
    "code": [
      "res",
      "=",
      "{",
      "k",
      ":",
      "v",
      "for",
      "k",
      ",",
      "v",
      "in",
      "list",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      "if",
      "v",
      "is",
      "not",
      "None",
      "}"
    ],
    "slot_map": {
      "var_0": "kwargs"
    },
    "intent_indx": [
      16,
      433,
      2,
      433,
      19,
      23,
      24,
      25
    ],
    "code_indx_copy": [
      520,
      19,
      52,
      90,
      13,
      91,
      7,
      90,
      8,
      91,
      9,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      67,
      91,
      336,
      283,
      211,
      53
    ],
    "code_indx_nocopy": [
      520,
      19,
      52,
      90,
      13,
      91,
      7,
      90,
      8,
      91,
      9,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      67,
      91,
      336,
      283,
      211,
      53
    ]
  },
  {
    "intent": [
      "get",
      "rid",
      "of",
      "none",
      "value",
      "in",
      "dictionary",
      "var_0"
    ],
    "code": [
      "res",
      "=",
      "dict",
      "(",
      "(",
      "k",
      ",",
      "v",
      ")",
      "for",
      "k",
      ",",
      "v",
      "in",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      "if",
      "v",
      "is",
      "not",
      "None",
      ")"
    ],
    "slot_map": {
      "var_0": "kwargs"
    },
    "intent_indx": [
      16,
      433,
      2,
      433,
      19,
      23,
      24,
      25
    ],
    "code_indx_copy": [
      520,
      19,
      70,
      1,
      1,
      90,
      8,
      91,
      17,
      7,
      90,
      8,
      91,
      9,
      34,
      22,
      35,
      1,
      17,
      67,
      91,
      336,
      283,
      211,
      17
    ],
    "code_indx_nocopy": [
      520,
      19,
      70,
      1,
      1,
      90,
      8,
      91,
      17,
      7,
      90,
      8,
      91,
      9,
      34,
      22,
      35,
      1,
      17,
      67,
      91,
      336,
      283,
      211,
      17
    ]
  },
  {
    "intent": [
      "capture",
      "final",
      "output",
      "of",
      "a",
      "chain",
      "of",
      "system",
      "command",
      "str_0"
    ],
    "code": [
      "subprocess",
      ".",
      "check_output",
      "(",
      "'str_0'",
      ",",
      "shell",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "str_0": "ps -ef | grep something | wc -l"
    },
    "intent_indx": [
      433,
      433,
      248,
      2,
      3,
      433,
      2,
      433,
      138,
      5
    ],
    "code_indx_copy": [
      232,
      22,
      445,
      1,
      29,
      8,
      234,
      19,
      110,
      17
    ],
    "code_indx_nocopy": [
      232,
      22,
      445,
      1,
      29,
      8,
      234,
      19,
      110,
      17
    ]
  },
  {
    "intent": [
      "concatenate",
      "a",
      "list",
      "of",
      "string",
      "str_0"
    ],
    "code": [
      "\"\"\"\"\"\"",
      ".",
      "join",
      "(",
      "[",
      "str_0",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": "['a', 'b', 'c']",
      "[str_0]": "['a', 'b', 'c']"
    },
    "intent_indx": [
      0,
      3,
      4,
      2,
      13,
      5
    ],
    "code_indx_copy": [
      289,
      22,
      23,
      1,
      12,
      11,
      16,
      17
    ],
    "code_indx_nocopy": [
      289,
      22,
      23,
      1,
      12,
      11,
      16,
      17
    ]
  },
  {
    "intent": [
      "find",
      "intersection",
      "data",
      "between",
      "series",
      "var_0",
      "and",
      "series",
      "var_1"
    ],
    "code": [
      "pd",
      ".",
      "Series",
      "(",
      "list",
      "(",
      "set",
      "(",
      "var_0",
      ")",
      ".",
      "intersection",
      "(",
      "set",
      "(",
      "var_1",
      ")",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": "s1",
      "var_1": "s2"
    },
    "intent_indx": [
      45,
      433,
      63,
      269,
      324,
      25,
      29,
      324,
      61
    ],
    "code_indx_copy": [
      164,
      22,
      463,
      1,
      33,
      1,
      191,
      1,
      34,
      17,
      22,
      273,
      1,
      191,
      1,
      92,
      17,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      164,
      22,
      463,
      1,
      33,
      1,
      191,
      1,
      34,
      17,
      22,
      273,
      1,
      191,
      1,
      92,
      17,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "sending",
      "http",
      "header",
      "to",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "send",
      "(",
      "'HTTP/1.0 200 OK\\r\\n'",
      ")"
    ],
    "slot_map": {
      "var_0": "client"
    },
    "intent_indx": [
      433,
      329,
      401,
      8,
      25
    ],
    "code_indx_copy": [
      34,
      22,
      520,
      1,
      520,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      520,
      1,
      520,
      17
    ]
  },
  {
    "intent": [
      "format",
      "a",
      "datetime",
      "string",
      "var_0",
      "to",
      "extract",
      "date",
      "only"
    ],
    "code": [
      "then",
      "=",
      "datetime",
      ".",
      "datetime",
      ".",
      "strptime",
      "(",
      "var_0",
      ",",
      "'%Y-%m-%d'",
      ")",
      ".",
      "date",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": "when"
    },
    "intent_indx": [
      15,
      3,
      12,
      13,
      25,
      8,
      102,
      134,
      338
    ],
    "code_indx_copy": [
      520,
      19,
      27,
      22,
      27,
      22,
      28,
      1,
      34,
      8,
      520,
      17,
      22,
      141,
      1,
      17
    ],
    "code_indx_nocopy": [
      520,
      19,
      27,
      22,
      27,
      22,
      28,
      1,
      34,
      8,
      520,
      17,
      22,
      141,
      1,
      17
    ]
  },
  {
    "intent": [
      "split",
      "a",
      "multi-line",
      "string",
      "var_0",
      "into",
      "separate",
      "string"
    ],
    "code": [
      "var_0",
      ".",
      "split",
      "(",
      "'\\n'",
      ")"
    ],
    "slot_map": {
      "var_0": "inputString"
    },
    "intent_indx": [
      139,
      3,
      433,
      13,
      25,
      11,
      95,
      13
    ],
    "code_indx_copy": [
      34,
      22,
      71,
      1,
      135,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      71,
      1,
      135,
      17
    ]
  },
  {
    "intent": [
      "split",
      "a",
      "multi-line",
      "string",
      "str_0",
      "by",
      "new",
      "line",
      "character",
      "str_1"
    ],
    "code": [
      "' a \\n b \\r\\n c '",
      ".",
      "split",
      "(",
      "'\\n'",
      ")"
    ],
    "slot_map": {
      "str_0": "a \\n b \\r\\n c",
      "str_1": "\\n"
    },
    "intent_indx": [
      139,
      3,
      433,
      13,
      5,
      42,
      186,
      167,
      96,
      30
    ],
    "code_indx_copy": [
      520,
      22,
      71,
      1,
      135,
      17
    ],
    "code_indx_nocopy": [
      520,
      22,
      71,
      1,
      135,
      17
    ]
  },
  {
    "intent": [
      "concatenate",
      "element",
      "of",
      "list",
      "var_0",
      "by",
      "a",
      "colon",
      "str_0"
    ],
    "code": [
      "\"\"\"str_0\"\"\"",
      ".",
      "join",
      "(",
      "str",
      "(",
      "x",
      ")",
      "for",
      "x",
      "in",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": "b",
      "str_0": ":"
    },
    "intent_indx": [
      0,
      1,
      2,
      4,
      25,
      42,
      3,
      433,
      5
    ],
    "code_indx_copy": [
      214,
      22,
      23,
      1,
      25,
      1,
      26,
      17,
      7,
      26,
      9,
      34,
      17
    ],
    "code_indx_nocopy": [
      214,
      22,
      23,
      1,
      25,
      1,
      26,
      17,
      7,
      26,
      9,
      34,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "first",
      "object",
      "from",
      "a",
      "queryset",
      "in",
      "django",
      "model",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "objects",
      ".",
      "filter",
      "(",
      ")",
      "[",
      ":",
      "1",
      "]",
      ".",
      "get",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": "Entry"
    },
    "intent_indx": [
      16,
      17,
      148,
      14,
      56,
      3,
      433,
      23,
      85,
      86,
      25
    ],
    "code_indx_copy": [
      34,
      22,
      78,
      22,
      79,
      1,
      17,
      12,
      13,
      15,
      16,
      22,
      87,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      78,
      22,
      79,
      1,
      17,
      12,
      13,
      15,
      16,
      22,
      87,
      1,
      17
    ]
  },
  {
    "intent": [
      "calculate",
      "sum",
      "over",
      "all",
      "row",
      "of",
      "2d",
      "numpy",
      "array"
    ],
    "code": [
      "a",
      ".",
      "sum",
      "(",
      "axis",
      "=",
      "1",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      243,
      111,
      387,
      36,
      43,
      2,
      228,
      81,
      82
    ],
    "code_indx_copy": [
      96,
      22,
      0,
      1,
      42,
      19,
      15,
      17
    ],
    "code_indx_nocopy": [
      96,
      22,
      0,
      1,
      42,
      19,
      15,
      17
    ]
  },
  {
    "intent": [
      "enable",
      "warning",
      "using",
      "action",
      "str_0"
    ],
    "code": [
      "warnings",
      ".",
      "simplefilter",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": "always"
    },
    "intent_indx": [
      433,
      433,
      108,
      433,
      5
    ],
    "code_indx_copy": [
      520,
      22,
      520,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      520,
      22,
      520,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "concatenate",
      "item",
      "of",
      "list",
      "var_0",
      "with",
      "a",
      "space",
      "str_0"
    ],
    "code": [
      "print",
      "(",
      "' '",
      ".",
      "join",
      "(",
      "map",
      "(",
      "str",
      ",",
      "var_0",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": "l",
      "str_0": ""
    },
    "intent_indx": [
      0,
      37,
      2,
      4,
      25,
      77,
      3,
      133,
      5
    ],
    "code_indx_copy": [
      49,
      1,
      109,
      22,
      23,
      1,
      24,
      1,
      25,
      8,
      34,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      109,
      22,
      23,
      1,
      24,
      1,
      25,
      8,
      34,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "run",
      "script",
      "str_0",
      "with",
      "argument",
      "str_1",
      "on",
      "terminal",
      "using",
      "python",
      "executable"
    ],
    "code": [
      "subprocess",
      ".",
      "call",
      "(",
      "[",
      "'python.exe'",
      ",",
      "'str_0'",
      ",",
      "'str_1'",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": "hello.py",
      "str_1": "htmlfilename.htm"
    },
    "intent_indx": [
      241,
      236,
      5,
      77,
      295,
      30,
      140,
      433,
      108,
      47,
      433
    ],
    "code_indx_copy": [
      232,
      22,
      233,
      1,
      12,
      520,
      8,
      29,
      8,
      63,
      16,
      17
    ],
    "code_indx_nocopy": [
      232,
      22,
      233,
      1,
      12,
      520,
      8,
      29,
      8,
      63,
      16,
      17
    ]
  },
  {
    "intent": [
      "how",
      "can",
      "i",
      "parse",
      "a",
      "time",
      "string",
      "containing",
      "millisecond",
      "in",
      "it",
      "with",
      "python",
      "?"
    ],
    "code": [
      "time",
      ".",
      "strptime",
      "(",
      "'30/03/09 16:31:32.123'",
      ",",
      "'%d/%m/%y %H:%M:%S.%f'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      75,
      367,
      313,
      71,
      3,
      135,
      13,
      32,
      433,
      23,
      89,
      77,
      47,
      49
    ],
    "code_indx_copy": [
      85,
      22,
      28,
      1,
      520,
      8,
      520,
      17
    ],
    "code_indx_nocopy": [
      85,
      22,
      28,
      1,
      520,
      8,
      520,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "string",
      "var_0",
      "with",
      "dot",
      "and",
      "comma",
      "into",
      "a",
      "float",
      "number",
      "var_1"
    ],
    "code": [
      "var_1",
      "=",
      "float",
      "(",
      "var_0",
      ".",
      "replace",
      "(",
      "','",
      ",",
      "''",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": "my_string",
      "var_1": "my_float"
    },
    "intent_indx": [
      10,
      3,
      13,
      25,
      77,
      129,
      29,
      250,
      11,
      3,
      92,
      74,
      61
    ],
    "code_indx_copy": [
      92,
      19,
      228,
      1,
      34,
      22,
      108,
      1,
      73,
      8,
      21,
      17,
      17
    ],
    "code_indx_nocopy": [
      92,
      19,
      228,
      1,
      34,
      22,
      108,
      1,
      73,
      8,
      21,
      17,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "string",
      "str_0",
      "with",
      "dot",
      "and",
      "comma",
      "into",
      "a",
      "floating",
      "number"
    ],
    "code": [
      "float",
      "(",
      "'str_0'",
      ".",
      "replace",
      "(",
      "','",
      ",",
      "''",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": "123,456.908"
    },
    "intent_indx": [
      10,
      3,
      13,
      5,
      77,
      129,
      29,
      250,
      11,
      3,
      261,
      74
    ],
    "code_indx_copy": [
      228,
      1,
      29,
      22,
      108,
      1,
      73,
      8,
      21,
      17,
      17
    ],
    "code_indx_nocopy": [
      228,
      1,
      29,
      22,
      108,
      1,
      73,
      8,
      21,
      17,
      17
    ]
  },
  {
    "intent": [
      "set",
      "pythonpath",
      "in",
      "python",
      "script",
      "."
    ],
    "code": [
      "sys",
      ".",
      "path",
      ".",
      "append",
      "(",
      "'/path/to/whatever'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      57,
      433,
      23,
      47,
      236,
      155
    ],
    "code_indx_copy": [
      155,
      22,
      115,
      22,
      148,
      1,
      520,
      17
    ],
    "code_indx_nocopy": [
      155,
      22,
      115,
      22,
      148,
      1,
      520,
      17
    ]
  },
  {
    "intent": [
      "split",
      "string",
      "str_0",
      "using",
      "a",
      "regex",
      "str_1"
    ],
    "code": [
      "re",
      ".",
      "split",
      "(",
      "'(str_1)'",
      ",",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": "Words, words, words.",
      "str_1": "(\\\\W+)",
      "(str_1)": "(\\\\W+)"
    },
    "intent_indx": [
      139,
      13,
      5,
      108,
      3,
      38,
      30
    ],
    "code_indx_copy": [
      39,
      22,
      71,
      1,
      520,
      8,
      29,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      71,
      1,
      520,
      8,
      29,
      17
    ]
  },
  {
    "intent": [
      "open",
      "a",
      "file",
      "str_0",
      "in",
      "append",
      "mode"
    ],
    "code": [
      "file",
      "=",
      "open",
      "(",
      "'str_0'",
      ",",
      "'a'",
      ")"
    ],
    "slot_map": {
      "str_0": "Output.txt"
    },
    "intent_indx": [
      275,
      3,
      126,
      5,
      23,
      110,
      276
    ],
    "code_indx_copy": [
      400,
      19,
      106,
      1,
      29,
      8,
      410,
      17
    ],
    "code_indx_nocopy": [
      400,
      19,
      106,
      1,
      29,
      8,
      410,
      17
    ]
  },
  {
    "intent": [
      "download",
      "a",
      "file",
      "str_0",
      "over",
      "http",
      "and",
      "save",
      "to",
      "str_1"
    ],
    "code": [
      "urllib",
      ".",
      "request",
      ".",
      "urlretrieve",
      "(",
      "'str_0'",
      ",",
      "'str_1'",
      ")"
    ],
    "slot_map": {
      "str_0": "http://www.example.com/songs/mp3.mp3",
      "str_1": "mp3.mp3"
    },
    "intent_indx": [
      390,
      3,
      126,
      5,
      387,
      329,
      29,
      318,
      8,
      30
    ],
    "code_indx_copy": [
      235,
      22,
      236,
      22,
      353,
      1,
      29,
      8,
      63,
      17
    ],
    "code_indx_nocopy": [
      235,
      22,
      236,
      22,
      353,
      1,
      29,
      8,
      63,
      17
    ]
  },
  {
    "intent": [
      "download",
      "a",
      "file",
      "var_0",
      "over",
      "http",
      "and",
      "save",
      "to",
      "var_1"
    ],
    "code": [
      "u",
      "=",
      "urllib",
      ".",
      "request",
      ".",
      "urlopen",
      "(",
      "var_0",
      ")",
      "\n",
      "f",
      "=",
      "open",
      "(",
      "var_1",
      ",",
      "'wb'",
      ")",
      "\n",
      "meta",
      "=",
      "u",
      ".",
      "info",
      "(",
      ")",
      "\n",
      "file_size",
      "=",
      "int",
      "(",
      "meta",
      ".",
      "getheaders",
      "(",
      "'Content-Length'",
      ")",
      "[",
      "0",
      "]",
      ")",
      "\n",
      "print",
      "(",
      "'Downloading: %s Bytes: %s'",
      "%",
      "(",
      "var_1",
      ",",
      "file_size",
      ")",
      ")",
      "\n",
      "file_size_dl",
      "=",
      "0",
      "\n",
      "block_sz",
      "=",
      "8192",
      "\n",
      "while",
      "True",
      ":",
      "\n",
      "    ",
      "buffer",
      "=",
      "u",
      ".",
      "read",
      "(",
      "block_sz",
      ")",
      "\n",
      "if",
      "not",
      "buffer",
      ":",
      "\n",
      "        ",
      "break",
      "\n",
      "",
      "file_size_dl",
      "+=",
      "len",
      "(",
      "buffer",
      ")",
      "\n",
      "f",
      ".",
      "write",
      "(",
      "buffer",
      ")",
      "\n",
      "status",
      "=",
      "'%10d  [%3.2f%%]'",
      "%",
      "(",
      "file_size_dl",
      ",",
      "file_size_dl",
      "*",
      "100.0",
      "/",
      "\n",
      "file_size",
      ")",
      "\n",
      "status",
      "=",
      "status",
      "+",
      "chr",
      "(",
      "8",
      ")",
      "*",
      "(",
      "len",
      "(",
      "status",
      ")",
      "+",
      "1",
      ")",
      "\n",
      "print",
      "(",
      "status",
      ",",
      "end",
      "=",
      "' '",
      ")",
      "\n",
      "",
      "f",
      ".",
      "close",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": "url",
      "var_1": "file_name"
    },
    "intent_indx": [
      390,
      3,
      126,
      25,
      387,
      329,
      29,
      318,
      8,
      61
    ],
    "code_indx_copy": [
      520,
      19,
      235,
      22,
      236,
      22,
      237,
      1,
      34,
      17,
      163,
      192,
      19,
      106,
      1,
      92,
      8,
      520,
      17,
      163,
      520,
      19,
      520,
      22,
      128,
      1,
      17,
      163,
      520,
      19,
      20,
      1,
      520,
      22,
      520,
      1,
      520,
      17,
      12,
      43,
      16,
      17,
      163,
      49,
      1,
      520,
      118,
      1,
      92,
      8,
      520,
      17,
      17,
      163,
      520,
      19,
      43,
      163,
      520,
      19,
      520,
      163,
      520,
      110,
      13,
      163,
      218,
      520,
      19,
      520,
      22,
      107,
      1,
      520,
      17,
      163,
      67,
      283,
      520,
      13,
      163,
      368,
      520,
      163,
      220,
      520,
      520,
      32,
      1,
      520,
      17,
      163,
      192,
      22,
      133,
      1,
      520,
      17,
      163,
      520,
      19,
      520,
      118,
      1,
      520,
      8,
      520,
      3,
      520,
      31,
      163,
      520,
      17,
      163,
      520,
      19,
      520,
      97,
      451,
      1,
      497,
      17,
      3,
      1,
      32,
      1,
      520,
      17,
      97,
      15,
      17,
      163,
      49,
      1,
      520,
      8,
      520,
      19,
      109,
      17,
      163,
      220,
      192,
      22,
      502,
      1,
      17
    ],
    "code_indx_nocopy": [
      520,
      19,
      235,
      22,
      236,
      22,
      237,
      1,
      34,
      17,
      163,
      192,
      19,
      106,
      1,
      92,
      8,
      520,
      17,
      163,
      520,
      19,
      520,
      22,
      128,
      1,
      17,
      163,
      520,
      19,
      20,
      1,
      520,
      22,
      520,
      1,
      520,
      17,
      12,
      43,
      16,
      17,
      163,
      49,
      1,
      520,
      118,
      1,
      92,
      8,
      520,
      17,
      17,
      163,
      520,
      19,
      43,
      163,
      520,
      19,
      520,
      163,
      520,
      110,
      13,
      163,
      218,
      520,
      19,
      520,
      22,
      107,
      1,
      520,
      17,
      163,
      67,
      283,
      520,
      13,
      163,
      368,
      520,
      163,
      220,
      520,
      520,
      32,
      1,
      520,
      17,
      163,
      192,
      22,
      133,
      1,
      520,
      17,
      163,
      520,
      19,
      520,
      118,
      1,
      520,
      8,
      520,
      3,
      520,
      31,
      163,
      520,
      17,
      163,
      520,
      19,
      520,
      97,
      451,
      1,
      497,
      17,
      3,
      1,
      32,
      1,
      520,
      17,
      97,
      15,
      17,
      163,
      49,
      1,
      520,
      8,
      520,
      19,
      109,
      17,
      163,
      220,
      192,
      22,
      502,
      1,
      17
    ]
  },
  {
    "intent": [
      "download",
      "a",
      "file",
      "str_0",
      "over",
      "http"
    ],
    "code": [
      "response",
      "=",
      "urllib",
      ".",
      "request",
      ".",
      "urlopen",
      "(",
      "'str_0'",
      ")",
      "\n",
      "html",
      "=",
      "response",
      ".",
      "read",
      "(",
      ")"
    ],
    "slot_map": {
      "str_0": "http://www.example.com/"
    },
    "intent_indx": [
      390,
      3,
      126,
      5,
      387,
      329
    ],
    "code_indx_copy": [
      520,
      19,
      235,
      22,
      236,
      22,
      237,
      1,
      29,
      17,
      163,
      520,
      19,
      520,
      22,
      107,
      1,
      17
    ],
    "code_indx_nocopy": [
      520,
      19,
      235,
      22,
      236,
      22,
      237,
      1,
      29,
      17,
      163,
      520,
      19,
      520,
      22,
      107,
      1,
      17
    ]
  },
  {
    "intent": [
      "download",
      "a",
      "file",
      "var_0",
      "over",
      "http"
    ],
    "code": [
      "r",
      "=",
      "requests",
      ".",
      "get",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": "url"
    },
    "intent_indx": [
      390,
      3,
      126,
      25,
      387,
      329
    ],
    "code_indx_copy": [
      18,
      19,
      86,
      22,
      87,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      18,
      19,
      86,
      22,
      87,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "download",
      "a",
      "file",
      "var_0",
      "over",
      "http",
      "and",
      "save",
      "to",
      "str_0"
    ],
    "code": [
      "response",
      "=",
      "requests",
      ".",
      "get",
      "(",
      "var_0",
      ",",
      "stream",
      "=",
      "True",
      ")",
      "\n",
      "with",
      "open",
      "(",
      "'str_0'",
      ",",
      "'wb'",
      ")",
      "as",
      "handle",
      ":",
      "\n",
      "    ",
      "for",
      "data",
      "in",
      "tqdm",
      "(",
      "response",
      ".",
      "iter_content",
      "(",
      ")",
      ")",
      ":",
      "\n",
      "        ",
      "handle",
      ".",
      "write",
      "(",
      "data",
      ")",
      "",
      ""
    ],
    "slot_map": {
      "var_0": "url",
      "str_0": "10MB"
    },
    "intent_indx": [
      390,
      3,
      126,
      25,
      387,
      329,
      29,
      318,
      8,
      5
    ],
    "code_indx_copy": [
      520,
      19,
      86,
      22,
      87,
      1,
      34,
      8,
      367,
      19,
      110,
      17,
      163,
      364,
      106,
      1,
      29,
      8,
      520,
      17,
      366,
      520,
      13,
      163,
      218,
      7,
      137,
      9,
      520,
      1,
      520,
      22,
      520,
      1,
      17,
      17,
      13,
      163,
      368,
      520,
      22,
      133,
      1,
      137,
      17,
      220,
      220
    ],
    "code_indx_nocopy": [
      520,
      19,
      86,
      22,
      87,
      1,
      34,
      8,
      367,
      19,
      110,
      17,
      163,
      364,
      106,
      1,
      29,
      8,
      520,
      17,
      366,
      520,
      13,
      163,
      218,
      7,
      137,
      9,
      520,
      1,
      520,
      22,
      520,
      1,
      17,
      17,
      13,
      163,
      368,
      520,
      22,
      133,
      1,
      137,
      17,
      220,
      220
    ]
  },
  {
    "intent": [
      "argparse",
      "add",
      "argument",
      "with",
      "flag",
      "str_0",
      "and",
      "version",
      "action",
      "of",
      "str_1",
      "to",
      "parser",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "add_argument",
      "(",
      "'str_0'",
      ",",
      "action",
      "=",
      "'version'",
      ",",
      "version",
      "=",
      "'str_1'",
      ")"
    ],
    "slot_map": {
      "str_0": "--version",
      "str_1": "%(prog)s 2.0",
      "var_0": "parser"
    },
    "intent_indx": [
      433,
      58,
      295,
      77,
      433,
      5,
      29,
      433,
      433,
      2,
      30,
      8,
      433,
      25
    ],
    "code_indx_copy": [
      34,
      22,
      456,
      1,
      29,
      8,
      532,
      19,
      520,
      8,
      531,
      19,
      63,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      456,
      1,
      29,
      8,
      520,
      19,
      520,
      8,
      520,
      19,
      63,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "key",
      "str_0",
      "from",
      "dictionary",
      "var_0"
    ],
    "code": [
      "{",
      "i",
      ":",
      "var_0",
      "[",
      "i",
      "]",
      "for",
      "i",
      "in",
      "var_0",
      "if",
      "i",
      "!=",
      "'str_0'",
      "}"
    ],
    "slot_map": {
      "str_0": "c",
      "var_0": "d"
    },
    "intent_indx": [
      258,
      22,
      5,
      56,
      24,
      25
    ],
    "code_indx_copy": [
      52,
      6,
      13,
      34,
      12,
      6,
      16,
      7,
      6,
      9,
      34,
      67,
      6,
      89,
      29,
      53
    ],
    "code_indx_nocopy": [
      52,
      6,
      13,
      34,
      12,
      6,
      16,
      7,
      6,
      9,
      34,
      67,
      6,
      89,
      29,
      53
    ]
  },
  {
    "intent": [
      "create",
      "new",
      "dataframe",
      "object",
      "by",
      "merging",
      "column",
      "str_0",
      "of",
      "dataframes",
      "var_0",
      "and",
      "var_1",
      "and",
      "rename",
      "the",
      "column",
      "from",
      "dataframes",
      "var_0",
      "and",
      "var_1",
      "with",
      "suffix",
      "var_4",
      "and",
      "var_5",
      "respectively"
    ],
    "code": [
      "pd",
      ".",
      "merge",
      "(",
      "var_2",
      ",",
      "var_3",
      ",",
      "on",
      "=",
      "[",
      "'str_0'",
      "]",
      ",",
      "suffixes",
      "=",
      "(",
      "'var_4'",
      ",",
      "'var_5'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": "key",
      "var_0": "split_df",
      "var_1": "csv_df",
      "var_2": "split_df",
      "var_3": "csv_df",
      "var_4": "_left",
      "var_5": "_right"
    },
    "intent_indx": [
      145,
      186,
      41,
      14,
      42,
      433,
      59,
      5,
      2,
      238,
      25,
      29,
      61,
      29,
      372,
      17,
      59,
      56,
      238,
      25,
      29,
      61,
      77,
      433,
      433,
      29,
      433,
      433
    ],
    "code_indx_copy": [
      164,
      22,
      223,
      1,
      95,
      8,
      55,
      8,
      247,
      19,
      12,
      29,
      16,
      8,
      520,
      19,
      1,
      520,
      8,
      520,
      17,
      17
    ],
    "code_indx_nocopy": [
      164,
      22,
      223,
      1,
      95,
      8,
      55,
      8,
      247,
      19,
      12,
      29,
      16,
      8,
      520,
      19,
      1,
      520,
      8,
      520,
      17,
      17
    ]
  },
  {
    "intent": [
      "split",
      "a",
      "string",
      "var_0",
      "by",
      "space",
      "with",
      "str_0",
      "split"
    ],
    "code": [
      "var_0",
      ".",
      "split",
      "(",
      "' '",
      ",",
      "str_0",
      ")"
    ],
    "slot_map": {
      "var_0": "s",
      "str_0": "4"
    },
    "intent_indx": [
      139,
      3,
      13,
      25,
      42,
      133,
      77,
      5,
      139
    ],
    "code_indx_copy": [
      34,
      22,
      71,
      1,
      109,
      8,
      11,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      71,
      1,
      109,
      8,
      11,
      17
    ]
  },
  {
    "intent": [
      "read",
      "keyboard-input"
    ],
    "code": [
      "input",
      "(",
      "'Enter your input:'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      124,
      433
    ],
    "code_indx_copy": [
      254,
      1,
      520,
      17
    ],
    "code_indx_nocopy": [
      254,
      1,
      520,
      17
    ]
  },
  {
    "intent": [
      "enable",
      "debug",
      "mode",
      "on",
      "flask",
      "application",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "run",
      "(",
      "debug",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "var_0": "app"
    },
    "intent_indx": [
      433,
      433,
      276,
      140,
      384,
      433,
      25
    ],
    "code_indx_copy": [
      34,
      22,
      464,
      1,
      525,
      19,
      110,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      464,
      1,
      520,
      19,
      110,
      17
    ]
  },
  {
    "intent": [
      "python",
      "save",
      "list",
      "var_0",
      "to",
      "file",
      "object",
      "str_0"
    ],
    "code": [
      "pickle",
      ".",
      "dump",
      "(",
      "var_0",
      ",",
      "open",
      "(",
      "'str_0'",
      ",",
      "'wb'",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": "mylist",
      "str_0": "save.txt"
    },
    "intent_indx": [
      47,
      318,
      4,
      25,
      8,
      126,
      14,
      5
    ],
    "code_indx_copy": [
      520,
      22,
      520,
      1,
      34,
      8,
      106,
      1,
      29,
      8,
      520,
      17,
      17
    ],
    "code_indx_nocopy": [
      520,
      22,
      520,
      1,
      34,
      8,
      106,
      1,
      29,
      8,
      520,
      17,
      17
    ]
  },
  {
    "intent": [
      "multiply",
      "a",
      "matrix",
      "var_0",
      "with",
      "a",
      "3d",
      "tensor",
      "var_1",
      "in",
      "scipy"
    ],
    "code": [
      "scipy",
      ".",
      "tensordot",
      "(",
      "var_0",
      ",",
      "var_1",
      ",",
      "axes",
      "=",
      "[",
      "1",
      ",",
      "1",
      "]",
      ")",
      ".",
      "swapaxes",
      "(",
      "0",
      ",",
      "1",
      ")"
    ],
    "slot_map": {
      "var_0": "P",
      "var_1": "T"
    },
    "intent_indx": [
      375,
      3,
      183,
      25,
      77,
      3,
      160,
      433,
      61,
      23,
      433
    ],
    "code_indx_copy": [
      534,
      22,
      520,
      1,
      34,
      8,
      92,
      8,
      520,
      19,
      12,
      15,
      8,
      15,
      16,
      17,
      22,
      520,
      1,
      43,
      8,
      15,
      17
    ],
    "code_indx_nocopy": [
      520,
      22,
      520,
      1,
      34,
      8,
      92,
      8,
      520,
      19,
      12,
      15,
      8,
      15,
      16,
      17,
      22,
      520,
      1,
      43,
      8,
      15,
      17
    ]
  },
  {
    "intent": [
      "create",
      "3d",
      "array",
      "of",
      "zero",
      "of",
      "size",
      "str_0"
    ],
    "code": [
      "numpy",
      ".",
      "zeros",
      "(",
      "(",
      "3",
      ",",
      "3",
      ",",
      "3",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": "(3,3,3)",
      "(str_0)": "(3,3,3)"
    },
    "intent_indx": [
      145,
      160,
      82,
      2,
      177,
      2,
      319,
      5
    ],
    "code_indx_copy": [
      149,
      22,
      508,
      1,
      1,
      54,
      8,
      54,
      8,
      54,
      17,
      17
    ],
    "code_indx_nocopy": [
      149,
      22,
      508,
      1,
      1,
      54,
      8,
      54,
      8,
      54,
      17,
      17
    ]
  },
  {
    "intent": [
      "cut",
      "off",
      "the",
      "last",
      "word",
      "of",
      "a",
      "sentence",
      "var_0"
    ],
    "code": [
      "\"\"\" \"\"\"",
      ".",
      "join",
      "(",
      "var_0",
      ".",
      "split",
      "(",
      "' '",
      ")",
      "[",
      ":",
      "-",
      "1",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": "content"
    },
    "intent_indx": [
      433,
      433,
      17,
      165,
      39,
      2,
      3,
      407,
      25
    ],
    "code_indx_copy": [
      217,
      22,
      23,
      1,
      34,
      22,
      71,
      1,
      109,
      17,
      12,
      13,
      14,
      15,
      16,
      17
    ],
    "code_indx_nocopy": [
      217,
      22,
      23,
      1,
      34,
      22,
      71,
      1,
      109,
      17,
      12,
      13,
      14,
      15,
      16,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "scalar",
      "var_0",
      "to",
      "array"
    ],
    "code": [
      "var_0",
      "=",
      "np",
      ".",
      "asarray",
      "(",
      "var_0",
      ")",
      ".",
      "reshape",
      "(",
      "1",
      ",",
      "-",
      "1",
      ")",
      "[",
      "(",
      "0",
      ")",
      ",",
      ":",
      "]"
    ],
    "slot_map": {
      "var_0": "x"
    },
    "intent_indx": [
      10,
      433,
      25,
      8,
      82
    ],
    "code_indx_copy": [
      34,
      19,
      74,
      22,
      520,
      1,
      34,
      17,
      22,
      361,
      1,
      15,
      8,
      14,
      15,
      17,
      12,
      1,
      43,
      17,
      8,
      13,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      74,
      22,
      520,
      1,
      34,
      17,
      22,
      361,
      1,
      15,
      8,
      14,
      15,
      17,
      12,
      1,
      43,
      17,
      8,
      13,
      16
    ]
  },
  {
    "intent": [
      "sum",
      "all",
      "element",
      "of",
      "nested",
      "list",
      "var_0"
    ],
    "code": [
      "sum",
      "(",
      "sum",
      "(",
      "i",
      ")",
      "if",
      "isinstance",
      "(",
      "i",
      ",",
      "list",
      ")",
      "else",
      "i",
      "for",
      "i",
      "in",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": "L"
    },
    "intent_indx": [
      111,
      36,
      1,
      2,
      151,
      4,
      25
    ],
    "code_indx_copy": [
      0,
      1,
      0,
      1,
      6,
      17,
      67,
      208,
      1,
      6,
      8,
      33,
      17,
      213,
      6,
      7,
      6,
      9,
      34,
      17
    ],
    "code_indx_nocopy": [
      0,
      1,
      0,
      1,
      6,
      17,
      67,
      208,
      1,
      6,
      8,
      33,
      17,
      213,
      6,
      7,
      6,
      9,
      34,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "hex",
      "string",
      "str_0",
      "to",
      "a",
      "float",
      "number"
    ],
    "code": [
      "struct",
      ".",
      "unpack",
      "(",
      "'!f'",
      ",",
      "'str_0'",
      ".",
      "decode",
      "(",
      "'hex'",
      ")",
      ")",
      "[",
      "0",
      "]"
    ],
    "slot_map": {
      "str_0": "470FC614"
    },
    "intent_indx": [
      10,
      115,
      13,
      5,
      8,
      3,
      92,
      74
    ],
    "code_indx_copy": [
      318,
      22,
      403,
      1,
      520,
      8,
      29,
      22,
      100,
      1,
      101,
      17,
      17,
      12,
      43,
      16
    ],
    "code_indx_nocopy": [
      318,
      22,
      403,
      1,
      520,
      8,
      29,
      22,
      100,
      1,
      101,
      17,
      17,
      12,
      43,
      16
    ]
  },
  {
    "intent": [
      "multiple",
      "each",
      "value",
      "by",
      "str_0",
      "for",
      "all",
      "key",
      "in",
      "a",
      "dictionary",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "update",
      "(",
      "(",
      "x",
      ",",
      "y",
      "*",
      "str_0",
      ")",
      "for",
      "x",
      ",",
      "y",
      "in",
      "list",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": "2",
      "var_0": "my_dict"
    },
    "intent_indx": [
      6,
      21,
      19,
      42,
      5,
      20,
      36,
      22,
      23,
      3,
      24,
      25
    ],
    "code_indx_copy": [
      34,
      22,
      69,
      1,
      1,
      26,
      8,
      104,
      3,
      11,
      17,
      7,
      26,
      8,
      104,
      9,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      69,
      1,
      1,
      26,
      8,
      104,
      3,
      11,
      17,
      7,
      26,
      8,
      104,
      9,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "running",
      "bash",
      "script",
      "str_0"
    ],
    "code": [
      "subprocess",
      ".",
      "call",
      "(",
      "'str_0'",
      ",",
      "shell",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "str_0": "sleep.sh"
    },
    "intent_indx": [
      433,
      348,
      236,
      5
    ],
    "code_indx_copy": [
      232,
      22,
      233,
      1,
      29,
      8,
      234,
      19,
      110,
      17
    ],
    "code_indx_nocopy": [
      232,
      22,
      233,
      1,
      29,
      8,
      234,
      19,
      110,
      17
    ]
  },
  {
    "intent": [
      "join",
      "element",
      "of",
      "list",
      "var_0",
      "with",
      "a",
      "comma",
      "str_0"
    ],
    "code": [
      "\"\"\"str_0\"\"\"",
      ".",
      "join",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": "l",
      "str_0": ","
    },
    "intent_indx": [
      272,
      1,
      2,
      4,
      25,
      77,
      3,
      250,
      5
    ],
    "code_indx_copy": [
      214,
      22,
      23,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      214,
      22,
      23,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "make",
      "a",
      "comma-separated",
      "string",
      "from",
      "a",
      "list",
      "var_0"
    ],
    "code": [
      "var_0",
      "=",
      "','",
      ".",
      "join",
      "(",
      "map",
      "(",
      "str",
      ",",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": "myList"
    },
    "intent_indx": [
      185,
      3,
      433,
      13,
      56,
      3,
      4,
      25
    ],
    "code_indx_copy": [
      34,
      19,
      73,
      22,
      23,
      1,
      24,
      1,
      25,
      8,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      73,
      22,
      23,
      1,
      24,
      1,
      25,
      8,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "reverse",
      "the",
      "list",
      "that",
      "contains",
      "1",
      "to",
      "10"
    ],
    "code": [
      "list",
      "(",
      "reversed",
      "(",
      "list",
      "(",
      "range",
      "(",
      "10",
      ")",
      ")",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      273,
      17,
      4,
      189,
      73,
      229,
      8,
      337
    ],
    "code_indx_copy": [
      33,
      1,
      249,
      1,
      33,
      1,
      105,
      1,
      4,
      17,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      33,
      1,
      249,
      1,
      33,
      1,
      105,
      1,
      4,
      17,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "substring",
      "str_0",
      "from",
      "a",
      "string",
      "str_1"
    ],
    "code": [
      "print",
      "(",
      "'str_1'",
      ".",
      "replace",
      "(",
      "'str_0'",
      ",",
      "''",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": "bag,",
      "str_1": "lamp, bag, mirror"
    },
    "intent_indx": [
      258,
      340,
      5,
      56,
      3,
      13,
      30
    ],
    "code_indx_copy": [
      49,
      1,
      63,
      22,
      108,
      1,
      29,
      8,
      21,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      63,
      22,
      108,
      1,
      29,
      8,
      21,
      17,
      17
    ]
  },
  {
    "intent": [
      "reverse",
      "the",
      "order",
      "of",
      "word",
      ",",
      "delimited",
      "by",
      "str_0",
      ",",
      "in",
      "string",
      "var_0"
    ],
    "code": [
      "\"\"\"str_0\"\"\"",
      "str_0",
      "join",
      "(",
      "var_0",
      "str_0",
      "split",
      "(",
      "'str_0'",
      ")",
      "[",
      ":",
      ":",
      "-",
      "1",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": ".",
      "var_0": "s"
    },
    "intent_indx": [
      273,
      17,
      158,
      2,
      39,
      60,
      433,
      42,
      5,
      60,
      23,
      13,
      25
    ],
    "code_indx_copy": [
      214,
      11,
      23,
      1,
      34,
      11,
      71,
      1,
      29,
      17,
      12,
      13,
      13,
      14,
      15,
      16,
      17
    ],
    "code_indx_nocopy": [
      214,
      11,
      23,
      1,
      34,
      11,
      71,
      1,
      29,
      17,
      12,
      13,
      13,
      14,
      15,
      16,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "epoch",
      "time",
      "represented",
      "a",
      "millisecond",
      "var_0",
      "to",
      "string",
      "using",
      "format",
      "str_0"
    ],
    "code": [
      "datetime",
      ".",
      "datetime",
      ".",
      "fromtimestamp",
      "(",
      "var_0",
      ")",
      ".",
      "strftime",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "var_0": "s",
      "str_0": "%Y-%m-%d %H:%M:%S.%f"
    },
    "intent_indx": [
      10,
      433,
      135,
      433,
      3,
      433,
      25,
      8,
      13,
      108,
      15,
      5
    ],
    "code_indx_copy": [
      27,
      22,
      27,
      22,
      520,
      1,
      34,
      17,
      22,
      65,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      27,
      22,
      27,
      22,
      520,
      1,
      34,
      17,
      22,
      65,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "parse",
      "millisecond",
      "epoch",
      "time",
      "str_0",
      "to",
      "format",
      "str_1"
    ],
    "code": [
      "time",
      ".",
      "strftime",
      "(",
      "'str_1'",
      ",",
      "time",
      ".",
      "gmtime",
      "(",
      "str_0",
      "/",
      "1000.0",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": "1236472051807",
      "str_1": "%Y-%m-%d %H:%M:%S"
    },
    "intent_indx": [
      71,
      433,
      433,
      135,
      5,
      8,
      15,
      30
    ],
    "code_indx_copy": [
      85,
      22,
      65,
      1,
      63,
      8,
      85,
      22,
      520,
      1,
      11,
      31,
      520,
      17,
      17
    ],
    "code_indx_nocopy": [
      85,
      22,
      65,
      1,
      63,
      8,
      85,
      22,
      520,
      1,
      11,
      31,
      520,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "date",
      "7",
      "day",
      "before",
      "the",
      "current",
      "date"
    ],
    "code": [
      "(",
      "datetime",
      ".",
      "datetime",
      ".",
      "now",
      "(",
      ")",
      "-",
      "datetime",
      ".",
      "timedelta",
      "(",
      "days",
      "=",
      "7",
      ")",
      ")",
      ".",
      "date",
      "(",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      16,
      17,
      134,
      325,
      342,
      271,
      17,
      174,
      134
    ],
    "code_indx_copy": [
      1,
      27,
      22,
      27,
      22,
      296,
      1,
      17,
      14,
      27,
      22,
      297,
      1,
      298,
      19,
      221,
      17,
      17,
      22,
      141,
      1,
      17
    ],
    "code_indx_nocopy": [
      1,
      27,
      22,
      27,
      22,
      296,
      1,
      17,
      14,
      27,
      22,
      297,
      1,
      298,
      19,
      221,
      17,
      17,
      22,
      141,
      1,
      17
    ]
  },
  {
    "intent": [
      "sum",
      "element",
      "at",
      "index",
      "var_0",
      "of",
      "each",
      "list",
      "in",
      "list",
      "var_1"
    ],
    "code": [
      "print",
      "(",
      "sum",
      "(",
      "row",
      "[",
      "var_0",
      "]",
      "for",
      "row",
      "in",
      "var_1",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": "column",
      "var_1": "data"
    },
    "intent_indx": [
      111,
      1,
      33,
      35,
      25,
      2,
      21,
      4,
      23,
      4,
      61
    ],
    "code_indx_copy": [
      49,
      1,
      0,
      1,
      265,
      12,
      34,
      16,
      7,
      265,
      9,
      92,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      0,
      1,
      265,
      12,
      34,
      16,
      7,
      265,
      9,
      92,
      17,
      17
    ]
  },
  {
    "intent": [
      "sum",
      "column",
      "of",
      "a",
      "list",
      "var_0"
    ],
    "code": [
      "[",
      "sum",
      "(",
      "row",
      "[",
      "i",
      "]",
      "for",
      "row",
      "in",
      "var_0",
      ")",
      "for",
      "i",
      "in",
      "range",
      "(",
      "len",
      "(",
      "var_0",
      "[",
      "0",
      "]",
      ")",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": "array"
    },
    "intent_indx": [
      111,
      59,
      2,
      3,
      4,
      25
    ],
    "code_indx_copy": [
      12,
      0,
      1,
      265,
      12,
      6,
      16,
      7,
      265,
      9,
      34,
      17,
      7,
      6,
      9,
      105,
      1,
      32,
      1,
      34,
      12,
      43,
      16,
      17,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      0,
      1,
      265,
      12,
      6,
      16,
      7,
      265,
      9,
      34,
      17,
      7,
      6,
      9,
      105,
      1,
      32,
      1,
      34,
      12,
      43,
      16,
      17,
      17,
      16
    ]
  },
  {
    "intent": [
      "encode",
      "binary",
      "string",
      "str_0",
      "to",
      "base64",
      "code"
    ],
    "code": [
      "base64",
      ".",
      "b64encode",
      "(",
      "bytes",
      "(",
      "'str_0'",
      ",",
      "'utf-8'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": "your string"
    },
    "intent_indx": [
      415,
      267,
      13,
      5,
      8,
      433,
      284
    ],
    "code_indx_copy": [
      529,
      22,
      520,
      1,
      520,
      1,
      29,
      8,
      145,
      17,
      17
    ],
    "code_indx_nocopy": [
      520,
      22,
      520,
      1,
      520,
      1,
      29,
      8,
      145,
      17,
      17
    ]
  },
  {
    "intent": [
      "combine",
      "list",
      "of",
      "dictionary",
      "var_0",
      "with",
      "the",
      "same",
      "key",
      "in",
      "each",
      "list",
      "to",
      "a",
      "single",
      "dictionary"
    ],
    "code": [
      "dict",
      "(",
      "(",
      "k",
      ",",
      "[",
      "d",
      "[",
      "k",
      "]",
      "for",
      "d",
      "in",
      "var_0",
      "]",
      ")",
      "for",
      "k",
      "in",
      "var_0",
      "[",
      "0",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": "dicts"
    },
    "intent_indx": [
      352,
      4,
      2,
      24,
      25,
      77,
      17,
      34,
      22,
      23,
      21,
      4,
      8,
      3,
      9,
      24
    ],
    "code_indx_copy": [
      70,
      1,
      1,
      90,
      8,
      12,
      2,
      12,
      90,
      16,
      7,
      2,
      9,
      34,
      16,
      17,
      7,
      90,
      9,
      34,
      12,
      43,
      16,
      17
    ],
    "code_indx_nocopy": [
      70,
      1,
      1,
      90,
      8,
      12,
      2,
      12,
      90,
      16,
      7,
      2,
      9,
      34,
      16,
      17,
      7,
      90,
      9,
      34,
      12,
      43,
      16,
      17
    ]
  },
  {
    "intent": [
      "merge",
      "a",
      "nested",
      "dictionary",
      "var_0",
      "into",
      "a",
      "flat",
      "dictionary",
      "by",
      "concatenating",
      "nested",
      "value",
      "with",
      "the",
      "same",
      "key",
      "var_1"
    ],
    "code": [
      "{",
      "var_1",
      ":",
      "[",
      "d",
      "[",
      "var_1",
      "]",
      "for",
      "d",
      "in",
      "var_0",
      "]",
      "for",
      "var_1",
      "in",
      "var_0",
      "[",
      "0",
      "]",
      "}"
    ],
    "slot_map": {
      "var_0": "dicts",
      "var_1": "k"
    },
    "intent_indx": [
      237,
      3,
      151,
      24,
      25,
      11,
      3,
      363,
      24,
      42,
      429,
      151,
      19,
      77,
      17,
      34,
      22,
      61
    ],
    "code_indx_copy": [
      52,
      92,
      13,
      12,
      2,
      12,
      92,
      16,
      7,
      2,
      9,
      34,
      16,
      7,
      92,
      9,
      34,
      12,
      43,
      16,
      53
    ],
    "code_indx_nocopy": [
      52,
      92,
      13,
      12,
      2,
      12,
      92,
      16,
      7,
      2,
      9,
      34,
      16,
      7,
      92,
      9,
      34,
      12,
      43,
      16,
      53
    ]
  },
  {
    "intent": [
      "how",
      "do",
      "i",
      "get",
      "the",
      "url",
      "parameter",
      "in",
      "a",
      "flask",
      "view"
    ],
    "code": [
      "request",
      ".",
      "args",
      "[",
      "'myParam'",
      "]"
    ],
    "slot_map": {},
    "intent_indx": [
      75,
      312,
      313,
      16,
      17,
      100,
      357,
      23,
      3,
      384,
      433
    ],
    "code_indx_copy": [
      236,
      22,
      313,
      12,
      520,
      16
    ],
    "code_indx_nocopy": [
      236,
      22,
      313,
      12,
      520,
      16
    ]
  },
  {
    "intent": [
      "identify",
      "duplicate",
      "value",
      "in",
      "list",
      "var_0"
    ],
    "code": [
      "[",
      "k",
      "for",
      "k",
      ",",
      "v",
      "in",
      "list",
      "(",
      "Counter",
      "(",
      "var_0",
      ")",
      ".",
      "items",
      "(",
      ")",
      ")",
      "if",
      "v",
      ">",
      "1",
      "]"
    ],
    "slot_map": {
      "var_0": "mylist"
    },
    "intent_indx": [
      433,
      321,
      19,
      23,
      4,
      25
    ],
    "code_indx_copy": [
      12,
      90,
      7,
      90,
      8,
      91,
      9,
      33,
      1,
      496,
      1,
      34,
      17,
      22,
      35,
      1,
      17,
      17,
      67,
      91,
      216,
      15,
      16
    ],
    "code_indx_nocopy": [
      12,
      90,
      7,
      90,
      8,
      91,
      9,
      33,
      1,
      496,
      1,
      34,
      17,
      22,
      35,
      1,
      17,
      17,
      67,
      91,
      216,
      15,
      16
    ]
  },
  {
    "intent": [
      "insert",
      "directory",
      "str_0",
      "into",
      "directory",
      "var_0"
    ],
    "code": [
      "sys",
      ".",
      "path",
      ".",
      "insert",
      "(",
      "1",
      ",",
      "os",
      ".",
      "path",
      ".",
      "join",
      "(",
      "os",
      ".",
      "path",
      ".",
      "dirname",
      "(",
      "var_0",
      ")",
      ",",
      "'str_0'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": "apps",
      "var_0": "__file__"
    },
    "intent_indx": [
      268,
      170,
      5,
      11,
      170,
      25
    ],
    "code_indx_copy": [
      155,
      22,
      115,
      22,
      320,
      1,
      15,
      8,
      114,
      22,
      115,
      22,
      23,
      1,
      114,
      22,
      115,
      22,
      378,
      1,
      34,
      17,
      8,
      29,
      17,
      17
    ],
    "code_indx_nocopy": [
      155,
      22,
      115,
      22,
      320,
      1,
      15,
      8,
      114,
      22,
      115,
      22,
      23,
      1,
      114,
      22,
      115,
      22,
      378,
      1,
      34,
      17,
      8,
      29,
      17,
      17
    ]
  },
  {
    "intent": [
      "modify",
      "sys.path",
      "for",
      "python",
      "module",
      "var_0"
    ],
    "code": [
      "sys",
      ".",
      "path",
      ".",
      "append",
      "(",
      "os",
      ".",
      "path",
      ".",
      "join",
      "(",
      "os",
      ".",
      "path",
      ".",
      "dirname",
      "(",
      "__file__",
      ")",
      ",",
      "'var_0'",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": "subdir"
    },
    "intent_indx": [
      433,
      433,
      20,
      47,
      327,
      25
    ],
    "code_indx_copy": [
      155,
      22,
      115,
      22,
      148,
      1,
      114,
      22,
      115,
      22,
      23,
      1,
      114,
      22,
      115,
      22,
      378,
      1,
      382,
      17,
      8,
      56,
      17,
      17
    ],
    "code_indx_nocopy": [
      155,
      22,
      115,
      22,
      148,
      1,
      114,
      22,
      115,
      22,
      23,
      1,
      114,
      22,
      115,
      22,
      378,
      1,
      382,
      17,
      8,
      56,
      17,
      17
    ]
  },
  {
    "intent": [
      "insert",
      "a",
      "str_0",
      "value",
      "into",
      "a",
      "sqlite3",
      "table",
      "."
    ],
    "code": [
      "db",
      ".",
      "execute",
      "(",
      "\"INSERT INTO present VALUES('test2', ?, 10)\"",
      ",",
      "(",
      "str_0",
      ",",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": "None"
    },
    "intent_indx": [
      268,
      3,
      5,
      19,
      11,
      3,
      433,
      369,
      155
    ],
    "code_indx_copy": [
      255,
      22,
      408,
      1,
      520,
      8,
      1,
      11,
      8,
      17,
      17
    ],
    "code_indx_nocopy": [
      255,
      22,
      408,
      1,
      520,
      8,
      1,
      11,
      8,
      17,
      17
    ]
  },
  {
    "intent": [
      "flatten",
      "list",
      "var_0"
    ],
    "code": [
      "[",
      "image",
      "for",
      "menuitem",
      "in",
      "var_0",
      "for",
      "image",
      "in",
      "menuitem",
      "]"
    ],
    "slot_map": {
      "var_0": "list_of_menuitems"
    },
    "intent_indx": [
      433,
      4,
      25
    ],
    "code_indx_copy": [
      12,
      520,
      7,
      520,
      9,
      34,
      7,
      520,
      9,
      520,
      16
    ],
    "code_indx_nocopy": [
      12,
      520,
      7,
      520,
      9,
      34,
      7,
      520,
      9,
      520,
      16
    ]
  },
  {
    "intent": [
      "append",
      "element",
      "of",
      "a",
      "set",
      "var_0",
      "to",
      "a",
      "list",
      "var_1"
    ],
    "code": [
      "var_1",
      ".",
      "extend",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": "b",
      "var_1": "a"
    },
    "intent_indx": [
      110,
      1,
      2,
      3,
      57,
      25,
      8,
      3,
      4,
      61
    ],
    "code_indx_copy": [
      92,
      22,
      520,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      92,
      22,
      520,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "append",
      "element",
      "of",
      "a",
      "set",
      "to",
      "a",
      "list",
      "in",
      "python"
    ],
    "code": [
      "a",
      ".",
      "extend",
      "(",
      "list",
      "(",
      "b",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      110,
      1,
      2,
      3,
      57,
      8,
      3,
      4,
      23,
      47
    ],
    "code_indx_copy": [
      96,
      22,
      520,
      1,
      33,
      1,
      98,
      17,
      17
    ],
    "code_indx_nocopy": [
      96,
      22,
      520,
      1,
      33,
      1,
      98,
      17,
      17
    ]
  },
  {
    "intent": [
      "write",
      "the",
      "data",
      "of",
      "dataframe",
      "var_0",
      "into",
      "text",
      "file",
      "str_0"
    ],
    "code": [
      "np",
      ".",
      "savetxt",
      "(",
      "'c:\\\\data\\\\np.txt'",
      ",",
      "var_0",
      ".",
      "values",
      ",",
      "fmt",
      "=",
      "'%d'",
      ")"
    ],
    "slot_map": {
      "var_0": "df",
      "str_0": "np.txt"
    },
    "intent_indx": [
      163,
      17,
      63,
      2,
      41,
      25,
      11,
      257,
      126,
      5
    ],
    "code_indx_copy": [
      74,
      22,
      520,
      1,
      520,
      8,
      34,
      22,
      168,
      8,
      520,
      19,
      520,
      17
    ],
    "code_indx_nocopy": [
      74,
      22,
      520,
      1,
      520,
      8,
      34,
      22,
      168,
      8,
      520,
      19,
      520,
      17
    ]
  },
  {
    "intent": [
      "write",
      "content",
      "of",
      "dataframe",
      "var_0",
      "into",
      "text",
      "file",
      "str_0"
    ],
    "code": [
      "var_0",
      ".",
      "to_csv",
      "(",
      "'c:\\\\data\\\\pandas.txt'",
      ",",
      "header",
      "=",
      "None",
      ",",
      "index",
      "=",
      "None",
      ",",
      "sep",
      "=",
      "' '",
      ",",
      "mode",
      "=",
      "'a'",
      "\n",
      ")"
    ],
    "slot_map": {
      "var_0": "df",
      "str_0": "c:\\\\data\\\\pandas.txt"
    },
    "intent_indx": [
      163,
      125,
      2,
      41,
      25,
      11,
      257,
      126,
      5
    ],
    "code_indx_copy": [
      34,
      22,
      230,
      1,
      520,
      8,
      520,
      19,
      211,
      8,
      162,
      19,
      211,
      8,
      267,
      19,
      109,
      8,
      520,
      19,
      410,
      163,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      230,
      1,
      520,
      8,
      520,
      19,
      211,
      8,
      162,
      19,
      211,
      8,
      267,
      19,
      109,
      8,
      520,
      19,
      410,
      163,
      17
    ]
  },
  {
    "intent": [
      "split",
      "a",
      "string",
      "var_0",
      "by",
      "last",
      "occurrence",
      "of",
      "character",
      "str_0"
    ],
    "code": [
      "print",
      "(",
      "var_0",
      ".",
      "rpartition",
      "(",
      "'str_0'",
      ")",
      "[",
      "0",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": "x",
      "str_0": "-"
    },
    "intent_indx": [
      139,
      3,
      13,
      25,
      42,
      165,
      50,
      2,
      96,
      5
    ],
    "code_indx_copy": [
      49,
      1,
      34,
      22,
      520,
      1,
      29,
      17,
      12,
      43,
      16,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      34,
      22,
      520,
      1,
      29,
      17,
      12,
      43,
      16,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "last",
      "part",
      "of",
      "a",
      "string",
      "before",
      "the",
      "character",
      "str_0"
    ],
    "code": [
      "print",
      "(",
      "x",
      ".",
      "rsplit",
      "(",
      "'str_0'",
      ",",
      "1",
      ")",
      "[",
      "0",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": "-"
    },
    "intent_indx": [
      16,
      17,
      165,
      433,
      2,
      3,
      13,
      271,
      17,
      96,
      5
    ],
    "code_indx_copy": [
      49,
      1,
      26,
      22,
      271,
      1,
      29,
      8,
      15,
      17,
      12,
      43,
      16,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      26,
      22,
      271,
      1,
      29,
      8,
      15,
      17,
      12,
      43,
      16,
      17
    ]
  },
  {
    "intent": [
      "upload",
      "file",
      "using",
      "ftp"
    ],
    "code": [
      "ftp",
      ".",
      "storlines",
      "(",
      "'STOR '",
      "+",
      "filename",
      ",",
      "open",
      "(",
      "filename",
      ",",
      "'r'",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      433,
      126,
      108,
      433
    ],
    "code_indx_copy": [
      527,
      22,
      520,
      1,
      520,
      97,
      399,
      8,
      106,
      1,
      399,
      8,
      365,
      17,
      17
    ],
    "code_indx_nocopy": [
      520,
      22,
      520,
      1,
      520,
      97,
      399,
      8,
      106,
      1,
      399,
      8,
      365,
      17,
      17
    ]
  },
  {
    "intent": [
      "add",
      "one",
      "to",
      "the",
      "hidden",
      "web",
      "element",
      "with",
      "id",
      "str_0",
      "with",
      "selenium",
      "python",
      "script"
    ],
    "code": [
      "browser",
      ".",
      "execute_script",
      "(",
      "\"document.getElementById('XYZ').value+='1'\"",
      ")"
    ],
    "slot_map": {
      "str_0": "XYZ"
    },
    "intent_indx": [
      58,
      293,
      8,
      17,
      433,
      433,
      1,
      77,
      220,
      5,
      77,
      48,
      47,
      236
    ],
    "code_indx_copy": [
      362,
      22,
      520,
      1,
      520,
      17
    ],
    "code_indx_nocopy": [
      362,
      22,
      520,
      1,
      520,
      17
    ]
  },
  {
    "intent": [
      "create",
      "array",
      "containing",
      "the",
      "maximum",
      "value",
      "of",
      "respective",
      "element",
      "of",
      "array",
      "str_0",
      "and",
      "array",
      "str_1"
    ],
    "code": [
      "np",
      ".",
      "maximum",
      "(",
      "[",
      "str_0",
      "]",
      ",",
      "[",
      "str_1",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": "[2, 3, 4]",
      "str_1": "[1, 5, 2]",
      "[str_0]": "[2, 3, 4]",
      "[str_1]": "[1, 5, 2]"
    },
    "intent_indx": [
      145,
      82,
      32,
      17,
      219,
      19,
      2,
      341,
      1,
      2,
      82,
      5,
      29,
      82,
      30
    ],
    "code_indx_copy": [
      74,
      22,
      528,
      1,
      12,
      11,
      16,
      8,
      12,
      37,
      16,
      17
    ],
    "code_indx_nocopy": [
      74,
      22,
      520,
      1,
      12,
      11,
      16,
      8,
      12,
      37,
      16,
      17
    ]
  },
  {
    "intent": [
      "print",
      "a",
      "list",
      "var_0",
      "and",
      "move",
      "first",
      "3",
      "element",
      "to",
      "the",
      "end",
      "of",
      "the",
      "list"
    ],
    "code": [
      "print",
      "(",
      "var_0",
      "[",
      "3",
      ":",
      "]",
      "+",
      "var_0",
      "[",
      ":",
      "3",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": "l"
    },
    "intent_indx": [
      161,
      3,
      4,
      25,
      29,
      164,
      148,
      55,
      1,
      8,
      17,
      168,
      2,
      17,
      4
    ],
    "code_indx_copy": [
      49,
      1,
      34,
      12,
      54,
      13,
      16,
      97,
      34,
      12,
      13,
      54,
      16,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      34,
      12,
      54,
      13,
      16,
      97,
      34,
      12,
      13,
      54,
      16,
      17
    ]
  },
  {
    "intent": [
      "loop",
      "over",
      "file",
      "in",
      "directory",
      "str_0"
    ],
    "code": [
      "for",
      "fn",
      "in",
      "os",
      "str_0",
      "listdir",
      "(",
      "'str_0'",
      ")",
      ":",
      "\n",
      "    ",
      "if",
      "os",
      "str_0",
      "path",
      "str_0",
      "isfile",
      "(",
      "fn",
      ")",
      ":",
      "\n",
      "        ",
      "pass",
      "",
      ""
    ],
    "slot_map": {
      "str_0": "."
    },
    "intent_indx": [
      433,
      387,
      126,
      23,
      170,
      5
    ],
    "code_indx_copy": [
      7,
      520,
      9,
      114,
      11,
      200,
      1,
      29,
      17,
      13,
      163,
      218,
      67,
      114,
      11,
      115,
      11,
      470,
      1,
      520,
      17,
      13,
      163,
      368,
      219,
      220,
      220
    ],
    "code_indx_nocopy": [
      7,
      520,
      9,
      114,
      11,
      200,
      1,
      29,
      17,
      13,
      163,
      218,
      67,
      114,
      11,
      115,
      11,
      470,
      1,
      520,
      17,
      13,
      163,
      368,
      219,
      220,
      220
    ]
  },
  {
    "intent": [
      "loop",
      "over",
      "file",
      "in",
      "directory",
      "var_0"
    ],
    "code": [
      "for",
      "root",
      ",",
      "dirs",
      ",",
      "filenames",
      "in",
      "os",
      ".",
      "walk",
      "(",
      "var_0",
      ")",
      ":",
      "\n",
      "    ",
      "for",
      "f",
      "in",
      "filenames",
      ":",
      "\n",
      "        ",
      "pass",
      "",
      ""
    ],
    "slot_map": {
      "var_0": "source"
    },
    "intent_indx": [
      433,
      387,
      126,
      23,
      170,
      25
    ],
    "code_indx_copy": [
      7,
      176,
      8,
      520,
      8,
      472,
      9,
      114,
      22,
      473,
      1,
      34,
      17,
      13,
      163,
      218,
      7,
      192,
      9,
      472,
      13,
      163,
      368,
      219,
      220,
      220
    ],
    "code_indx_nocopy": [
      7,
      176,
      8,
      520,
      8,
      472,
      9,
      114,
      22,
      473,
      1,
      34,
      17,
      13,
      163,
      218,
      7,
      192,
      9,
      472,
      13,
      163,
      368,
      219,
      220,
      220
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "random",
      "list",
      "of",
      "integer"
    ],
    "code": [
      "[",
      "int",
      "(",
      "1000",
      "*",
      "random",
      ".",
      "random",
      "(",
      ")",
      ")",
      "for",
      "i",
      "in",
      "range",
      "(",
      "10000",
      ")",
      "]"
    ],
    "slot_map": {},
    "intent_indx": [
      145,
      3,
      184,
      4,
      2,
      7
    ],
    "code_indx_copy": [
      12,
      20,
      1,
      520,
      3,
      150,
      22,
      150,
      1,
      17,
      17,
      7,
      6,
      9,
      105,
      1,
      520,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      20,
      1,
      520,
      3,
      150,
      22,
      150,
      1,
      17,
      17,
      7,
      6,
      9,
      105,
      1,
      520,
      17,
      16
    ]
  },
  {
    "intent": [
      "using",
      "%",
      "f",
      "with",
      "strftime",
      "(",
      ")",
      "in",
      "python",
      "to",
      "get",
      "microsecond"
    ],
    "code": [
      "datetime",
      ".",
      "datetime",
      ".",
      "now",
      "(",
      ")",
      ".",
      "strftime",
      "(",
      "'%H:%M:%S.%f'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      108,
      433,
      433,
      77,
      433,
      203,
      26,
      23,
      47,
      8,
      16,
      433
    ],
    "code_indx_copy": [
      27,
      22,
      27,
      22,
      296,
      1,
      17,
      22,
      65,
      1,
      520,
      17
    ],
    "code_indx_nocopy": [
      27,
      22,
      27,
      22,
      296,
      1,
      17,
      22,
      65,
      1,
      520,
      17
    ]
  },
  {
    "intent": [
      "google",
      "app",
      "engine",
      "execute",
      "gql",
      "query",
      "str_0",
      "with",
      "parameter",
      "str_1"
    ],
    "code": [
      "db",
      ".",
      "GqlQuery",
      "(",
      "'str_0'",
      ",",
      "foo",
      ".",
      "key",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": "SELECT * FROM Schedule WHERE station = $1",
      "str_1": "foo.key()"
    },
    "intent_indx": [
      433,
      433,
      433,
      136,
      433,
      266,
      5,
      77,
      357,
      30
    ],
    "code_indx_copy": [
      255,
      22,
      520,
      1,
      29,
      8,
      520,
      22,
      103,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      255,
      22,
      520,
      1,
      29,
      8,
      520,
      22,
      103,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "filter",
      "row",
      "in",
      "panda",
      "starting",
      "with",
      "alphabet",
      "str_0",
      "using",
      "regular",
      "expression",
      "."
    ],
    "code": [
      "df",
      ".",
      "b",
      ".",
      "str",
      ".",
      "contains",
      "(",
      "'^f'",
      ")"
    ],
    "slot_map": {
      "str_0": "f"
    },
    "intent_indx": [
      209,
      43,
      23,
      40,
      304,
      77,
      433,
      5,
      108,
      240,
      218,
      155
    ],
    "code_indx_copy": [
      151,
      22,
      98,
      22,
      25,
      22,
      520,
      1,
      520,
      17
    ],
    "code_indx_nocopy": [
      151,
      22,
      98,
      22,
      25,
      22,
      520,
      1,
      520,
      17
    ]
  },
  {
    "intent": [
      "print",
      "a",
      "2",
      "dimensional",
      "list",
      "var_0",
      "a",
      "a",
      "table",
      "with",
      "delimiters"
    ],
    "code": [
      "print",
      "(",
      "'\\n'",
      ".",
      "join",
      "(",
      "'\\t'",
      ".",
      "join",
      "(",
      "str",
      "(",
      "col",
      ")",
      "for",
      "col",
      "in",
      "row",
      ")",
      "for",
      "row",
      "in",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": "tab"
    },
    "intent_indx": [
      161,
      3,
      79,
      80,
      4,
      25,
      3,
      3,
      369,
      77,
      433
    ],
    "code_indx_copy": [
      49,
      1,
      135,
      22,
      23,
      1,
      268,
      22,
      23,
      1,
      25,
      1,
      520,
      17,
      7,
      520,
      9,
      265,
      17,
      7,
      265,
      9,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      135,
      22,
      23,
      1,
      268,
      22,
      23,
      1,
      25,
      1,
      520,
      17,
      7,
      520,
      9,
      265,
      17,
      7,
      265,
      9,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "panda",
      ":",
      "delete",
      "row",
      "in",
      "dataframe",
      "var_0",
      "based",
      "on",
      "multiple",
      "column",
      "value"
    ],
    "code": [
      "var_0",
      ".",
      "set_index",
      "(",
      "list",
      "(",
      "'BC'",
      ")",
      ")",
      ".",
      "drop",
      "(",
      "tuples",
      ",",
      "errors",
      "=",
      "'ignore'",
      ")",
      ".",
      "reset_index",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": "df"
    },
    "intent_indx": [
      40,
      128,
      83,
      43,
      23,
      41,
      25,
      199,
      140,
      6,
      59,
      19
    ],
    "code_indx_copy": [
      34,
      22,
      205,
      1,
      33,
      1,
      520,
      17,
      17,
      22,
      189,
      1,
      520,
      8,
      520,
      19,
      146,
      17,
      22,
      188,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      205,
      1,
      33,
      1,
      520,
      17,
      17,
      22,
      189,
      1,
      520,
      8,
      520,
      19,
      146,
      17,
      22,
      188,
      1,
      17
    ]
  },
  {
    "intent": [
      "format",
      "the",
      "variable",
      "str_0",
      "and",
      "str_1",
      "using",
      "string",
      "formatting"
    ],
    "code": [
      "\"\"\"({:d} goals, ${:d})\"\"\"",
      ".",
      "format",
      "(",
      "self",
      ".",
      "goals",
      ",",
      "self",
      ".",
      "penalties",
      ")"
    ],
    "slot_map": {
      "str_0": "self.goals",
      "str_1": "self.penalties"
    },
    "intent_indx": [
      15,
      17,
      94,
      5,
      29,
      30,
      108,
      13,
      162
    ],
    "code_indx_copy": [
      520,
      22,
      38,
      1,
      312,
      22,
      520,
      8,
      312,
      22,
      520,
      17
    ],
    "code_indx_nocopy": [
      520,
      22,
      38,
      1,
      312,
      22,
      520,
      8,
      312,
      22,
      520,
      17
    ]
  },
  {
    "intent": [
      "format",
      "string",
      "str_0",
      "with",
      "variable",
      "var_0",
      "and",
      "var_1"
    ],
    "code": [
      "\"\"\"str_0\"\"\"",
      ".",
      "format",
      "(",
      "self",
      ".",
      "var_0",
      ",",
      "self",
      ".",
      "var_1",
      ")"
    ],
    "slot_map": {
      "str_0": "({} goals, ${})",
      "var_0": "goals",
      "var_1": "penalties",
      "(str_0)": "({} goals, ${})"
    },
    "intent_indx": [
      15,
      13,
      5,
      77,
      94,
      25,
      29,
      61
    ],
    "code_indx_copy": [
      214,
      22,
      38,
      1,
      312,
      22,
      34,
      8,
      312,
      22,
      92,
      17
    ],
    "code_indx_nocopy": [
      214,
      22,
      38,
      1,
      312,
      22,
      34,
      8,
      312,
      22,
      92,
      17
    ]
  },
  {
    "intent": [
      "format",
      "string",
      "str_0"
    ],
    "code": [
      "\"\"\"str_0\"\"\"",
      ".",
      "format",
      "(",
      "self",
      ")"
    ],
    "slot_map": {
      "str_0": "({0.goals} goals, ${0.penalties})",
      "(str_0)": "({0.goals} goals, ${0.penalties})"
    },
    "intent_indx": [
      15,
      13,
      5
    ],
    "code_indx_copy": [
      214,
      22,
      38,
      1,
      312,
      17
    ],
    "code_indx_nocopy": [
      214,
      22,
      38,
      1,
      312,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "list",
      "of",
      "list",
      "var_0",
      "to",
      "list",
      "of",
      "integer"
    ],
    "code": [
      "[",
      "int",
      "(",
      "''",
      ".",
      "join",
      "(",
      "str",
      "(",
      "d",
      ")",
      "for",
      "d",
      "in",
      "x",
      ")",
      ")",
      "for",
      "x",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": "L"
    },
    "intent_indx": [
      10,
      4,
      2,
      4,
      25,
      8,
      4,
      2,
      7
    ],
    "code_indx_copy": [
      12,
      20,
      1,
      21,
      22,
      23,
      1,
      25,
      1,
      2,
      17,
      7,
      2,
      9,
      26,
      17,
      17,
      7,
      26,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      12,
      20,
      1,
      21,
      22,
      23,
      1,
      25,
      1,
      2,
      17,
      7,
      2,
      9,
      26,
      17,
      17,
      7,
      26,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "combine",
      "element",
      "of",
      "each",
      "list",
      "in",
      "list",
      "var_0",
      "into",
      "digit",
      "of",
      "a",
      "single",
      "integer"
    ],
    "code": [
      "[",
      "''",
      ".",
      "join",
      "(",
      "str",
      "(",
      "d",
      ")",
      "for",
      "d",
      "in",
      "x",
      ")",
      "for",
      "x",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": "L"
    },
    "intent_indx": [
      352,
      1,
      2,
      21,
      4,
      23,
      4,
      25,
      11,
      194,
      2,
      3,
      9,
      7
    ],
    "code_indx_copy": [
      12,
      21,
      22,
      23,
      1,
      25,
      1,
      2,
      17,
      7,
      2,
      9,
      26,
      17,
      7,
      26,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      12,
      21,
      22,
      23,
      1,
      25,
      1,
      2,
      17,
      7,
      2,
      9,
      26,
      17,
      7,
      26,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "list",
      "of",
      "list",
      "var_0",
      "to",
      "list",
      "of",
      "integer"
    ],
    "code": [
      "var_0",
      "=",
      "[",
      "int",
      "(",
      "''",
      ".",
      "join",
      "(",
      "[",
      "str",
      "(",
      "y",
      ")",
      "for",
      "y",
      "in",
      "x",
      "]",
      ")",
      ")",
      "for",
      "x",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": "L"
    },
    "intent_indx": [
      10,
      3,
      4,
      2,
      4,
      25,
      8,
      4,
      2,
      7
    ],
    "code_indx_copy": [
      34,
      19,
      12,
      20,
      1,
      21,
      22,
      23,
      1,
      12,
      25,
      1,
      104,
      17,
      7,
      104,
      9,
      26,
      16,
      17,
      17,
      7,
      26,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      12,
      20,
      1,
      21,
      22,
      23,
      1,
      12,
      25,
      1,
      104,
      17,
      7,
      104,
      9,
      26,
      16,
      17,
      17,
      7,
      26,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "write",
      "the",
      "element",
      "of",
      "list",
      "var_0",
      "concatenated",
      "by",
      "special",
      "character",
      "str_0",
      "to",
      "file",
      "var_1"
    ],
    "code": [
      "var_1",
      ".",
      "write",
      "(",
      "'\\n'",
      ".",
      "join",
      "(",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": "lines",
      "str_0": "\\n",
      "var_1": "myfile"
    },
    "intent_indx": [
      163,
      17,
      1,
      2,
      4,
      25,
      433,
      42,
      433,
      96,
      5,
      8,
      126,
      61
    ],
    "code_indx_copy": [
      92,
      22,
      133,
      1,
      135,
      22,
      23,
      1,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      92,
      22,
      133,
      1,
      135,
      22,
      23,
      1,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "removing",
      "an",
      "element",
      "from",
      "a",
      "list",
      "based",
      "on",
      "a",
      "predicate",
      "str_0",
      "or",
      "str_1"
    ],
    "code": [
      "[",
      "x",
      "for",
      "x",
      "in",
      "[",
      "'AAT'",
      ",",
      "'XAC'",
      ",",
      "'ANT'",
      ",",
      "'TTA'",
      "]",
      "if",
      "'str_0'",
      "not",
      "in",
      "x",
      "and",
      "'str_1'",
      "not",
      "in",
      "\n",
      "x",
      "]"
    ],
    "slot_map": {
      "str_0": "X",
      "str_1": "N"
    },
    "intent_indx": [
      97,
      217,
      1,
      56,
      3,
      4,
      199,
      140,
      3,
      433,
      5,
      330,
      30
    ],
    "code_indx_copy": [
      12,
      26,
      7,
      26,
      9,
      12,
      520,
      8,
      520,
      8,
      520,
      8,
      520,
      16,
      67,
      29,
      283,
      9,
      26,
      454,
      63,
      283,
      9,
      163,
      26,
      16
    ],
    "code_indx_nocopy": [
      12,
      26,
      7,
      26,
      9,
      12,
      520,
      8,
      520,
      8,
      520,
      8,
      520,
      16,
      67,
      29,
      283,
      9,
      26,
      454,
      63,
      283,
      9,
      163,
      26,
      16
    ]
  },
  {
    "intent": [
      "remove",
      "duplicate",
      "word",
      "from",
      "a",
      "string",
      "var_0",
      "using",
      "regex"
    ],
    "code": [
      "var_0",
      "=",
      "re",
      ".",
      "sub",
      "(",
      "'\\\\b(\\\\w+)( \\\\1\\\\b)+'",
      ",",
      "'\\\\1'",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": "text"
    },
    "intent_indx": [
      258,
      321,
      39,
      56,
      3,
      13,
      25,
      108,
      38
    ],
    "code_indx_copy": [
      34,
      19,
      39,
      22,
      40,
      1,
      520,
      8,
      41,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      39,
      22,
      40,
      1,
      520,
      8,
      41,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "count",
      "non",
      "zero",
      "value",
      "in",
      "each",
      "column",
      "in",
      "panda",
      "data",
      "frame"
    ],
    "code": [
      "df",
      ".",
      "astype",
      "(",
      "bool",
      ")",
      ".",
      "sum",
      "(",
      "axis",
      "=",
      "1",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      173,
      433,
      177,
      19,
      23,
      21,
      59,
      23,
      40,
      63,
      64
    ],
    "code_indx_copy": [
      151,
      22,
      245,
      1,
      453,
      17,
      22,
      0,
      1,
      42,
      19,
      15,
      17
    ],
    "code_indx_nocopy": [
      151,
      22,
      245,
      1,
      453,
      17,
      22,
      0,
      1,
      42,
      19,
      15,
      17
    ]
  },
  {
    "intent": [
      "search",
      "for",
      "string",
      "that",
      "match",
      "regular",
      "expression",
      "pattern",
      "str_0",
      "in",
      "string",
      "str_1"
    ],
    "code": [
      "re",
      ".",
      "search",
      "(",
      "'(?<!Distillr)\\\\\\\\AcroTray\\\\.exe'",
      ",",
      "'C:\\\\SomeDir\\\\AcroTray.exe'",
      ")"
    ],
    "slot_map": {
      "str_0": "(?<!Distillr)\\\\\\\\AcroTray\\\\.exe",
      "str_1": "C:\\\\SomeDir\\\\AcroTray.exe"
    },
    "intent_indx": [
      69,
      20,
      13,
      189,
      106,
      240,
      218,
      51,
      5,
      23,
      13,
      30
    ],
    "code_indx_copy": [
      39,
      22,
      94,
      1,
      520,
      8,
      520,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      94,
      1,
      520,
      8,
      520,
      17
    ]
  },
  {
    "intent": [
      "split",
      "string",
      "str_0",
      "into",
      "a",
      "list",
      "on",
      "white",
      "space"
    ],
    "code": [
      "\"\"\"str_0\"\"\"",
      ".",
      "split",
      "(",
      ")"
    ],
    "slot_map": {
      "str_0": "QH QD JC KD JS"
    },
    "intent_indx": [
      139,
      13,
      5,
      11,
      3,
      4,
      140,
      132,
      133
    ],
    "code_indx_copy": [
      214,
      22,
      71,
      1,
      17
    ],
    "code_indx_nocopy": [
      214,
      22,
      71,
      1,
      17
    ]
  },
  {
    "intent": [
      "search",
      "for",
      "occurrence",
      "of",
      "regex",
      "pattern",
      "str_0",
      "in",
      "xml",
      "string",
      "var_0"
    ],
    "code": [
      "print",
      "(",
      "re",
      ".",
      "search",
      "(",
      "'str_0'",
      ",",
      "var_0",
      ")",
      ".",
      "group",
      "(",
      "0",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": ">.*<",
      "var_0": "line"
    },
    "intent_indx": [
      69,
      20,
      50,
      2,
      38,
      51,
      5,
      23,
      433,
      13,
      25
    ],
    "code_indx_copy": [
      49,
      1,
      39,
      22,
      94,
      1,
      29,
      8,
      34,
      17,
      22,
      121,
      1,
      43,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      39,
      22,
      94,
      1,
      29,
      8,
      34,
      17,
      22,
      121,
      1,
      43,
      17,
      17
    ]
  },
  {
    "intent": [
      "erase",
      "all",
      "the",
      "content",
      "of",
      "a",
      "file",
      "var_0"
    ],
    "code": [
      "open",
      "(",
      "var_0",
      ",",
      "'w'",
      ")",
      ".",
      "close",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": "filename"
    },
    "intent_indx": [
      433,
      36,
      17,
      125,
      2,
      3,
      126,
      25
    ],
    "code_indx_copy": [
      106,
      1,
      34,
      8,
      493,
      17,
      22,
      502,
      1,
      17
    ],
    "code_indx_nocopy": [
      106,
      1,
      34,
      8,
      493,
      17,
      22,
      502,
      1,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "string",
      "into",
      "datetime",
      "using",
      "the",
      "format",
      "str_0"
    ],
    "code": [
      "datetime",
      ".",
      "datetime",
      ".",
      "strptime",
      "(",
      "string_date",
      ",",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": "%Y-%m-%d %H:%M:%S.%f"
    },
    "intent_indx": [
      10,
      3,
      13,
      11,
      12,
      108,
      17,
      15,
      5
    ],
    "code_indx_copy": [
      27,
      22,
      27,
      22,
      28,
      1,
      520,
      8,
      29,
      17
    ],
    "code_indx_nocopy": [
      27,
      22,
      27,
      22,
      28,
      1,
      520,
      8,
      29,
      17
    ]
  },
  {
    "intent": [
      "find",
      "the",
      "index",
      "of",
      "a",
      "list",
      "with",
      "the",
      "first",
      "element",
      "equal",
      "to",
      "str_0",
      "within",
      "the",
      "list",
      "of",
      "list",
      "var_0"
    ],
    "code": [
      "[",
      "index",
      "for",
      "index",
      ",",
      "item",
      "in",
      "enumerate",
      "(",
      "var_0",
      ")",
      "if",
      "item",
      "[",
      "0",
      "]",
      "==",
      "'str_0'",
      "]"
    ],
    "slot_map": {
      "str_0": "332",
      "var_0": "thelist"
    },
    "intent_indx": [
      45,
      17,
      35,
      2,
      3,
      4,
      77,
      17,
      148,
      1,
      104,
      8,
      5,
      52,
      17,
      4,
      2,
      4,
      25
    ],
    "code_indx_copy": [
      12,
      162,
      7,
      162,
      8,
      386,
      9,
      10,
      1,
      34,
      17,
      67,
      386,
      12,
      43,
      16,
      76,
      29,
      16
    ],
    "code_indx_nocopy": [
      12,
      162,
      7,
      162,
      8,
      386,
      9,
      10,
      1,
      34,
      17,
      67,
      386,
      12,
      43,
      16,
      76,
      29,
      16
    ]
  },
  {
    "intent": [
      "lower",
      "a",
      "string",
      "var_0",
      "and",
      "remove",
      "non-alphanumeric",
      "character",
      "aside",
      "from",
      "space"
    ],
    "code": [
      "re",
      ".",
      "sub",
      "(",
      "'[^\\\\sa-zA-Z0-9]'",
      ",",
      "''",
      ",",
      "var_0",
      ")",
      ".",
      "lower",
      "(",
      ")",
      ".",
      "strip",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": "text"
    },
    "intent_indx": [
      433,
      3,
      13,
      25,
      29,
      258,
      433,
      96,
      433,
      56,
      133
    ],
    "code_indx_copy": [
      39,
      22,
      40,
      1,
      520,
      8,
      21,
      8,
      34,
      17,
      22,
      154,
      1,
      17,
      22,
      172,
      1,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      40,
      1,
      520,
      8,
      21,
      8,
      34,
      17,
      22,
      154,
      1,
      17,
      22,
      172,
      1,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "all",
      "non-alphanumeric",
      "character",
      "except",
      "space",
      "from",
      "a",
      "string",
      "var_0",
      "and",
      "lower",
      "it"
    ],
    "code": [
      "re",
      ".",
      "sub",
      "(",
      "'(?!\\\\s)[\\\\W_]'",
      ",",
      "''",
      ",",
      "var_0",
      ")",
      ".",
      "lower",
      "(",
      ")",
      ".",
      "strip",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": "text"
    },
    "intent_indx": [
      258,
      36,
      433,
      96,
      433,
      133,
      56,
      3,
      13,
      25,
      29,
      433,
      89
    ],
    "code_indx_copy": [
      39,
      22,
      40,
      1,
      520,
      8,
      21,
      8,
      34,
      17,
      22,
      154,
      1,
      17,
      22,
      172,
      1,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      40,
      1,
      520,
      8,
      21,
      8,
      34,
      17,
      22,
      154,
      1,
      17,
      22,
      172,
      1,
      17
    ]
  },
  {
    "intent": [
      "subscript",
      "text",
      "str_0",
      "with",
      "str_1",
      "a",
      "subscripted",
      "in",
      "matplotlib",
      "label",
      "for",
      "array",
      "str_2",
      "and",
      "str_3",
      "."
    ],
    "code": [
      "plt",
      ".",
      "plot",
      "(",
      "str_2",
      ",",
      "str_3",
      ",",
      "label",
      "=",
      "'H\u2082O'",
      ")"
    ],
    "slot_map": {
      "str_0": "H20",
      "str_1": "2",
      "str_2": "x",
      "str_3": "y"
    },
    "intent_indx": [
      433,
      257,
      5,
      77,
      30,
      3,
      433,
      23,
      336,
      309,
      20,
      82,
      188,
      29,
      211,
      155
    ],
    "code_indx_copy": [
      198,
      22,
      292,
      1,
      185,
      8,
      222,
      8,
      533,
      19,
      520,
      17
    ],
    "code_indx_nocopy": [
      198,
      22,
      292,
      1,
      185,
      8,
      222,
      8,
      520,
      19,
      520,
      17
    ]
  },
  {
    "intent": [
      "subscript",
      "text",
      "str_0",
      "with",
      "str_1",
      "a",
      "subscripted",
      "in",
      "matplotlib",
      "label",
      "for",
      "array",
      "str_2",
      "and",
      "str_3",
      "."
    ],
    "code": [
      "plt",
      ".",
      "plot",
      "(",
      "str_2",
      ",",
      "str_3",
      ",",
      "label",
      "=",
      "'$H_2O$'",
      ")"
    ],
    "slot_map": {
      "str_0": "H20",
      "str_1": "2",
      "str_2": "x",
      "str_3": "y"
    },
    "intent_indx": [
      433,
      257,
      5,
      77,
      30,
      3,
      433,
      23,
      336,
      309,
      20,
      82,
      188,
      29,
      211,
      155
    ],
    "code_indx_copy": [
      198,
      22,
      292,
      1,
      185,
      8,
      222,
      8,
      533,
      19,
      520,
      17
    ],
    "code_indx_nocopy": [
      198,
      22,
      292,
      1,
      185,
      8,
      222,
      8,
      520,
      19,
      520,
      17
    ]
  },
  {
    "intent": [
      "loop",
      "over",
      "a",
      "list",
      "var_0",
      "if",
      "sublists",
      "length",
      "equal",
      "3"
    ],
    "code": [
      "[",
      "x",
      "for",
      "x",
      "in",
      "var_0",
      "if",
      "len",
      "(",
      "x",
      ")",
      "==",
      "3",
      "]"
    ],
    "slot_map": {
      "var_0": "mylist"
    },
    "intent_indx": [
      433,
      387,
      3,
      4,
      25,
      147,
      433,
      200,
      104,
      55
    ],
    "code_indx_copy": [
      12,
      26,
      7,
      26,
      9,
      34,
      67,
      32,
      1,
      26,
      17,
      76,
      54,
      16
    ],
    "code_indx_nocopy": [
      12,
      26,
      7,
      26,
      9,
      34,
      67,
      32,
      1,
      26,
      17,
      76,
      54,
      16
    ]
  },
  {
    "intent": [
      "initialize",
      "a",
      "list",
      "var_0",
      "of",
      "int_0",
      "object",
      "object",
      "(",
      ")"
    ],
    "code": [
      "var_0",
      "=",
      "[",
      "Object",
      "(",
      ")",
      "for",
      "_",
      "in",
      "range",
      "(",
      "int_0",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": "lst",
      "int_0": "100"
    },
    "intent_indx": [
      433,
      3,
      4,
      25,
      2,
      259,
      14,
      14,
      203,
      26
    ],
    "code_indx_copy": [
      34,
      19,
      12,
      520,
      1,
      17,
      7,
      466,
      9,
      105,
      1,
      314,
      17,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      12,
      520,
      1,
      17,
      7,
      466,
      9,
      105,
      1,
      314,
      17,
      16
    ]
  },
  {
    "intent": [
      "create",
      "list",
      "var_0",
      "containing",
      "int_0",
      "instance",
      "of",
      "object",
      "var_1"
    ],
    "code": [
      "var_0",
      "=",
      "[",
      "var_1",
      "(",
      ")",
      "for",
      "i",
      "in",
      "range",
      "(",
      "int_0",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": "lst",
      "var_1": "Object",
      "int_0": "100"
    },
    "intent_indx": [
      145,
      4,
      25,
      32,
      259,
      345,
      2,
      14,
      61
    ],
    "code_indx_copy": [
      34,
      19,
      12,
      92,
      1,
      17,
      7,
      6,
      9,
      105,
      1,
      314,
      17,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      12,
      92,
      1,
      17,
      7,
      6,
      9,
      105,
      1,
      314,
      17,
      16
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "content",
      "of",
      "child",
      "tag",
      "withvar_0",
      "attribute",
      "whose",
      "parent",
      "ha",
      "cs",
      "var_1"
    ],
    "code": [
      "self",
      ".",
      "driver",
      ".",
      "find_element_by_css_selector",
      "(",
      "'.someclass a'",
      ")",
      ".",
      "get_attribute",
      "(",
      "'var_0'",
      ")"
    ],
    "slot_map": {
      "var_0": "href",
      "var_1": "someclass"
    },
    "intent_indx": [
      16,
      17,
      125,
      2,
      433,
      70,
      433,
      326,
      221,
      433,
      322,
      433,
      61
    ],
    "code_indx_copy": [
      312,
      22,
      46,
      22,
      331,
      1,
      520,
      17,
      22,
      520,
      1,
      56,
      17
    ],
    "code_indx_nocopy": [
      312,
      22,
      46,
      22,
      331,
      1,
      520,
      17,
      22,
      520,
      1,
      56,
      17
    ]
  },
  {
    "intent": [
      "joining",
      "data",
      "from",
      "dataframe",
      "var_0",
      "with",
      "data",
      "from",
      "dataframe",
      "var_1",
      "based",
      "on",
      "matching",
      "value",
      "of",
      "column",
      "str_0",
      "in",
      "both",
      "dataframes"
    ],
    "code": [
      "var_0",
      ".",
      "merge",
      "(",
      "var_1",
      ",",
      "on",
      "=",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "var_0": "df1",
      "var_1": "df2",
      "str_0": "Date_Time"
    },
    "intent_indx": [
      433,
      63,
      56,
      41,
      25,
      77,
      63,
      56,
      41,
      61,
      199,
      140,
      78,
      19,
      2,
      59,
      5,
      23,
      433,
      238
    ],
    "code_indx_copy": [
      34,
      22,
      223,
      1,
      92,
      8,
      247,
      19,
      29,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      223,
      1,
      92,
      8,
      247,
      19,
      29,
      17
    ]
  },
  {
    "intent": [
      "use",
      "str_0",
      "operator",
      "to",
      "print",
      "variable",
      "value",
      "var_0",
      "inside",
      "a",
      "string"
    ],
    "code": [
      "'first string is: %s, second one is: %s'",
      "%",
      "(",
      "var_0",
      ",",
      "'geo.tif'",
      ")"
    ],
    "slot_map": {
      "str_0": "%s",
      "var_0": "str1"
    },
    "intent_indx": [
      298,
      5,
      433,
      8,
      161,
      94,
      19,
      25,
      44,
      3,
      13
    ],
    "code_indx_copy": [
      520,
      118,
      1,
      34,
      8,
      520,
      17
    ],
    "code_indx_nocopy": [
      520,
      118,
      1,
      34,
      8,
      520,
      17
    ]
  },
  {
    "intent": [
      "split",
      "a",
      "string",
      "by",
      "a",
      "delimiter",
      "in",
      "python"
    ],
    "code": [
      "[",
      "x",
      ".",
      "strip",
      "(",
      ")",
      "for",
      "x",
      "in",
      "'2.MATCHES $$TEXT$$ STRING'",
      ".",
      "split",
      "(",
      "'$$TEXT$$'",
      ")",
      "]"
    ],
    "slot_map": {},
    "intent_indx": [
      139,
      3,
      13,
      42,
      3,
      314,
      23,
      47
    ],
    "code_indx_copy": [
      12,
      26,
      22,
      172,
      1,
      17,
      7,
      26,
      9,
      520,
      22,
      71,
      1,
      520,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      26,
      22,
      172,
      1,
      17,
      7,
      26,
      9,
      520,
      22,
      71,
      1,
      520,
      17,
      16
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "directory",
      "str_0",
      "exists",
      "and",
      "create",
      "it",
      "if",
      "necessary"
    ],
    "code": [
      "if",
      "not",
      "os",
      ".",
      "path",
      ".",
      "exists",
      "(",
      "str_0",
      ")",
      ":",
      "\n",
      "    ",
      "os",
      ".",
      "makedirs",
      "(",
      "str_0",
      ")",
      ""
    ],
    "slot_map": {
      "str_0": "directory"
    },
    "intent_indx": [
      227,
      147,
      170,
      5,
      265,
      29,
      145,
      89,
      147,
      433
    ],
    "code_indx_copy": [
      67,
      283,
      114,
      22,
      115,
      22,
      430,
      1,
      11,
      17,
      13,
      163,
      218,
      114,
      22,
      520,
      1,
      11,
      17,
      220
    ],
    "code_indx_nocopy": [
      67,
      283,
      114,
      22,
      115,
      22,
      430,
      1,
      11,
      17,
      13,
      163,
      218,
      114,
      22,
      520,
      1,
      11,
      17,
      220
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "a",
      "directory",
      "var_0",
      "exists",
      "and",
      "create",
      "it",
      "if",
      "necessary"
    ],
    "code": [
      "try",
      ":",
      "\n",
      "    ",
      "os",
      ".",
      "makedirs",
      "(",
      "var_0",
      ")",
      "\n",
      "",
      "except",
      "OSError",
      ":",
      "\n",
      "    ",
      "if",
      "not",
      "os",
      ".",
      "var_0",
      ".",
      "isdir",
      "(",
      "var_0",
      ")",
      ":",
      "\n",
      "        ",
      "raise",
      "",
      ""
    ],
    "slot_map": {
      "var_0": "path"
    },
    "intent_indx": [
      227,
      147,
      3,
      170,
      25,
      265,
      29,
      145,
      89,
      147,
      433
    ],
    "code_indx_copy": [
      339,
      13,
      163,
      218,
      114,
      22,
      520,
      1,
      34,
      17,
      163,
      220,
      340,
      520,
      13,
      163,
      218,
      67,
      283,
      114,
      22,
      34,
      22,
      520,
      1,
      34,
      17,
      13,
      163,
      368,
      519,
      220,
      220
    ],
    "code_indx_nocopy": [
      339,
      13,
      163,
      218,
      114,
      22,
      520,
      1,
      34,
      17,
      163,
      220,
      340,
      520,
      13,
      163,
      218,
      67,
      283,
      114,
      22,
      34,
      22,
      520,
      1,
      34,
      17,
      13,
      163,
      368,
      519,
      220,
      220
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "a",
      "directory",
      "var_0",
      "exists",
      "and",
      "create",
      "it",
      "if",
      "necessary"
    ],
    "code": [
      "distutils",
      ".",
      "dir_util",
      ".",
      "mkpath",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": "path"
    },
    "intent_indx": [
      227,
      147,
      3,
      170,
      25,
      265,
      29,
      145,
      89,
      147,
      433
    ],
    "code_indx_copy": [
      520,
      22,
      520,
      22,
      520,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      520,
      22,
      520,
      22,
      520,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "a",
      "directory",
      "var_0",
      "exists",
      "and",
      "create",
      "it",
      "if",
      "necessary"
    ],
    "code": [
      "try",
      ":",
      "\n",
      "    ",
      "os",
      ".",
      "makedirs",
      "(",
      "var_0",
      ")",
      "\n",
      "",
      "except",
      "OSError",
      "as",
      "exception",
      ":",
      "\n",
      "    ",
      "if",
      "exception",
      ".",
      "errno",
      "!=",
      "errno",
      ".",
      "EEXIST",
      ":",
      "\n",
      "        ",
      "raise",
      "",
      ""
    ],
    "slot_map": {
      "var_0": "path"
    },
    "intent_indx": [
      227,
      147,
      3,
      170,
      25,
      265,
      29,
      145,
      89,
      147,
      433
    ],
    "code_indx_copy": [
      339,
      13,
      163,
      218,
      114,
      22,
      520,
      1,
      34,
      17,
      163,
      220,
      340,
      520,
      366,
      520,
      13,
      163,
      218,
      67,
      520,
      22,
      520,
      89,
      520,
      22,
      520,
      13,
      163,
      368,
      519,
      220,
      220
    ],
    "code_indx_nocopy": [
      339,
      13,
      163,
      218,
      114,
      22,
      520,
      1,
      34,
      17,
      163,
      220,
      340,
      520,
      366,
      520,
      13,
      163,
      218,
      67,
      520,
      22,
      520,
      89,
      520,
      22,
      520,
      13,
      163,
      368,
      519,
      220,
      220
    ]
  },
  {
    "intent": [
      "replace",
      "a",
      "separate",
      "word",
      "str_0",
      "by",
      "str_1",
      "in",
      "a",
      "string",
      "str_2"
    ],
    "code": [
      "re",
      ".",
      "sub",
      "(",
      "'\\\\bH3\\\\b'",
      ",",
      "'str_1'",
      ",",
      "str_2",
      ")"
    ],
    "slot_map": {
      "str_0": "H3",
      "str_1": "H1",
      "str_2": "text"
    },
    "intent_indx": [
      131,
      3,
      95,
      39,
      5,
      42,
      30,
      23,
      3,
      13,
      188
    ],
    "code_indx_copy": [
      39,
      22,
      40,
      1,
      520,
      8,
      63,
      8,
      185,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      40,
      1,
      520,
      8,
      63,
      8,
      185,
      17
    ]
  },
  {
    "intent": [
      "substitute",
      "ascii",
      "letter",
      "in",
      "string",
      "str_0",
      "with",
      "empty",
      "string",
      "str_1"
    ],
    "code": [
      "re",
      ".",
      "sub",
      "(",
      "'\\\\D'",
      ",",
      "'str_1'",
      ",",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": "aas30dsa20",
      "str_1": ""
    },
    "intent_indx": [
      433,
      366,
      347,
      23,
      13,
      5,
      77,
      144,
      13,
      30
    ],
    "code_indx_copy": [
      39,
      22,
      40,
      1,
      520,
      8,
      63,
      8,
      29,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      40,
      1,
      520,
      8,
      63,
      8,
      29,
      17
    ]
  },
  {
    "intent": [
      "get",
      "digit",
      "only",
      "from",
      "a",
      "string",
      "var_0",
      "using",
      "lambda",
      "function"
    ],
    "code": [
      "\"\"\"\"\"\"",
      ".",
      "join",
      "(",
      "[",
      "x",
      "for",
      "x",
      "in",
      "'var_0'",
      "if",
      "x",
      ".",
      "isdigit",
      "(",
      ")",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": "aas30dsa20"
    },
    "intent_indx": [
      16,
      194,
      338,
      56,
      3,
      13,
      25,
      108,
      66,
      67
    ],
    "code_indx_copy": [
      289,
      22,
      23,
      1,
      12,
      26,
      7,
      26,
      9,
      56,
      67,
      26,
      22,
      68,
      1,
      17,
      16,
      17
    ],
    "code_indx_nocopy": [
      289,
      22,
      23,
      1,
      12,
      26,
      7,
      26,
      9,
      56,
      67,
      26,
      22,
      68,
      1,
      17,
      16,
      17
    ]
  },
  {
    "intent": [
      "access",
      "a",
      "tag",
      "called",
      "str_0",
      "in",
      "beautifulsoup",
      "var_0"
    ],
    "code": [
      "print",
      "(",
      "var_0",
      ".",
      "find",
      "(",
      "'str_0'",
      ")",
      ".",
      "string",
      ")"
    ],
    "slot_map": {
      "str_0": "name",
      "var_0": "soup"
    },
    "intent_indx": [
      433,
      3,
      70,
      433,
      5,
      23,
      68,
      25
    ],
    "code_indx_copy": [
      49,
      1,
      34,
      22,
      284,
      1,
      29,
      17,
      22,
      64,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      34,
      22,
      284,
      1,
      29,
      17,
      22,
      64,
      17
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "dictionary",
      "var_0",
      "of",
      "key-value",
      "pair",
      "in",
      "pymongo",
      "cursor",
      "var_1"
    ],
    "code": [
      "var_0",
      "=",
      "dict",
      "(",
      "(",
      "record",
      "[",
      "'_id'",
      "]",
      ",",
      "record",
      ")",
      "for",
      "record",
      "in",
      "var_1",
      ")"
    ],
    "slot_map": {
      "var_0": "records",
      "var_1": "cursor"
    },
    "intent_indx": [
      16,
      3,
      24,
      25,
      2,
      396,
      88,
      23,
      433,
      433,
      61
    ],
    "code_indx_copy": [
      34,
      19,
      70,
      1,
      1,
      520,
      12,
      520,
      16,
      8,
      520,
      17,
      7,
      520,
      9,
      92,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      70,
      1,
      1,
      520,
      12,
      520,
      16,
      8,
      520,
      17,
      7,
      520,
      9,
      92,
      17
    ]
  },
  {
    "intent": [
      "create",
      "new",
      "matrix",
      "object",
      "by",
      "concatenating",
      "data",
      "from",
      "matrix",
      "a",
      "and",
      "matrix",
      "b"
    ],
    "code": [
      "np",
      ".",
      "concatenate",
      "(",
      "(",
      "A",
      ",",
      "B",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      145,
      186,
      183,
      14,
      42,
      429,
      63,
      56,
      183,
      3,
      29,
      183,
      433
    ],
    "code_indx_copy": [
      74,
      22,
      487,
      1,
      1,
      520,
      8,
      520,
      17,
      17
    ],
    "code_indx_nocopy": [
      74,
      22,
      487,
      1,
      1,
      520,
      8,
      520,
      17,
      17
    ]
  },
  {
    "intent": [
      "concat",
      "two",
      "matrix",
      "var_0",
      "and",
      "var_1",
      "in",
      "numpy"
    ],
    "code": [
      "np",
      ".",
      "vstack",
      "(",
      "(",
      "var_0",
      ",",
      "var_1",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": "A",
      "var_1": "B"
    },
    "intent_indx": [
      433,
      28,
      183,
      25,
      29,
      61,
      23,
      81
    ],
    "code_indx_copy": [
      74,
      22,
      520,
      1,
      1,
      34,
      8,
      92,
      17,
      17
    ],
    "code_indx_nocopy": [
      74,
      22,
      520,
      1,
      1,
      34,
      8,
      92,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "character",
      "count",
      "in",
      "a",
      "file",
      "var_0"
    ],
    "code": [
      "os",
      ".",
      "stat",
      "(",
      "var_0",
      ")",
      ".",
      "st_size"
    ],
    "slot_map": {
      "var_0": "filepath"
    },
    "intent_indx": [
      16,
      17,
      96,
      173,
      23,
      3,
      126,
      25
    ],
    "code_indx_copy": [
      114,
      22,
      455,
      1,
      34,
      17,
      22,
      520
    ],
    "code_indx_nocopy": [
      114,
      22,
      455,
      1,
      34,
      17,
      22,
      520
    ]
  },
  {
    "intent": [
      "count",
      "the",
      "occurrence",
      "of",
      "item",
      "str_0",
      "in",
      "list",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "count",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": "a",
      "var_0": "l"
    },
    "intent_indx": [
      173,
      17,
      50,
      2,
      37,
      5,
      23,
      4,
      25
    ],
    "code_indx_copy": [
      34,
      22,
      385,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      385,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "count",
      "the",
      "occurrence",
      "of",
      "item",
      "in",
      "list",
      "var_0"
    ],
    "code": [
      "Counter",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": "l"
    },
    "intent_indx": [
      173,
      17,
      50,
      2,
      37,
      23,
      4,
      25
    ],
    "code_indx_copy": [
      496,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      496,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "count",
      "the",
      "occurrence",
      "of",
      "item",
      "in",
      "list",
      "var_0"
    ],
    "code": [
      "[",
      "[",
      "x",
      ",",
      "var_0",
      ".",
      "count",
      "(",
      "x",
      ")",
      "]",
      "for",
      "x",
      "in",
      "set",
      "(",
      "var_0",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": "l"
    },
    "intent_indx": [
      173,
      17,
      50,
      2,
      37,
      23,
      4,
      25
    ],
    "code_indx_copy": [
      12,
      12,
      26,
      8,
      34,
      22,
      385,
      1,
      26,
      17,
      16,
      7,
      26,
      9,
      191,
      1,
      34,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      12,
      26,
      8,
      34,
      22,
      385,
      1,
      26,
      17,
      16,
      7,
      26,
      9,
      191,
      1,
      34,
      17,
      16
    ]
  },
  {
    "intent": [
      "count",
      "the",
      "occurrence",
      "of",
      "item",
      "in",
      "list",
      "var_0"
    ],
    "code": [
      "dict",
      "(",
      "(",
      "x",
      ",",
      "var_0",
      ".",
      "count",
      "(",
      "x",
      ")",
      ")",
      "for",
      "x",
      "in",
      "set",
      "(",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": "l"
    },
    "intent_indx": [
      173,
      17,
      50,
      2,
      37,
      23,
      4,
      25
    ],
    "code_indx_copy": [
      70,
      1,
      1,
      26,
      8,
      34,
      22,
      385,
      1,
      26,
      17,
      17,
      7,
      26,
      9,
      191,
      1,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      70,
      1,
      1,
      26,
      8,
      34,
      22,
      385,
      1,
      26,
      17,
      17,
      7,
      26,
      9,
      191,
      1,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "count",
      "the",
      "occurrence",
      "of",
      "item",
      "str_0",
      "in",
      "list",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "count",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": "b",
      "var_0": "l"
    },
    "intent_indx": [
      173,
      17,
      50,
      2,
      37,
      5,
      23,
      4,
      25
    ],
    "code_indx_copy": [
      34,
      22,
      385,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      385,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "copy",
      "file",
      "var_0",
      "to",
      "directory",
      "var_1"
    ],
    "code": [
      "shutil",
      ".",
      "copy",
      "(",
      "var_0",
      ",",
      "var_1",
      ")"
    ],
    "slot_map": {
      "var_0": "srcfile",
      "var_1": "dstdir"
    },
    "intent_indx": [
      310,
      126,
      25,
      8,
      170,
      61
    ],
    "code_indx_copy": [
      383,
      22,
      384,
      1,
      34,
      8,
      92,
      17
    ],
    "code_indx_nocopy": [
      383,
      22,
      384,
      1,
      34,
      8,
      92,
      17
    ]
  },
  {
    "intent": [
      "find",
      "the",
      "key",
      "associated",
      "with",
      "the",
      "largest",
      "value",
      "in",
      "dictionary",
      "var_0",
      "whilst",
      "key",
      "is",
      "non-zero",
      "value"
    ],
    "code": [
      "max",
      "(",
      "k",
      "for",
      "k",
      ",",
      "v",
      "in",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      "if",
      "v",
      "!=",
      "0",
      ")"
    ],
    "slot_map": {
      "var_0": "x"
    },
    "intent_indx": [
      45,
      17,
      22,
      277,
      77,
      17,
      411,
      19,
      23,
      24,
      25,
      433,
      22,
      149,
      433,
      19
    ],
    "code_indx_copy": [
      181,
      1,
      90,
      7,
      90,
      8,
      91,
      9,
      34,
      22,
      35,
      1,
      17,
      67,
      91,
      89,
      43,
      17
    ],
    "code_indx_nocopy": [
      181,
      1,
      90,
      7,
      90,
      8,
      91,
      9,
      34,
      22,
      35,
      1,
      17,
      67,
      91,
      89,
      43,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "largest",
      "key",
      "whose",
      "not",
      "associated",
      "with",
      "value",
      "of",
      "0",
      "in",
      "dictionary",
      "var_0"
    ],
    "code": [
      "(",
      "k",
      "for",
      "k",
      ",",
      "v",
      "in",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      "if",
      "v",
      "!=",
      "0",
      ")"
    ],
    "slot_map": {
      "var_0": "x"
    },
    "intent_indx": [
      16,
      17,
      411,
      22,
      221,
      103,
      277,
      77,
      19,
      2,
      105,
      23,
      24,
      25
    ],
    "code_indx_copy": [
      1,
      90,
      7,
      90,
      8,
      91,
      9,
      34,
      22,
      35,
      1,
      17,
      67,
      91,
      89,
      43,
      17
    ],
    "code_indx_nocopy": [
      1,
      90,
      7,
      90,
      8,
      91,
      9,
      34,
      22,
      35,
      1,
      17,
      67,
      91,
      89,
      43,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "largest",
      "key",
      "in",
      "a",
      "dictionary",
      "var_0",
      "with",
      "non-zero",
      "value"
    ],
    "code": [
      "max",
      "(",
      "k",
      "for",
      "k",
      ",",
      "v",
      "in",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      "if",
      "v",
      "!=",
      "0",
      ")"
    ],
    "slot_map": {
      "var_0": "x"
    },
    "intent_indx": [
      16,
      17,
      411,
      22,
      23,
      3,
      24,
      25,
      77,
      433,
      19
    ],
    "code_indx_copy": [
      181,
      1,
      90,
      7,
      90,
      8,
      91,
      9,
      34,
      22,
      35,
      1,
      17,
      67,
      91,
      89,
      43,
      17
    ],
    "code_indx_nocopy": [
      181,
      1,
      90,
      7,
      90,
      8,
      91,
      9,
      34,
      22,
      35,
      1,
      17,
      67,
      91,
      89,
      43,
      17
    ]
  },
  {
    "intent": [
      "put",
      "the",
      "curser",
      "at",
      "beginning",
      "of",
      "the",
      "file"
    ],
    "code": [
      "file",
      ".",
      "seek",
      "(",
      "0",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      433,
      17,
      433,
      33,
      166,
      2,
      17,
      126
    ],
    "code_indx_copy": [
      400,
      22,
      520,
      1,
      43,
      17
    ],
    "code_indx_nocopy": [
      400,
      22,
      520,
      1,
      43,
      17
    ]
  },
  {
    "intent": [
      "combine",
      "value",
      "from",
      "column",
      "str_0",
      "and",
      "column",
      "str_1",
      "of",
      "dataframe",
      "var_0",
      "into",
      "column",
      "str_2",
      "of",
      "datafram",
      "var_0"
    ],
    "code": [
      "var_1",
      "[",
      "'str_2'",
      "]",
      "=",
      "np",
      ".",
      "where",
      "(",
      "var_1",
      "[",
      "'str_1'",
      "]",
      ".",
      "isnull",
      ",",
      "var_1",
      "[",
      "'str_0'",
      "]",
      ",",
      "var_1",
      "[",
      "'str_1'",
      "]",
      "\n",
      ")"
    ],
    "slot_map": {
      "str_0": "b",
      "str_1": "a",
      "var_0": "df",
      "str_2": "c",
      "var_1": "df"
    },
    "intent_indx": [
      352,
      19,
      56,
      59,
      5,
      29,
      59,
      30,
      2,
      41,
      25,
      11,
      59,
      188,
      2,
      433,
      25
    ],
    "code_indx_copy": [
      92,
      12,
      152,
      16,
      19,
      74,
      22,
      75,
      1,
      92,
      12,
      63,
      16,
      22,
      426,
      8,
      92,
      12,
      29,
      16,
      8,
      92,
      12,
      63,
      16,
      163,
      17
    ],
    "code_indx_nocopy": [
      92,
      12,
      152,
      16,
      19,
      74,
      22,
      75,
      1,
      92,
      12,
      63,
      16,
      22,
      426,
      8,
      92,
      12,
      29,
      16,
      8,
      92,
      12,
      63,
      16,
      163,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "key",
      "str_0",
      "from",
      "dictionary",
      "var_0"
    ],
    "code": [
      "del",
      "var_0",
      "[",
      "'str_0'",
      "]"
    ],
    "slot_map": {
      "str_0": "ele",
      "var_0": "d"
    },
    "intent_indx": [
      258,
      22,
      5,
      56,
      24,
      25
    ],
    "code_indx_copy": [
      285,
      34,
      12,
      29,
      16
    ],
    "code_indx_nocopy": [
      285,
      34,
      12,
      29,
      16
    ]
  },
  {
    "intent": [
      "update",
      "datetime",
      "field",
      "in",
      "var_0",
      "to",
      "be",
      "the",
      "existing",
      "var_1",
      "plus",
      "int_0",
      "year"
    ],
    "code": [
      "var_0",
      ".",
      "objects",
      ".",
      "update",
      "(",
      "var_1",
      "=",
      "F",
      "(",
      "'var_1'",
      ")",
      "+",
      "timedelta",
      "(",
      "days",
      "=",
      "36524.25",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": "MyModel",
      "var_1": "timestamp",
      "int_0": "100"
    },
    "intent_indx": [
      233,
      12,
      301,
      23,
      25,
      8,
      349,
      17,
      433,
      61,
      433,
      259,
      392
    ],
    "code_indx_copy": [
      34,
      22,
      78,
      22,
      69,
      1,
      92,
      19,
      520,
      1,
      57,
      17,
      97,
      297,
      1,
      298,
      19,
      520,
      17,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      78,
      22,
      69,
      1,
      92,
      19,
      520,
      1,
      57,
      17,
      97,
      297,
      1,
      298,
      19,
      520,
      17,
      17
    ]
  },
  {
    "intent": [
      "merge",
      "list",
      "str_0",
      "and",
      "list",
      "str_1",
      "and",
      "list",
      "str_2",
      "into",
      "one",
      "list"
    ],
    "code": [
      "[",
      "str_0",
      "]",
      "+",
      "[",
      "str_1",
      "]",
      "+",
      "[",
      "str_2",
      "]"
    ],
    "slot_map": {
      "str_0": "['it']",
      "str_1": "['was']",
      "str_2": "['annoying']",
      "[str_0]": "['it']",
      "[str_1]": "['was']",
      "[str_2]": "['annoying']"
    },
    "intent_indx": [
      237,
      4,
      5,
      29,
      4,
      30,
      29,
      4,
      188,
      11,
      293,
      4
    ],
    "code_indx_copy": [
      12,
      11,
      16,
      97,
      12,
      37,
      16,
      97,
      12,
      185,
      16
    ],
    "code_indx_nocopy": [
      12,
      11,
      16,
      97,
      12,
      37,
      16,
      97,
      12,
      185,
      16
    ]
  },
  {
    "intent": [
      "increment",
      "a",
      "value",
      "with",
      "leading",
      "zero",
      "in",
      "a",
      "number",
      "var_0"
    ],
    "code": [
      "str",
      "(",
      "int",
      "(",
      "var_0",
      ")",
      "+",
      "1",
      ")",
      ".",
      "zfill",
      "(",
      "len",
      "(",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": "x"
    },
    "intent_indx": [
      433,
      3,
      19,
      77,
      433,
      177,
      23,
      3,
      74,
      25
    ],
    "code_indx_copy": [
      25,
      1,
      20,
      1,
      34,
      17,
      97,
      15,
      17,
      22,
      520,
      1,
      32,
      1,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      25,
      1,
      20,
      1,
      34,
      17,
      97,
      15,
      17,
      22,
      520,
      1,
      32,
      1,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "a",
      "panda",
      "dataframe",
      "var_0",
      "'s",
      "index",
      "is",
      "sorted"
    ],
    "code": [
      "all",
      "(",
      "var_0",
      ".",
      "index",
      "[",
      ":",
      "-",
      "1",
      "]",
      "<=",
      "var_0",
      ".",
      "index",
      "[",
      "1",
      ":",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": "df"
    },
    "intent_indx": [
      227,
      147,
      3,
      40,
      41,
      25,
      256,
      35,
      149,
      216
    ],
    "code_indx_copy": [
      77,
      1,
      34,
      22,
      162,
      12,
      13,
      14,
      15,
      16,
      520,
      34,
      22,
      162,
      12,
      15,
      13,
      16,
      17
    ],
    "code_indx_nocopy": [
      77,
      1,
      34,
      22,
      162,
      12,
      13,
      14,
      15,
      16,
      520,
      34,
      22,
      162,
      12,
      15,
      13,
      16,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "tuple",
      "var_0",
      "to",
      "list"
    ],
    "code": [
      "list",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": "t"
    },
    "intent_indx": [
      10,
      112,
      25,
      8,
      4
    ],
    "code_indx_copy": [
      33,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      33,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "list",
      "var_0",
      "to",
      "tuple"
    ],
    "code": [
      "tuple",
      "(",
      "l",
      ")"
    ],
    "slot_map": {
      "var_0": "t"
    },
    "intent_indx": [
      10,
      4,
      25,
      8,
      112
    ],
    "code_indx_copy": [
      428,
      1,
      427,
      17
    ],
    "code_indx_nocopy": [
      428,
      1,
      427,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "tuple",
      "var_0",
      "to",
      "list"
    ],
    "code": [
      "var_0",
      "=",
      "map",
      "(",
      "list",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": "level1"
    },
    "intent_indx": [
      10,
      112,
      25,
      8,
      4
    ],
    "code_indx_copy": [
      34,
      19,
      24,
      1,
      33,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      24,
      1,
      33,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "send",
      "the",
      "output",
      "of",
      "pprint",
      "object",
      "var_0",
      "to",
      "file",
      "var_1"
    ],
    "code": [
      "pprint",
      ".",
      "pprint",
      "(",
      "var_0",
      ",",
      "var_1",
      ")"
    ],
    "slot_map": {
      "var_0": "dataobject",
      "var_1": "logFile"
    },
    "intent_indx": [
      433,
      17,
      248,
      2,
      433,
      14,
      25,
      8,
      126,
      61
    ],
    "code_indx_copy": [
      528,
      22,
      528,
      1,
      34,
      8,
      92,
      17
    ],
    "code_indx_nocopy": [
      520,
      22,
      520,
      1,
      34,
      8,
      92,
      17
    ]
  },
  {
    "intent": [
      "get",
      "index",
      "of",
      "row",
      "in",
      "column",
      "str_0"
    ],
    "code": [
      "df",
      ".",
      "loc",
      "[",
      "df",
      "[",
      "'str_0'",
      "]",
      "]"
    ],
    "slot_map": {
      "str_0": "BoolCol"
    },
    "intent_indx": [
      16,
      35,
      2,
      43,
      23,
      59,
      5
    ],
    "code_indx_copy": [
      151,
      22,
      204,
      12,
      151,
      12,
      29,
      16,
      16
    ],
    "code_indx_nocopy": [
      151,
      22,
      204,
      12,
      151,
      12,
      29,
      16,
      16
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "list",
      "containing",
      "the",
      "index",
      "of",
      "row",
      "where",
      "the",
      "value",
      "of",
      "column",
      "str_0",
      "in",
      "dataframe",
      "var_0",
      "are",
      "equal",
      "to",
      "true"
    ],
    "code": [
      "var_0",
      ".",
      "iloc",
      "[",
      "np",
      ".",
      "flatnonzero",
      "(",
      "var_0",
      "[",
      "'str_0'",
      "]",
      ")",
      "]"
    ],
    "slot_map": {
      "str_0": "BoolCol",
      "var_0": "df"
    },
    "intent_indx": [
      145,
      3,
      4,
      32,
      17,
      35,
      2,
      43,
      152,
      17,
      19,
      2,
      59,
      5,
      23,
      41,
      25,
      234,
      104,
      8,
      354
    ],
    "code_indx_copy": [
      34,
      22,
      398,
      12,
      74,
      22,
      520,
      1,
      34,
      12,
      29,
      16,
      17,
      16
    ],
    "code_indx_nocopy": [
      34,
      22,
      398,
      12,
      74,
      22,
      520,
      1,
      34,
      12,
      29,
      16,
      17,
      16
    ]
  },
  {
    "intent": [
      "get",
      "list",
      "of",
      "index",
      "of",
      "row",
      "where",
      "column",
      "str_0",
      "value",
      "match",
      "true"
    ],
    "code": [
      "df",
      "[",
      "df",
      "[",
      "'str_0'",
      "]",
      "==",
      "True",
      "]",
      ".",
      "index",
      ".",
      "tolist",
      "(",
      ")"
    ],
    "slot_map": {
      "str_0": "BoolCol"
    },
    "intent_indx": [
      16,
      4,
      2,
      35,
      2,
      43,
      152,
      59,
      5,
      19,
      106,
      354
    ],
    "code_indx_copy": [
      151,
      12,
      151,
      12,
      29,
      16,
      76,
      110,
      16,
      22,
      162,
      22,
      308,
      1,
      17
    ],
    "code_indx_nocopy": [
      151,
      12,
      151,
      12,
      29,
      16,
      76,
      110,
      16,
      22,
      162,
      22,
      308,
      1,
      17
    ]
  },
  {
    "intent": [
      "get",
      "index",
      "of",
      "row",
      "in",
      "dataframe",
      "var_0",
      "which",
      "column",
      "str_0",
      "match",
      "value",
      "true"
    ],
    "code": [
      "var_0",
      "[",
      "var_0",
      "[",
      "'str_0'",
      "]",
      "]",
      ".",
      "index",
      ".",
      "tolist",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": "df",
      "str_0": "BoolCol"
    },
    "intent_indx": [
      16,
      35,
      2,
      43,
      23,
      41,
      25,
      197,
      59,
      5,
      106,
      19,
      354
    ],
    "code_indx_copy": [
      34,
      12,
      34,
      12,
      29,
      16,
      16,
      22,
      162,
      22,
      308,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      12,
      34,
      12,
      29,
      16,
      16,
      22,
      162,
      22,
      308,
      1,
      17
    ]
  },
  {
    "intent": [
      "change",
      "working",
      "directory",
      "to",
      "the",
      "directory",
      "var_0"
    ],
    "code": [
      "os",
      ".",
      "chdir",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": "owd"
    },
    "intent_indx": [
      213,
      410,
      170,
      8,
      17,
      170,
      25
    ],
    "code_indx_copy": [
      114,
      22,
      441,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      114,
      22,
      441,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "insert",
      "data",
      "from",
      "a",
      "string",
      "var_0",
      "to",
      "sqlite",
      "db",
      "var_1"
    ],
    "code": [
      "var_1",
      ".",
      "execute",
      "(",
      "\"INSERT INTO test VALUES (?, 'bar')\"",
      ",",
      "(",
      "var_0",
      ",",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": "testfield",
      "var_1": "c"
    },
    "intent_indx": [
      268,
      63,
      56,
      3,
      13,
      25,
      8,
      433,
      433,
      61
    ],
    "code_indx_copy": [
      92,
      22,
      408,
      1,
      520,
      8,
      1,
      34,
      8,
      17,
      17
    ],
    "code_indx_nocopy": [
      92,
      22,
      408,
      1,
      520,
      8,
      1,
      34,
      8,
      17,
      17
    ]
  },
  {
    "intent": [
      "decode",
      "string",
      "str_0",
      "into",
      "a",
      "normal",
      "string"
    ],
    "code": [
      "\"\"\"\\\\x89\\\\n\"\"\"",
      ".",
      "decode",
      "(",
      "'string_escape'",
      ")"
    ],
    "slot_map": {
      "str_0": "\\\\x89\\\\n"
    },
    "intent_indx": [
      178,
      13,
      5,
      11,
      3,
      433,
      13
    ],
    "code_indx_copy": [
      520,
      22,
      100,
      1,
      259,
      17
    ],
    "code_indx_nocopy": [
      520,
      22,
      100,
      1,
      259,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "raw",
      "string",
      "var_0",
      "into",
      "a",
      "normal",
      "string"
    ],
    "code": [
      "var_0",
      ".",
      "decode",
      "(",
      "'string_escape'",
      ")"
    ],
    "slot_map": {
      "var_0": "raw_string"
    },
    "intent_indx": [
      10,
      3,
      433,
      13,
      25,
      11,
      3,
      433,
      13
    ],
    "code_indx_copy": [
      34,
      22,
      100,
      1,
      259,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      100,
      1,
      259,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "raw",
      "string",
      "var_0",
      "into",
      "a",
      "normal",
      "string"
    ],
    "code": [
      "var_0",
      ".",
      "decode",
      "(",
      "'unicode_escape'",
      ")"
    ],
    "slot_map": {
      "var_0": "raw_byte_string"
    },
    "intent_indx": [
      10,
      3,
      433,
      13,
      25,
      11,
      3,
      433,
      13
    ],
    "code_indx_copy": [
      34,
      22,
      100,
      1,
      184,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      100,
      1,
      184,
      17
    ]
  },
  {
    "intent": [
      "split",
      "a",
      "string",
      "var_0",
      "with",
      "into",
      "all",
      "string",
      "of",
      "repeated",
      "character"
    ],
    "code": [
      "[",
      "m",
      ".",
      "group",
      "(",
      "0",
      ")",
      "for",
      "m",
      "in",
      "re",
      ".",
      "finditer",
      "(",
      "'(\\\\d)\\\\1*'",
      ",",
      "var_0",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": "s"
    },
    "intent_indx": [
      139,
      3,
      13,
      25,
      77,
      11,
      36,
      13,
      2,
      433,
      96
    ],
    "code_indx_copy": [
      12,
      93,
      22,
      121,
      1,
      43,
      17,
      7,
      93,
      9,
      39,
      22,
      122,
      1,
      520,
      8,
      34,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      93,
      22,
      121,
      1,
      43,
      17,
      7,
      93,
      9,
      39,
      22,
      122,
      1,
      520,
      8,
      34,
      17,
      16
    ]
  },
  {
    "intent": [
      "scatter",
      "a",
      "plot",
      "with",
      "x",
      ",",
      "y",
      "position",
      "of",
      "str_0",
      "and",
      "face",
      "color",
      "equal",
      "to",
      "none"
    ],
    "code": [
      "plt",
      ".",
      "scatter",
      "(",
      "np",
      ".",
      "random",
      ".",
      "randn",
      "(",
      "100",
      ")",
      ",",
      "np",
      ".",
      "random",
      ".",
      "randn",
      "(",
      "100",
      ")",
      ",",
      "facecolors",
      "=",
      "'none'",
      ")"
    ],
    "slot_map": {
      "str_0": "np.random.randn(100)"
    },
    "intent_indx": [
      433,
      3,
      235,
      77,
      433,
      60,
      433,
      291,
      2,
      5,
      29,
      433,
      214,
      104,
      8,
      433
    ],
    "code_indx_copy": [
      198,
      22,
      524,
      1,
      74,
      22,
      150,
      22,
      520,
      1,
      270,
      17,
      8,
      74,
      22,
      150,
      22,
      520,
      1,
      270,
      17,
      8,
      520,
      19,
      520,
      17
    ],
    "code_indx_nocopy": [
      198,
      22,
      520,
      1,
      74,
      22,
      150,
      22,
      520,
      1,
      270,
      17,
      8,
      74,
      22,
      150,
      22,
      520,
      1,
      270,
      17,
      8,
      520,
      19,
      520,
      17
    ]
  },
  {
    "intent": [
      "do",
      "a",
      "scatter",
      "plot",
      "with",
      "empty",
      "circle"
    ],
    "code": [
      "plt",
      ".",
      "plot",
      "(",
      "np",
      ".",
      "random",
      ".",
      "randn",
      "(",
      "100",
      ")",
      ",",
      "np",
      ".",
      "random",
      ".",
      "randn",
      "(",
      "100",
      ")",
      ",",
      "'o'",
      ",",
      "mfc",
      "=",
      "'none'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      312,
      3,
      433,
      235,
      77,
      144,
      433
    ],
    "code_indx_copy": [
      198,
      22,
      292,
      1,
      74,
      22,
      150,
      22,
      520,
      1,
      270,
      17,
      8,
      74,
      22,
      150,
      22,
      520,
      1,
      270,
      17,
      8,
      520,
      8,
      520,
      19,
      520,
      17
    ],
    "code_indx_nocopy": [
      198,
      22,
      292,
      1,
      74,
      22,
      150,
      22,
      520,
      1,
      270,
      17,
      8,
      74,
      22,
      150,
      22,
      520,
      1,
      270,
      17,
      8,
      520,
      8,
      520,
      19,
      520,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "a",
      "div",
      "with",
      "a",
      "id",
      "str_0",
      "using",
      "beautifulsoup"
    ],
    "code": [
      "soup",
      ".",
      "find",
      "(",
      "'div'",
      ",",
      "id",
      "=",
      "'str_0'",
      ")",
      ".",
      "decompose",
      "(",
      ")"
    ],
    "slot_map": {
      "str_0": "main-content"
    },
    "intent_indx": [
      258,
      3,
      433,
      77,
      3,
      220,
      5,
      108,
      68
    ],
    "code_indx_copy": [
      61,
      22,
      284,
      1,
      520,
      8,
      80,
      19,
      29,
      17,
      22,
      520,
      1,
      17
    ],
    "code_indx_nocopy": [
      61,
      22,
      284,
      1,
      520,
      8,
      80,
      19,
      29,
      17,
      22,
      520,
      1,
      17
    ]
  },
  {
    "intent": [
      "filter",
      "row",
      "containing",
      "key",
      "word",
      "var_0",
      "in",
      "column",
      "var_1"
    ],
    "code": [
      "df",
      "[",
      "df",
      "[",
      "'var_1'",
      "]",
      ".",
      "str",
      ".",
      "contains",
      "(",
      "'var_0'",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": "ball",
      "var_1": "ids"
    },
    "intent_indx": [
      209,
      43,
      32,
      22,
      39,
      25,
      23,
      59,
      61
    ],
    "code_indx_copy": [
      151,
      12,
      151,
      12,
      57,
      16,
      22,
      25,
      22,
      520,
      1,
      56,
      17,
      16
    ],
    "code_indx_nocopy": [
      151,
      12,
      151,
      12,
      57,
      16,
      22,
      25,
      22,
      520,
      1,
      56,
      17,
      16
    ]
  },
  {
    "intent": [
      "convert",
      "index",
      "at",
      "level",
      "0",
      "into",
      "a",
      "column",
      "in",
      "dataframe",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "reset_index",
      "(",
      "level",
      "=",
      "0",
      ",",
      "inplace",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "var_0": "df"
    },
    "intent_indx": [
      10,
      35,
      33,
      230,
      105,
      11,
      3,
      59,
      23,
      41,
      25
    ],
    "code_indx_copy": [
      34,
      22,
      188,
      1,
      160,
      19,
      43,
      8,
      281,
      19,
      110,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      188,
      1,
      160,
      19,
      43,
      8,
      281,
      19,
      110,
      17
    ]
  },
  {
    "intent": [
      "add",
      "index",
      "in",
      "a",
      "data",
      "frame",
      "var_0",
      "to",
      "a",
      "column",
      "var_1"
    ],
    "code": [
      "var_0",
      "[",
      "'var_1'",
      "]",
      "=",
      "var_0",
      ".",
      "index"
    ],
    "slot_map": {
      "var_0": "df",
      "var_1": "index1"
    },
    "intent_indx": [
      58,
      35,
      23,
      3,
      63,
      64,
      25,
      8,
      3,
      59,
      61
    ],
    "code_indx_copy": [
      34,
      12,
      57,
      16,
      19,
      34,
      22,
      162
    ],
    "code_indx_nocopy": [
      34,
      12,
      57,
      16,
      19,
      34,
      22,
      162
    ]
  },
  {
    "intent": [
      "convert",
      "panda",
      "index",
      "in",
      "a",
      "dataframe",
      "to",
      "column"
    ],
    "code": [
      "df",
      ".",
      "reset_index",
      "(",
      "level",
      "=",
      "[",
      "'tick'",
      ",",
      "'obs'",
      "]",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      10,
      40,
      35,
      23,
      3,
      41,
      8,
      59
    ],
    "code_indx_copy": [
      151,
      22,
      188,
      1,
      160,
      19,
      12,
      520,
      8,
      520,
      16,
      17
    ],
    "code_indx_nocopy": [
      151,
      22,
      188,
      1,
      160,
      19,
      12,
      520,
      8,
      520,
      16,
      17
    ]
  },
  {
    "intent": [
      "get",
      "reverse",
      "of",
      "list",
      "item",
      "from",
      "list",
      "str_0",
      "using",
      "extended",
      "slicing"
    ],
    "code": [
      "[",
      "x",
      "[",
      ":",
      ":",
      "-",
      "1",
      "]",
      "for",
      "x",
      "in",
      "str_0",
      "]"
    ],
    "slot_map": {
      "str_0": "b"
    },
    "intent_indx": [
      16,
      273,
      2,
      4,
      37,
      56,
      4,
      5,
      108,
      433,
      433
    ],
    "code_indx_copy": [
      12,
      26,
      12,
      13,
      13,
      14,
      15,
      16,
      7,
      26,
      9,
      11,
      16
    ],
    "code_indx_nocopy": [
      12,
      26,
      12,
      13,
      13,
      14,
      15,
      16,
      7,
      26,
      9,
      11,
      16
    ]
  },
  {
    "intent": [
      "join",
      "each",
      "element",
      "in",
      "array",
      "var_0",
      "with",
      "element",
      "at",
      "the",
      "same",
      "index",
      "in",
      "array",
      "var_1",
      "a",
      "a",
      "tuple"
    ],
    "code": [
      "np",
      ".",
      "array",
      "(",
      "[",
      "zip",
      "(",
      "x",
      ",",
      "y",
      ")",
      "for",
      "x",
      ",",
      "y",
      "in",
      "zip",
      "(",
      "var_0",
      ",",
      "var_1",
      ")",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": "a",
      "var_1": "b"
    },
    "intent_indx": [
      272,
      21,
      1,
      23,
      82,
      25,
      77,
      1,
      33,
      17,
      34,
      35,
      23,
      82,
      61,
      3,
      3,
      112
    ],
    "code_indx_copy": [
      74,
      22,
      177,
      1,
      12,
      36,
      1,
      26,
      8,
      104,
      17,
      7,
      26,
      8,
      104,
      9,
      36,
      1,
      34,
      8,
      92,
      17,
      16,
      17
    ],
    "code_indx_nocopy": [
      74,
      22,
      177,
      1,
      12,
      36,
      1,
      26,
      8,
      104,
      17,
      7,
      26,
      8,
      104,
      9,
      36,
      1,
      34,
      8,
      92,
      17,
      16,
      17
    ]
  },
  {
    "intent": [
      "zip",
      "two",
      "2-d",
      "array",
      "var_0",
      "and",
      "var_1"
    ],
    "code": [
      "np",
      ".",
      "array",
      "(",
      "zip",
      "(",
      "var_0",
      ".",
      "ravel",
      "(",
      ")",
      ",",
      "var_1",
      ".",
      "ravel",
      "(",
      ")",
      ")",
      ",",
      "dtype",
      "=",
      "'i4,i4'",
      ")",
      ".",
      "reshape",
      "(",
      "var_0",
      ".",
      "shape",
      ")"
    ],
    "slot_map": {
      "var_0": "a",
      "var_1": "b"
    },
    "intent_indx": [
      27,
      28,
      433,
      82,
      25,
      29,
      61
    ],
    "code_indx_copy": [
      74,
      22,
      177,
      1,
      36,
      1,
      34,
      22,
      520,
      1,
      17,
      8,
      92,
      22,
      520,
      1,
      17,
      17,
      8,
      179,
      19,
      520,
      17,
      22,
      361,
      1,
      34,
      22,
      226,
      17
    ],
    "code_indx_nocopy": [
      74,
      22,
      177,
      1,
      36,
      1,
      34,
      22,
      520,
      1,
      17,
      8,
      92,
      22,
      520,
      1,
      17,
      17,
      8,
      179,
      19,
      520,
      17,
      22,
      361,
      1,
      34,
      22,
      226,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "list",
      "var_0",
      "into",
      "a",
      "comma",
      "separated",
      "string"
    ],
    "code": [
      "\"\"\",\"\"\"",
      ".",
      "join",
      "(",
      "[",
      "str",
      "(",
      "i",
      ")",
      "for",
      "i",
      "in",
      "var_0",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": "list_of_ints"
    },
    "intent_indx": [
      10,
      4,
      25,
      11,
      3,
      250,
      323,
      13
    ],
    "code_indx_copy": [
      520,
      22,
      23,
      1,
      12,
      25,
      1,
      6,
      17,
      7,
      6,
      9,
      34,
      16,
      17
    ],
    "code_indx_nocopy": [
      520,
      22,
      23,
      1,
      12,
      25,
      1,
      6,
      17,
      7,
      6,
      9,
      34,
      16,
      17
    ]
  },
  {
    "intent": [
      "send",
      "a",
      "post",
      "request",
      "with",
      "raw",
      "data",
      "var_0",
      "and",
      "basic",
      "authentication",
      "with",
      "var_1",
      "and",
      "var_2"
    ],
    "code": [
      "requests",
      ".",
      "post",
      "(",
      "url",
      ",",
      "data",
      "=",
      "var_0",
      ",",
      "headers",
      "=",
      "HEADERS_DICT",
      ",",
      "auth",
      "=",
      "(",
      "var_1",
      ",",
      "var_2",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": "DATA",
      "var_1": "username",
      "var_2": "password"
    },
    "intent_indx": [
      433,
      3,
      386,
      99,
      77,
      433,
      63,
      25,
      29,
      433,
      433,
      77,
      61,
      29,
      62
    ],
    "code_indx_copy": [
      86,
      22,
      379,
      1,
      238,
      8,
      137,
      19,
      34,
      8,
      291,
      19,
      520,
      8,
      520,
      19,
      1,
      92,
      8,
      95,
      17,
      17
    ],
    "code_indx_nocopy": [
      86,
      22,
      379,
      1,
      238,
      8,
      137,
      19,
      34,
      8,
      291,
      19,
      520,
      8,
      520,
      19,
      1,
      92,
      8,
      95,
      17,
      17
    ]
  },
  {
    "intent": [
      "find",
      "last",
      "occurrence",
      "of",
      "character",
      "str_0",
      "in",
      "string",
      "str_1"
    ],
    "code": [
      "\"\"\"str_1\"\"\"",
      ".",
      "rfind",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": "}",
      "str_1": "abcd}def}"
    },
    "intent_indx": [
      45,
      165,
      50,
      2,
      96,
      5,
      23,
      13,
      30
    ],
    "code_indx_copy": [
      435,
      22,
      436,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      435,
      22,
      436,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "iterate",
      "ove",
      "list",
      "str_0",
      "using",
      "list",
      "comprehension"
    ],
    "code": [
      "print",
      "(",
      "[",
      "item",
      "for",
      "item",
      "in",
      "[",
      "str_0",
      "]",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": "[1, 2, 3]",
      "[str_0]": "[1, 2, 3]"
    },
    "intent_indx": [
      423,
      433,
      4,
      5,
      108,
      4,
      332
    ],
    "code_indx_copy": [
      49,
      1,
      12,
      386,
      7,
      386,
      9,
      12,
      11,
      16,
      16,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      12,
      386,
      7,
      386,
      9,
      12,
      11,
      16,
      16,
      17
    ]
  },
  {
    "intent": [
      "extract",
      "all",
      "the",
      "value",
      "with",
      "key",
      "str_0",
      "and",
      "str_1",
      "from",
      "a",
      "list",
      "of",
      "dictionary",
      "var_0",
      "to",
      "list",
      "of",
      "tuples"
    ],
    "code": [
      "[",
      "(",
      "str_0",
      "[",
      "'str_0'",
      "]",
      ",",
      "str_0",
      "[",
      "'str_1'",
      "]",
      ")",
      "for",
      "str_0",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "str_0": "x",
      "str_1": "y",
      "var_0": "d"
    },
    "intent_indx": [
      102,
      36,
      17,
      19,
      77,
      22,
      5,
      29,
      30,
      56,
      3,
      4,
      2,
      24,
      25,
      8,
      4,
      2,
      31
    ],
    "code_indx_copy": [
      12,
      1,
      11,
      12,
      29,
      16,
      8,
      11,
      12,
      63,
      16,
      17,
      7,
      11,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      12,
      1,
      11,
      12,
      29,
      16,
      8,
      11,
      12,
      63,
      16,
      17,
      7,
      11,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "filename",
      "without",
      "the",
      "extension",
      "from",
      "file",
      "str_0"
    ],
    "code": [
      "print",
      "(",
      "os",
      ".",
      "path",
      ".",
      "splitext",
      "(",
      "os",
      ".",
      "path",
      ".",
      "basename",
      "(",
      "'str_0'",
      ")",
      ")",
      "[",
      "0",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": "hemanth.txt"
    },
    "intent_indx": [
      16,
      17,
      433,
      101,
      17,
      433,
      56,
      126,
      5
    ],
    "code_indx_copy": [
      49,
      1,
      114,
      22,
      115,
      22,
      520,
      1,
      114,
      22,
      115,
      22,
      520,
      1,
      29,
      17,
      17,
      12,
      43,
      16,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      114,
      22,
      115,
      22,
      520,
      1,
      114,
      22,
      115,
      22,
      520,
      1,
      29,
      17,
      17,
      12,
      43,
      16,
      17
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "dictionary",
      "by",
      "adding",
      "each",
      "two",
      "adjacent",
      "element",
      "in",
      "tuple",
      "var_0",
      "a",
      "key/value",
      "pair",
      "to",
      "it"
    ],
    "code": [
      "dict",
      "(",
      "var_0",
      "[",
      "i",
      ":",
      "i",
      "+",
      "2",
      "]",
      "for",
      "i",
      "in",
      "range",
      "(",
      "0",
      ",",
      "len",
      "(",
      "var_0",
      ")",
      ",",
      "2",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": "x"
    },
    "intent_indx": [
      145,
      3,
      24,
      42,
      433,
      21,
      28,
      433,
      1,
      23,
      112,
      25,
      3,
      87,
      88,
      8,
      89
    ],
    "code_indx_copy": [
      70,
      1,
      34,
      12,
      6,
      13,
      6,
      97,
      82,
      16,
      7,
      6,
      9,
      105,
      1,
      43,
      8,
      32,
      1,
      34,
      17,
      8,
      82,
      17,
      17
    ],
    "code_indx_nocopy": [
      70,
      1,
      34,
      12,
      6,
      13,
      6,
      97,
      82,
      16,
      7,
      6,
      9,
      105,
      1,
      43,
      8,
      32,
      1,
      34,
      17,
      8,
      82,
      17,
      17
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "list",
      "containing",
      "flattened",
      "list",
      "str_0"
    ],
    "code": [
      "values",
      "=",
      "sum",
      "(",
      "[",
      "str_0",
      "]",
      ",",
      "[",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": "[['A', 'B', 'C'], ['D', 'E', 'F'], ['G', 'H', 'I']]",
      "[str_0]": "[['A', 'B', 'C'], ['D', 'E', 'F'], ['G', 'H', 'I']]"
    },
    "intent_indx": [
      145,
      3,
      4,
      32,
      433,
      4,
      5
    ],
    "code_indx_copy": [
      168,
      19,
      0,
      1,
      12,
      11,
      16,
      8,
      12,
      16,
      17
    ],
    "code_indx_nocopy": [
      168,
      19,
      0,
      1,
      12,
      11,
      16,
      8,
      12,
      16,
      17
    ]
  },
  {
    "intent": [
      "select",
      "row",
      "in",
      "a",
      "dataframe",
      "var_0",
      "column",
      "str_0",
      "between",
      "two",
      "value",
      "int_0",
      "and",
      "int_1"
    ],
    "code": [
      "var_0",
      "=",
      "var_0",
      "[",
      "(",
      "var_0",
      "[",
      "'str_0'",
      "]",
      ">=",
      "int_0",
      ")",
      "&",
      "(",
      "var_0",
      "[",
      "'str_0'",
      "]",
      "<=",
      "int_1",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": "df",
      "str_0": "closing_price",
      "int_0": "99",
      "int_1": "101"
    },
    "intent_indx": [
      76,
      43,
      23,
      3,
      41,
      25,
      59,
      5,
      269,
      28,
      19,
      259,
      29,
      433
    ],
    "code_indx_copy": [
      34,
      19,
      34,
      12,
      1,
      34,
      12,
      29,
      16,
      520,
      314,
      17,
      229,
      1,
      34,
      12,
      29,
      16,
      520,
      537,
      17,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      34,
      12,
      1,
      34,
      12,
      29,
      16,
      520,
      314,
      17,
      229,
      1,
      34,
      12,
      29,
      16,
      520,
      520,
      17,
      16
    ]
  },
  {
    "intent": [
      "replace",
      "all",
      "occurences",
      "of",
      "newlines",
      "str_0",
      "with",
      "str_1",
      "in",
      "dataframe",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "replace",
      "(",
      "{",
      "'\\n'",
      ":",
      "'str_1'",
      "}",
      ",",
      "regex",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "str_0": "\\n",
      "str_1": "<br>",
      "var_0": "df"
    },
    "intent_indx": [
      131,
      36,
      433,
      2,
      433,
      5,
      77,
      30,
      23,
      41,
      25
    ],
    "code_indx_copy": [
      34,
      22,
      108,
      1,
      52,
      135,
      13,
      63,
      53,
      8,
      520,
      19,
      110,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      108,
      1,
      52,
      135,
      13,
      63,
      53,
      8,
      520,
      19,
      110,
      17
    ]
  },
  {
    "intent": [
      "replace",
      "all",
      "occurrence",
      "of",
      "a",
      "string",
      "str_0",
      "by",
      "string",
      "str_1",
      "in",
      "a",
      "panda",
      "data",
      "frame",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "replace",
      "(",
      "{",
      "'\\n'",
      ":",
      "'str_1'",
      "}",
      ",",
      "regex",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "str_0": "\\n",
      "str_1": "<br>",
      "var_0": "df"
    },
    "intent_indx": [
      131,
      36,
      50,
      2,
      3,
      13,
      5,
      42,
      13,
      30,
      23,
      3,
      40,
      63,
      64,
      25
    ],
    "code_indx_copy": [
      34,
      22,
      108,
      1,
      52,
      135,
      13,
      63,
      53,
      8,
      520,
      19,
      110,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      108,
      1,
      52,
      135,
      13,
      63,
      53,
      8,
      520,
      19,
      110,
      17
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "list",
      "containing",
      "each",
      "two",
      "adjacent",
      "letter",
      "in",
      "string",
      "var_0",
      "a",
      "it",
      "element"
    ],
    "code": [
      "[",
      "(",
      "x",
      "+",
      "y",
      ")",
      "for",
      "x",
      ",",
      "y",
      "in",
      "zip",
      "(",
      "var_0",
      ",",
      "var_0",
      "[",
      "1",
      ":",
      "]",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": "word"
    },
    "intent_indx": [
      145,
      3,
      4,
      32,
      21,
      28,
      433,
      347,
      23,
      13,
      25,
      3,
      89,
      1
    ],
    "code_indx_copy": [
      12,
      1,
      26,
      97,
      104,
      17,
      7,
      26,
      8,
      104,
      9,
      36,
      1,
      34,
      8,
      34,
      12,
      15,
      13,
      16,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      1,
      26,
      97,
      104,
      17,
      7,
      26,
      8,
      104,
      9,
      36,
      1,
      34,
      8,
      34,
      12,
      15,
      13,
      16,
      17,
      16
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "list",
      "of",
      "pair",
      "from",
      "a",
      "string",
      "var_0",
      "using",
      "lambda",
      "function"
    ],
    "code": [
      "list",
      "(",
      "map",
      "(",
      "lambda",
      "x",
      ",",
      "y",
      ":",
      "x",
      "+",
      "y",
      ",",
      "var_0",
      "[",
      ":",
      "-",
      "1",
      "]",
      ",",
      "var_0",
      "[",
      "1",
      ":",
      "]",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": "word"
    },
    "intent_indx": [
      16,
      3,
      4,
      2,
      88,
      56,
      3,
      13,
      25,
      108,
      66,
      67
    ],
    "code_indx_copy": [
      33,
      1,
      24,
      1,
      44,
      26,
      8,
      104,
      13,
      26,
      97,
      104,
      8,
      34,
      12,
      13,
      14,
      15,
      16,
      8,
      34,
      12,
      15,
      13,
      16,
      17,
      17
    ],
    "code_indx_nocopy": [
      33,
      1,
      24,
      1,
      44,
      26,
      8,
      104,
      13,
      26,
      97,
      104,
      8,
      34,
      12,
      13,
      14,
      15,
      16,
      8,
      34,
      12,
      15,
      13,
      16,
      17,
      17
    ]
  },
  {
    "intent": [
      "extract",
      "a",
      "url",
      "from",
      "a",
      "string",
      "var_0"
    ],
    "code": [
      "print",
      "(",
      "re",
      ".",
      "findall",
      "(",
      "'(https?://[^\\\\s]+)'",
      ",",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": "myString"
    },
    "intent_indx": [
      102,
      3,
      100,
      56,
      3,
      13,
      25
    ],
    "code_indx_copy": [
      49,
      1,
      39,
      22,
      48,
      1,
      520,
      8,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      39,
      22,
      48,
      1,
      520,
      8,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "extract",
      "a",
      "url",
      "from",
      "a",
      "string",
      "var_0"
    ],
    "code": [
      "print",
      "(",
      "re",
      ".",
      "search",
      "(",
      "'(?P<url>https?://[^\\\\s]+)'",
      ",",
      "var_0",
      ")",
      ".",
      "group",
      "(",
      "'url'",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": "myString"
    },
    "intent_indx": [
      102,
      3,
      100,
      56,
      3,
      13,
      25
    ],
    "code_indx_copy": [
      49,
      1,
      39,
      22,
      94,
      1,
      520,
      8,
      34,
      17,
      22,
      121,
      1,
      520,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      39,
      22,
      94,
      1,
      520,
      8,
      34,
      17,
      22,
      121,
      1,
      520,
      17,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "all",
      "special",
      "character",
      ",",
      "punctuation",
      "and",
      "space",
      "from",
      "a",
      "string",
      "var_0",
      "using",
      "regex"
    ],
    "code": [
      "re",
      ".",
      "sub",
      "(",
      "'[^A-Za-z0-9]+'",
      ",",
      "''",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": "mystring"
    },
    "intent_indx": [
      258,
      36,
      433,
      96,
      60,
      98,
      29,
      133,
      56,
      3,
      13,
      25,
      108,
      38
    ],
    "code_indx_copy": [
      39,
      22,
      40,
      1,
      520,
      8,
      21,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      40,
      1,
      520,
      8,
      21,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "datetimeindex",
      "containing",
      "int_0",
      "period",
      "of",
      "the",
      "second",
      "friday",
      "of",
      "each",
      "month",
      "starting",
      "from",
      "date",
      "str_0"
    ],
    "code": [
      "pd",
      ".",
      "date_range",
      "(",
      "'str_0'",
      ",",
      "freq",
      "=",
      "'WOM-2FRI'",
      ",",
      "periods",
      "=",
      "int_0",
      ")"
    ],
    "slot_map": {
      "str_0": "2016-01-01",
      "int_0": "13"
    },
    "intent_indx": [
      145,
      3,
      433,
      32,
      259,
      433,
      2,
      17,
      118,
      433,
      2,
      21,
      374,
      304,
      56,
      134,
      5
    ],
    "code_indx_copy": [
      164,
      22,
      520,
      1,
      29,
      8,
      520,
      19,
      520,
      8,
      520,
      19,
      314,
      17
    ],
    "code_indx_nocopy": [
      164,
      22,
      520,
      1,
      29,
      8,
      520,
      19,
      520,
      8,
      520,
      19,
      314,
      17
    ]
  },
  {
    "intent": [
      "create",
      "multidimensional",
      "array",
      "var_0",
      "with",
      "3",
      "row",
      "and",
      "2",
      "column",
      "in",
      "python"
    ],
    "code": [
      "var_0",
      "=",
      "[",
      "[",
      "a",
      ",",
      "b",
      "]",
      ",",
      "[",
      "c",
      ",",
      "d",
      "]",
      ",",
      "[",
      "e",
      ",",
      "f",
      "]",
      "]"
    ],
    "slot_map": {
      "var_0": "matrix"
    },
    "intent_indx": [
      145,
      433,
      82,
      25,
      77,
      55,
      43,
      29,
      79,
      59,
      23,
      47
    ],
    "code_indx_copy": [
      34,
      19,
      12,
      12,
      96,
      8,
      98,
      16,
      8,
      12,
      66,
      8,
      2,
      16,
      8,
      12,
      417,
      8,
      192,
      16,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      12,
      12,
      96,
      8,
      98,
      16,
      8,
      12,
      66,
      8,
      2,
      16,
      8,
      12,
      417,
      8,
      192,
      16,
      16
    ]
  },
  {
    "intent": [
      "replace",
      "space",
      "with",
      "underscore"
    ],
    "code": [
      "mystring",
      ".",
      "replace",
      "(",
      "' '",
      ",",
      "'_'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      131,
      133,
      77,
      433
    ],
    "code_indx_copy": [
      520,
      22,
      108,
      1,
      109,
      8,
      337,
      17
    ],
    "code_indx_nocopy": [
      520,
      22,
      108,
      1,
      109,
      8,
      337,
      17
    ]
  },
  {
    "intent": [
      "get",
      "an",
      "absolute",
      "file",
      "path",
      "of",
      "file",
      "str_0"
    ],
    "code": [
      "os",
      ".",
      "path",
      ".",
      "abspath",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": "mydir/myfile.txt"
    },
    "intent_indx": [
      16,
      217,
      433,
      126,
      193,
      2,
      126,
      5
    ],
    "code_indx_copy": [
      114,
      22,
      115,
      22,
      377,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      114,
      22,
      115,
      22,
      377,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "split",
      "string",
      "var_0",
      "on",
      "white",
      "space"
    ],
    "code": [
      "\"\"\" \"\"\"",
      ".",
      "join",
      "(",
      "var_0",
      ".",
      "split",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": "my_string"
    },
    "intent_indx": [
      139,
      13,
      25,
      140,
      132,
      133
    ],
    "code_indx_copy": [
      217,
      22,
      23,
      1,
      34,
      22,
      71,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      217,
      22,
      23,
      1,
      34,
      22,
      71,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "filename",
      "without",
      "extension",
      "from",
      "file",
      "var_0"
    ],
    "code": [
      "os",
      ".",
      "path",
      ".",
      "splitext",
      "(",
      "var_0",
      ")",
      "[",
      "0",
      "]"
    ],
    "slot_map": {
      "var_0": "filename"
    },
    "intent_indx": [
      16,
      433,
      101,
      433,
      56,
      126,
      25
    ],
    "code_indx_copy": [
      114,
      22,
      115,
      22,
      520,
      1,
      34,
      17,
      12,
      43,
      16
    ],
    "code_indx_nocopy": [
      114,
      22,
      115,
      22,
      520,
      1,
      34,
      17,
      12,
      43,
      16
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "list",
      "containing",
      "the",
      "sum",
      "of",
      "each",
      "element",
      "var_0",
      "in",
      "list",
      "var_1",
      "plus",
      "the",
      "previous",
      "element"
    ],
    "code": [
      "[",
      "sum",
      "(",
      "var_1",
      "[",
      ":",
      "var_0",
      "]",
      ")",
      "for",
      "var_0",
      ",",
      "_",
      "in",
      "enumerate",
      "(",
      "var_1",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": "i",
      "var_1": "l"
    },
    "intent_indx": [
      16,
      3,
      4,
      32,
      17,
      111,
      2,
      21,
      1,
      25,
      23,
      4,
      61,
      433,
      17,
      433,
      1
    ],
    "code_indx_copy": [
      12,
      0,
      1,
      92,
      12,
      13,
      34,
      16,
      17,
      7,
      34,
      8,
      466,
      9,
      10,
      1,
      92,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      0,
      1,
      92,
      12,
      13,
      34,
      16,
      17,
      7,
      34,
      8,
      466,
      9,
      10,
      1,
      92,
      17,
      16
    ]
  },
  {
    "intent": [
      "split",
      "a",
      "string",
      "str_0",
      "by",
      "str_1",
      "keeping",
      "str_1",
      "in",
      "the",
      "result"
    ],
    "code": [
      "\"\"\"str_0\"\"\"",
      ".",
      "replace",
      "(",
      "'str_2'",
      ",",
      "'/\\x00/'",
      ")",
      ".",
      "split",
      "(",
      "'\\x00'",
      ")"
    ],
    "slot_map": {
      "str_0": "Docs/src/Scripts/temp",
      "str_1": "/",
      "str_2": "/"
    },
    "intent_indx": [
      139,
      3,
      13,
      5,
      42,
      30,
      433,
      30,
      23,
      17,
      433
    ],
    "code_indx_copy": [
      214,
      22,
      108,
      1,
      152,
      8,
      520,
      17,
      22,
      71,
      1,
      520,
      17
    ],
    "code_indx_nocopy": [
      214,
      22,
      108,
      1,
      152,
      8,
      520,
      17,
      22,
      71,
      1,
      520,
      17
    ]
  },
  {
    "intent": [
      "shuffle",
      "column",
      "of",
      "an",
      "numpy",
      "array",
      "str_0"
    ],
    "code": [
      "np",
      ".",
      "random",
      ".",
      "shuffle",
      "(",
      "np",
      ".",
      "transpose",
      "(",
      "str_0",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": "r"
    },
    "intent_indx": [
      433,
      59,
      2,
      217,
      81,
      82,
      5
    ],
    "code_indx_copy": [
      74,
      22,
      150,
      22,
      524,
      1,
      74,
      22,
      520,
      1,
      11,
      17,
      17
    ],
    "code_indx_nocopy": [
      74,
      22,
      150,
      22,
      520,
      1,
      74,
      22,
      520,
      1,
      11,
      17,
      17
    ]
  },
  {
    "intent": [
      "copy",
      "all",
      "value",
      "in",
      "a",
      "column",
      "str_0",
      "to",
      "a",
      "new",
      "column",
      "str_1",
      "in",
      "a",
      "panda",
      "data",
      "frame",
      "str_2"
    ],
    "code": [
      "str_2",
      "[",
      "'str_1'",
      "]",
      "=",
      "str_2",
      "[",
      "'str_0'",
      "]"
    ],
    "slot_map": {
      "str_0": "B",
      "str_1": "D",
      "str_2": "df"
    },
    "intent_indx": [
      310,
      36,
      19,
      23,
      3,
      59,
      5,
      8,
      3,
      186,
      59,
      30,
      23,
      3,
      40,
      63,
      64,
      188
    ],
    "code_indx_copy": [
      185,
      12,
      63,
      16,
      19,
      185,
      12,
      29,
      16
    ],
    "code_indx_nocopy": [
      185,
      12,
      63,
      16,
      19,
      185,
      12,
      29,
      16
    ]
  },
  {
    "intent": [
      "find",
      "a",
      "value",
      "within",
      "nested",
      "json",
      "str_0",
      "where",
      "the",
      "key",
      "inside",
      "another",
      "key",
      "str_1",
      "is",
      "unknown",
      "."
    ],
    "code": [
      "list",
      "(",
      "str_0",
      "[",
      "'A'",
      "]",
      "[",
      "'str_1'",
      "]",
      ".",
      "values",
      "(",
      ")",
      ")",
      "[",
      "0",
      "]",
      "[",
      "'maindata'",
      "]",
      "[",
      "0",
      "]",
      "[",
      "'Info'",
      "]"
    ],
    "slot_map": {
      "str_0": "data",
      "str_1": "B"
    },
    "intent_indx": [
      45,
      3,
      19,
      52,
      151,
      176,
      5,
      152,
      17,
      22,
      44,
      171,
      22,
      30,
      149,
      433,
      155
    ],
    "code_indx_copy": [
      33,
      1,
      11,
      12,
      250,
      16,
      12,
      63,
      16,
      22,
      168,
      1,
      17,
      17,
      12,
      43,
      16,
      12,
      520,
      16,
      12,
      43,
      16,
      12,
      520,
      16
    ],
    "code_indx_nocopy": [
      33,
      1,
      11,
      12,
      250,
      16,
      12,
      63,
      16,
      22,
      168,
      1,
      17,
      17,
      12,
      43,
      16,
      12,
      520,
      16,
      12,
      43,
      16,
      12,
      520,
      16
    ]
  },
  {
    "intent": [
      "check",
      "character",
      "of",
      "string",
      "var_0",
      "are",
      "true",
      "predication",
      "of",
      "function",
      "var_1"
    ],
    "code": [
      "all",
      "(",
      "var_1",
      "(",
      "x",
      ")",
      "for",
      "x",
      "in",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": "string",
      "var_1": "predicate"
    },
    "intent_indx": [
      227,
      96,
      2,
      13,
      25,
      234,
      354,
      433,
      2,
      67,
      61
    ],
    "code_indx_copy": [
      77,
      1,
      92,
      1,
      26,
      17,
      7,
      26,
      9,
      34,
      17
    ],
    "code_indx_nocopy": [
      77,
      1,
      92,
      1,
      26,
      17,
      7,
      26,
      9,
      34,
      17
    ]
  },
  {
    "intent": [
      "determine",
      "number",
      "of",
      "file",
      "on",
      "a",
      "drive",
      "with",
      "python"
    ],
    "code": [
      "os",
      ".",
      "statvfs",
      "(",
      "'/'",
      ")",
      ".",
      "f_files",
      "-",
      "os",
      ".",
      "statvfs",
      "(",
      "'/'",
      ")",
      ".",
      "f_ffree"
    ],
    "slot_map": {},
    "intent_indx": [
      433,
      74,
      2,
      126,
      140,
      3,
      433,
      77,
      47
    ],
    "code_indx_copy": [
      114,
      22,
      520,
      1,
      520,
      17,
      22,
      520,
      14,
      114,
      22,
      520,
      1,
      520,
      17,
      22,
      520
    ],
    "code_indx_nocopy": [
      114,
      22,
      520,
      1,
      520,
      17,
      22,
      520,
      14,
      114,
      22,
      520,
      1,
      520,
      17,
      22,
      520
    ]
  },
  {
    "intent": [
      "how",
      "to",
      "get",
      "a",
      "single",
      "result",
      "from",
      "a",
      "sqlite",
      "query",
      "in",
      "python",
      "?"
    ],
    "code": [
      "cursor",
      ".",
      "fetchone",
      "(",
      ")",
      "[",
      "0",
      "]"
    ],
    "slot_map": {},
    "intent_indx": [
      75,
      8,
      16,
      3,
      9,
      433,
      56,
      3,
      433,
      266,
      23,
      47,
      49
    ],
    "code_indx_copy": [
      412,
      22,
      520,
      1,
      17,
      12,
      43,
      16
    ],
    "code_indx_nocopy": [
      412,
      22,
      520,
      1,
      17,
      12,
      43,
      16
    ]
  },
  {
    "intent": [
      "convert",
      "string",
      "var_0",
      "into",
      "a",
      "list",
      "of",
      "integer",
      "var_1"
    ],
    "code": [
      "var_1",
      "=",
      "[",
      "int",
      "(",
      "number",
      ")",
      "for",
      "number",
      "in",
      "var_0",
      ".",
      "split",
      "(",
      "','",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": "user_input",
      "var_1": "user_list"
    },
    "intent_indx": [
      10,
      13,
      25,
      11,
      3,
      4,
      2,
      7,
      61
    ],
    "code_indx_copy": [
      92,
      19,
      12,
      20,
      1,
      420,
      17,
      7,
      420,
      9,
      34,
      22,
      71,
      1,
      73,
      17,
      16
    ],
    "code_indx_nocopy": [
      92,
      19,
      12,
      20,
      1,
      420,
      17,
      7,
      420,
      9,
      34,
      22,
      71,
      1,
      73,
      17,
      16
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "list",
      "of",
      "integer",
      "by",
      "splitting",
      "a",
      "string",
      "var_0",
      "with",
      "comma"
    ],
    "code": [
      "[",
      "int",
      "(",
      "s",
      ")",
      "for",
      "s",
      "in",
      "var_0",
      ".",
      "split",
      "(",
      "','",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": "user"
    },
    "intent_indx": [
      16,
      3,
      4,
      2,
      7,
      42,
      403,
      3,
      13,
      25,
      77,
      250
    ],
    "code_indx_copy": [
      12,
      20,
      1,
      183,
      17,
      7,
      183,
      9,
      34,
      22,
      71,
      1,
      73,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      20,
      1,
      183,
      17,
      7,
      183,
      9,
      34,
      22,
      71,
      1,
      73,
      17,
      16
    ]
  },
  {
    "intent": [
      "sorting",
      "a",
      "python",
      "list",
      "by",
      "two",
      "criterion"
    ],
    "code": [
      "sorted",
      "(",
      "list",
      ",",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "(",
      "x",
      "[",
      "0",
      "]",
      ",",
      "-",
      "x",
      "[",
      "1",
      "]",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      274,
      3,
      47,
      4,
      42,
      28,
      433
    ],
    "code_indx_copy": [
      102,
      1,
      33,
      8,
      103,
      19,
      44,
      26,
      13,
      1,
      26,
      12,
      43,
      16,
      8,
      14,
      26,
      12,
      15,
      16,
      17,
      17
    ],
    "code_indx_nocopy": [
      102,
      1,
      33,
      8,
      103,
      19,
      44,
      26,
      13,
      1,
      26,
      12,
      43,
      16,
      8,
      14,
      26,
      12,
      15,
      16,
      17,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "list",
      "of",
      "object",
      "var_0",
      ",",
      "based",
      "on",
      "a",
      "function",
      "var_1",
      "in",
      "descending",
      "order"
    ],
    "code": [
      "var_0",
      ".",
      "sort",
      "(",
      "key",
      "=",
      "var_1",
      ",",
      "reverse",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "var_0": "ut",
      "var_1": "cmpfun"
    },
    "intent_indx": [
      117,
      3,
      4,
      2,
      14,
      25,
      60,
      199,
      140,
      3,
      67,
      61,
      23,
      121,
      158
    ],
    "code_indx_copy": [
      34,
      22,
      126,
      1,
      103,
      19,
      92,
      8,
      131,
      19,
      110,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      126,
      1,
      103,
      19,
      92,
      8,
      131,
      19,
      110,
      17
    ]
  },
  {
    "intent": [
      "reverse",
      "list",
      "var_0",
      "based",
      "on",
      "the",
      "var_1",
      "attribute",
      "of",
      "each",
      "object"
    ],
    "code": [
      "var_0",
      ".",
      "sort",
      "(",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "x",
      ".",
      "var_1",
      ",",
      "reverse",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "var_0": "ut",
      "var_1": "count"
    },
    "intent_indx": [
      273,
      4,
      25,
      199,
      140,
      17,
      61,
      326,
      2,
      21,
      14
    ],
    "code_indx_copy": [
      34,
      22,
      126,
      1,
      103,
      19,
      44,
      26,
      13,
      26,
      22,
      92,
      8,
      131,
      19,
      110,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      126,
      1,
      103,
      19,
      44,
      26,
      13,
      26,
      22,
      92,
      8,
      131,
      19,
      110,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "list",
      "of",
      "object",
      "var_0",
      "in",
      "reverse",
      "order",
      "by",
      "their",
      "var_1",
      "property"
    ],
    "code": [
      "var_0",
      ".",
      "sort",
      "(",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "x",
      ".",
      "var_1",
      ",",
      "reverse",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "var_0": "ut",
      "var_1": "count"
    },
    "intent_indx": [
      117,
      3,
      4,
      2,
      14,
      25,
      23,
      273,
      158,
      42,
      285,
      61,
      433
    ],
    "code_indx_copy": [
      34,
      22,
      126,
      1,
      103,
      19,
      44,
      26,
      13,
      26,
      22,
      92,
      8,
      131,
      19,
      110,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      126,
      1,
      103,
      19,
      44,
      26,
      13,
      26,
      22,
      92,
      8,
      131,
      19,
      110,
      17
    ]
  },
  {
    "intent": [
      "click",
      "a",
      "href",
      "button",
      "str_0",
      "with",
      "selenium"
    ],
    "code": [
      "driver",
      ".",
      "find_element_by_partial_link_text",
      "(",
      "'str_0'",
      ")",
      ".",
      "click",
      "(",
      ")"
    ],
    "slot_map": {
      "str_0": "Send"
    },
    "intent_indx": [
      433,
      3,
      433,
      424,
      5,
      77,
      48
    ],
    "code_indx_copy": [
      46,
      22,
      520,
      1,
      29,
      17,
      22,
      158,
      1,
      17
    ],
    "code_indx_nocopy": [
      46,
      22,
      520,
      1,
      29,
      17,
      22,
      158,
      1,
      17
    ]
  },
  {
    "intent": [
      "click",
      "a",
      "href",
      "button",
      "having",
      "text",
      "str_0",
      "with",
      "selenium"
    ],
    "code": [
      "driver",
      ".",
      "findElement",
      "(",
      "By",
      ".",
      "linkText",
      "(",
      "'str_0'",
      ")",
      ")",
      ".",
      "click",
      "(",
      ")"
    ],
    "slot_map": {
      "str_0": "Send InMail"
    },
    "intent_indx": [
      433,
      3,
      433,
      424,
      90,
      257,
      5,
      77,
      48
    ],
    "code_indx_copy": [
      46,
      22,
      520,
      1,
      520,
      22,
      520,
      1,
      29,
      17,
      17,
      22,
      158,
      1,
      17
    ],
    "code_indx_nocopy": [
      46,
      22,
      520,
      1,
      520,
      22,
      520,
      1,
      29,
      17,
      17,
      22,
      158,
      1,
      17
    ]
  },
  {
    "intent": [
      "click",
      "a",
      "href",
      "button",
      "with",
      "text",
      "str_0",
      "with",
      "selenium"
    ],
    "code": [
      "driver",
      ".",
      "find_element_by_link_text",
      "(",
      "'str_0'",
      ")",
      ".",
      "click",
      "(",
      ")"
    ],
    "slot_map": {
      "str_0": "Send InMail"
    },
    "intent_indx": [
      433,
      3,
      433,
      424,
      77,
      257,
      5,
      77,
      48
    ],
    "code_indx_copy": [
      46,
      22,
      520,
      1,
      29,
      17,
      22,
      158,
      1,
      17
    ],
    "code_indx_nocopy": [
      46,
      22,
      520,
      1,
      29,
      17,
      22,
      158,
      1,
      17
    ]
  },
  {
    "intent": [
      "cast",
      "an",
      "int",
      "var_0",
      "to",
      "a",
      "string",
      "and",
      "concat",
      "to",
      "string",
      "str_0"
    ],
    "code": [
      "'str_0'",
      "+",
      "str",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": "i",
      "str_0": "ME"
    },
    "intent_indx": [
      433,
      217,
      72,
      25,
      8,
      3,
      13,
      29,
      433,
      8,
      13,
      5
    ],
    "code_indx_copy": [
      29,
      97,
      25,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      29,
      97,
      25,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "sorting",
      "data",
      "in",
      "dataframe",
      "panda"
    ],
    "code": [
      "df",
      ".",
      "sort_values",
      "(",
      "[",
      "'System_num'",
      ",",
      "'Dis'",
      "]",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      274,
      63,
      23,
      41,
      40
    ],
    "code_indx_copy": [
      151,
      22,
      180,
      1,
      12,
      520,
      8,
      520,
      16,
      17
    ],
    "code_indx_nocopy": [
      151,
      22,
      180,
      1,
      12,
      520,
      8,
      520,
      16,
      17
    ]
  },
  {
    "intent": [
      "prepend",
      "the",
      "line",
      "str_0",
      "to",
      "the",
      "content",
      "of",
      "file",
      "str_1",
      "and",
      "save",
      "a",
      "the",
      "file",
      "str_2"
    ],
    "code": [
      "open",
      "(",
      "'str_2'",
      ",",
      "'w'",
      ")",
      ".",
      "write",
      "(",
      "'#test firstline\\n'",
      "+",
      "open",
      "(",
      "'str_1'",
      ")",
      ".",
      "read",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": "#test firstline\\n",
      "str_1": "infile",
      "str_2": "outfile"
    },
    "intent_indx": [
      433,
      17,
      167,
      5,
      8,
      17,
      125,
      2,
      126,
      30,
      29,
      318,
      3,
      17,
      126,
      188
    ],
    "code_indx_copy": [
      106,
      1,
      152,
      8,
      493,
      17,
      22,
      133,
      1,
      520,
      97,
      106,
      1,
      63,
      17,
      22,
      107,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      106,
      1,
      152,
      8,
      493,
      17,
      22,
      133,
      1,
      520,
      97,
      106,
      1,
      63,
      17,
      22,
      107,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "list",
      "var_0",
      "by",
      "length",
      "of",
      "value",
      "in",
      "tuple"
    ],
    "code": [
      "var_0",
      ".",
      "sort",
      "(",
      "key",
      "=",
      "lambda",
      "t",
      ":",
      "len",
      "(",
      "t",
      "[",
      "1",
      "]",
      ")",
      ",",
      "reverse",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "var_0": "l"
    },
    "intent_indx": [
      117,
      3,
      4,
      25,
      42,
      200,
      2,
      19,
      23,
      112
    ],
    "code_indx_copy": [
      34,
      22,
      126,
      1,
      103,
      19,
      44,
      45,
      13,
      32,
      1,
      45,
      12,
      15,
      16,
      17,
      8,
      131,
      19,
      110,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      126,
      1,
      103,
      19,
      44,
      45,
      13,
      32,
      1,
      45,
      12,
      15,
      16,
      17,
      8,
      131,
      19,
      110,
      17
    ]
  },
  {
    "intent": [
      "split",
      "string",
      "var_0",
      "by",
      "word",
      "that",
      "end",
      "with",
      "str_0"
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'\\\\b(\\\\w+)d\\\\b'",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": "s",
      "str_0": "d"
    },
    "intent_indx": [
      139,
      13,
      25,
      42,
      39,
      189,
      168,
      77,
      5
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      520,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      520,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "return",
      "var_0",
      "if",
      "string",
      "var_1",
      "contains",
      "regex",
      "str_0"
    ],
    "code": [
      "bool",
      "(",
      "re",
      ".",
      "search",
      "(",
      "'str_0'",
      ",",
      "'var_1'",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": "True",
      "var_1": "foobarrrr",
      "str_0": "ba[rzd]"
    },
    "intent_indx": [
      156,
      25,
      147,
      13,
      61,
      73,
      38,
      5
    ],
    "code_indx_copy": [
      453,
      1,
      39,
      22,
      94,
      1,
      29,
      8,
      57,
      17,
      17
    ],
    "code_indx_nocopy": [
      453,
      1,
      39,
      22,
      94,
      1,
      29,
      8,
      57,
      17,
      17
    ]
  },
  {
    "intent": [
      "removing",
      "duplicate",
      "in",
      "list",
      "var_0"
    ],
    "code": [
      "list",
      "(",
      "set",
      "(",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": "t"
    },
    "intent_indx": [
      97,
      321,
      23,
      4,
      25
    ],
    "code_indx_copy": [
      33,
      1,
      191,
      1,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      33,
      1,
      191,
      1,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "removing",
      "duplicate",
      "in",
      "list",
      "var_0"
    ],
    "code": [
      "list",
      "(",
      "set",
      "(",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": "source_list"
    },
    "intent_indx": [
      97,
      321,
      23,
      4,
      25
    ],
    "code_indx_copy": [
      33,
      1,
      191,
      1,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      33,
      1,
      191,
      1,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "removing",
      "duplicate",
      "in",
      "list",
      "var_0"
    ],
    "code": [
      "list",
      "(",
      "OrderedDict",
      ".",
      "fromkeys",
      "(",
      "'var_0'",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": "abracadabra"
    },
    "intent_indx": [
      97,
      321,
      23,
      4,
      25
    ],
    "code_indx_copy": [
      33,
      1,
      290,
      22,
      520,
      1,
      56,
      17,
      17
    ],
    "code_indx_nocopy": [
      33,
      1,
      290,
      22,
      520,
      1,
      56,
      17,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "array",
      "var_0",
      "into",
      "a",
      "list"
    ],
    "code": [
      "numpy",
      ".",
      "array",
      "(",
      "var_0",
      ")",
      ".",
      "reshape",
      "(",
      "-",
      "1",
      ")",
      ".",
      "tolist",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": "a"
    },
    "intent_indx": [
      10,
      82,
      25,
      11,
      3,
      4
    ],
    "code_indx_copy": [
      149,
      22,
      177,
      1,
      34,
      17,
      22,
      361,
      1,
      14,
      15,
      17,
      22,
      308,
      1,
      17
    ],
    "code_indx_nocopy": [
      149,
      22,
      177,
      1,
      34,
      17,
      22,
      361,
      1,
      14,
      15,
      17,
      22,
      308,
      1,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "the",
      "first",
      "row",
      "of",
      "numpy",
      "matrix",
      "var_0",
      "to",
      "a",
      "list"
    ],
    "code": [
      "numpy",
      ".",
      "array",
      "(",
      "var_0",
      ")",
      "[",
      "0",
      "]",
      ".",
      "tolist",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": "a"
    },
    "intent_indx": [
      10,
      17,
      148,
      43,
      2,
      81,
      183,
      25,
      8,
      3,
      4
    ],
    "code_indx_copy": [
      149,
      22,
      177,
      1,
      34,
      17,
      12,
      43,
      16,
      22,
      308,
      1,
      17
    ],
    "code_indx_nocopy": [
      149,
      22,
      177,
      1,
      34,
      17,
      12,
      43,
      16,
      22,
      308,
      1,
      17
    ]
  },
  {
    "intent": [
      "in",
      "var_0",
      ",",
      "get",
      "the",
      "content",
      "of",
      "the",
      "sibling",
      "of",
      "the",
      "var_1",
      "tag",
      "with",
      "text",
      "content",
      "str_0"
    ],
    "code": [
      "print",
      "(",
      "var_0",
      ".",
      "find",
      "(",
      "text",
      "=",
      "'str_0'",
      ")",
      ".",
      "findNext",
      "(",
      "'var_1'",
      ")",
      ".",
      "contents",
      "[",
      "0",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": "soup",
      "var_1": "td",
      "str_0": "Address:"
    },
    "intent_indx": [
      23,
      25,
      60,
      16,
      17,
      125,
      2,
      17,
      433,
      2,
      17,
      61,
      70,
      77,
      257,
      125,
      5
    ],
    "code_indx_copy": [
      49,
      1,
      34,
      22,
      284,
      1,
      355,
      19,
      29,
      17,
      22,
      520,
      1,
      57,
      17,
      22,
      520,
      12,
      43,
      16,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      34,
      22,
      284,
      1,
      355,
      19,
      29,
      17,
      22,
      520,
      1,
      57,
      17,
      22,
      520,
      12,
      43,
      16,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "element",
      "of",
      "each",
      "tuple",
      "in",
      "list",
      "var_0",
      "into",
      "a",
      "string",
      "separated",
      "by",
      "character",
      "str_0"
    ],
    "code": [
      "\"\"\" \"\"\"",
      ".",
      "join",
      "(",
      "[",
      "(",
      "'%d@%d'",
      "%",
      "t",
      ")",
      "for",
      "t",
      "in",
      "var_0",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": "l",
      "str_0": "@"
    },
    "intent_indx": [
      10,
      1,
      2,
      21,
      112,
      23,
      4,
      25,
      11,
      3,
      13,
      323,
      42,
      96,
      5
    ],
    "code_indx_copy": [
      217,
      22,
      23,
      1,
      12,
      1,
      520,
      118,
      45,
      17,
      7,
      45,
      9,
      34,
      16,
      17
    ],
    "code_indx_nocopy": [
      217,
      22,
      23,
      1,
      12,
      1,
      520,
      118,
      45,
      17,
      7,
      45,
      9,
      34,
      16,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "each",
      "tuple",
      "in",
      "list",
      "var_0",
      "to",
      "a",
      "string",
      "with",
      "str_0",
      "separating",
      "the",
      "tuples",
      "'",
      "element"
    ],
    "code": [
      "\"\"\" \"\"\"",
      ".",
      "join",
      "(",
      "[",
      "(",
      "'%d@%d'",
      "%",
      "(",
      "t",
      "[",
      "0",
      "]",
      ",",
      "t",
      "[",
      "1",
      "]",
      ")",
      ")",
      "for",
      "t",
      "in",
      "var_0",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": "l",
      "str_0": "@"
    },
    "intent_indx": [
      10,
      21,
      112,
      23,
      4,
      25,
      8,
      3,
      13,
      77,
      5,
      433,
      17,
      31,
      299,
      1
    ],
    "code_indx_copy": [
      217,
      22,
      23,
      1,
      12,
      1,
      520,
      118,
      1,
      45,
      12,
      43,
      16,
      8,
      45,
      12,
      15,
      16,
      17,
      17,
      7,
      45,
      9,
      34,
      16,
      17
    ],
    "code_indx_nocopy": [
      217,
      22,
      23,
      1,
      12,
      1,
      520,
      118,
      1,
      45,
      12,
      43,
      16,
      8,
      45,
      12,
      15,
      16,
      17,
      17,
      7,
      45,
      9,
      34,
      16,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "html",
      "from",
      "the",
      "current",
      "web",
      "page",
      "of",
      "a",
      "selenium",
      "driver"
    ],
    "code": [
      "driver",
      ".",
      "execute_script",
      "(",
      "'return document.documentElement.outerHTML;'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      16,
      17,
      296,
      56,
      17,
      174,
      433,
      297,
      2,
      3,
      48,
      433
    ],
    "code_indx_copy": [
      46,
      22,
      520,
      1,
      520,
      17
    ],
    "code_indx_nocopy": [
      46,
      22,
      520,
      1,
      520,
      17
    ]
  },
  {
    "intent": [
      "get",
      "all",
      "match",
      "with",
      "regex",
      "pattern",
      "str_0",
      "in",
      "list",
      "of",
      "string",
      "var_0"
    ],
    "code": [
      "[",
      "i",
      "for",
      "i",
      "in",
      "var_0",
      "if",
      "re",
      ".",
      "search",
      "(",
      "'\\\\d+[xX]'",
      ",",
      "i",
      ")",
      "]"
    ],
    "slot_map": {
      "str_0": "\\\\d+[xX]",
      "var_0": "teststr"
    },
    "intent_indx": [
      16,
      36,
      106,
      77,
      38,
      51,
      5,
      23,
      4,
      2,
      13,
      25
    ],
    "code_indx_copy": [
      12,
      6,
      7,
      6,
      9,
      34,
      67,
      39,
      22,
      94,
      1,
      520,
      8,
      6,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      6,
      7,
      6,
      9,
      34,
      67,
      39,
      22,
      94,
      1,
      520,
      8,
      6,
      17,
      16
    ]
  },
  {
    "intent": [
      "select",
      "value",
      "from",
      "column",
      "str_0",
      "for",
      "which",
      "corresponding",
      "value",
      "in",
      "column",
      "str_1",
      "will",
      "be",
      "greater",
      "than",
      "int_0",
      ",",
      "and",
      "in",
      "column",
      "str_2",
      "-",
      "equal",
      "int_1",
      "in",
      "dataframe",
      "var_0"
    ],
    "code": [
      "var_0",
      "[",
      "'str_0'",
      "]",
      "[",
      "(",
      "var_0",
      "[",
      "'str_1'",
      "]",
      ">",
      "int_0",
      ")",
      "&",
      "(",
      "var_0",
      "[",
      "'str_2'",
      "]",
      "==",
      "int_1",
      ")",
      "]"
    ],
    "slot_map": {
      "str_0": "A",
      "str_1": "B",
      "str_2": "C",
      "var_0": "df",
      "int_0": "50",
      "int_1": "900"
    },
    "intent_indx": [
      76,
      19,
      56,
      59,
      5,
      20,
      197,
      333,
      19,
      23,
      59,
      30,
      433,
      349,
      334,
      254,
      259,
      60,
      29,
      23,
      59,
      188,
      433,
      104,
      433,
      23,
      41,
      25
    ],
    "code_indx_copy": [
      34,
      12,
      29,
      16,
      12,
      1,
      34,
      12,
      63,
      16,
      216,
      314,
      17,
      229,
      1,
      34,
      12,
      152,
      16,
      76,
      548,
      17,
      16
    ],
    "code_indx_nocopy": [
      34,
      12,
      29,
      16,
      12,
      1,
      34,
      12,
      63,
      16,
      216,
      314,
      17,
      229,
      1,
      34,
      12,
      152,
      16,
      76,
      520,
      17,
      16
    ]
  },
  {
    "intent": [
      "sort",
      "dictionary",
      "var_0",
      "in",
      "ascending",
      "order",
      "based",
      "on",
      "it",
      "key",
      "and",
      "item"
    ],
    "code": [
      "sorted",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": "o"
    },
    "intent_indx": [
      117,
      24,
      25,
      23,
      119,
      158,
      199,
      140,
      89,
      22,
      29,
      37
    ],
    "code_indx_copy": [
      102,
      1,
      34,
      22,
      35,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      102,
      1,
      34,
      22,
      35,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "sorted",
      "list",
      "of",
      "key",
      "of",
      "dict",
      "var_0"
    ],
    "code": [
      "sorted",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": "d"
    },
    "intent_indx": [
      16,
      216,
      4,
      2,
      22,
      2,
      182,
      25
    ],
    "code_indx_copy": [
      102,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      102,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "how",
      "to",
      "sort",
      "dictionary",
      "by",
      "key",
      "in",
      "python"
    ],
    "code": [
      "sorted",
      "(",
      "d",
      ".",
      "items",
      "(",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      75,
      8,
      117,
      24,
      42,
      22,
      23,
      47
    ],
    "code_indx_copy": [
      102,
      1,
      2,
      22,
      35,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      102,
      1,
      2,
      22,
      35,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "string",
      "str_0",
      "into",
      "integer"
    ],
    "code": [
      "int",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": "1"
    },
    "intent_indx": [
      10,
      13,
      5,
      11,
      7
    ],
    "code_indx_copy": [
      20,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      20,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "function",
      "to",
      "convert",
      "string",
      "into",
      "integer"
    ],
    "code": [
      "int",
      "(",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      67,
      8,
      10,
      13,
      11,
      7
    ],
    "code_indx_copy": [
      20,
      1,
      17
    ],
    "code_indx_nocopy": [
      20,
      1,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "item",
      "in",
      "var_0",
      "to",
      "integer"
    ],
    "code": [
      "T2",
      "=",
      "[",
      "map",
      "(",
      "int",
      ",",
      "x",
      ")",
      "for",
      "x",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": "T1"
    },
    "intent_indx": [
      10,
      37,
      23,
      25,
      8,
      7
    ],
    "code_indx_copy": [
      520,
      19,
      12,
      24,
      1,
      20,
      8,
      26,
      17,
      7,
      26,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      520,
      19,
      12,
      24,
      1,
      20,
      8,
      26,
      17,
      7,
      26,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "call",
      "a",
      "shell",
      "script",
      "str_0",
      "using",
      "subprocess"
    ],
    "code": [
      "subprocess",
      ".",
      "call",
      "(",
      "[",
      "'str_0'",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": "./test.sh"
    },
    "intent_indx": [
      294,
      3,
      282,
      236,
      5,
      108,
      280
    ],
    "code_indx_copy": [
      232,
      22,
      233,
      1,
      12,
      29,
      16,
      17
    ],
    "code_indx_nocopy": [
      232,
      22,
      233,
      1,
      12,
      29,
      16,
      17
    ]
  },
  {
    "intent": [
      "call",
      "a",
      "shell",
      "script",
      "var_0",
      "using",
      "subprocess"
    ],
    "code": [
      "subprocess",
      ".",
      "call",
      "(",
      "[",
      "'var_0'",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": "notepad"
    },
    "intent_indx": [
      294,
      3,
      282,
      236,
      25,
      108,
      280
    ],
    "code_indx_copy": [
      232,
      22,
      233,
      1,
      12,
      56,
      16,
      17
    ],
    "code_indx_nocopy": [
      232,
      22,
      233,
      1,
      12,
      56,
      16,
      17
    ]
  },
  {
    "intent": [
      "combine",
      "list",
      "var_0",
      "and",
      "var_1",
      "by",
      "alternating",
      "their",
      "element"
    ],
    "code": [
      "[",
      "val",
      "for",
      "pair",
      "in",
      "zip",
      "(",
      "var_0",
      ",",
      "var_1",
      ")",
      "for",
      "val",
      "in",
      "pair",
      "]"
    ],
    "slot_map": {
      "var_0": "l1",
      "var_1": "l2"
    },
    "intent_indx": [
      352,
      4,
      25,
      29,
      61,
      42,
      433,
      285,
      1
    ],
    "code_indx_copy": [
      12,
      178,
      7,
      321,
      9,
      36,
      1,
      34,
      8,
      92,
      17,
      7,
      178,
      9,
      321,
      16
    ],
    "code_indx_nocopy": [
      12,
      178,
      7,
      321,
      9,
      36,
      1,
      34,
      8,
      92,
      17,
      7,
      178,
      9,
      321,
      16
    ]
  },
  {
    "intent": [
      "encode",
      "string",
      "str_0"
    ],
    "code": [
      "encoded",
      "=",
      "base64",
      ".",
      "b64encode",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": "data to be encoded"
    },
    "intent_indx": [
      415,
      13,
      5
    ],
    "code_indx_copy": [
      520,
      19,
      520,
      22,
      520,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      520,
      19,
      520,
      22,
      520,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "encode",
      "a",
      "string",
      "str_0",
      "to",
      "var_0",
      "encoding"
    ],
    "code": [
      "encoded",
      "=",
      "'str_0'",
      ".",
      "encode",
      "(",
      "'var_0'",
      ")"
    ],
    "slot_map": {
      "str_0": "data to be encoded",
      "var_0": "ascii"
    },
    "intent_indx": [
      415,
      3,
      13,
      5,
      8,
      25,
      288
    ],
    "code_indx_copy": [
      520,
      19,
      29,
      22,
      242,
      1,
      56,
      17
    ],
    "code_indx_nocopy": [
      520,
      19,
      29,
      22,
      242,
      1,
      56,
      17
    ]
  },
  {
    "intent": [
      "parse",
      "tab-delimited",
      "csv",
      "file",
      "str_0",
      "into",
      "a",
      "list"
    ],
    "code": [
      "lol",
      "=",
      "list",
      "(",
      "csv",
      ".",
      "reader",
      "(",
      "open",
      "(",
      "'str_0'",
      ",",
      "'rb'",
      ")",
      ",",
      "delimiter",
      "=",
      "'\\t'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": "text.txt"
    },
    "intent_indx": [
      71,
      433,
      278,
      126,
      5,
      11,
      3,
      4
    ],
    "code_indx_copy": [
      520,
      19,
      33,
      1,
      526,
      22,
      520,
      1,
      106,
      1,
      29,
      8,
      157,
      17,
      8,
      266,
      19,
      268,
      17,
      17
    ],
    "code_indx_nocopy": [
      520,
      19,
      33,
      1,
      520,
      22,
      520,
      1,
      106,
      1,
      29,
      8,
      157,
      17,
      8,
      266,
      19,
      268,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "attribute",
      "var_0",
      "of",
      "object",
      "var_1"
    ],
    "code": [
      "getattr",
      "(",
      "var_1",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": "my_str",
      "var_1": "my_object"
    },
    "intent_indx": [
      16,
      326,
      25,
      2,
      14,
      61
    ],
    "code_indx_copy": [
      302,
      1,
      92,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      302,
      1,
      92,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "group",
      "a",
      "list",
      "of",
      "dicts",
      "var_0",
      "into",
      "one",
      "dict",
      "by",
      "key"
    ],
    "code": [
      "print",
      "(",
      "dict",
      "(",
      "zip",
      "(",
      "var_0",
      "[",
      "0",
      "]",
      ",",
      "zip",
      "(",
      "*",
      "[",
      "list",
      "(",
      "d",
      ".",
      "values",
      "(",
      ")",
      ")",
      "for",
      "d",
      "in",
      "var_0",
      "]",
      ")",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": "LD"
    },
    "intent_indx": [
      365,
      3,
      4,
      2,
      433,
      25,
      11,
      293,
      182,
      42,
      22
    ],
    "code_indx_copy": [
      49,
      1,
      70,
      1,
      36,
      1,
      34,
      12,
      43,
      16,
      8,
      36,
      1,
      3,
      12,
      33,
      1,
      2,
      22,
      168,
      1,
      17,
      17,
      7,
      2,
      9,
      34,
      16,
      17,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      70,
      1,
      36,
      1,
      34,
      12,
      43,
      16,
      8,
      36,
      1,
      3,
      12,
      33,
      1,
      2,
      22,
      168,
      1,
      17,
      17,
      7,
      2,
      9,
      34,
      16,
      17,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "how",
      "do",
      "i",
      "sum",
      "the",
      "first",
      "value",
      "in",
      "each",
      "tuple",
      "in",
      "a",
      "list",
      "of",
      "tuples",
      "in",
      "python",
      "?"
    ],
    "code": [
      "sum",
      "(",
      "[",
      "pair",
      "[",
      "0",
      "]",
      "for",
      "pair",
      "in",
      "list_of_pairs",
      "]",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      75,
      312,
      313,
      111,
      17,
      148,
      19,
      23,
      21,
      112,
      23,
      3,
      4,
      2,
      31,
      23,
      47,
      49
    ],
    "code_indx_copy": [
      0,
      1,
      12,
      321,
      12,
      43,
      16,
      7,
      321,
      9,
      520,
      16,
      17
    ],
    "code_indx_nocopy": [
      0,
      1,
      12,
      321,
      12,
      43,
      16,
      7,
      321,
      9,
      520,
      16,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "unicode",
      "string",
      "ustr_0",
      "into",
      "dictionary"
    ],
    "code": [
      "d",
      "=",
      "ast",
      ".",
      "literal_eval",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": "{'code1':1,'code2':1}",
      "{str_0}": "{'code1':1,'code2':1}"
    },
    "intent_indx": [
      10,
      223,
      13,
      433,
      11,
      24
    ],
    "code_indx_copy": [
      2,
      19,
      275,
      22,
      276,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      2,
      19,
      275,
      22,
      276,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "find",
      "all",
      "word",
      "in",
      "a",
      "string",
      "var_0",
      "that",
      "start",
      "with",
      "the",
      "str_0",
      "sign"
    ],
    "code": [
      "[",
      "word",
      "for",
      "word",
      "in",
      "var_0",
      ".",
      "split",
      "(",
      ")",
      "if",
      "word",
      ".",
      "startswith",
      "(",
      "'str_0'",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": "mystring",
      "str_0": "$"
    },
    "intent_indx": [
      45,
      36,
      39,
      23,
      3,
      13,
      25,
      189,
      412,
      77,
      17,
      5,
      433
    ],
    "code_indx_copy": [
      12,
      483,
      7,
      483,
      9,
      34,
      22,
      71,
      1,
      17,
      67,
      483,
      22,
      449,
      1,
      29,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      483,
      7,
      483,
      9,
      34,
      22,
      71,
      1,
      17,
      67,
      483,
      22,
      449,
      1,
      29,
      17,
      16
    ]
  },
  {
    "intent": [
      "remove",
      "any",
      "url",
      "within",
      "string",
      "var_0"
    ],
    "code": [
      "var_0",
      "=",
      "re",
      ".",
      "sub",
      "(",
      "'^https?:\\\\/\\\\/.*[\\\\r\\\\n]*'",
      ",",
      "''",
      ",",
      "var_0",
      ",",
      "flags",
      "=",
      "re",
      ".",
      "MULTILINE",
      ")"
    ],
    "slot_map": {
      "var_0": "text"
    },
    "intent_indx": [
      258,
      263,
      100,
      52,
      13,
      25
    ],
    "code_indx_copy": [
      34,
      19,
      39,
      22,
      40,
      1,
      520,
      8,
      21,
      8,
      34,
      8,
      520,
      19,
      39,
      22,
      520,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      39,
      22,
      40,
      1,
      520,
      8,
      21,
      8,
      34,
      8,
      520,
      19,
      39,
      22,
      520,
      17
    ]
  },
  {
    "intent": [
      "replace",
      "all",
      "element",
      "in",
      "array",
      "var_0",
      "that",
      "are",
      "not",
      "present",
      "in",
      "array",
      "str_0",
      "with",
      "zero"
    ],
    "code": [
      "np",
      ".",
      "where",
      "(",
      "np",
      ".",
      "in1d",
      "(",
      "var_0",
      ",",
      "[",
      "str_0",
      "]",
      ")",
      ".",
      "reshape",
      "(",
      "var_0",
      ".",
      "shape",
      ")",
      ",",
      "var_0",
      ",",
      "0",
      ")"
    ],
    "slot_map": {
      "var_0": "A",
      "str_0": "[1, 3, 4]",
      "[str_0]": "[1, 3, 4]"
    },
    "intent_indx": [
      131,
      36,
      1,
      23,
      82,
      25,
      189,
      234,
      103,
      344,
      23,
      82,
      5,
      77,
      177
    ],
    "code_indx_copy": [
      74,
      22,
      75,
      1,
      74,
      22,
      264,
      1,
      34,
      8,
      12,
      11,
      16,
      17,
      22,
      361,
      1,
      34,
      22,
      226,
      17,
      8,
      34,
      8,
      43,
      17
    ],
    "code_indx_nocopy": [
      74,
      22,
      75,
      1,
      74,
      22,
      264,
      1,
      34,
      8,
      12,
      11,
      16,
      17,
      22,
      361,
      1,
      34,
      22,
      226,
      17,
      8,
      34,
      8,
      43,
      17
    ]
  },
  {
    "intent": [
      "calculate",
      "mean",
      "across",
      "dimension",
      "in",
      "a",
      "2d",
      "array",
      "var_0"
    ],
    "code": [
      "np",
      ".",
      "mean",
      "(",
      "var_0",
      ",",
      "axis",
      "=",
      "1",
      ")"
    ],
    "slot_map": {
      "var_0": "a"
    },
    "intent_indx": [
      243,
      388,
      433,
      394,
      23,
      3,
      228,
      82,
      25
    ],
    "code_indx_copy": [
      74,
      22,
      389,
      1,
      34,
      8,
      42,
      19,
      15,
      17
    ],
    "code_indx_nocopy": [
      74,
      22,
      389,
      1,
      34,
      8,
      42,
      19,
      15,
      17
    ]
  },
  {
    "intent": [
      "running",
      "r",
      "script",
      "str_0",
      "from",
      "python"
    ],
    "code": [
      "subprocess",
      ".",
      "call",
      "(",
      "[",
      "'/usr/bin/Rscript'",
      ",",
      "'--vanilla'",
      ",",
      "'str_0'",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": "/pathto/MyrScript.r"
    },
    "intent_indx": [
      433,
      433,
      236,
      5,
      56,
      47
    ],
    "code_indx_copy": [
      232,
      22,
      233,
      1,
      12,
      520,
      8,
      520,
      8,
      29,
      16,
      17
    ],
    "code_indx_nocopy": [
      232,
      22,
      233,
      1,
      12,
      520,
      8,
      520,
      8,
      29,
      16,
      17
    ]
  },
  {
    "intent": [
      "run",
      "r",
      "script",
      "str_0"
    ],
    "code": [
      "subprocess",
      ".",
      "call",
      "(",
      "'str_0'",
      ",",
      "shell",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "str_0": "/usr/bin/Rscript --vanilla /pathto/MyrScript.r"
    },
    "intent_indx": [
      241,
      433,
      236,
      5
    ],
    "code_indx_copy": [
      232,
      22,
      233,
      1,
      29,
      8,
      234,
      19,
      110,
      17
    ],
    "code_indx_nocopy": [
      232,
      22,
      233,
      1,
      29,
      8,
      234,
      19,
      110,
      17
    ]
  },
  {
    "intent": [
      "add",
      "a",
      "header",
      "to",
      "a",
      "csv",
      "file"
    ],
    "code": [
      "writer",
      ".",
      "writeheader",
      "(",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      58,
      3,
      401,
      8,
      3,
      278,
      126
    ],
    "code_indx_copy": [
      504,
      22,
      520,
      1,
      17
    ],
    "code_indx_nocopy": [
      504,
      22,
      520,
      1,
      17
    ]
  },
  {
    "intent": [
      "replacing",
      "float_0",
      "in",
      "the",
      "dataframe",
      "var_0",
      "with",
      "row",
      "average"
    ],
    "code": [
      "var_0",
      ".",
      "fillna",
      "(",
      "var_0",
      ".",
      "mean",
      "(",
      "axis",
      "=",
      "1",
      ")",
      ",",
      "axis",
      "=",
      "1",
      ")"
    ],
    "slot_map": {
      "var_0": "df",
      "float_0": "nan"
    },
    "intent_indx": [
      433,
      93,
      23,
      17,
      41,
      25,
      77,
      43,
      18
    ],
    "code_indx_copy": [
      34,
      22,
      352,
      1,
      34,
      22,
      389,
      1,
      42,
      19,
      15,
      17,
      8,
      42,
      19,
      15,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      352,
      1,
      34,
      22,
      389,
      1,
      42,
      19,
      15,
      17,
      8,
      42,
      19,
      15,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "unix",
      "timestamp",
      "str_0",
      "to",
      "formatted",
      "string",
      "str_1"
    ],
    "code": [
      "time",
      ".",
      "strftime",
      "(",
      "'str_1'",
      ",",
      "time",
      ".",
      "localtime",
      "(",
      "str_0",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": "1347517370",
      "str_1": "%Y-%m-%d %H:%M:%S"
    },
    "intent_indx": [
      10,
      433,
      433,
      5,
      8,
      279,
      13,
      30
    ],
    "code_indx_copy": [
      85,
      22,
      65,
      1,
      63,
      8,
      85,
      22,
      520,
      1,
      11,
      17,
      17
    ],
    "code_indx_nocopy": [
      85,
      22,
      65,
      1,
      63,
      8,
      85,
      22,
      520,
      1,
      11,
      17,
      17
    ]
  },
  {
    "intent": [
      "call",
      "a",
      "base",
      "class",
      "'s",
      "class",
      "method",
      "var_0",
      "from",
      "derived",
      "class",
      "var_1"
    ],
    "code": [
      "super",
      "(",
      "var_1",
      ",",
      "cls",
      ")",
      ".",
      "var_0",
      "(",
      "a",
      ")"
    ],
    "slot_map": {
      "var_0": "do",
      "var_1": "Derived"
    },
    "intent_indx": [
      294,
      3,
      433,
      300,
      256,
      300,
      433,
      25,
      56,
      433,
      300,
      61
    ],
    "code_indx_copy": [
      488,
      1,
      92,
      8,
      520,
      17,
      22,
      34,
      1,
      96,
      17
    ],
    "code_indx_nocopy": [
      488,
      1,
      92,
      8,
      520,
      17,
      22,
      34,
      1,
      96,
      17
    ]
  },
  {
    "intent": [
      "selecting",
      "row",
      "in",
      "numpy",
      "ndarray",
      "str_0",
      ",",
      "where",
      "the",
      "value",
      "in",
      "the",
      "first",
      "column",
      "is",
      "0",
      "and",
      "value",
      "in",
      "the",
      "second",
      "column",
      "is",
      "1"
    ],
    "code": [
      "str_0",
      "[",
      "np",
      ".",
      "where",
      "(",
      "(",
      "str_0",
      "[",
      ":",
      ",",
      "(",
      "0",
      ")",
      "]",
      "==",
      "0",
      ")",
      "*",
      "(",
      "str_0",
      "[",
      ":",
      ",",
      "(",
      "1",
      ")",
      "]",
      "==",
      "1",
      ")",
      ")",
      "]"
    ],
    "slot_map": {
      "str_0": "a"
    },
    "intent_indx": [
      433,
      43,
      23,
      81,
      433,
      5,
      60,
      152,
      17,
      19,
      23,
      17,
      148,
      59,
      149,
      105,
      29,
      19,
      23,
      17,
      118,
      59,
      149,
      229
    ],
    "code_indx_copy": [
      11,
      12,
      74,
      22,
      75,
      1,
      1,
      11,
      12,
      13,
      8,
      1,
      43,
      17,
      16,
      76,
      43,
      17,
      3,
      1,
      11,
      12,
      13,
      8,
      1,
      15,
      17,
      16,
      76,
      15,
      17,
      17,
      16
    ],
    "code_indx_nocopy": [
      11,
      12,
      74,
      22,
      75,
      1,
      1,
      11,
      12,
      13,
      8,
      1,
      43,
      17,
      16,
      76,
      43,
      17,
      3,
      1,
      11,
      12,
      13,
      8,
      1,
      15,
      17,
      16,
      76,
      15,
      17,
      17,
      16
    ]
  },
  {
    "intent": [
      "separate",
      "word",
      "delimited",
      "by",
      "one",
      "or",
      "more",
      "space",
      "into",
      "a",
      "list"
    ],
    "code": [
      "re",
      ".",
      "split",
      "(",
      "' +'",
      ",",
      "'hello world sample text'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      95,
      39,
      433,
      42,
      293,
      330,
      399,
      133,
      11,
      3,
      4
    ],
    "code_indx_copy": [
      39,
      22,
      71,
      1,
      520,
      8,
      520,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      71,
      1,
      520,
      8,
      520,
      17
    ]
  },
  {
    "intent": [
      "length",
      "of",
      "longest",
      "element",
      "in",
      "list",
      "var_0"
    ],
    "code": [
      "len",
      "(",
      "max",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "len",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": "words"
    },
    "intent_indx": [
      200,
      2,
      433,
      1,
      23,
      4,
      25
    ],
    "code_indx_copy": [
      32,
      1,
      181,
      1,
      34,
      8,
      103,
      19,
      32,
      17,
      17
    ],
    "code_indx_nocopy": [
      32,
      1,
      181,
      1,
      34,
      8,
      103,
      19,
      32,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "value",
      "associated",
      "with",
      "unicode",
      "key",
      "str_0",
      "of",
      "first",
      "dictionary",
      "in",
      "list",
      "var_0"
    ],
    "code": [
      "var_0",
      "[",
      "0",
      "]",
      "[",
      "'str_0'",
      "]"
    ],
    "slot_map": {
      "str_0": "from_user",
      "var_0": "result"
    },
    "intent_indx": [
      16,
      17,
      19,
      277,
      77,
      223,
      22,
      5,
      2,
      148,
      24,
      23,
      4,
      25
    ],
    "code_indx_copy": [
      34,
      12,
      43,
      16,
      12,
      29,
      16
    ],
    "code_indx_nocopy": [
      34,
      12,
      43,
      16,
      12,
      29,
      16
    ]
  },
  {
    "intent": [
      "retrieve",
      "each",
      "line",
      "from",
      "a",
      "file",
      "str_0",
      "a",
      "a",
      "list"
    ],
    "code": [
      "[",
      "line",
      ".",
      "split",
      "(",
      ")",
      "for",
      "line",
      "in",
      "open",
      "(",
      "'str_0'",
      ")",
      "]"
    ],
    "slot_map": {
      "str_0": "File.txt"
    },
    "intent_indx": [
      358,
      21,
      167,
      56,
      3,
      126,
      5,
      3,
      3,
      4
    ],
    "code_indx_copy": [
      12,
      316,
      22,
      71,
      1,
      17,
      7,
      316,
      9,
      106,
      1,
      29,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      316,
      22,
      71,
      1,
      17,
      7,
      316,
      9,
      106,
      1,
      29,
      17,
      16
    ]
  },
  {
    "intent": [
      "swap",
      "key",
      "with",
      "value",
      "in",
      "a",
      "dictionary",
      "var_0"
    ],
    "code": [
      "res",
      "=",
      "dict",
      "(",
      "(",
      "v",
      ",",
      "k",
      ")",
      "for",
      "k",
      ",",
      "v",
      "in",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": "a"
    },
    "intent_indx": [
      433,
      22,
      77,
      19,
      23,
      3,
      24,
      25
    ],
    "code_indx_copy": [
      520,
      19,
      70,
      1,
      1,
      91,
      8,
      90,
      17,
      7,
      90,
      8,
      91,
      9,
      34,
      22,
      35,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      520,
      19,
      70,
      1,
      1,
      91,
      8,
      90,
      17,
      7,
      90,
      8,
      91,
      9,
      34,
      22,
      35,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "open",
      "a",
      "file",
      "str_0",
      "in",
      "write",
      "mode"
    ],
    "code": [
      "new_file",
      "=",
      "open",
      "(",
      "'str_0'",
      ",",
      "'w'",
      ")"
    ],
    "slot_map": {
      "str_0": "path/to/FILE_NAME.ext"
    },
    "intent_indx": [
      275,
      3,
      126,
      5,
      23,
      163,
      276
    ],
    "code_indx_copy": [
      520,
      19,
      106,
      1,
      29,
      8,
      493,
      17
    ],
    "code_indx_nocopy": [
      520,
      19,
      106,
      1,
      29,
      8,
      493,
      17
    ]
  },
  {
    "intent": [
      "how",
      "to",
      "count",
      "distinct",
      "value",
      "in",
      "a",
      "column",
      "of",
      "a",
      "panda",
      "group",
      "by",
      "object",
      "?"
    ],
    "code": [
      "df",
      ".",
      "groupby",
      "(",
      "[",
      "'col1'",
      ",",
      "'col2'",
      "]",
      ")",
      "[",
      "'col3'",
      "]",
      ".",
      "nunique",
      "(",
      ")",
      ".",
      "reset_index",
      "(",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      75,
      8,
      173,
      433,
      19,
      23,
      3,
      59,
      2,
      3,
      40,
      365,
      42,
      14,
      49
    ],
    "code_indx_copy": [
      151,
      22,
      159,
      1,
      12,
      520,
      8,
      520,
      16,
      17,
      12,
      520,
      16,
      22,
      520,
      1,
      17,
      22,
      188,
      1,
      17
    ],
    "code_indx_nocopy": [
      151,
      22,
      159,
      1,
      12,
      520,
      8,
      520,
      16,
      17,
      12,
      520,
      16,
      22,
      520,
      1,
      17,
      22,
      188,
      1,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "any",
      "key",
      "in",
      "the",
      "dictionary",
      "var_0",
      "start",
      "with",
      "the",
      "string",
      "str_0"
    ],
    "code": [
      "any",
      "(",
      "key",
      ".",
      "startswith",
      "(",
      "'str_0'",
      ")",
      "for",
      "key",
      "in",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": "dict1",
      "str_0": "EMP$$"
    },
    "intent_indx": [
      227,
      147,
      263,
      22,
      23,
      17,
      24,
      25,
      412,
      77,
      17,
      13,
      5
    ],
    "code_indx_copy": [
      272,
      1,
      103,
      22,
      449,
      1,
      29,
      17,
      7,
      103,
      9,
      34,
      17
    ],
    "code_indx_nocopy": [
      272,
      1,
      103,
      22,
      449,
      1,
      29,
      17,
      7,
      103,
      9,
      34,
      17
    ]
  },
  {
    "intent": [
      "create",
      "list",
      "of",
      "value",
      "from",
      "dictionary",
      "var_0",
      "that",
      "have",
      "a",
      "key",
      "that",
      "start",
      "with",
      "str_0"
    ],
    "code": [
      "[",
      "value",
      "for",
      "key",
      ",",
      "value",
      "in",
      "list",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      "if",
      "key",
      ".",
      "startswith",
      "(",
      "'str_0'",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": "dict1",
      "str_0": "EMP$$"
    },
    "intent_indx": [
      145,
      4,
      2,
      19,
      56,
      24,
      25,
      189,
      190,
      3,
      22,
      189,
      412,
      77,
      5
    ],
    "code_indx_copy": [
      12,
      153,
      7,
      103,
      8,
      153,
      9,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      67,
      103,
      22,
      449,
      1,
      29,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      153,
      7,
      103,
      8,
      153,
      9,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      67,
      103,
      22,
      449,
      1,
      29,
      17,
      16
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "panda",
      "series",
      "var_0",
      "into",
      "a",
      "panda",
      "dataframe",
      "var_1",
      "with",
      "column",
      "var_2",
      "and",
      "var_3"
    ],
    "code": [
      "pd",
      ".",
      "DataFrame",
      "(",
      "{",
      "'var_2'",
      ":",
      "var_0",
      ".",
      "index",
      ",",
      "'var_3'",
      ":",
      "var_0",
      ".",
      "values",
      "}",
      ")"
    ],
    "slot_map": {
      "var_0": "sf",
      "var_1": "df",
      "var_2": "email",
      "var_3": "list"
    },
    "intent_indx": [
      10,
      3,
      40,
      324,
      25,
      11,
      3,
      40,
      41,
      61,
      77,
      59,
      62,
      29,
      65
    ],
    "code_indx_copy": [
      164,
      22,
      166,
      1,
      52,
      58,
      13,
      34,
      22,
      162,
      8,
      224,
      13,
      34,
      22,
      168,
      53,
      17
    ],
    "code_indx_nocopy": [
      164,
      22,
      166,
      1,
      52,
      58,
      13,
      34,
      22,
      162,
      8,
      224,
      13,
      34,
      22,
      168,
      53,
      17
    ]
  },
  {
    "intent": [
      "print",
      "element",
      "of",
      "list",
      "var_0",
      "seperated",
      "by",
      "tab",
      "str_0"
    ],
    "code": [
      "print",
      "(",
      "'\\t'",
      ".",
      "join",
      "(",
      "map",
      "(",
      "str",
      ",",
      "var_0",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": "list",
      "str_0": "\\t"
    },
    "intent_indx": [
      161,
      1,
      2,
      4,
      25,
      433,
      42,
      205,
      5
    ],
    "code_indx_copy": [
      49,
      1,
      268,
      22,
      23,
      1,
      24,
      1,
      25,
      8,
      34,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      268,
      22,
      23,
      1,
      24,
      1,
      25,
      8,
      34,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "print",
      "unicode",
      "string",
      "str_0",
      "with",
      "utf-8"
    ],
    "code": [
      "print",
      "(",
      "'\u00d0\u00bf\u00d1\\x80\u00d0\u00b8'",
      ".",
      "encode",
      "(",
      "'raw_unicode_escape'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": "\\xd0\\xbf\\xd1\\x80\\xd0\\xb8"
    },
    "intent_indx": [
      161,
      223,
      13,
      5,
      77,
      179
    ],
    "code_indx_copy": [
      49,
      1,
      520,
      22,
      242,
      1,
      520,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      520,
      22,
      242,
      1,
      520,
      17,
      17
    ]
  },
  {
    "intent": [
      "encode",
      "a",
      "latin",
      "character",
      "in",
      "string",
      "str_0",
      "properly"
    ],
    "code": [
      "\"\"\"Sopet\u00c3\u00b3n\"\"\"",
      ".",
      "encode",
      "(",
      "'latin-1'",
      ")",
      ".",
      "decode",
      "(",
      "'utf-8'",
      ")"
    ],
    "slot_map": {
      "str_0": "Sopet\\xc3\\xb3n"
    },
    "intent_indx": [
      415,
      3,
      433,
      96,
      23,
      13,
      5,
      433
    ],
    "code_indx_copy": [
      520,
      22,
      242,
      1,
      520,
      17,
      22,
      100,
      1,
      145,
      17
    ],
    "code_indx_nocopy": [
      520,
      22,
      242,
      1,
      520,
      17,
      22,
      100,
      1,
      145,
      17
    ]
  },
  {
    "intent": [
      "resized",
      "image",
      "var_0",
      "to",
      "width",
      ",",
      "height",
      "of",
      "str_0",
      "with",
      "filter",
      "of",
      "var_1"
    ],
    "code": [
      "var_0",
      "=",
      "var_0",
      ".",
      "resize",
      "(",
      "(",
      "str_0",
      ")",
      ",",
      "Image",
      ".",
      "var_1",
      ")"
    ],
    "slot_map": {
      "var_0": "image",
      "str_0": "(x, y)",
      "var_1": "ANTIALIAS",
      "(str_0)": "(x, y)"
    },
    "intent_indx": [
      433,
      289,
      25,
      8,
      433,
      60,
      433,
      2,
      5,
      77,
      209,
      2,
      61
    ],
    "code_indx_copy": [
      34,
      19,
      34,
      22,
      520,
      1,
      1,
      11,
      17,
      8,
      303,
      22,
      92,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      34,
      22,
      520,
      1,
      1,
      11,
      17,
      8,
      303,
      22,
      92,
      17
    ]
  },
  {
    "intent": [
      "regex",
      ",",
      "find",
      "str_0s",
      "only",
      "in",
      "the",
      "middle",
      "of",
      "string",
      "var_0"
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'n(?<=[^n]n)n+(?=[^n])(?i)'",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "str_0": "n",
      "var_0": "s"
    },
    "intent_indx": [
      38,
      60,
      45,
      433,
      338,
      23,
      17,
      433,
      2,
      13,
      25
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      520,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      520,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "display",
      "the",
      "float",
      "str_0",
      "a",
      "a",
      "percentage"
    ],
    "code": [
      "print",
      "(",
      "'{0:.0f}%'",
      ".",
      "format",
      "(",
      "1.0",
      "/",
      "3",
      "*",
      "100",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": "1/3*100"
    },
    "intent_indx": [
      350,
      17,
      92,
      5,
      3,
      3,
      433
    ],
    "code_indx_copy": [
      49,
      1,
      520,
      22,
      38,
      1,
      520,
      31,
      54,
      3,
      270,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      520,
      22,
      38,
      1,
      520,
      31,
      54,
      3,
      270,
      17,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "list",
      "of",
      "dictionary",
      "var_0",
      "by",
      "the",
      "key",
      "var_1"
    ],
    "code": [
      "var_0",
      ".",
      "sort",
      "(",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "x",
      "[",
      "'var_1'",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": "mylist",
      "var_1": "title"
    },
    "intent_indx": [
      117,
      3,
      4,
      2,
      24,
      25,
      42,
      17,
      22,
      61
    ],
    "code_indx_copy": [
      34,
      22,
      126,
      1,
      103,
      19,
      44,
      26,
      13,
      26,
      12,
      57,
      16,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      126,
      1,
      103,
      19,
      44,
      26,
      13,
      26,
      12,
      57,
      16,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "list",
      "var_0",
      "of",
      "dicts",
      "by",
      "dict",
      "value",
      "str_0"
    ],
    "code": [
      "var_0",
      ".",
      "sort",
      "(",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "x",
      "[",
      "'str_0'",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": "l",
      "str_0": "title"
    },
    "intent_indx": [
      117,
      3,
      4,
      25,
      2,
      433,
      42,
      182,
      19,
      5
    ],
    "code_indx_copy": [
      34,
      22,
      126,
      1,
      103,
      19,
      44,
      26,
      13,
      26,
      12,
      29,
      16,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      126,
      1,
      103,
      19,
      44,
      26,
      13,
      26,
      12,
      29,
      16,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "list",
      "of",
      "dictionary",
      "by",
      "the",
      "value",
      "of",
      "key",
      "str_0",
      ",",
      "str_1",
      ",",
      "str_2",
      "in",
      "ascending",
      "order",
      "."
    ],
    "code": [
      "l",
      ".",
      "sort",
      "(",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "(",
      "x",
      "[",
      "'str_0'",
      "]",
      ",",
      "x",
      "[",
      "'str_1'",
      "]",
      ",",
      "x",
      "[",
      "'str_2'",
      "]",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": "title",
      "str_1": "title_url",
      "str_2": "id"
    },
    "intent_indx": [
      117,
      3,
      4,
      2,
      24,
      42,
      17,
      19,
      2,
      22,
      5,
      60,
      30,
      60,
      188,
      23,
      119,
      158,
      155
    ],
    "code_indx_copy": [
      427,
      22,
      126,
      1,
      103,
      19,
      44,
      26,
      13,
      1,
      26,
      12,
      29,
      16,
      8,
      26,
      12,
      63,
      16,
      8,
      26,
      12,
      152,
      16,
      17,
      17
    ],
    "code_indx_nocopy": [
      427,
      22,
      126,
      1,
      103,
      19,
      44,
      26,
      13,
      1,
      26,
      12,
      29,
      16,
      8,
      26,
      12,
      63,
      16,
      8,
      26,
      12,
      152,
      16,
      17,
      17
    ]
  },
  {
    "intent": [
      "find",
      "10",
      "largest",
      "difference",
      "between",
      "each",
      "respective",
      "element",
      "of",
      "list",
      "var_0",
      "and",
      "list",
      "var_1"
    ],
    "code": [
      "heapq",
      ".",
      "nlargest",
      "(",
      "10",
      ",",
      "range",
      "(",
      "len",
      "(",
      "var_0",
      ")",
      ")",
      ",",
      "key",
      "=",
      "lambda",
      "i",
      ":",
      "abs",
      "(",
      "var_0",
      "[",
      "i",
      "]",
      "-",
      "var_1",
      "[",
      "i",
      "]",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": "l1",
      "var_1": "l2"
    },
    "intent_indx": [
      45,
      337,
      411,
      433,
      269,
      21,
      341,
      1,
      2,
      4,
      25,
      29,
      4,
      61
    ],
    "code_indx_copy": [
      520,
      22,
      520,
      1,
      4,
      8,
      105,
      1,
      32,
      1,
      34,
      17,
      17,
      8,
      103,
      19,
      44,
      6,
      13,
      359,
      1,
      34,
      12,
      6,
      16,
      14,
      92,
      12,
      6,
      16,
      17,
      17
    ],
    "code_indx_nocopy": [
      520,
      22,
      520,
      1,
      4,
      8,
      105,
      1,
      32,
      1,
      34,
      17,
      17,
      8,
      103,
      19,
      44,
      6,
      13,
      359,
      1,
      34,
      12,
      6,
      16,
      14,
      92,
      12,
      6,
      16,
      17,
      17
    ]
  },
  {
    "intent": [
      "beautifulsoup",
      "find",
      "all",
      "str_0",
      "element",
      "in",
      "html",
      "string",
      "var_0",
      "with",
      "class",
      "of",
      "str_1"
    ],
    "code": [
      "var_0",
      ".",
      "find_all",
      "(",
      "'str_0'",
      ",",
      "{",
      "'class'",
      ":",
      "'str_1'",
      "}",
      ")"
    ],
    "slot_map": {
      "str_0": "span",
      "var_0": "soup",
      "str_1": "starGryB sp"
    },
    "intent_indx": [
      68,
      45,
      36,
      5,
      1,
      23,
      296,
      13,
      25,
      77,
      300,
      2,
      30
    ],
    "code_indx_copy": [
      34,
      22,
      62,
      1,
      29,
      8,
      52,
      520,
      13,
      63,
      53,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      62,
      1,
      29,
      8,
      52,
      520,
      13,
      63,
      53,
      17
    ]
  },
  {
    "intent": [
      "write",
      "record",
      "in",
      "dataframe",
      "var_0",
      "to",
      "table",
      "str_0",
      "in",
      "schema",
      "str_1"
    ],
    "code": [
      "var_0",
      ".",
      "to_sql",
      "(",
      "'str_0'",
      ",",
      "engine",
      ",",
      "schema",
      "=",
      "'str_1'",
      ")"
    ],
    "slot_map": {
      "var_0": "df",
      "str_0": "test",
      "str_1": "a_schema"
    },
    "intent_indx": [
      163,
      84,
      23,
      41,
      25,
      8,
      369,
      5,
      23,
      433,
      30
    ],
    "code_indx_copy": [
      34,
      22,
      520,
      1,
      29,
      8,
      520,
      8,
      533,
      19,
      63,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      520,
      1,
      29,
      8,
      520,
      8,
      520,
      19,
      63,
      17
    ]
  },
  {
    "intent": [
      "extract",
      "bracket",
      "from",
      "string",
      "var_0"
    ],
    "code": [
      "brackets",
      "=",
      "re",
      ".",
      "sub",
      "(",
      "'[^(){}[\\\\]]'",
      ",",
      "''",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": "s"
    },
    "intent_indx": [
      102,
      433,
      56,
      13,
      25
    ],
    "code_indx_copy": [
      520,
      19,
      39,
      22,
      40,
      1,
      520,
      8,
      21,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      520,
      19,
      39,
      22,
      40,
      1,
      520,
      8,
      21,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "duplicate",
      "element",
      "from",
      "list",
      "str_0"
    ],
    "code": [
      "list",
      "(",
      "dict",
      "(",
      "(",
      "x",
      "[",
      "0",
      "]",
      ",",
      "x",
      ")",
      "for",
      "x",
      "in",
      "str_0",
      ")",
      ".",
      "values",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": "L"
    },
    "intent_indx": [
      258,
      321,
      1,
      56,
      4,
      5
    ],
    "code_indx_copy": [
      33,
      1,
      70,
      1,
      1,
      26,
      12,
      43,
      16,
      8,
      26,
      17,
      7,
      26,
      9,
      11,
      17,
      22,
      168,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      33,
      1,
      70,
      1,
      1,
      26,
      12,
      43,
      16,
      8,
      26,
      17,
      7,
      26,
      9,
      11,
      17,
      22,
      168,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "read",
      "a",
      "file",
      "var_0",
      "without",
      "newlines"
    ],
    "code": [
      "[",
      "line",
      ".",
      "rstrip",
      "(",
      "'\\n'",
      ")",
      "for",
      "line",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": "file"
    },
    "intent_indx": [
      124,
      3,
      126,
      25,
      101,
      433
    ],
    "code_indx_copy": [
      12,
      316,
      22,
      174,
      1,
      135,
      17,
      7,
      316,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      12,
      316,
      22,
      174,
      1,
      135,
      17,
      7,
      316,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "position",
      "of",
      "item",
      "1",
      "in",
      "var_0"
    ],
    "code": [
      "[",
      "i",
      "for",
      "i",
      ",",
      "x",
      "in",
      "enumerate",
      "(",
      "var_0",
      ")",
      "if",
      "x",
      "==",
      "1",
      "]"
    ],
    "slot_map": {
      "var_0": "testlist"
    },
    "intent_indx": [
      16,
      17,
      291,
      2,
      37,
      229,
      23,
      25
    ],
    "code_indx_copy": [
      12,
      6,
      7,
      6,
      8,
      26,
      9,
      10,
      1,
      34,
      17,
      67,
      26,
      76,
      15,
      16
    ],
    "code_indx_nocopy": [
      12,
      6,
      7,
      6,
      8,
      26,
      9,
      10,
      1,
      34,
      17,
      67,
      26,
      76,
      15,
      16
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "position",
      "of",
      "item",
      "1",
      "in",
      "var_0"
    ],
    "code": [
      "[",
      "i",
      "for",
      "i",
      ",",
      "x",
      "in",
      "enumerate",
      "(",
      "var_0",
      ")",
      "if",
      "x",
      "==",
      "1",
      "]"
    ],
    "slot_map": {
      "var_0": "testlist"
    },
    "intent_indx": [
      16,
      17,
      291,
      2,
      37,
      229,
      23,
      25
    ],
    "code_indx_copy": [
      12,
      6,
      7,
      6,
      8,
      26,
      9,
      10,
      1,
      34,
      17,
      67,
      26,
      76,
      15,
      16
    ],
    "code_indx_nocopy": [
      12,
      6,
      7,
      6,
      8,
      26,
      9,
      10,
      1,
      34,
      17,
      67,
      26,
      76,
      15,
      16
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "position",
      "of",
      "item",
      "1",
      "in",
      "var_0"
    ],
    "code": [
      "for",
      "i",
      "in",
      "[",
      "i",
      "for",
      "i",
      ",",
      "x",
      "in",
      "enumerate",
      "(",
      "var_0",
      ")",
      "if",
      "x",
      "==",
      "1",
      "]",
      ":",
      "\n",
      "    ",
      "pass",
      ""
    ],
    "slot_map": {
      "var_0": "testlist"
    },
    "intent_indx": [
      16,
      17,
      291,
      2,
      37,
      229,
      23,
      25
    ],
    "code_indx_copy": [
      7,
      6,
      9,
      12,
      6,
      7,
      6,
      8,
      26,
      9,
      10,
      1,
      34,
      17,
      67,
      26,
      76,
      15,
      16,
      13,
      163,
      218,
      219,
      220
    ],
    "code_indx_nocopy": [
      7,
      6,
      9,
      12,
      6,
      7,
      6,
      8,
      26,
      9,
      10,
      1,
      34,
      17,
      67,
      26,
      76,
      15,
      16,
      13,
      163,
      218,
      219,
      220
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "position",
      "of",
      "item",
      "1",
      "in",
      "var_0"
    ],
    "code": [
      "for",
      "i",
      "in",
      "(",
      "i",
      "for",
      "i",
      ",",
      "x",
      "in",
      "enumerate",
      "(",
      "var_0",
      ")",
      "if",
      "x",
      "==",
      "1",
      ")",
      ":",
      "\n",
      "    ",
      "pass",
      ""
    ],
    "slot_map": {
      "var_0": "testlist"
    },
    "intent_indx": [
      16,
      17,
      291,
      2,
      37,
      229,
      23,
      25
    ],
    "code_indx_copy": [
      7,
      6,
      9,
      1,
      6,
      7,
      6,
      8,
      26,
      9,
      10,
      1,
      34,
      17,
      67,
      26,
      76,
      15,
      17,
      13,
      163,
      218,
      219,
      220
    ],
    "code_indx_nocopy": [
      7,
      6,
      9,
      1,
      6,
      7,
      6,
      8,
      26,
      9,
      10,
      1,
      34,
      17,
      67,
      26,
      76,
      15,
      17,
      13,
      163,
      218,
      219,
      220
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "position",
      "of",
      "item",
      "1",
      "in",
      "var_0"
    ],
    "code": [
      "gen",
      "=",
      "(",
      "i",
      "for",
      "i",
      ",",
      "x",
      "in",
      "enumerate",
      "(",
      "var_0",
      ")",
      "if",
      "x",
      "==",
      "1",
      ")",
      "\n",
      "for",
      "i",
      "in",
      "gen",
      ":",
      "\n",
      "    ",
      "pass",
      ""
    ],
    "slot_map": {
      "var_0": "testlist"
    },
    "intent_indx": [
      16,
      17,
      291,
      2,
      37,
      229,
      23,
      25
    ],
    "code_indx_copy": [
      520,
      19,
      1,
      6,
      7,
      6,
      8,
      26,
      9,
      10,
      1,
      34,
      17,
      67,
      26,
      76,
      15,
      17,
      163,
      7,
      6,
      9,
      520,
      13,
      163,
      218,
      219,
      220
    ],
    "code_indx_nocopy": [
      520,
      19,
      1,
      6,
      7,
      6,
      8,
      26,
      9,
      10,
      1,
      34,
      17,
      67,
      26,
      76,
      15,
      17,
      163,
      7,
      6,
      9,
      520,
      13,
      163,
      218,
      219,
      220
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "position",
      "of",
      "item",
      "var_0",
      "in",
      "list",
      "var_1"
    ],
    "code": [
      "print",
      "(",
      "var_1",
      ".",
      "index",
      "(",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": "element",
      "var_1": "testlist"
    },
    "intent_indx": [
      16,
      17,
      291,
      2,
      37,
      25,
      23,
      4,
      61
    ],
    "code_indx_copy": [
      49,
      1,
      92,
      22,
      162,
      1,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      92,
      22,
      162,
      1,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "position",
      "of",
      "item",
      "var_0",
      "in",
      "list",
      "var_1"
    ],
    "code": [
      "try",
      ":",
      "\n",
      "    ",
      "print",
      "(",
      "var_1",
      ".",
      "index",
      "(",
      "var_0",
      ")",
      ")",
      "\n",
      "",
      "except",
      "ValueError",
      ":",
      "\n",
      "    ",
      "pass",
      ""
    ],
    "slot_map": {
      "var_0": "element",
      "var_1": "testlist"
    },
    "intent_indx": [
      16,
      17,
      291,
      2,
      37,
      25,
      23,
      4,
      61
    ],
    "code_indx_copy": [
      339,
      13,
      163,
      218,
      49,
      1,
      92,
      22,
      162,
      1,
      34,
      17,
      17,
      163,
      220,
      340,
      511,
      13,
      163,
      218,
      219,
      220
    ],
    "code_indx_nocopy": [
      339,
      13,
      163,
      218,
      49,
      1,
      92,
      22,
      162,
      1,
      34,
      17,
      17,
      163,
      220,
      340,
      511,
      13,
      163,
      218,
      219,
      220
    ]
  },
  {
    "intent": [
      "find",
      "the",
      "first",
      "element",
      "of",
      "the",
      "tuple",
      "with",
      "the",
      "maximum",
      "second",
      "element",
      "in",
      "a",
      "list",
      "of",
      "tuples",
      "var_0"
    ],
    "code": [
      "max",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "lambda",
      "item",
      ":",
      "item",
      "[",
      "1",
      "]",
      ")",
      "[",
      "0",
      "]"
    ],
    "slot_map": {
      "var_0": "lis"
    },
    "intent_indx": [
      45,
      17,
      148,
      1,
      2,
      17,
      112,
      77,
      17,
      219,
      118,
      1,
      23,
      3,
      4,
      2,
      31,
      25
    ],
    "code_indx_copy": [
      181,
      1,
      34,
      8,
      103,
      19,
      44,
      386,
      13,
      386,
      12,
      15,
      16,
      17,
      12,
      43,
      16
    ],
    "code_indx_nocopy": [
      181,
      1,
      34,
      8,
      103,
      19,
      44,
      386,
      13,
      386,
      12,
      15,
      16,
      17,
      12,
      43,
      16
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "item",
      "at",
      "index",
      "0",
      "from",
      "the",
      "tuple",
      "that",
      "ha",
      "maximum",
      "value",
      "at",
      "index",
      "1",
      "in",
      "list",
      "var_0"
    ],
    "code": [
      "max",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "itemgetter",
      "(",
      "1",
      ")",
      ")",
      "[",
      "0",
      "]"
    ],
    "slot_map": {
      "var_0": "lis"
    },
    "intent_indx": [
      16,
      17,
      37,
      33,
      35,
      105,
      56,
      17,
      112,
      189,
      322,
      219,
      19,
      33,
      35,
      229,
      23,
      4,
      25
    ],
    "code_indx_copy": [
      181,
      1,
      34,
      8,
      103,
      19,
      130,
      1,
      15,
      17,
      17,
      12,
      43,
      16
    ],
    "code_indx_nocopy": [
      181,
      1,
      34,
      8,
      103,
      19,
      130,
      1,
      15,
      17,
      17,
      12,
      43,
      16
    ]
  },
  {
    "intent": [
      "make",
      "a",
      "delay",
      "of",
      "1",
      "second"
    ],
    "code": [
      "time",
      ".",
      "sleep",
      "(",
      "1",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      185,
      3,
      359,
      2,
      229,
      118
    ],
    "code_indx_copy": [
      85,
      22,
      315,
      1,
      15,
      17
    ],
    "code_indx_nocopy": [
      85,
      22,
      315,
      1,
      15,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "list",
      "of",
      "tuples",
      "var_0",
      "to",
      "a",
      "string"
    ],
    "code": [
      "\"\"\", \"\"\"",
      ".",
      "join",
      "(",
      "'('",
      "+",
      "', '",
      ".",
      "join",
      "(",
      "i",
      ")",
      "+",
      "')'",
      "for",
      "i",
      "in",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": "L"
    },
    "intent_indx": [
      10,
      4,
      2,
      31,
      25,
      8,
      3,
      13
    ],
    "code_indx_copy": [
      123,
      22,
      23,
      1,
      520,
      97,
      416,
      22,
      23,
      1,
      6,
      17,
      97,
      520,
      7,
      6,
      9,
      34,
      17
    ],
    "code_indx_nocopy": [
      123,
      22,
      23,
      1,
      520,
      97,
      416,
      22,
      23,
      1,
      6,
      17,
      97,
      520,
      7,
      6,
      9,
      34,
      17
    ]
  },
  {
    "intent": [
      "django",
      "set",
      "default",
      "value",
      "of",
      "field",
      "var_0",
      "equal",
      "to",
      "str_0"
    ],
    "code": [
      "var_0",
      "=",
      "models",
      ".",
      "CharField",
      "(",
      "max_length",
      "=",
      "7",
      ",",
      "default",
      "=",
      "'str_0'",
      ",",
      "editable",
      "=",
      "False",
      ")"
    ],
    "slot_map": {
      "var_0": "b",
      "str_0": "0000000"
    },
    "intent_indx": [
      85,
      57,
      226,
      19,
      2,
      301,
      25,
      104,
      8,
      5
    ],
    "code_indx_copy": [
      34,
      19,
      520,
      22,
      520,
      1,
      520,
      19,
      221,
      8,
      526,
      19,
      29,
      8,
      520,
      19,
      88,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      520,
      22,
      520,
      1,
      520,
      19,
      221,
      8,
      520,
      19,
      29,
      8,
      520,
      19,
      88,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "li",
      "var_0",
      "in",
      "ascending",
      "order",
      "based",
      "on",
      "the",
      "degree",
      "value",
      "of",
      "it",
      "element"
    ],
    "code": [
      "sorted",
      "(",
      "var_0",
      ",",
      "lambda",
      "x",
      ":",
      "(",
      "degree",
      "(",
      "x",
      ")",
      ",",
      "x",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": "list5"
    },
    "intent_indx": [
      117,
      433,
      25,
      23,
      119,
      158,
      199,
      140,
      17,
      433,
      19,
      2,
      89,
      1
    ],
    "code_indx_copy": [
      102,
      1,
      34,
      8,
      44,
      26,
      13,
      1,
      533,
      1,
      26,
      17,
      8,
      26,
      17,
      17
    ],
    "code_indx_nocopy": [
      102,
      1,
      34,
      8,
      44,
      26,
      13,
      1,
      520,
      1,
      26,
      17,
      8,
      26,
      17,
      17
    ]
  },
  {
    "intent": [
      "how",
      "do",
      "i",
      "perform",
      "secondary",
      "sorting",
      "in",
      "python",
      "?"
    ],
    "code": [
      "sorted",
      "(",
      "list5",
      ",",
      "key",
      "=",
      "lambda",
      "vertex",
      ":",
      "(",
      "degree",
      "(",
      "vertex",
      ")",
      ",",
      "vertex",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      75,
      312,
      313,
      433,
      433,
      274,
      23,
      47,
      49
    ],
    "code_indx_copy": [
      102,
      1,
      520,
      8,
      103,
      19,
      44,
      520,
      13,
      1,
      520,
      1,
      520,
      17,
      8,
      520,
      17,
      17
    ],
    "code_indx_nocopy": [
      102,
      1,
      520,
      8,
      103,
      19,
      44,
      520,
      13,
      1,
      520,
      1,
      520,
      17,
      8,
      520,
      17,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "list",
      "into",
      "a",
      "generator",
      "object"
    ],
    "code": [
      "(",
      "n",
      "for",
      "n",
      "in",
      "[",
      "1",
      ",",
      "2",
      ",",
      "3",
      ",",
      "5",
      "]",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      10,
      3,
      4,
      11,
      3,
      142,
      14
    ],
    "code_indx_copy": [
      1,
      309,
      7,
      309,
      9,
      12,
      15,
      8,
      82,
      8,
      54,
      8,
      187,
      16,
      17
    ],
    "code_indx_nocopy": [
      1,
      309,
      7,
      309,
      9,
      12,
      15,
      8,
      82,
      8,
      54,
      8,
      187,
      16,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "element",
      "from",
      "list",
      "var_0",
      "that",
      "have",
      "an",
      "index",
      "number",
      "mentioned",
      "in",
      "list",
      "var_1"
    ],
    "code": [
      "newlist",
      "=",
      "[",
      "v",
      "for",
      "i",
      ",",
      "v",
      "in",
      "enumerate",
      "(",
      "var_0",
      ")",
      "if",
      "i",
      "not",
      "in",
      "var_1",
      "]"
    ],
    "slot_map": {
      "var_0": "oldlist",
      "var_1": "removelist"
    },
    "intent_indx": [
      258,
      1,
      56,
      4,
      25,
      189,
      190,
      217,
      35,
      74,
      433,
      23,
      4,
      61
    ],
    "code_indx_copy": [
      520,
      19,
      12,
      91,
      7,
      6,
      8,
      91,
      9,
      10,
      1,
      34,
      17,
      67,
      6,
      283,
      9,
      92,
      16
    ],
    "code_indx_nocopy": [
      520,
      19,
      12,
      91,
      7,
      6,
      8,
      91,
      9,
      10,
      1,
      34,
      17,
      67,
      6,
      283,
      9,
      92,
      16
    ]
  },
  {
    "intent": [
      "open",
      "a",
      "file",
      "str_0",
      "in",
      "write",
      "mode"
    ],
    "code": [
      "f",
      "=",
      "open",
      "(",
      "'str_0'",
      ",",
      "'w'",
      ")"
    ],
    "slot_map": {
      "str_0": "yourfile.txt"
    },
    "intent_indx": [
      275,
      3,
      126,
      5,
      23,
      163,
      276
    ],
    "code_indx_copy": [
      192,
      19,
      106,
      1,
      29,
      8,
      493,
      17
    ],
    "code_indx_nocopy": [
      192,
      19,
      106,
      1,
      29,
      8,
      493,
      17
    ]
  },
  {
    "intent": [
      "get",
      "attribute",
      "str_0",
      "from",
      "object",
      "var_0"
    ],
    "code": [
      "getattr",
      "(",
      "var_0",
      ",",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": "attr",
      "var_0": "obj"
    },
    "intent_indx": [
      16,
      326,
      5,
      56,
      14,
      25
    ],
    "code_indx_copy": [
      302,
      1,
      34,
      8,
      29,
      17
    ],
    "code_indx_nocopy": [
      302,
      1,
      34,
      8,
      29,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "tuple",
      "of",
      "tuples",
      "str_0",
      "to",
      "tuple"
    ],
    "code": [
      "from",
      "functools",
      "import",
      "reduce",
      "\n",
      "reduce",
      "(",
      "lambda",
      "a",
      ",",
      "b",
      ":",
      "a",
      "+",
      "b",
      ",",
      "(",
      "str_0",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": "(('aa',), ('bb',), ('cc',))",
      "(str_0)": "(('aa',), ('bb',), ('cc',))"
    },
    "intent_indx": [
      10,
      112,
      2,
      31,
      5,
      8,
      112
    ],
    "code_indx_copy": [
      391,
      520,
      392,
      393,
      163,
      393,
      1,
      44,
      96,
      8,
      98,
      13,
      96,
      97,
      98,
      8,
      1,
      11,
      17,
      17
    ],
    "code_indx_nocopy": [
      391,
      520,
      392,
      393,
      163,
      393,
      1,
      44,
      96,
      8,
      98,
      13,
      96,
      97,
      98,
      8,
      1,
      11,
      17,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "tuple",
      "of",
      "tuples",
      "str_0",
      "to",
      "list",
      "in",
      "one",
      "line"
    ],
    "code": [
      "map",
      "(",
      "lambda",
      "a",
      ":",
      "a",
      "[",
      "0",
      "]",
      ",",
      "(",
      "str_0",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": "(('aa',), ('bb',), ('cc',))",
      "(str_0)": "(('aa',), ('bb',), ('cc',))"
    },
    "intent_indx": [
      10,
      112,
      2,
      31,
      5,
      8,
      4,
      23,
      293,
      167
    ],
    "code_indx_copy": [
      24,
      1,
      44,
      96,
      13,
      96,
      12,
      43,
      16,
      8,
      1,
      11,
      17,
      17
    ],
    "code_indx_nocopy": [
      24,
      1,
      44,
      96,
      13,
      96,
      12,
      43,
      16,
      8,
      1,
      11,
      17,
      17
    ]
  },
  {
    "intent": [
      "python",
      "panda",
      ":",
      "how",
      "to",
      "replace",
      "a",
      "character",
      "in",
      "a",
      "column",
      "of",
      "a",
      "dataframe",
      "?"
    ],
    "code": [
      "df",
      "[",
      "'range'",
      "]",
      ".",
      "replace",
      "(",
      "','",
      ",",
      "'-'",
      ",",
      "inplace",
      "=",
      "True",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      47,
      40,
      128,
      75,
      8,
      131,
      3,
      96,
      23,
      3,
      59,
      2,
      3,
      41,
      49
    ],
    "code_indx_copy": [
      151,
      12,
      520,
      16,
      22,
      108,
      1,
      73,
      8,
      520,
      8,
      281,
      19,
      110,
      17
    ],
    "code_indx_nocopy": [
      151,
      12,
      520,
      16,
      22,
      108,
      1,
      73,
      8,
      520,
      8,
      281,
      19,
      110,
      17
    ]
  },
  {
    "intent": [
      "unzip",
      "the",
      "list",
      "str_0"
    ],
    "code": [
      "zip",
      "(",
      "*",
      "[",
      "str_0",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": "[('a', 1), ('b', 2), ('c', 3), ('d', 4)]",
      "[str_0]": "[('a', 1), ('b', 2), ('c', 3), ('d', 4)]"
    },
    "intent_indx": [
      433,
      17,
      4,
      5
    ],
    "code_indx_copy": [
      36,
      1,
      3,
      12,
      11,
      16,
      17
    ],
    "code_indx_nocopy": [
      36,
      1,
      3,
      12,
      11,
      16,
      17
    ]
  },
  {
    "intent": [
      "unzip",
      "the",
      "list",
      "str_0"
    ],
    "code": [
      "zip",
      "(",
      "*",
      "[",
      "str_0",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": "[('a', 1), ('b', 2), ('c', 3), ('d', 4)]",
      "[str_0]": "[('a', 1), ('b', 2), ('c', 3), ('d', 4)]"
    },
    "intent_indx": [
      433,
      17,
      4,
      5
    ],
    "code_indx_copy": [
      36,
      1,
      3,
      12,
      11,
      16,
      17
    ],
    "code_indx_nocopy": [
      36,
      1,
      3,
      12,
      11,
      16,
      17
    ]
  },
  {
    "intent": [
      "unzip",
      "list",
      "var_0"
    ],
    "code": [
      "result",
      "=",
      "[",
      "a",
      "for",
      "a",
      ",",
      "b",
      "in",
      "var_0",
      "]",
      ",",
      "[",
      "b",
      "for",
      "a",
      ",",
      "b",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": "original"
    },
    "intent_indx": [
      433,
      4,
      25
    ],
    "code_indx_copy": [
      520,
      19,
      12,
      96,
      7,
      96,
      8,
      98,
      9,
      34,
      16,
      8,
      12,
      98,
      7,
      96,
      8,
      98,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      520,
      19,
      12,
      96,
      7,
      96,
      8,
      98,
      9,
      34,
      16,
      8,
      12,
      98,
      7,
      96,
      8,
      98,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "unzip",
      "list",
      "var_0",
      "and",
      "return",
      "a",
      "generator"
    ],
    "code": [
      "result",
      "=",
      "(",
      "a",
      "for",
      "a",
      ",",
      "b",
      "in",
      "var_0",
      ")",
      ",",
      "(",
      "b",
      "for",
      "a",
      ",",
      "b",
      "in",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": "original"
    },
    "intent_indx": [
      433,
      4,
      25,
      29,
      156,
      3,
      142
    ],
    "code_indx_copy": [
      520,
      19,
      1,
      96,
      7,
      96,
      8,
      98,
      9,
      34,
      17,
      8,
      1,
      98,
      7,
      96,
      8,
      98,
      9,
      34,
      17
    ],
    "code_indx_nocopy": [
      520,
      19,
      1,
      96,
      7,
      96,
      8,
      98,
      9,
      34,
      17,
      8,
      1,
      98,
      7,
      96,
      8,
      98,
      9,
      34,
      17
    ]
  },
  {
    "intent": [
      "unzip",
      "list",
      "str_0"
    ],
    "code": [
      "zip",
      "(",
      "*",
      "[",
      "(",
      "'a'",
      ",",
      "1",
      ")",
      ",",
      "(",
      "'b'",
      ",",
      "2",
      ")",
      ",",
      "(",
      "'c'",
      ",",
      "3",
      ")",
      ",",
      "(",
      "'d'",
      ",",
      "4",
      ")",
      ",",
      "(",
      "'e'",
      ",",
      ")",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": "[('a', 1), ('b', 2), ('c', 3), ('d', 4), ('e', )]",
      "[str_0]": "[('a', 1), ('b', 2), ('c', 3), ('d', 4), ('e', )]"
    },
    "intent_indx": [
      433,
      4,
      5
    ],
    "code_indx_copy": [
      36,
      1,
      3,
      12,
      1,
      410,
      8,
      15,
      17,
      8,
      1,
      295,
      8,
      82,
      17,
      8,
      1,
      520,
      8,
      54,
      17,
      8,
      1,
      434,
      8,
      186,
      17,
      8,
      1,
      520,
      8,
      17,
      16,
      17
    ],
    "code_indx_nocopy": [
      36,
      1,
      3,
      12,
      1,
      410,
      8,
      15,
      17,
      8,
      1,
      295,
      8,
      82,
      17,
      8,
      1,
      520,
      8,
      54,
      17,
      8,
      1,
      434,
      8,
      186,
      17,
      8,
      1,
      520,
      8,
      17,
      16,
      17
    ]
  },
  {
    "intent": [
      "unzip",
      "list",
      "str_0",
      "and",
      "fill",
      "empty",
      "result",
      "with",
      "none"
    ],
    "code": [
      "map",
      "(",
      "None",
      ",",
      "*",
      "[",
      "(",
      "'a'",
      ",",
      "1",
      ")",
      ",",
      "(",
      "'b'",
      ",",
      "2",
      ")",
      ",",
      "(",
      "'c'",
      ",",
      "3",
      ")",
      ",",
      "(",
      "'d'",
      ",",
      "4",
      ")",
      ",",
      "(",
      "'e'",
      ",",
      ")",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": "[('a', 1), ('b', 2), ('c', 3), ('d', 4), ('e', )]",
      "[str_0]": "[('a', 1), ('b', 2), ('c', 3), ('d', 4), ('e', )]"
    },
    "intent_indx": [
      433,
      4,
      5,
      29,
      433,
      144,
      433,
      77,
      433
    ],
    "code_indx_copy": [
      24,
      1,
      211,
      8,
      3,
      12,
      1,
      410,
      8,
      15,
      17,
      8,
      1,
      295,
      8,
      82,
      17,
      8,
      1,
      520,
      8,
      54,
      17,
      8,
      1,
      434,
      8,
      186,
      17,
      8,
      1,
      520,
      8,
      17,
      16,
      17
    ],
    "code_indx_nocopy": [
      24,
      1,
      211,
      8,
      3,
      12,
      1,
      410,
      8,
      15,
      17,
      8,
      1,
      295,
      8,
      82,
      17,
      8,
      1,
      520,
      8,
      54,
      17,
      8,
      1,
      434,
      8,
      186,
      17,
      8,
      1,
      520,
      8,
      17,
      16,
      17
    ]
  },
  {
    "intent": [
      "encode",
      "str_0",
      "to",
      "a",
      "json",
      "string"
    ],
    "code": [
      "json",
      ".",
      "dumps",
      "(",
      "Decimal",
      "(",
      "'3.9'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": "Decimal('3.9')"
    },
    "intent_indx": [
      415,
      5,
      8,
      3,
      176,
      13
    ],
    "code_indx_copy": [
      142,
      22,
      143,
      1,
      520,
      1,
      520,
      17,
      17
    ],
    "code_indx_nocopy": [
      142,
      22,
      143,
      1,
      520,
      1,
      520,
      17,
      17
    ]
  },
  {
    "intent": [
      "add",
      "key",
      "str_0",
      "to",
      "dictionary",
      "var_0",
      "with",
      "value",
      "str_1"
    ],
    "code": [
      "var_0",
      "[",
      "'str_0'",
      "]",
      "=",
      "'str_1'"
    ],
    "slot_map": {
      "str_0": "mynewkey",
      "var_0": "d",
      "str_1": "mynewvalue"
    },
    "intent_indx": [
      58,
      22,
      5,
      8,
      24,
      25,
      77,
      19,
      30
    ],
    "code_indx_copy": [
      34,
      12,
      29,
      16,
      19,
      63
    ],
    "code_indx_nocopy": [
      34,
      12,
      29,
      16,
      19,
      63
    ]
  },
  {
    "intent": [
      "add",
      "key",
      "str_0",
      "to",
      "dictionary",
      "var_0",
      "with",
      "value",
      "1"
    ],
    "code": [
      "var_0",
      ".",
      "update",
      "(",
      "{",
      "'str_0'",
      ":",
      "1",
      "}",
      ")"
    ],
    "slot_map": {
      "str_0": "a",
      "var_0": "data"
    },
    "intent_indx": [
      58,
      22,
      5,
      8,
      24,
      25,
      77,
      19,
      229
    ],
    "code_indx_copy": [
      34,
      22,
      69,
      1,
      52,
      29,
      13,
      15,
      53,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      69,
      1,
      52,
      29,
      13,
      15,
      53,
      17
    ]
  },
  {
    "intent": [
      "add",
      "key",
      "str_0",
      "to",
      "dictionary",
      "var_0",
      "with",
      "value",
      "1"
    ],
    "code": [
      "var_0",
      ".",
      "update",
      "(",
      "dict",
      "(",
      "str_0",
      "=",
      "1",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": "a",
      "var_0": "data"
    },
    "intent_indx": [
      58,
      22,
      5,
      8,
      24,
      25,
      77,
      19,
      229
    ],
    "code_indx_copy": [
      34,
      22,
      69,
      1,
      70,
      1,
      11,
      19,
      15,
      17,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      69,
      1,
      70,
      1,
      11,
      19,
      15,
      17,
      17
    ]
  },
  {
    "intent": [
      "add",
      "key",
      "str_0",
      "to",
      "dictionary",
      "var_0",
      "with",
      "value",
      "1"
    ],
    "code": [
      "var_0",
      ".",
      "update",
      "(",
      "str_0",
      "=",
      "1",
      ")"
    ],
    "slot_map": {
      "str_0": "a",
      "var_0": "data"
    },
    "intent_indx": [
      58,
      22,
      5,
      8,
      24,
      25,
      77,
      19,
      229
    ],
    "code_indx_copy": [
      34,
      22,
      69,
      1,
      11,
      19,
      15,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      69,
      1,
      11,
      19,
      15,
      17
    ]
  },
  {
    "intent": [
      "find",
      "maximal",
      "value",
      "in",
      "matrix",
      "var_0"
    ],
    "code": [
      "max",
      "(",
      "[",
      "max",
      "(",
      "i",
      ")",
      "for",
      "i",
      "in",
      "var_0",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": "matrix"
    },
    "intent_indx": [
      45,
      433,
      19,
      23,
      183,
      25
    ],
    "code_indx_copy": [
      181,
      1,
      12,
      181,
      1,
      6,
      17,
      7,
      6,
      9,
      34,
      16,
      17
    ],
    "code_indx_nocopy": [
      181,
      1,
      12,
      181,
      1,
      6,
      17,
      7,
      6,
      9,
      34,
      16,
      17
    ]
  },
  {
    "intent": [
      "round",
      "number",
      "var_0",
      "to",
      "2",
      "precision",
      "after",
      "the",
      "decimal",
      "point"
    ],
    "code": [
      "var_0",
      "=",
      "str",
      "(",
      "round",
      "(",
      "var_0",
      ",",
      "2",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": "answer"
    },
    "intent_indx": [
      244,
      74,
      25,
      8,
      79,
      433,
      195,
      17,
      246,
      262
    ],
    "code_indx_copy": [
      34,
      19,
      25,
      1,
      210,
      1,
      34,
      8,
      82,
      17,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      25,
      1,
      210,
      1,
      34,
      8,
      82,
      17,
      17
    ]
  },
  {
    "intent": [
      "extract",
      "ip",
      "address",
      "from",
      "an",
      "html",
      "string"
    ],
    "code": [
      "ip",
      "=",
      "re",
      ".",
      "findall",
      "(",
      "'[0-9]+(?:\\\\.[0-9]+){3}'",
      ",",
      "s",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      102,
      433,
      433,
      56,
      217,
      296,
      13
    ],
    "code_indx_copy": [
      525,
      19,
      39,
      22,
      48,
      1,
      520,
      8,
      183,
      17
    ],
    "code_indx_nocopy": [
      520,
      19,
      39,
      22,
      48,
      1,
      520,
      8,
      183,
      17
    ]
  },
  {
    "intent": [
      "filter",
      "dataframe",
      "var_0",
      "by",
      "value",
      "in",
      "column",
      "var_1",
      "that",
      "appear",
      "more",
      "than",
      "once"
    ],
    "code": [
      "var_0",
      ".",
      "groupby",
      "(",
      "'var_1'",
      ")",
      ".",
      "filter",
      "(",
      "lambda",
      "x",
      ":",
      "len",
      "(",
      "x",
      ")",
      ">",
      "1",
      ")"
    ],
    "slot_map": {
      "var_0": "df",
      "var_1": "A"
    },
    "intent_indx": [
      209,
      41,
      25,
      42,
      19,
      23,
      59,
      61,
      189,
      433,
      399,
      254,
      433
    ],
    "code_indx_copy": [
      34,
      22,
      159,
      1,
      57,
      17,
      22,
      79,
      1,
      44,
      26,
      13,
      32,
      1,
      26,
      17,
      216,
      15,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      159,
      1,
      57,
      17,
      22,
      79,
      1,
      44,
      26,
      13,
      32,
      1,
      26,
      17,
      216,
      15,
      17
    ]
  },
  {
    "intent": [
      "append",
      "each",
      "line",
      "in",
      "file",
      "var_0",
      "into",
      "a",
      "list"
    ],
    "code": [
      "[",
      "x",
      "for",
      "x",
      "in",
      "var_0",
      ".",
      "splitlines",
      "(",
      ")",
      "if",
      "x",
      "!=",
      "''",
      "]"
    ],
    "slot_map": {
      "var_0": "myfile"
    },
    "intent_indx": [
      110,
      21,
      167,
      23,
      126,
      25,
      11,
      3,
      4
    ],
    "code_indx_copy": [
      12,
      26,
      7,
      26,
      9,
      34,
      22,
      520,
      1,
      17,
      67,
      26,
      89,
      21,
      16
    ],
    "code_indx_nocopy": [
      12,
      26,
      7,
      26,
      9,
      34,
      22,
      520,
      1,
      17,
      67,
      26,
      89,
      21,
      16
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "list",
      "of",
      "integer",
      "var_0",
      "from",
      "a",
      "file",
      "str_0"
    ],
    "code": [
      "var_0",
      "=",
      "map",
      "(",
      "int",
      ",",
      "open",
      "(",
      "'str_0'",
      ")",
      ".",
      "readlines",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": "lst",
      "str_0": "filename.txt"
    },
    "intent_indx": [
      16,
      3,
      4,
      2,
      7,
      25,
      56,
      3,
      126,
      5
    ],
    "code_indx_copy": [
      34,
      19,
      24,
      1,
      20,
      8,
      106,
      1,
      29,
      17,
      22,
      494,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      24,
      1,
      20,
      8,
      106,
      1,
      29,
      17,
      22,
      494,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "add",
      "color",
      "bar",
      "with",
      "image",
      "var_0",
      "to",
      "plot",
      "var_1"
    ],
    "code": [
      "var_1",
      ".",
      "colorbar",
      "(",
      "var_0",
      "=",
      "var_0",
      ",",
      "cax",
      "=",
      "ax3",
      ")"
    ],
    "slot_map": {
      "var_0": "mappable",
      "var_1": "plt"
    },
    "intent_indx": [
      58,
      214,
      433,
      77,
      289,
      25,
      8,
      235,
      61
    ],
    "code_indx_copy": [
      92,
      22,
      520,
      1,
      34,
      19,
      34,
      8,
      520,
      19,
      520,
      17
    ],
    "code_indx_nocopy": [
      92,
      22,
      520,
      1,
      34,
      19,
      34,
      8,
      520,
      19,
      520,
      17
    ]
  },
  {
    "intent": [
      "count",
      "most",
      "frequent",
      "int_0",
      "word",
      "in",
      "column",
      "str_0",
      "of",
      "dataframe",
      "var_0"
    ],
    "code": [
      "Counter",
      "(",
      "' '",
      ".",
      "join",
      "(",
      "var_0",
      "[",
      "'str_0'",
      "]",
      ")",
      ".",
      "split",
      "(",
      ")",
      ")",
      ".",
      "most_common",
      "(",
      "int_0",
      ")"
    ],
    "slot_map": {
      "str_0": "text",
      "var_0": "df",
      "int_0": "100"
    },
    "intent_indx": [
      173,
      433,
      433,
      259,
      39,
      23,
      59,
      5,
      2,
      41,
      25
    ],
    "code_indx_copy": [
      496,
      1,
      109,
      22,
      23,
      1,
      34,
      12,
      29,
      16,
      17,
      22,
      71,
      1,
      17,
      17,
      22,
      520,
      1,
      314,
      17
    ],
    "code_indx_nocopy": [
      496,
      1,
      109,
      22,
      23,
      1,
      34,
      12,
      29,
      16,
      17,
      22,
      71,
      1,
      17,
      17,
      22,
      520,
      1,
      314,
      17
    ]
  },
  {
    "intent": [
      "python",
      "split",
      "a",
      "string",
      "using",
      "regex"
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'(.+?):(.+?)\\\\b ?'",
      ",",
      "text",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      47,
      139,
      3,
      13,
      108,
      38
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      520,
      8,
      355,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      520,
      8,
      355,
      17
    ]
  },
  {
    "intent": [
      "generate",
      "all",
      "2-element",
      "subset",
      "of",
      "tuple",
      "str_0"
    ],
    "code": [
      "list",
      "(",
      "itertools",
      ".",
      "combinations",
      "(",
      "(",
      "str_0",
      ")",
      ",",
      "2",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": "(1, 2, 3)",
      "(str_0)": "(1, 2, 3)"
    },
    "intent_indx": [
      53,
      36,
      433,
      351,
      2,
      112,
      5
    ],
    "code_indx_copy": [
      33,
      1,
      50,
      22,
      51,
      1,
      1,
      11,
      17,
      8,
      82,
      17,
      17
    ],
    "code_indx_nocopy": [
      33,
      1,
      50,
      22,
      51,
      1,
      1,
      11,
      17,
      8,
      82,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "value",
      "of",
      "datetime.today",
      "(",
      ")",
      "in",
      "the",
      "utc",
      "time",
      "zone"
    ],
    "code": [
      "datetime",
      ".",
      "now",
      "(",
      "pytz",
      ".",
      "utc",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      16,
      3,
      19,
      2,
      433,
      203,
      26,
      23,
      17,
      175,
      135,
      433
    ],
    "code_indx_copy": [
      27,
      22,
      296,
      1,
      520,
      22,
      533,
      17
    ],
    "code_indx_nocopy": [
      27,
      22,
      296,
      1,
      520,
      22,
      520,
      17
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "new",
      "list",
      "var_0by",
      "removing",
      "empty",
      "list",
      "from",
      "a",
      "list",
      "of",
      "list",
      "var_1"
    ],
    "code": [
      "var_0",
      "=",
      "[",
      "x",
      "for",
      "x",
      "in",
      "var_1",
      "if",
      "x",
      "!=",
      "[",
      "]",
      "]"
    ],
    "slot_map": {
      "var_0": "list2",
      "var_1": "list1"
    },
    "intent_indx": [
      16,
      3,
      186,
      4,
      433,
      97,
      144,
      4,
      56,
      3,
      4,
      2,
      4,
      61
    ],
    "code_indx_copy": [
      34,
      19,
      12,
      26,
      7,
      26,
      9,
      92,
      67,
      26,
      89,
      12,
      16,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      12,
      26,
      7,
      26,
      9,
      92,
      67,
      26,
      89,
      12,
      16,
      16
    ]
  },
  {
    "intent": [
      "create",
      "var_0",
      "to",
      "contain",
      "the",
      "list",
      "from",
      "list",
      "var_1",
      "excluding",
      "the",
      "empty",
      "list",
      "from",
      "var_1"
    ],
    "code": [
      "var_0",
      "=",
      "[",
      "x",
      "for",
      "x",
      "in",
      "var_2",
      "if",
      "x",
      "]"
    ],
    "slot_map": {
      "var_0": "list2",
      "var_1": "list1",
      "var_2": "list1"
    },
    "intent_indx": [
      145,
      25,
      8,
      311,
      17,
      4,
      56,
      4,
      61,
      433,
      17,
      144,
      4,
      56,
      61
    ],
    "code_indx_copy": [
      34,
      19,
      12,
      26,
      7,
      26,
      9,
      95,
      67,
      26,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      12,
      26,
      7,
      26,
      9,
      95,
      67,
      26,
      16
    ]
  },
  {
    "intent": [
      "django",
      "response",
      "with",
      "json",
      "var_0"
    ],
    "code": [
      "return",
      "HttpResponse",
      "(",
      "var_0",
      ",",
      "mimetype",
      "=",
      "'application/json'",
      ")"
    ],
    "slot_map": {
      "var_0": "data"
    },
    "intent_indx": [
      85,
      433,
      77,
      176,
      25
    ],
    "code_indx_copy": [
      119,
      520,
      1,
      34,
      8,
      520,
      19,
      520,
      17
    ],
    "code_indx_nocopy": [
      119,
      520,
      1,
      34,
      8,
      520,
      19,
      520,
      17
    ]
  },
  {
    "intent": [
      "get",
      "all",
      "text",
      "that",
      "is",
      "not",
      "enclosed",
      "within",
      "square",
      "bracket",
      "in",
      "string",
      "var_0"
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'(.*?)\\\\[.*?\\\\]'",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": "example_str"
    },
    "intent_indx": [
      16,
      36,
      257,
      189,
      149,
      103,
      433,
      52,
      242,
      433,
      23,
      13,
      25
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      520,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      520,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "use",
      "a",
      "regex",
      "to",
      "get",
      "all",
      "text",
      "in",
      "a",
      "string",
      "var_0",
      "that",
      "is",
      "not",
      "surrounded",
      "by",
      "square",
      "bracket"
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'(.*?)(?:\\\\[.*?\\\\]|$)'",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": "example_str"
    },
    "intent_indx": [
      298,
      3,
      38,
      8,
      16,
      36,
      257,
      23,
      3,
      13,
      25,
      189,
      149,
      103,
      433,
      42,
      242,
      433
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      520,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      520,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "get",
      "whatever",
      "is",
      "between",
      "parenthesis",
      "a",
      "a",
      "single",
      "match",
      ",",
      "and",
      "any",
      "char",
      "outside",
      "a",
      "an",
      "individual",
      "match",
      "in",
      "string",
      "str_0"
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'\\\\(.+?\\\\)|\\\\w'",
      ",",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": "(zyx)bc"
    },
    "intent_indx": [
      16,
      433,
      149,
      269,
      107,
      3,
      3,
      9,
      106,
      60,
      29,
      263,
      433,
      433,
      3,
      217,
      433,
      106,
      23,
      13,
      5
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      520,
      8,
      29,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      520,
      8,
      29,
      17
    ]
  },
  {
    "intent": [
      "match",
      "regex",
      "str_0",
      "with",
      "string",
      "str_1"
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'\\\\((.*?)\\\\)|(\\\\w)'",
      ",",
      "'str_1'",
      ")"
    ],
    "slot_map": {
      "str_0": "\\\\((.*?)\\\\)|(\\\\w)",
      "str_1": "(zyx)bc"
    },
    "intent_indx": [
      106,
      38,
      5,
      77,
      13,
      30
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      520,
      8,
      63,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      520,
      8,
      63,
      17
    ]
  },
  {
    "intent": [
      "match",
      "multiple",
      "regex",
      "pattern",
      "with",
      "the",
      "alternation",
      "operator",
      "str_0",
      "in",
      "a",
      "string",
      "str_1"
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'\\\\(.*?\\\\)|\\\\w'",
      ",",
      "'str_1'",
      ")"
    ],
    "slot_map": {
      "str_0": "|",
      "str_1": "(zyx)bc"
    },
    "intent_indx": [
      106,
      6,
      38,
      51,
      77,
      17,
      433,
      433,
      5,
      23,
      3,
      13,
      30
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      520,
      8,
      63,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      520,
      8,
      63,
      17
    ]
  },
  {
    "intent": [
      "formate",
      "each",
      "string",
      "cin",
      "list",
      "var_0",
      "into",
      "pattern",
      "str_0"
    ],
    "code": [
      "var_0",
      "=",
      "[",
      "'str_0'",
      ".",
      "format",
      "(",
      "element",
      ")",
      "for",
      "element",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": "elements",
      "str_0": "%{0}%"
    },
    "intent_indx": [
      433,
      21,
      13,
      433,
      4,
      25,
      11,
      51,
      5
    ],
    "code_indx_copy": [
      34,
      19,
      12,
      29,
      22,
      38,
      1,
      506,
      17,
      7,
      506,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      12,
      29,
      22,
      38,
      1,
      506,
      17,
      7,
      506,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "open",
      "a",
      "background",
      "process",
      "str_0",
      "with",
      "argument",
      "str_1"
    ],
    "code": [
      "subprocess",
      ".",
      "Popen",
      "(",
      "[",
      "'str_0'",
      ",",
      "'str_1'",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": "background-process",
      "str_1": "arguments"
    },
    "intent_indx": [
      275,
      3,
      433,
      283,
      5,
      77,
      295,
      30
    ],
    "code_indx_copy": [
      232,
      22,
      437,
      1,
      12,
      29,
      8,
      63,
      16,
      17
    ],
    "code_indx_nocopy": [
      232,
      22,
      437,
      1,
      12,
      29,
      8,
      63,
      16,
      17
    ]
  },
  {
    "intent": [
      "get",
      "list",
      "of",
      "value",
      "from",
      "dictionary",
      "str_0",
      "w.r.t",
      ".",
      "list",
      "of",
      "key",
      "str_1"
    ],
    "code": [
      "[",
      "str_0",
      "[",
      "x",
      "]",
      "for",
      "x",
      "in",
      "str_1",
      "]"
    ],
    "slot_map": {
      "str_0": "mydict",
      "str_1": "mykeys"
    },
    "intent_indx": [
      16,
      4,
      2,
      19,
      56,
      24,
      5,
      433,
      155,
      4,
      2,
      22,
      30
    ],
    "code_indx_copy": [
      12,
      11,
      12,
      26,
      16,
      7,
      26,
      9,
      37,
      16
    ],
    "code_indx_nocopy": [
      12,
      11,
      12,
      26,
      16,
      7,
      26,
      9,
      37,
      16
    ]
  },
  {
    "intent": [
      "convert",
      "list",
      "str_0",
      "into",
      "a",
      "dictionary"
    ],
    "code": [
      "dict",
      "(",
      "[",
      "str_0",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": "[('Name', 'Joe'), ('Age', 22)]",
      "[str_0]": "[('Name', 'Joe'), ('Age', 22)]"
    },
    "intent_indx": [
      10,
      4,
      5,
      11,
      3,
      24
    ],
    "code_indx_copy": [
      70,
      1,
      12,
      11,
      16,
      17
    ],
    "code_indx_nocopy": [
      70,
      1,
      12,
      11,
      16,
      17
    ]
  },
  {
    "intent": [
      "average",
      "each",
      "two",
      "column",
      "of",
      "array",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "reshape",
      "(",
      "-",
      "1",
      ",",
      "j",
      ")",
      ".",
      "mean",
      "(",
      "axis",
      "=",
      "1",
      ")",
      ".",
      "reshape",
      "(",
      "var_0",
      ".",
      "shape",
      "[",
      "0",
      "]",
      ",",
      "-",
      "1",
      ")"
    ],
    "slot_map": {
      "var_0": "data"
    },
    "intent_indx": [
      18,
      21,
      28,
      59,
      2,
      82,
      25
    ],
    "code_indx_copy": [
      34,
      22,
      361,
      1,
      14,
      15,
      8,
      30,
      17,
      22,
      389,
      1,
      42,
      19,
      15,
      17,
      22,
      361,
      1,
      34,
      22,
      226,
      12,
      43,
      16,
      8,
      14,
      15,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      361,
      1,
      14,
      15,
      8,
      30,
      17,
      22,
      389,
      1,
      42,
      19,
      15,
      17,
      22,
      361,
      1,
      34,
      22,
      226,
      12,
      43,
      16,
      8,
      14,
      15,
      17
    ]
  },
  {
    "intent": [
      "double",
      "backslash",
      "escape",
      "all",
      "double",
      "quote",
      "in",
      "string",
      "var_0"
    ],
    "code": [
      "print",
      "(",
      "var_0",
      ".",
      "encode",
      "(",
      "'unicode-escape'",
      ")",
      ".",
      "replace",
      "(",
      "'\"'",
      ",",
      "'\\\\\"'",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": "s"
    },
    "intent_indx": [
      433,
      433,
      287,
      36,
      433,
      433,
      23,
      13,
      25
    ],
    "code_indx_copy": [
      49,
      1,
      34,
      22,
      242,
      1,
      459,
      17,
      22,
      108,
      1,
      520,
      8,
      520,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      34,
      22,
      242,
      1,
      459,
      17,
      22,
      108,
      1,
      520,
      8,
      520,
      17,
      17
    ]
  },
  {
    "intent": [
      "split",
      "a",
      "string",
      "into",
      "a",
      "list",
      "of",
      "word",
      "and",
      "whitespace"
    ],
    "code": [
      "re",
      ".",
      "split",
      "(",
      "'(\\\\W+)'",
      ",",
      "s",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      139,
      3,
      13,
      11,
      3,
      4,
      2,
      39,
      29,
      202
    ],
    "code_indx_copy": [
      39,
      22,
      71,
      1,
      520,
      8,
      183,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      71,
      1,
      520,
      8,
      183,
      17
    ]
  },
  {
    "intent": [
      "plotting",
      "stacked",
      "barplots",
      "on",
      "a",
      "panda",
      "data",
      "frame"
    ],
    "code": [
      "df",
      ".",
      "plot",
      "(",
      "kind",
      "=",
      "'barh'",
      ",",
      "stacked",
      "=",
      "True",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      433,
      433,
      433,
      140,
      3,
      40,
      63,
      64
    ],
    "code_indx_copy": [
      151,
      22,
      292,
      1,
      520,
      19,
      520,
      8,
      525,
      19,
      110,
      17
    ],
    "code_indx_nocopy": [
      151,
      22,
      292,
      1,
      520,
      19,
      520,
      8,
      520,
      19,
      110,
      17
    ]
  },
  {
    "intent": [
      "reverse",
      "the",
      "key",
      "and",
      "value",
      "in",
      "a",
      "dictionary",
      "var_0"
    ],
    "code": [
      "{",
      "i",
      "[",
      "1",
      "]",
      ":",
      "i",
      "[",
      "0",
      "]",
      "for",
      "i",
      "in",
      "list",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      "}"
    ],
    "slot_map": {
      "var_0": "myDictionary"
    },
    "intent_indx": [
      273,
      17,
      22,
      29,
      19,
      23,
      3,
      24,
      25
    ],
    "code_indx_copy": [
      52,
      6,
      12,
      15,
      16,
      13,
      6,
      12,
      43,
      16,
      7,
      6,
      9,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      53
    ],
    "code_indx_nocopy": [
      52,
      6,
      12,
      15,
      16,
      13,
      6,
      12,
      43,
      16,
      7,
      6,
      9,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      53
    ]
  },
  {
    "intent": [
      "finding",
      "the",
      "index",
      "of",
      "element",
      "containing",
      "substring",
      "str_0",
      "and",
      "str_1",
      "in",
      "a",
      "list",
      "of",
      "string",
      "str_2",
      "."
    ],
    "code": [
      "[",
      "i",
      "for",
      "i",
      ",",
      "j",
      "in",
      "enumerate",
      "(",
      "str_2",
      ")",
      "if",
      "'str_0'",
      "in",
      "j",
      ".",
      "lower",
      "(",
      ")",
      "or",
      "'str_1'",
      "in",
      "j",
      ".",
      "lower",
      "(",
      ")",
      "\n",
      "]"
    ],
    "slot_map": {
      "str_0": "how",
      "str_1": "what",
      "str_2": "myList"
    },
    "intent_indx": [
      433,
      17,
      35,
      2,
      1,
      32,
      340,
      5,
      29,
      30,
      23,
      3,
      4,
      2,
      13,
      188,
      155
    ],
    "code_indx_copy": [
      12,
      6,
      7,
      6,
      8,
      30,
      9,
      10,
      1,
      185,
      17,
      67,
      29,
      9,
      30,
      22,
      154,
      1,
      17,
      520,
      63,
      9,
      30,
      22,
      154,
      1,
      17,
      163,
      16
    ],
    "code_indx_nocopy": [
      12,
      6,
      7,
      6,
      8,
      30,
      9,
      10,
      1,
      185,
      17,
      67,
      29,
      9,
      30,
      22,
      154,
      1,
      17,
      520,
      63,
      9,
      30,
      22,
      154,
      1,
      17,
      163,
      16
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "object",
      "var_0",
      "is",
      "a",
      "string"
    ],
    "code": [
      "isinstance",
      "(",
      "var_0",
      ",",
      "str",
      ")"
    ],
    "slot_map": {
      "var_0": "obj"
    },
    "intent_indx": [
      227,
      147,
      14,
      25,
      149,
      3,
      13
    ],
    "code_indx_copy": [
      208,
      1,
      34,
      8,
      25,
      17
    ],
    "code_indx_nocopy": [
      208,
      1,
      34,
      8,
      25,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "object",
      "var_0",
      "is",
      "a",
      "string"
    ],
    "code": [
      "isinstance",
      "(",
      "var_0",
      ",",
      "str",
      ")"
    ],
    "slot_map": {
      "var_0": "o"
    },
    "intent_indx": [
      227,
      147,
      14,
      25,
      149,
      3,
      13
    ],
    "code_indx_copy": [
      208,
      1,
      34,
      8,
      25,
      17
    ],
    "code_indx_nocopy": [
      208,
      1,
      34,
      8,
      25,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "object",
      "var_0",
      "is",
      "a",
      "string"
    ],
    "code": [
      "type",
      "(",
      "var_0",
      ")",
      "is",
      "str"
    ],
    "slot_map": {
      "var_0": "o"
    },
    "intent_indx": [
      227,
      147,
      14,
      25,
      149,
      3,
      13
    ],
    "code_indx_copy": [
      520,
      1,
      34,
      17,
      336,
      25
    ],
    "code_indx_nocopy": [
      520,
      1,
      34,
      17,
      336,
      25
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "object",
      "var_0",
      "is",
      "a",
      "string"
    ],
    "code": [
      "isinstance",
      "(",
      "var_0",
      ",",
      "str",
      ")"
    ],
    "slot_map": {
      "var_0": "o"
    },
    "intent_indx": [
      227,
      147,
      14,
      25,
      149,
      3,
      13
    ],
    "code_indx_copy": [
      208,
      1,
      34,
      8,
      25,
      17
    ],
    "code_indx_nocopy": [
      208,
      1,
      34,
      8,
      25,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "var_0",
      "is",
      "a",
      "string"
    ],
    "code": [
      "isinstance",
      "(",
      "var_0",
      ",",
      "str",
      ")"
    ],
    "slot_map": {
      "var_0": "obj_to_test"
    },
    "intent_indx": [
      227,
      147,
      25,
      149,
      3,
      13
    ],
    "code_indx_copy": [
      208,
      1,
      34,
      8,
      25,
      17
    ],
    "code_indx_nocopy": [
      208,
      1,
      34,
      8,
      25,
      17
    ]
  },
  {
    "intent": [
      "append",
      "list",
      "var_0",
      "to",
      "var_1"
    ],
    "code": [
      "var_1",
      ".",
      "extend",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": "list1",
      "var_1": "list2"
    },
    "intent_indx": [
      110,
      4,
      25,
      8,
      61
    ],
    "code_indx_copy": [
      92,
      22,
      520,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      92,
      22,
      520,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "append",
      "list",
      "var_0",
      "to",
      "var_1"
    ],
    "code": [
      "var_1",
      ".",
      "extend",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": "mylog",
      "var_1": "list1"
    },
    "intent_indx": [
      110,
      4,
      25,
      8,
      61
    ],
    "code_indx_copy": [
      92,
      22,
      520,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      92,
      22,
      520,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "append",
      "list",
      "var_0",
      "to",
      "var_1"
    ],
    "code": [
      "var_1",
      ".",
      "extend",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": "a",
      "var_1": "c"
    },
    "intent_indx": [
      110,
      4,
      25,
      8,
      61
    ],
    "code_indx_copy": [
      92,
      22,
      520,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      92,
      22,
      520,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "append",
      "item",
      "in",
      "list",
      "var_0",
      "to",
      "var_1"
    ],
    "code": [
      "for",
      "line",
      "in",
      "var_0",
      ":",
      "\n",
      "    ",
      "var_1",
      ".",
      "append",
      "(",
      "line",
      ")",
      ""
    ],
    "slot_map": {
      "var_0": "mylog",
      "var_1": "list1"
    },
    "intent_indx": [
      110,
      37,
      23,
      4,
      25,
      8,
      61
    ],
    "code_indx_copy": [
      7,
      316,
      9,
      34,
      13,
      163,
      218,
      92,
      22,
      148,
      1,
      316,
      17,
      220
    ],
    "code_indx_nocopy": [
      7,
      316,
      9,
      34,
      13,
      163,
      218,
      92,
      22,
      148,
      1,
      316,
      17,
      220
    ]
  },
  {
    "intent": [
      "append",
      "a",
      "tuple",
      "of",
      "element",
      "from",
      "list",
      "var_0",
      "with",
      "index",
      "str_0",
      "to",
      "list",
      "var_1"
    ],
    "code": [
      "var_1",
      ".",
      "append",
      "(",
      "(",
      "var_0",
      "[",
      "0",
      "]",
      "[",
      "0",
      "]",
      ",",
      "var_0",
      "[",
      "0",
      "]",
      "[",
      "2",
      "]",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": "a",
      "str_0": "[0][0] [0][2]",
      "var_1": "b",
      "[str_0]": "[0][0] [0][2]"
    },
    "intent_indx": [
      110,
      3,
      112,
      2,
      1,
      56,
      4,
      25,
      77,
      35,
      5,
      8,
      4,
      61
    ],
    "code_indx_copy": [
      92,
      22,
      148,
      1,
      1,
      34,
      12,
      43,
      16,
      12,
      43,
      16,
      8,
      34,
      12,
      43,
      16,
      12,
      82,
      16,
      17,
      17
    ],
    "code_indx_nocopy": [
      92,
      22,
      148,
      1,
      1,
      34,
      12,
      43,
      16,
      12,
      43,
      16,
      8,
      34,
      12,
      43,
      16,
      12,
      82,
      16,
      17,
      17
    ]
  },
  {
    "intent": [
      "initialize",
      "var_0",
      "in",
      "flask",
      "config",
      "with",
      "str_0"
    ],
    "code": [
      "app",
      ".",
      "config",
      "[",
      "'var_0'",
      "]",
      "=",
      "'str_0'"
    ],
    "slot_map": {
      "var_0": "SECRET_KEY",
      "str_0": "Your_secret_string"
    },
    "intent_indx": [
      433,
      25,
      23,
      384,
      433,
      77,
      5
    ],
    "code_indx_copy": [
      520,
      22,
      528,
      12,
      56,
      16,
      19,
      29
    ],
    "code_indx_nocopy": [
      520,
      22,
      520,
      12,
      56,
      16,
      19,
      29
    ]
  },
  {
    "intent": [
      "unpack",
      "a",
      "series",
      "of",
      "tuples",
      "in",
      "panda",
      "into",
      "a",
      "dataframe",
      "with",
      "column",
      "name",
      "str_0",
      "and",
      "str_1"
    ],
    "code": [
      "pd",
      ".",
      "DataFrame",
      "(",
      "out",
      ".",
      "tolist",
      "(",
      ")",
      ",",
      "columns",
      "=",
      "[",
      "'str_0'",
      ",",
      "'str_1'",
      "]",
      ",",
      "index",
      "=",
      "out",
      ".",
      "index",
      ")"
    ],
    "slot_map": {
      "str_0": "out-1",
      "str_1": "out-2"
    },
    "intent_indx": [
      143,
      3,
      324,
      2,
      31,
      23,
      40,
      11,
      3,
      41,
      77,
      59,
      130,
      5,
      29,
      30
    ],
    "code_indx_copy": [
      164,
      22,
      166,
      1,
      520,
      22,
      308,
      1,
      17,
      8,
      194,
      19,
      12,
      29,
      8,
      63,
      16,
      8,
      162,
      19,
      520,
      22,
      162,
      17
    ],
    "code_indx_nocopy": [
      164,
      22,
      166,
      1,
      520,
      22,
      308,
      1,
      17,
      8,
      194,
      19,
      12,
      29,
      8,
      63,
      16,
      8,
      162,
      19,
      520,
      22,
      162,
      17
    ]
  },
  {
    "intent": [
      "find",
      "the",
      "index",
      "of",
      "an",
      "element",
      "str_0",
      "in",
      "a",
      "list",
      "var_0"
    ],
    "code": [
      "[",
      "x",
      "for",
      "x",
      "in",
      "range",
      "(",
      "len",
      "(",
      "var_0",
      ")",
      ")",
      "if",
      "var_0",
      "[",
      "x",
      "]",
      "==",
      "'str_0'",
      "]"
    ],
    "slot_map": {
      "str_0": "MSFT",
      "var_0": "stocks_list"
    },
    "intent_indx": [
      45,
      17,
      35,
      2,
      217,
      1,
      5,
      23,
      3,
      4,
      25
    ],
    "code_indx_copy": [
      12,
      26,
      7,
      26,
      9,
      105,
      1,
      32,
      1,
      34,
      17,
      17,
      67,
      34,
      12,
      26,
      16,
      76,
      29,
      16
    ],
    "code_indx_nocopy": [
      12,
      26,
      7,
      26,
      9,
      105,
      1,
      32,
      1,
      34,
      17,
      17,
      67,
      34,
      12,
      26,
      16,
      76,
      29,
      16
    ]
  },
  {
    "intent": [
      "rotate",
      "the",
      "xtick",
      "label",
      "of",
      "matplotlib",
      "plot",
      "var_0",
      "by",
      "str_0",
      "degree",
      "to",
      "make",
      "long",
      "label",
      "readable"
    ],
    "code": [
      "var_0",
      ".",
      "set_xticklabels",
      "(",
      "labels",
      ",",
      "rotation",
      "=",
      "str_0",
      ")"
    ],
    "slot_map": {
      "var_0": "ax",
      "str_0": "45"
    },
    "intent_indx": [
      433,
      17,
      433,
      309,
      2,
      336,
      235,
      25,
      42,
      5,
      433,
      8,
      185,
      433,
      309,
      433
    ],
    "code_indx_copy": [
      34,
      22,
      520,
      1,
      520,
      8,
      520,
      19,
      11,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      520,
      1,
      520,
      8,
      520,
      19,
      11,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "symbol",
      "from",
      "a",
      "string",
      "var_0"
    ],
    "code": [
      "re",
      ".",
      "sub",
      "(",
      "'[^\\\\w]'",
      ",",
      "' '",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": "s"
    },
    "intent_indx": [
      258,
      433,
      56,
      3,
      13,
      25
    ],
    "code_indx_copy": [
      39,
      22,
      40,
      1,
      520,
      8,
      109,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      40,
      1,
      520,
      8,
      109,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "current",
      "directory",
      "of",
      "a",
      "script"
    ],
    "code": [
      "os",
      ".",
      "path",
      ".",
      "basename",
      "(",
      "os",
      ".",
      "path",
      ".",
      "dirname",
      "(",
      "os",
      ".",
      "path",
      ".",
      "realpath",
      "(",
      "__file__",
      ")",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      16,
      17,
      174,
      170,
      2,
      3,
      236
    ],
    "code_indx_copy": [
      114,
      22,
      115,
      22,
      520,
      1,
      114,
      22,
      115,
      22,
      378,
      1,
      114,
      22,
      115,
      22,
      190,
      1,
      382,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      114,
      22,
      115,
      22,
      520,
      1,
      114,
      22,
      115,
      22,
      378,
      1,
      114,
      22,
      115,
      22,
      190,
      1,
      382,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "find",
      "octal",
      "character",
      "match",
      "from",
      "a",
      "string",
      "var_0",
      "using",
      "regex"
    ],
    "code": [
      "print",
      "(",
      "re",
      ".",
      "findall",
      "(",
      "\"'\\\\\\\\[0-7]{1,3}'\"",
      ",",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": "str"
    },
    "intent_indx": [
      45,
      433,
      96,
      106,
      56,
      3,
      13,
      25,
      108,
      38
    ],
    "code_indx_copy": [
      49,
      1,
      39,
      22,
      48,
      1,
      520,
      8,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      39,
      22,
      48,
      1,
      520,
      8,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "split",
      "string",
      "var_0",
      "based",
      "on",
      "occurrence",
      "of",
      "regex",
      "pattern",
      "str_0"
    ],
    "code": [
      "re",
      ".",
      "split",
      "(",
      "'[str_0)'",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": "input",
      "str_0": "[ ](?=[A-Z]+\\\\b)",
      "[str_0)": "[ ](?=[A-Z]+\\\\b)"
    },
    "intent_indx": [
      139,
      13,
      25,
      199,
      140,
      50,
      2,
      38,
      51,
      5
    ],
    "code_indx_copy": [
      39,
      22,
      71,
      1,
      520,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      71,
      1,
      520,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "split",
      "string",
      "var_0",
      "at",
      "every",
      "space",
      "followed",
      "by",
      "an",
      "upper-case",
      "letter"
    ],
    "code": [
      "re",
      ".",
      "split",
      "(",
      "'[ ](?=[A-Z])'",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": "input"
    },
    "intent_indx": [
      139,
      13,
      25,
      33,
      270,
      133,
      355,
      42,
      217,
      433,
      347
    ],
    "code_indx_copy": [
      39,
      22,
      71,
      1,
      520,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      71,
      1,
      520,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "send",
      "multipart",
      "encoded",
      "file",
      "var_0",
      "to",
      "url",
      "var_1",
      "with",
      "header",
      "var_2",
      "and",
      "metadata",
      "var_3"
    ],
    "code": [
      "r",
      "=",
      "requests",
      ".",
      "post",
      "(",
      "var_1",
      ",",
      "var_0",
      "=",
      "var_0",
      ",",
      "var_2",
      "=",
      "var_2",
      ",",
      "var_3",
      "=",
      "var_3",
      ")"
    ],
    "slot_map": {
      "var_0": "files",
      "var_1": "url",
      "var_2": "headers",
      "var_3": "data"
    },
    "intent_indx": [
      433,
      433,
      286,
      126,
      25,
      8,
      100,
      61,
      77,
      401,
      62,
      29,
      433,
      65
    ],
    "code_indx_copy": [
      18,
      19,
      86,
      22,
      379,
      1,
      92,
      8,
      34,
      19,
      34,
      8,
      95,
      19,
      95,
      8,
      55,
      19,
      55,
      17
    ],
    "code_indx_nocopy": [
      18,
      19,
      86,
      22,
      379,
      1,
      92,
      8,
      34,
      19,
      34,
      8,
      95,
      19,
      95,
      8,
      55,
      19,
      55,
      17
    ]
  },
  {
    "intent": [
      "write",
      "byte",
      "var_0",
      "to",
      "a",
      "file",
      "var_1",
      "in",
      "python",
      "3"
    ],
    "code": [
      "open",
      "(",
      "'var_1'",
      ",",
      "'wb'",
      ")",
      ".",
      "write",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": "bytes_",
      "var_1": "filename"
    },
    "intent_indx": [
      163,
      222,
      25,
      8,
      3,
      126,
      61,
      23,
      47,
      55
    ],
    "code_indx_copy": [
      106,
      1,
      57,
      8,
      520,
      17,
      22,
      133,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      106,
      1,
      57,
      8,
      520,
      17,
      22,
      133,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "list",
      "from",
      "a",
      "list",
      "var_0",
      "with",
      "value",
      "mapped",
      "into",
      "a",
      "dictionary",
      "var_1"
    ],
    "code": [
      "[",
      "var_1",
      "[",
      "k",
      "]",
      "for",
      "k",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": "lst",
      "var_1": "dct"
    },
    "intent_indx": [
      16,
      3,
      4,
      56,
      3,
      4,
      25,
      77,
      19,
      433,
      11,
      3,
      24,
      61
    ],
    "code_indx_copy": [
      12,
      92,
      12,
      90,
      16,
      7,
      90,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      12,
      92,
      12,
      90,
      16,
      7,
      90,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "find",
      "duplicate",
      "name",
      "in",
      "column",
      "str_0",
      "of",
      "the",
      "dataframe",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "set_index",
      "(",
      "'str_0'",
      ")",
      ".",
      "index",
      ".",
      "get_duplicates",
      "(",
      ")"
    ],
    "slot_map": {
      "str_0": "name",
      "var_0": "x"
    },
    "intent_indx": [
      45,
      321,
      130,
      23,
      59,
      5,
      2,
      17,
      41,
      25
    ],
    "code_indx_copy": [
      34,
      22,
      205,
      1,
      29,
      17,
      22,
      162,
      22,
      520,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      205,
      1,
      29,
      17,
      22,
      162,
      22,
      520,
      1,
      17
    ]
  },
  {
    "intent": [
      "truncate",
      "float",
      "float_0",
      "to",
      "3",
      "decimal",
      "place"
    ],
    "code": [
      "round",
      "(",
      "float_0",
      ",",
      "3",
      ")"
    ],
    "slot_map": {
      "float_0": "1.923328437452"
    },
    "intent_indx": [
      433,
      92,
      93,
      8,
      55,
      246,
      247
    ],
    "code_indx_copy": [
      210,
      1,
      83,
      8,
      54,
      17
    ],
    "code_indx_nocopy": [
      210,
      1,
      83,
      8,
      54,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "list",
      "var_0",
      "in",
      "descending",
      "order",
      "based",
      "on",
      "the",
      "date",
      "value",
      "in",
      "second",
      "element",
      "of",
      "each",
      "list",
      "in",
      "list",
      "var_0"
    ],
    "code": [
      "sorted",
      "(",
      "var_1",
      ",",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "datetime",
      ".",
      "strptime",
      "(",
      "x",
      "[",
      "1",
      "]",
      ",",
      "'%d/%m/%Y'",
      ")",
      ",",
      "reverse",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "var_0": "li",
      "var_1": "li"
    },
    "intent_indx": [
      117,
      4,
      25,
      23,
      121,
      158,
      199,
      140,
      17,
      134,
      19,
      23,
      118,
      1,
      2,
      21,
      4,
      23,
      4,
      25
    ],
    "code_indx_copy": [
      102,
      1,
      92,
      8,
      103,
      19,
      44,
      26,
      13,
      27,
      22,
      28,
      1,
      26,
      12,
      15,
      16,
      8,
      520,
      17,
      8,
      131,
      19,
      110,
      17
    ],
    "code_indx_nocopy": [
      102,
      1,
      92,
      8,
      103,
      19,
      44,
      26,
      13,
      27,
      22,
      28,
      1,
      26,
      12,
      15,
      16,
      8,
      520,
      17,
      8,
      131,
      19,
      110,
      17
    ]
  },
  {
    "intent": [
      "place",
      "the",
      "radial",
      "tick",
      "in",
      "plot",
      "var_0",
      "at",
      "int_0",
      "degree"
    ],
    "code": [
      "var_0",
      ".",
      "set_rlabel_position",
      "(",
      "int_0",
      ")"
    ],
    "slot_map": {
      "var_0": "ax",
      "int_0": "135"
    },
    "intent_indx": [
      247,
      17,
      433,
      433,
      23,
      235,
      25,
      33,
      259,
      433
    ],
    "code_indx_copy": [
      34,
      22,
      520,
      1,
      314,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      520,
      1,
      314,
      17
    ]
  },
  {
    "intent": [
      "check",
      "if",
      "path",
      "var_0",
      "is",
      "an",
      "absolute",
      "path"
    ],
    "code": [
      "os",
      ".",
      "path",
      ".",
      "isabs",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": "my_path"
    },
    "intent_indx": [
      227,
      147,
      193,
      25,
      149,
      217,
      433,
      193
    ],
    "code_indx_copy": [
      114,
      22,
      115,
      22,
      520,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      114,
      22,
      115,
      22,
      520,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "get",
      "number",
      "of",
      "key",
      "in",
      "dictionary",
      "var_0"
    ],
    "code": [
      "len",
      "(",
      "list",
      "(",
      "var_0",
      ".",
      "keys",
      "(",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": "yourdict"
    },
    "intent_indx": [
      16,
      74,
      2,
      22,
      23,
      24,
      25
    ],
    "code_indx_copy": [
      32,
      1,
      33,
      1,
      34,
      22,
      169,
      1,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      32,
      1,
      33,
      1,
      34,
      22,
      169,
      1,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "count",
      "the",
      "number",
      "of",
      "key",
      "in",
      "dictionary",
      "var_0"
    ],
    "code": [
      "len",
      "(",
      "set",
      "(",
      "open",
      "(",
      "var_0",
      ")",
      ".",
      "read",
      "(",
      ")",
      ".",
      "split",
      "(",
      ")",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": "yourdictfile"
    },
    "intent_indx": [
      173,
      17,
      74,
      2,
      22,
      23,
      24,
      25
    ],
    "code_indx_copy": [
      32,
      1,
      191,
      1,
      106,
      1,
      34,
      17,
      22,
      107,
      1,
      17,
      22,
      71,
      1,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      32,
      1,
      191,
      1,
      106,
      1,
      34,
      17,
      22,
      107,
      1,
      17,
      22,
      71,
      1,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "panda",
      "dataframe",
      "get",
      "first",
      "row",
      "of",
      "each",
      "group",
      "by",
      "str_0"
    ],
    "code": [
      "df",
      ".",
      "groupby",
      "(",
      "'str_0'",
      ")",
      ".",
      "first",
      "(",
      ")"
    ],
    "slot_map": {
      "str_0": "id"
    },
    "intent_indx": [
      40,
      41,
      16,
      148,
      43,
      2,
      21,
      365,
      42,
      5
    ],
    "code_indx_copy": [
      151,
      22,
      159,
      1,
      29,
      17,
      22,
      527,
      1,
      17
    ],
    "code_indx_nocopy": [
      151,
      22,
      159,
      1,
      29,
      17,
      22,
      520,
      1,
      17
    ]
  },
  {
    "intent": [
      "split",
      "a",
      "list",
      "in",
      "first",
      "column",
      "into",
      "multiple",
      "column",
      "keeping",
      "other",
      "column",
      "a",
      "well",
      "in",
      "panda",
      "data",
      "frame"
    ],
    "code": [
      "pd",
      ".",
      "concat",
      "(",
      "[",
      "df",
      "[",
      "0",
      "]",
      ".",
      "apply",
      "(",
      "pd",
      ".",
      "Series",
      ")",
      ",",
      "df",
      "[",
      "1",
      "]",
      "]",
      ",",
      "axis",
      "=",
      "1",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      139,
      3,
      4,
      23,
      148,
      59,
      11,
      6,
      59,
      433,
      187,
      59,
      3,
      433,
      23,
      40,
      63,
      64
    ],
    "code_indx_copy": [
      164,
      22,
      165,
      1,
      12,
      151,
      12,
      43,
      16,
      22,
      59,
      1,
      164,
      22,
      463,
      17,
      8,
      151,
      12,
      15,
      16,
      16,
      8,
      42,
      19,
      15,
      17
    ],
    "code_indx_nocopy": [
      164,
      22,
      165,
      1,
      12,
      151,
      12,
      43,
      16,
      22,
      59,
      1,
      164,
      22,
      463,
      17,
      8,
      151,
      12,
      15,
      16,
      16,
      8,
      42,
      19,
      15,
      17
    ]
  },
  {
    "intent": [
      "extract",
      "attribute",
      "str_0",
      "from",
      "string",
      "var_0"
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'src=\"js/([^\"]*\\\\bjquery\\\\b[^\"]*)\"'",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "str_0": "src=\"js/([^\"]*\\\\bjquery\\\\b[^\"]*)\"",
      "var_0": "data"
    },
    "intent_indx": [
      102,
      326,
      5,
      56,
      13,
      25
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      520,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      520,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "sum",
      "integer",
      "contained",
      "in",
      "string",
      "in",
      "list",
      "str_0"
    ],
    "code": [
      "sum",
      "(",
      "int",
      "(",
      "float",
      "(",
      "item",
      ")",
      ")",
      "for",
      "item",
      "in",
      "[",
      "_f",
      "for",
      "_f",
      "in",
      "[",
      "str_0",
      "]",
      "if",
      "\n",
      "_f",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": "['', '3.4', '', '', '1.0']",
      "[str_0]": "['', '3.4', '', '', '1.0']"
    },
    "intent_indx": [
      111,
      7,
      433,
      23,
      13,
      23,
      4,
      5
    ],
    "code_indx_copy": [
      0,
      1,
      20,
      1,
      228,
      1,
      386,
      17,
      17,
      7,
      386,
      9,
      12,
      510,
      7,
      510,
      9,
      12,
      11,
      16,
      67,
      163,
      510,
      16,
      17
    ],
    "code_indx_nocopy": [
      0,
      1,
      20,
      1,
      228,
      1,
      386,
      17,
      17,
      7,
      386,
      9,
      12,
      510,
      7,
      510,
      9,
      12,
      11,
      16,
      67,
      163,
      510,
      16,
      17
    ]
  },
  {
    "intent": [
      "call",
      "a",
      "subprocess",
      "with",
      "argument",
      "str_0",
      "that",
      "may",
      "contain",
      "space"
    ],
    "code": [
      "subprocess",
      ".",
      "Popen",
      "(",
      "[",
      "'c:\\\\Program Files\\\\VMware\\\\VMware Server\\\\vmware-cmd.bat'",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": "c:\\\\Program Files\\\\VMware\\\\VMware Server\\\\vmware-cmd.bat"
    },
    "intent_indx": [
      294,
      3,
      280,
      77,
      295,
      5,
      189,
      433,
      311,
      133
    ],
    "code_indx_copy": [
      232,
      22,
      437,
      1,
      12,
      520,
      16,
      17
    ],
    "code_indx_nocopy": [
      232,
      22,
      437,
      1,
      12,
      520,
      16,
      17
    ]
  },
  {
    "intent": [
      "reverse",
      "a",
      "priority",
      "queue",
      "var_0",
      "in",
      "python",
      "without",
      "using",
      "class"
    ],
    "code": [
      "var_0",
      ".",
      "put",
      "(",
      "(",
      "-",
      "n",
      ",",
      "n",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": "q"
    },
    "intent_indx": [
      273,
      3,
      433,
      433,
      25,
      23,
      47,
      101,
      108,
      300
    ],
    "code_indx_copy": [
      34,
      22,
      520,
      1,
      1,
      14,
      309,
      8,
      309,
      17,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      520,
      1,
      1,
      14,
      309,
      8,
      309,
      17,
      17
    ]
  },
  {
    "intent": [
      "make",
      "a",
      "barplot",
      "of",
      "data",
      "in",
      "column",
      "var_0",
      "of",
      "dataframe",
      "var_1",
      "colour-coded",
      "according",
      "to",
      "list",
      "var_2"
    ],
    "code": [
      "var_1",
      "[",
      "'var_0'",
      "]",
      ".",
      "plot",
      "(",
      "kind",
      "=",
      "'bar'",
      ",",
      "var_2",
      "=",
      "[",
      "'r'",
      ",",
      "'g'",
      ",",
      "'b'",
      ",",
      "'r'",
      ",",
      "'g'",
      ",",
      "'b'",
      ",",
      "'r'",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": "group",
      "var_1": "df",
      "var_2": "color"
    },
    "intent_indx": [
      185,
      3,
      433,
      2,
      63,
      23,
      59,
      25,
      2,
      41,
      61,
      433,
      361,
      8,
      4,
      62
    ],
    "code_indx_copy": [
      92,
      12,
      56,
      16,
      22,
      292,
      1,
      520,
      19,
      481,
      8,
      95,
      19,
      12,
      365,
      8,
      520,
      8,
      295,
      8,
      365,
      8,
      520,
      8,
      295,
      8,
      365,
      16,
      17
    ],
    "code_indx_nocopy": [
      92,
      12,
      56,
      16,
      22,
      292,
      1,
      520,
      19,
      481,
      8,
      95,
      19,
      12,
      365,
      8,
      520,
      8,
      295,
      8,
      365,
      8,
      520,
      8,
      295,
      8,
      365,
      16,
      17
    ]
  },
  {
    "intent": [
      "find",
      "all",
      "match",
      "of",
      "regex",
      "pattern",
      "str_0",
      "in",
      "string",
      "var_0"
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'(str_0)'",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "str_0": "([a-fA-F\\\\d]{32})",
      "var_0": "data",
      "(str_0)": "([a-fA-F\\\\d]{32})"
    },
    "intent_indx": [
      45,
      36,
      106,
      2,
      38,
      51,
      5,
      23,
      13,
      25
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      125,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      125,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "length",
      "of",
      "list",
      "var_0"
    ],
    "code": [
      "len",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": "my_list"
    },
    "intent_indx": [
      16,
      17,
      200,
      2,
      4,
      25
    ],
    "code_indx_copy": [
      32,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      32,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "getting",
      "the",
      "length",
      "of",
      "array",
      "var_0"
    ],
    "code": [
      "len",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": "l"
    },
    "intent_indx": [
      381,
      17,
      200,
      2,
      82,
      25
    ],
    "code_indx_copy": [
      32,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      32,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "getting",
      "the",
      "length",
      "of",
      "array",
      "var_0"
    ],
    "code": [
      "len",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": "s"
    },
    "intent_indx": [
      381,
      17,
      200,
      2,
      82,
      25
    ],
    "code_indx_copy": [
      32,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      32,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "getting",
      "the",
      "length",
      "of",
      "var_0"
    ],
    "code": [
      "len",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": "my_tuple"
    },
    "intent_indx": [
      381,
      17,
      200,
      2,
      25
    ],
    "code_indx_copy": [
      32,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      32,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "getting",
      "the",
      "length",
      "of",
      "var_0"
    ],
    "code": [
      "len",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": "my_string"
    },
    "intent_indx": [
      381,
      17,
      200,
      2,
      25
    ],
    "code_indx_copy": [
      32,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      32,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "escape",
      "character",
      "from",
      "string",
      "str_0"
    ],
    "code": [
      "\"\"\"\\\\a\"\"\"",
      ".",
      "decode",
      "(",
      "'string_escape'",
      ")"
    ],
    "slot_map": {
      "str_0": "\\\\a"
    },
    "intent_indx": [
      258,
      287,
      96,
      56,
      13,
      5
    ],
    "code_indx_copy": [
      520,
      22,
      100,
      1,
      259,
      17
    ],
    "code_indx_nocopy": [
      520,
      22,
      100,
      1,
      259,
      17
    ]
  },
  {
    "intent": [
      "replace",
      "each",
      "str_0",
      "with",
      "str_1",
      "and",
      "each",
      "str_1",
      "with",
      "str_0",
      "in",
      "the",
      "string",
      "str_4",
      "in",
      "a",
      "single",
      "pas",
      "."
    ],
    "code": [
      "\"\"\"str_4\"\"\"",
      ".",
      "replace",
      "(",
      "'str_3'",
      ",",
      "'%temp%'",
      ")",
      ".",
      "replace",
      "(",
      "'str_2'",
      ",",
      "'str_3'",
      ")",
      ".",
      "replace",
      "(",
      "\n",
      "'%temp%'",
      ",",
      "'str_2'",
      ")"
    ],
    "slot_map": {
      "str_0": "a",
      "str_1": "b",
      "str_2": "b",
      "str_3": "a",
      "str_4": "obama"
    },
    "intent_indx": [
      131,
      21,
      5,
      77,
      30,
      29,
      21,
      30,
      77,
      5,
      23,
      17,
      13,
      433,
      23,
      3,
      9,
      433,
      155
    ],
    "code_indx_copy": [
      520,
      22,
      108,
      1,
      175,
      8,
      520,
      17,
      22,
      108,
      1,
      152,
      8,
      175,
      17,
      22,
      108,
      1,
      163,
      520,
      8,
      152,
      17
    ],
    "code_indx_nocopy": [
      520,
      22,
      108,
      1,
      175,
      8,
      520,
      17,
      22,
      108,
      1,
      152,
      8,
      175,
      17,
      22,
      108,
      1,
      163,
      520,
      8,
      152,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "directory",
      "tree",
      "str_0"
    ],
    "code": [
      "shutil",
      ".",
      "rmtree",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": "/folder_name"
    },
    "intent_indx": [
      258,
      170,
      433,
      5
    ],
    "code_indx_copy": [
      383,
      22,
      520,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      383,
      22,
      520,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "new",
      "column",
      "var_0",
      "in",
      "panda",
      "data",
      "frame",
      "var_1",
      "based",
      "on",
      "the",
      "value",
      "in",
      "column",
      "var_2"
    ],
    "code": [
      "var_1",
      "[",
      "'var_0'",
      "]",
      "=",
      "var_1",
      "[",
      "'var_2'",
      "]",
      ".",
      "apply",
      "(",
      "lambda",
      "x",
      ":",
      "x",
      ".",
      "var_0",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": "weekday",
      "var_1": "data",
      "var_2": "my_dt"
    },
    "intent_indx": [
      145,
      3,
      186,
      59,
      25,
      23,
      40,
      63,
      64,
      61,
      199,
      140,
      17,
      19,
      23,
      59,
      62
    ],
    "code_indx_copy": [
      92,
      12,
      56,
      16,
      19,
      92,
      12,
      58,
      16,
      22,
      59,
      1,
      44,
      26,
      13,
      26,
      22,
      34,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      92,
      12,
      56,
      16,
      19,
      92,
      12,
      58,
      16,
      22,
      59,
      1,
      44,
      26,
      13,
      26,
      22,
      34,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "reverse",
      "sort",
      "counter",
      "var_0",
      "by",
      "value"
    ],
    "code": [
      "sorted",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "var_0",
      ".",
      "get",
      ",",
      "reverse",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "var_0": "x"
    },
    "intent_indx": [
      273,
      117,
      433,
      25,
      42,
      19
    ],
    "code_indx_copy": [
      102,
      1,
      34,
      8,
      103,
      19,
      34,
      22,
      87,
      8,
      131,
      19,
      110,
      17
    ],
    "code_indx_nocopy": [
      102,
      1,
      34,
      8,
      103,
      19,
      34,
      22,
      87,
      8,
      131,
      19,
      110,
      17
    ]
  },
  {
    "intent": [
      "reverse",
      "sort",
      "counter",
      "var_0",
      "by",
      "value"
    ],
    "code": [
      "sorted",
      "(",
      "list",
      "(",
      "var_0",
      ".",
      "items",
      "(",
      ")",
      ")",
      ",",
      "key",
      "=",
      "lambda",
      "pair",
      ":",
      "pair",
      "[",
      "1",
      "]",
      ",",
      "reverse",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "var_0": "x"
    },
    "intent_indx": [
      273,
      117,
      433,
      25,
      42,
      19
    ],
    "code_indx_copy": [
      102,
      1,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      8,
      103,
      19,
      44,
      321,
      13,
      321,
      12,
      15,
      16,
      8,
      131,
      19,
      110,
      17
    ],
    "code_indx_nocopy": [
      102,
      1,
      33,
      1,
      34,
      22,
      35,
      1,
      17,
      17,
      8,
      103,
      19,
      44,
      321,
      13,
      321,
      12,
      15,
      16,
      8,
      131,
      19,
      110,
      17
    ]
  },
  {
    "intent": [
      "append",
      "a",
      "numpy",
      "array",
      "str_0",
      "to",
      "a",
      "numpy",
      "array",
      "str_1"
    ],
    "code": [
      "np",
      ".",
      "vstack",
      "(",
      "(",
      "str_1",
      ",",
      "str_0",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": "b",
      "str_1": "a"
    },
    "intent_indx": [
      110,
      3,
      81,
      82,
      5,
      8,
      3,
      81,
      82,
      30
    ],
    "code_indx_copy": [
      74,
      22,
      520,
      1,
      1,
      37,
      8,
      11,
      17,
      17
    ],
    "code_indx_nocopy": [
      74,
      22,
      520,
      1,
      1,
      37,
      8,
      11,
      17,
      17
    ]
  },
  {
    "intent": [
      "numpy",
      "concatenate",
      "two",
      "array",
      "var_0",
      "and",
      "var_1",
      "along",
      "the",
      "first",
      "axis"
    ],
    "code": [
      "print",
      "(",
      "concatenate",
      "(",
      "(",
      "var_0",
      ",",
      "var_1",
      ")",
      ",",
      "axis",
      "=",
      "0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": "a",
      "var_1": "b"
    },
    "intent_indx": [
      81,
      0,
      28,
      82,
      25,
      29,
      61,
      433,
      17,
      148,
      419
    ],
    "code_indx_copy": [
      49,
      1,
      487,
      1,
      1,
      34,
      8,
      92,
      17,
      8,
      42,
      19,
      43,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      487,
      1,
      1,
      34,
      8,
      92,
      17,
      8,
      42,
      19,
      43,
      17,
      17
    ]
  },
  {
    "intent": [
      "numpy",
      "concatenate",
      "two",
      "array",
      "var_0",
      "and",
      "var_1",
      "along",
      "the",
      "second",
      "axis"
    ],
    "code": [
      "print",
      "(",
      "concatenate",
      "(",
      "(",
      "var_0",
      ",",
      "var_1",
      ")",
      ",",
      "axis",
      "=",
      "1",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": "a",
      "var_1": "b"
    },
    "intent_indx": [
      81,
      0,
      28,
      82,
      25,
      29,
      61,
      433,
      17,
      118,
      419
    ],
    "code_indx_copy": [
      49,
      1,
      487,
      1,
      1,
      34,
      8,
      92,
      17,
      8,
      42,
      19,
      15,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      487,
      1,
      1,
      34,
      8,
      92,
      17,
      8,
      42,
      19,
      15,
      17,
      17
    ]
  },
  {
    "intent": [
      "numpy",
      "concatenate",
      "two",
      "array",
      "var_0",
      "and",
      "var_1",
      "along",
      "the",
      "first",
      "axis"
    ],
    "code": [
      "c",
      "=",
      "np",
      ".",
      "r_",
      "[",
      "var_0",
      "[",
      "(",
      "None",
      ")",
      ",",
      ":",
      "]",
      ",",
      "var_1",
      "[",
      "(",
      "None",
      ")",
      ",",
      ":",
      "]",
      "]"
    ],
    "slot_map": {
      "var_0": "a",
      "var_1": "b"
    },
    "intent_indx": [
      81,
      0,
      28,
      82,
      25,
      29,
      61,
      433,
      17,
      148,
      419
    ],
    "code_indx_copy": [
      66,
      19,
      74,
      22,
      520,
      12,
      34,
      12,
      1,
      211,
      17,
      8,
      13,
      16,
      8,
      92,
      12,
      1,
      211,
      17,
      8,
      13,
      16,
      16
    ],
    "code_indx_nocopy": [
      66,
      19,
      74,
      22,
      520,
      12,
      34,
      12,
      1,
      211,
      17,
      8,
      13,
      16,
      8,
      92,
      12,
      1,
      211,
      17,
      8,
      13,
      16,
      16
    ]
  },
  {
    "intent": [
      "numpy",
      "concatenate",
      "two",
      "array",
      "var_0",
      "and",
      "var_1",
      "along",
      "the",
      "first",
      "axis"
    ],
    "code": [
      "np",
      ".",
      "array",
      "(",
      "(",
      "var_0",
      ",",
      "var_1",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": "a",
      "var_1": "b"
    },
    "intent_indx": [
      81,
      0,
      28,
      82,
      25,
      29,
      61,
      433,
      17,
      148,
      419
    ],
    "code_indx_copy": [
      74,
      22,
      177,
      1,
      1,
      34,
      8,
      92,
      17,
      17
    ],
    "code_indx_nocopy": [
      74,
      22,
      177,
      1,
      1,
      34,
      8,
      92,
      17,
      17
    ]
  },
  {
    "intent": [
      "fetch",
      "address",
      "information",
      "for",
      "host",
      "str_0",
      "ion",
      "port",
      "int_0"
    ],
    "code": [
      "print",
      "(",
      "socket",
      ".",
      "getaddrinfo",
      "(",
      "'str_0'",
      ",",
      "int_0",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": "google.com",
      "int_0": "80"
    },
    "intent_indx": [
      433,
      433,
      433,
      20,
      433,
      5,
      433,
      433,
      259
    ],
    "code_indx_copy": [
      49,
      1,
      520,
      22,
      520,
      1,
      29,
      8,
      314,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      520,
      22,
      520,
      1,
      29,
      8,
      314,
      17,
      17
    ]
  },
  {
    "intent": [
      "add",
      "a",
      "column",
      "str_0",
      "with",
      "value",
      "str_1",
      "to",
      "dataframe",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "xs",
      "(",
      "'str_1'",
      ",",
      "level",
      "=",
      "'str_0'",
      ",",
      "drop_level",
      "=",
      "False",
      ")"
    ],
    "slot_map": {
      "str_0": "day",
      "str_1": "sat",
      "var_0": "df"
    },
    "intent_indx": [
      58,
      3,
      59,
      5,
      77,
      19,
      30,
      8,
      41,
      25
    ],
    "code_indx_copy": [
      34,
      22,
      520,
      1,
      63,
      8,
      160,
      19,
      29,
      8,
      520,
      19,
      88,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      520,
      1,
      63,
      8,
      160,
      19,
      29,
      8,
      520,
      19,
      88,
      17
    ]
  },
  {
    "intent": [
      "return",
      "a",
      "int_0",
      "unauthorized",
      "in",
      "django"
    ],
    "code": [
      "return",
      "HttpResponse",
      "(",
      "'Unauthorized'",
      ",",
      "status",
      "=",
      "int_0",
      ")"
    ],
    "slot_map": {
      "int_0": "401"
    },
    "intent_indx": [
      156,
      3,
      259,
      433,
      23,
      85
    ],
    "code_indx_copy": [
      119,
      520,
      1,
      520,
      8,
      520,
      19,
      314,
      17
    ],
    "code_indx_nocopy": [
      119,
      520,
      1,
      520,
      8,
      520,
      19,
      314,
      17
    ]
  },
  {
    "intent": [
      "flask",
      "set",
      "folder",
      "str_0",
      "a",
      "the",
      "default",
      "template",
      "folder"
    ],
    "code": [
      "Flask",
      "(",
      "__name__",
      ",",
      "template_folder",
      "=",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": "wherever"
    },
    "intent_indx": [
      384,
      57,
      385,
      5,
      3,
      17,
      226,
      433,
      385
    ],
    "code_indx_copy": [
      520,
      1,
      253,
      8,
      520,
      19,
      29,
      17
    ],
    "code_indx_nocopy": [
      520,
      1,
      253,
      8,
      520,
      19,
      29,
      17
    ]
  },
  {
    "intent": [
      "how",
      "do",
      "i",
      "insert",
      "into",
      "t1",
      "(",
      "select",
      "*",
      "from",
      "t2",
      ")",
      "in",
      "sqlalchemy",
      "?"
    ],
    "code": [
      "session",
      ".",
      "execute",
      "(",
      "'INSERT INTO t1 (SELECT * FROM t2)'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      75,
      312,
      313,
      268,
      11,
      433,
      203,
      76,
      433,
      56,
      433,
      26,
      23,
      356,
      49
    ],
    "code_indx_copy": [
      421,
      22,
      408,
      1,
      520,
      17
    ],
    "code_indx_nocopy": [
      421,
      22,
      408,
      1,
      520,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "list",
      "of",
      "list",
      "str_0",
      "such",
      "that",
      "third",
      "row",
      "come",
      "first"
    ],
    "code": [
      "str_0",
      ".",
      "sort",
      "(",
      "key",
      "=",
      "lambda",
      "row",
      ":",
      "row",
      "[",
      "2",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": "c2"
    },
    "intent_indx": [
      117,
      3,
      4,
      2,
      4,
      5,
      433,
      189,
      120,
      43,
      433,
      148
    ],
    "code_indx_copy": [
      11,
      22,
      126,
      1,
      103,
      19,
      44,
      265,
      13,
      265,
      12,
      82,
      16,
      17
    ],
    "code_indx_nocopy": [
      11,
      22,
      126,
      1,
      103,
      19,
      44,
      265,
      13,
      265,
      12,
      82,
      16,
      17
    ]
  },
  {
    "intent": [
      "sorting",
      "a",
      "list",
      "of",
      "list",
      "in",
      "python"
    ],
    "code": [
      "c2",
      ".",
      "sort",
      "(",
      "key",
      "=",
      "lambda",
      "row",
      ":",
      "(",
      "row",
      "[",
      "2",
      "]",
      ",",
      "row",
      "[",
      "1",
      "]",
      ",",
      "row",
      "[",
      "0",
      "]",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      274,
      3,
      4,
      2,
      4,
      23,
      47
    ],
    "code_indx_copy": [
      520,
      22,
      126,
      1,
      103,
      19,
      44,
      265,
      13,
      1,
      265,
      12,
      82,
      16,
      8,
      265,
      12,
      15,
      16,
      8,
      265,
      12,
      43,
      16,
      17,
      17
    ],
    "code_indx_nocopy": [
      520,
      22,
      126,
      1,
      103,
      19,
      44,
      265,
      13,
      1,
      265,
      12,
      82,
      16,
      8,
      265,
      12,
      15,
      16,
      8,
      265,
      12,
      43,
      16,
      17,
      17
    ]
  },
  {
    "intent": [
      "sorting",
      "a",
      "list",
      "of",
      "list",
      "in",
      "python"
    ],
    "code": [
      "c2",
      ".",
      "sort",
      "(",
      "key",
      "=",
      "lambda",
      "row",
      ":",
      "(",
      "row",
      "[",
      "2",
      "]",
      ",",
      "row",
      "[",
      "1",
      "]",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      274,
      3,
      4,
      2,
      4,
      23,
      47
    ],
    "code_indx_copy": [
      520,
      22,
      126,
      1,
      103,
      19,
      44,
      265,
      13,
      1,
      265,
      12,
      82,
      16,
      8,
      265,
      12,
      15,
      16,
      17,
      17
    ],
    "code_indx_nocopy": [
      520,
      22,
      126,
      1,
      103,
      19,
      44,
      265,
      13,
      1,
      265,
      12,
      82,
      16,
      8,
      265,
      12,
      15,
      16,
      17,
      17
    ]
  },
  {
    "intent": [
      "set",
      "font",
      "var_0",
      "to",
      "display",
      "non-ascii",
      "character",
      "in",
      "matplotlib"
    ],
    "code": [
      "matplotlib",
      ".",
      "rc",
      "(",
      "'font'",
      ",",
      "**",
      "{",
      "'sans-serif'",
      ":",
      "'var_0'",
      ",",
      "'family'",
      ":",
      "'sans-serif'",
      "}",
      ")"
    ],
    "slot_map": {
      "var_0": "Arial"
    },
    "intent_indx": [
      57,
      433,
      25,
      8,
      350,
      320,
      96,
      23,
      336
    ],
    "code_indx_copy": [
      532,
      22,
      520,
      1,
      520,
      8,
      5,
      52,
      520,
      13,
      56,
      8,
      520,
      13,
      520,
      53,
      17
    ],
    "code_indx_nocopy": [
      520,
      22,
      520,
      1,
      520,
      8,
      5,
      52,
      520,
      13,
      56,
      8,
      520,
      13,
      520,
      53,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "datetime",
      "column",
      "str_0",
      "of",
      "panda",
      "dataframe",
      "str_1",
      "to",
      "ordinal"
    ],
    "code": [
      "str_1",
      "[",
      "'str_0'",
      "]",
      ".",
      "apply",
      "(",
      "lambda",
      "x",
      ":",
      "x",
      ".",
      "toordinal",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": "date",
      "str_1": "df"
    },
    "intent_indx": [
      10,
      12,
      59,
      5,
      2,
      40,
      41,
      30,
      8,
      433
    ],
    "code_indx_copy": [
      37,
      12,
      29,
      16,
      22,
      59,
      1,
      44,
      26,
      13,
      26,
      22,
      520,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      37,
      12,
      29,
      16,
      22,
      59,
      1,
      44,
      26,
      13,
      26,
      22,
      520,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "html",
      "source",
      "of",
      "selenium",
      "webelement",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "get_attribute",
      "(",
      "'innerHTML'",
      ")"
    ],
    "slot_map": {
      "var_0": "element"
    },
    "intent_indx": [
      16,
      296,
      433,
      2,
      48,
      433,
      25
    ],
    "code_indx_copy": [
      34,
      22,
      520,
      1,
      520,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      520,
      1,
      520,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "integer",
      "location",
      "of",
      "a",
      "key",
      "var_0",
      "in",
      "a",
      "panda",
      "data",
      "frame"
    ],
    "code": [
      "df",
      ".",
      "index",
      ".",
      "get_loc",
      "(",
      "'var_0'",
      ")"
    ],
    "slot_map": {
      "var_0": "bob"
    },
    "intent_indx": [
      16,
      17,
      7,
      433,
      2,
      3,
      22,
      25,
      23,
      3,
      40,
      63,
      64
    ],
    "code_indx_copy": [
      151,
      22,
      162,
      22,
      520,
      1,
      56,
      17
    ],
    "code_indx_nocopy": [
      151,
      22,
      162,
      22,
      520,
      1,
      56,
      17
    ]
  },
  {
    "intent": [
      "open",
      "a",
      "str_0",
      "terminal",
      "from",
      "python",
      "script",
      "and",
      "run",
      "str_1",
      "command",
      "."
    ],
    "code": [
      "os",
      ".",
      "system",
      "(",
      "'gnome-terminal -e \\'bash -c \"sudo apt-get update; exec bash\"\\''",
      ")"
    ],
    "slot_map": {
      "str_0": "gnome",
      "str_1": "sudo apt-get update"
    },
    "intent_indx": [
      275,
      3,
      5,
      433,
      56,
      47,
      236,
      29,
      241,
      30,
      138,
      155
    ],
    "code_indx_copy": [
      114,
      22,
      120,
      1,
      520,
      17
    ],
    "code_indx_nocopy": [
      114,
      22,
      120,
      1,
      520,
      17
    ]
  },
  {
    "intent": [
      "add",
      "an",
      "item",
      "with",
      "key",
      "str_0",
      "and",
      "value",
      "1",
      "to",
      "an",
      "dictionary",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "update",
      "(",
      "{",
      "'str_0'",
      ":",
      "1",
      "}",
      ")"
    ],
    "slot_map": {
      "str_0": "third_key",
      "var_0": "my_dict"
    },
    "intent_indx": [
      58,
      217,
      37,
      77,
      22,
      5,
      29,
      19,
      229,
      8,
      217,
      24,
      25
    ],
    "code_indx_copy": [
      34,
      22,
      69,
      1,
      52,
      29,
      13,
      15,
      53,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      69,
      1,
      52,
      29,
      13,
      15,
      53,
      17
    ]
  },
  {
    "intent": [
      "declare",
      "an",
      "array"
    ],
    "code": [
      "my_list",
      "=",
      "[",
      "]"
    ],
    "slot_map": {},
    "intent_indx": [
      433,
      217,
      82
    ],
    "code_indx_copy": [
      243,
      19,
      12,
      16
    ],
    "code_indx_nocopy": [
      243,
      19,
      12,
      16
    ]
  },
  {
    "intent": [
      "insert",
      "item",
      "str_0",
      "to",
      "a",
      "list",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "append",
      "(",
      "str_0",
      ")"
    ],
    "slot_map": {
      "str_0": "12",
      "var_0": "my_list"
    },
    "intent_indx": [
      268,
      37,
      5,
      8,
      3,
      4,
      25
    ],
    "code_indx_copy": [
      34,
      22,
      148,
      1,
      11,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      148,
      1,
      11,
      17
    ]
  },
  {
    "intent": [
      "add",
      "an",
      "entry",
      "str_0",
      "at",
      "the",
      "beginning",
      "of",
      "list",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "insert",
      "(",
      "0",
      ",",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": "wuggah",
      "var_0": "myList"
    },
    "intent_indx": [
      58,
      217,
      245,
      5,
      33,
      17,
      166,
      2,
      4,
      25
    ],
    "code_indx_copy": [
      34,
      22,
      320,
      1,
      43,
      8,
      29,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      320,
      1,
      43,
      8,
      29,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "hex-string",
      "representation",
      "to",
      "actual",
      "byte"
    ],
    "code": [
      "\"\"\"\\\\xF3\\\\xBE\\\\x80\\\\x80\"\"\"",
      ".",
      "replace",
      "(",
      "'\\\\x'",
      ",",
      "''",
      ")",
      ".",
      "decode",
      "(",
      "'hex'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      10,
      3,
      433,
      116,
      8,
      433,
      222
    ],
    "code_indx_copy": [
      520,
      22,
      108,
      1,
      520,
      8,
      21,
      17,
      22,
      100,
      1,
      101,
      17
    ],
    "code_indx_nocopy": [
      520,
      22,
      108,
      1,
      520,
      8,
      21,
      17,
      22,
      100,
      1,
      101,
      17
    ]
  },
  {
    "intent": [
      "select",
      "the",
      "last",
      "column",
      "of",
      "dataframe",
      "var_0"
    ],
    "code": [
      "var_0",
      "[",
      "var_0",
      ".",
      "columns",
      "[",
      "-",
      "1",
      "]",
      "]"
    ],
    "slot_map": {
      "var_0": "df"
    },
    "intent_indx": [
      76,
      17,
      165,
      59,
      2,
      41,
      25
    ],
    "code_indx_copy": [
      34,
      12,
      34,
      22,
      194,
      12,
      14,
      15,
      16,
      16
    ],
    "code_indx_nocopy": [
      34,
      12,
      34,
      22,
      194,
      12,
      14,
      15,
      16,
      16
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "first",
      "value",
      "from",
      "dataframe",
      "var_0",
      "where",
      "column",
      "str_0",
      "is",
      "equal",
      "to",
      "str_1"
    ],
    "code": [
      "var_0",
      ".",
      "loc",
      "[",
      "var_0",
      "[",
      "'str_0'",
      "]",
      "==",
      "'str_1'",
      ",",
      "'str_0'",
      "]",
      ".",
      "values",
      "[",
      "0",
      "]"
    ],
    "slot_map": {
      "var_0": "df",
      "str_0": "Letters",
      "str_1": "C"
    },
    "intent_indx": [
      16,
      17,
      148,
      19,
      56,
      41,
      25,
      152,
      59,
      5,
      149,
      104,
      8,
      30
    ],
    "code_indx_copy": [
      34,
      22,
      204,
      12,
      34,
      12,
      29,
      16,
      76,
      63,
      8,
      29,
      16,
      22,
      168,
      12,
      43,
      16
    ],
    "code_indx_nocopy": [
      34,
      22,
      204,
      12,
      34,
      12,
      29,
      16,
      76,
      63,
      8,
      29,
      16,
      22,
      168,
      12,
      43,
      16
    ]
  },
  {
    "intent": [
      "converting",
      "two",
      "list",
      "str_0",
      "and",
      "str_1",
      "into",
      "a",
      "matrix"
    ],
    "code": [
      "np",
      ".",
      "column_stack",
      "(",
      "(",
      "[",
      "str_0",
      "]",
      ",",
      "[",
      "str_1",
      "]",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": "[1, 2, 3]",
      "str_1": "[4, 5, 6]",
      "[str_0]": "[1, 2, 3]",
      "[str_1]": "[4, 5, 6]"
    },
    "intent_indx": [
      114,
      28,
      4,
      5,
      29,
      30,
      11,
      3,
      183
    ],
    "code_indx_copy": [
      74,
      22,
      520,
      1,
      1,
      12,
      11,
      16,
      8,
      12,
      37,
      16,
      17,
      17
    ],
    "code_indx_nocopy": [
      74,
      22,
      520,
      1,
      1,
      12,
      11,
      16,
      8,
      12,
      37,
      16,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "type",
      "of",
      "var_0"
    ],
    "code": [
      "type",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": "i"
    },
    "intent_indx": [
      16,
      17,
      315,
      2,
      25
    ],
    "code_indx_copy": [
      526,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      520,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "determine",
      "the",
      "type",
      "of",
      "variable",
      "var_0"
    ],
    "code": [
      "type",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": "v"
    },
    "intent_indx": [
      433,
      17,
      315,
      2,
      94,
      25
    ],
    "code_indx_copy": [
      526,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      520,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "determine",
      "the",
      "type",
      "of",
      "variable",
      "var_0"
    ],
    "code": [
      "type",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": "v"
    },
    "intent_indx": [
      433,
      17,
      315,
      2,
      94,
      25
    ],
    "code_indx_copy": [
      526,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      520,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "determine",
      "the",
      "type",
      "of",
      "variable",
      "var_0"
    ],
    "code": [
      "type",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": "v"
    },
    "intent_indx": [
      433,
      17,
      315,
      2,
      94,
      25
    ],
    "code_indx_copy": [
      526,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      520,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "determine",
      "the",
      "type",
      "of",
      "variable",
      "var_0"
    ],
    "code": [
      "type",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": "v"
    },
    "intent_indx": [
      433,
      17,
      315,
      2,
      94,
      25
    ],
    "code_indx_copy": [
      526,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      520,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "type",
      "of",
      "variable",
      "var_0"
    ],
    "code": [
      "print",
      "(",
      "type",
      "(",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": "variable_name"
    },
    "intent_indx": [
      16,
      17,
      315,
      2,
      94,
      25
    ],
    "code_indx_copy": [
      49,
      1,
      526,
      1,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      520,
      1,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "5th",
      "item",
      "of",
      "a",
      "generator"
    ],
    "code": [
      "next",
      "(",
      "itertools",
      ".",
      "islice",
      "(",
      "range",
      "(",
      "10",
      ")",
      ",",
      "5",
      ",",
      "5",
      "+",
      "1",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      16,
      17,
      433,
      37,
      2,
      3,
      142
    ],
    "code_indx_copy": [
      492,
      1,
      50,
      22,
      520,
      1,
      105,
      1,
      4,
      17,
      8,
      187,
      8,
      187,
      97,
      15,
      17,
      17
    ],
    "code_indx_nocopy": [
      492,
      1,
      50,
      22,
      520,
      1,
      105,
      1,
      4,
      17,
      8,
      187,
      8,
      187,
      97,
      15,
      17,
      17
    ]
  },
  {
    "intent": [
      "print",
      "a",
      "string",
      "var_0",
      "with",
      "string",
      "format"
    ],
    "code": [
      "print",
      "(",
      "'\"{}\"'",
      ".",
      "format",
      "(",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": "word"
    },
    "intent_indx": [
      161,
      3,
      13,
      25,
      77,
      13,
      15
    ],
    "code_indx_copy": [
      49,
      1,
      520,
      22,
      38,
      1,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      520,
      22,
      38,
      1,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "join",
      "a",
      "list",
      "of",
      "string",
      "var_0",
      "using",
      "a",
      "space",
      "str_0"
    ],
    "code": [
      "\"\"\" \"\"\"",
      ".",
      "join",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": "list",
      "str_0": ""
    },
    "intent_indx": [
      272,
      3,
      4,
      2,
      13,
      25,
      108,
      3,
      133,
      5
    ],
    "code_indx_copy": [
      217,
      22,
      23,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      217,
      22,
      23,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "create",
      "list",
      "var_0",
      "containing",
      "two",
      "empty",
      "list"
    ],
    "code": [
      "var_0",
      "=",
      "[",
      "[",
      "]",
      "for",
      "n",
      "in",
      "range",
      "(",
      "2",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": "y"
    },
    "intent_indx": [
      145,
      4,
      25,
      32,
      28,
      144,
      4
    ],
    "code_indx_copy": [
      34,
      19,
      12,
      12,
      16,
      7,
      309,
      9,
      105,
      1,
      82,
      17,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      12,
      12,
      16,
      7,
      309,
      9,
      105,
      1,
      82,
      17,
      16
    ]
  },
  {
    "intent": [
      "read",
      "a",
      "file",
      "str_0",
      "into",
      "a",
      "list",
      "var_0"
    ],
    "code": [
      "var_0",
      "=",
      "[",
      "line",
      ".",
      "strip",
      "(",
      ")",
      "for",
      "line",
      "in",
      "open",
      "(",
      "'str_0'",
      ",",
      "'r'",
      ")",
      "]"
    ],
    "slot_map": {
      "str_0": "C:/name/MyDocuments/numbers",
      "var_0": "data"
    },
    "intent_indx": [
      124,
      3,
      126,
      5,
      11,
      3,
      4,
      25
    ],
    "code_indx_copy": [
      34,
      19,
      12,
      316,
      22,
      172,
      1,
      17,
      7,
      316,
      9,
      106,
      1,
      29,
      8,
      365,
      17,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      12,
      316,
      22,
      172,
      1,
      17,
      7,
      316,
      9,
      106,
      1,
      29,
      8,
      365,
      17,
      16
    ]
  },
  {
    "intent": [
      "delete",
      "all",
      "occurrence",
      "of",
      "character",
      "str_0",
      "in",
      "string",
      "str_1"
    ],
    "code": [
      "\"\"\"\"\"\"",
      ".",
      "join",
      "(",
      "[",
      "char",
      "for",
      "char",
      "in",
      "'str_1'",
      "if",
      "char",
      "!=",
      "'str_0'",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": "i",
      "str_1": "it is icy"
    },
    "intent_indx": [
      83,
      36,
      50,
      2,
      96,
      5,
      23,
      13,
      30
    ],
    "code_indx_copy": [
      289,
      22,
      23,
      1,
      12,
      520,
      7,
      520,
      9,
      63,
      67,
      520,
      89,
      29,
      16,
      17
    ],
    "code_indx_nocopy": [
      289,
      22,
      23,
      1,
      12,
      520,
      7,
      520,
      9,
      63,
      67,
      520,
      89,
      29,
      16,
      17
    ]
  },
  {
    "intent": [
      "delete",
      "all",
      "instance",
      "of",
      "a",
      "character",
      "str_0",
      "in",
      "a",
      "string",
      "str_1"
    ],
    "code": [
      "re",
      ".",
      "sub",
      "(",
      "'str_0'",
      ",",
      "''",
      ",",
      "'str_1'",
      ")"
    ],
    "slot_map": {
      "str_0": "i",
      "str_1": "it is icy"
    },
    "intent_indx": [
      83,
      36,
      345,
      2,
      3,
      96,
      5,
      23,
      3,
      13,
      30
    ],
    "code_indx_copy": [
      39,
      22,
      40,
      1,
      29,
      8,
      21,
      8,
      63,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      40,
      1,
      29,
      8,
      21,
      8,
      63,
      17
    ]
  },
  {
    "intent": [
      "delete",
      "all",
      "character",
      "str_0",
      "in",
      "string",
      "str_1"
    ],
    "code": [
      "\"\"\"str_1\"\"\"",
      ".",
      "replace",
      "(",
      "'str_0'",
      ",",
      "''",
      ")"
    ],
    "slot_map": {
      "str_0": "i",
      "str_1": "it is icy"
    },
    "intent_indx": [
      83,
      36,
      96,
      5,
      23,
      13,
      30
    ],
    "code_indx_copy": [
      435,
      22,
      108,
      1,
      29,
      8,
      21,
      17
    ],
    "code_indx_nocopy": [
      435,
      22,
      108,
      1,
      29,
      8,
      21,
      17
    ]
  },
  {
    "intent": [
      "how",
      "to",
      "delete",
      "all",
      "instance",
      "of",
      "a",
      "character",
      "in",
      "a",
      "string",
      "in",
      "python",
      "?"
    ],
    "code": [
      "\"\"\"\"\"\"",
      ".",
      "join",
      "(",
      "[",
      "char",
      "for",
      "char",
      "in",
      "'it is icy'",
      "if",
      "char",
      "!=",
      "'i'",
      "]",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      75,
      8,
      83,
      36,
      345,
      2,
      3,
      96,
      23,
      3,
      13,
      23,
      47,
      49
    ],
    "code_indx_copy": [
      289,
      22,
      23,
      1,
      12,
      520,
      7,
      520,
      9,
      520,
      67,
      520,
      89,
      520,
      16,
      17
    ],
    "code_indx_nocopy": [
      289,
      22,
      23,
      1,
      12,
      520,
      7,
      520,
      9,
      520,
      67,
      520,
      89,
      520,
      16,
      17
    ]
  },
  {
    "intent": [
      "drop",
      "row",
      "of",
      "panda",
      "dataframe",
      "var_0",
      "having",
      "float_0",
      "in",
      "column",
      "at",
      "index",
      "str_0"
    ],
    "code": [
      "var_0",
      ".",
      "dropna",
      "(",
      "subset",
      "=",
      "[",
      "str_0",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": "df",
      "str_0": "1",
      "float_0": "NaN"
    },
    "intent_indx": [
      252,
      43,
      2,
      40,
      41,
      25,
      90,
      93,
      23,
      59,
      33,
      35,
      5
    ],
    "code_indx_copy": [
      34,
      22,
      387,
      1,
      520,
      19,
      12,
      11,
      16,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      387,
      1,
      520,
      19,
      12,
      11,
      16,
      17
    ]
  },
  {
    "intent": [
      "get",
      "element",
      "from",
      "list",
      "var_0",
      ",",
      "that",
      "have",
      "a",
      "field",
      "var_1",
      "value",
      "int_0"
    ],
    "code": [
      "[",
      "x",
      "for",
      "x",
      "in",
      "var_0",
      "if",
      "x",
      ".",
      "var_1",
      "==",
      "int_0",
      "]"
    ],
    "slot_map": {
      "var_0": "myList",
      "var_1": "n",
      "int_0": "30"
    },
    "intent_indx": [
      16,
      1,
      56,
      4,
      25,
      60,
      189,
      190,
      3,
      301,
      61,
      19,
      259
    ],
    "code_indx_copy": [
      12,
      26,
      7,
      26,
      9,
      34,
      67,
      26,
      22,
      92,
      76,
      314,
      16
    ],
    "code_indx_nocopy": [
      12,
      26,
      7,
      26,
      9,
      34,
      67,
      26,
      22,
      92,
      76,
      314,
      16
    ]
  },
  {
    "intent": [
      "converting",
      "list",
      "of",
      "string",
      "var_0",
      "to",
      "list",
      "of",
      "integer",
      "var_1"
    ],
    "code": [
      "var_1",
      "=",
      "[",
      "int",
      "(",
      "x",
      ")",
      "for",
      "x",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": "intstringlist",
      "var_1": "nums"
    },
    "intent_indx": [
      114,
      4,
      2,
      13,
      25,
      8,
      4,
      2,
      7,
      61
    ],
    "code_indx_copy": [
      92,
      19,
      12,
      20,
      1,
      26,
      17,
      7,
      26,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      92,
      19,
      12,
      20,
      1,
      26,
      17,
      7,
      26,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "convert",
      "list",
      "of",
      "string",
      "number",
      "into",
      "list",
      "of",
      "integer"
    ],
    "code": [
      "map",
      "(",
      "int",
      ",",
      "eval",
      "(",
      "input",
      "(",
      "'Enter the unfriendly numbers: '",
      ")",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      10,
      4,
      2,
      13,
      74,
      11,
      4,
      2,
      7
    ],
    "code_indx_copy": [
      24,
      1,
      20,
      8,
      322,
      1,
      254,
      1,
      520,
      17,
      17,
      17
    ],
    "code_indx_nocopy": [
      24,
      1,
      20,
      8,
      322,
      1,
      254,
      1,
      520,
      17,
      17,
      17
    ]
  },
  {
    "intent": [
      "print",
      "str_0",
      "without",
      "newline"
    ],
    "code": [
      "sys",
      "str_0",
      "stdout",
      "str_0",
      "write",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": "."
    },
    "intent_indx": [
      161,
      5,
      101,
      376
    ],
    "code_indx_copy": [
      155,
      11,
      354,
      11,
      133,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      155,
      11,
      354,
      11,
      133,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "round",
      "off",
      "the",
      "float",
      "that",
      "is",
      "the",
      "product",
      "of",
      "str_0",
      "and",
      "convert",
      "it",
      "to",
      "an",
      "int"
    ],
    "code": [
      "int",
      "(",
      "round",
      "(",
      "2.51",
      "*",
      "100",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": "2.52 * 100"
    },
    "intent_indx": [
      244,
      433,
      17,
      92,
      189,
      149,
      17,
      159,
      2,
      5,
      29,
      10,
      89,
      8,
      217,
      72
    ],
    "code_indx_copy": [
      20,
      1,
      210,
      1,
      520,
      3,
      270,
      17,
      17
    ],
    "code_indx_nocopy": [
      20,
      1,
      210,
      1,
      520,
      3,
      270,
      17,
      17
    ]
  },
  {
    "intent": [
      "find",
      "all",
      "file",
      "in",
      "directory",
      "str_0",
      "with",
      "extension",
      "str_1"
    ],
    "code": [
      "os",
      ".",
      "chdir",
      "(",
      "'str_0'",
      ")",
      "\n",
      "for",
      "file",
      "in",
      "glob",
      ".",
      "glob",
      "(",
      "'*.txt'",
      ")",
      ":",
      "\n",
      "    ",
      "pass",
      ""
    ],
    "slot_map": {
      "str_0": "/mydir",
      "str_1": ".txt"
    },
    "intent_indx": [
      45,
      36,
      126,
      23,
      170,
      5,
      77,
      433,
      30
    ],
    "code_indx_copy": [
      114,
      22,
      441,
      1,
      29,
      17,
      163,
      7,
      400,
      9,
      474,
      22,
      474,
      1,
      520,
      17,
      13,
      163,
      218,
      219,
      220
    ],
    "code_indx_nocopy": [
      114,
      22,
      441,
      1,
      29,
      17,
      163,
      7,
      400,
      9,
      474,
      22,
      474,
      1,
      520,
      17,
      13,
      163,
      218,
      219,
      220
    ]
  },
  {
    "intent": [
      "find",
      "all",
      "file",
      "in",
      "directory",
      "str_0",
      "with",
      "extension",
      "str_1"
    ],
    "code": [
      "for",
      "file",
      "in",
      "os",
      ".",
      "listdir",
      "(",
      "'str_0'",
      ")",
      ":",
      "\n",
      "    ",
      "if",
      "file",
      ".",
      "endswith",
      "(",
      "'str_1'",
      ")",
      ":",
      "\n",
      "        ",
      "pass",
      "",
      ""
    ],
    "slot_map": {
      "str_0": "/mydir",
      "str_1": ".txt"
    },
    "intent_indx": [
      45,
      36,
      126,
      23,
      170,
      5,
      77,
      433,
      30
    ],
    "code_indx_copy": [
      7,
      400,
      9,
      114,
      22,
      200,
      1,
      29,
      17,
      13,
      163,
      218,
      67,
      400,
      22,
      201,
      1,
      63,
      17,
      13,
      163,
      368,
      219,
      220,
      220
    ],
    "code_indx_nocopy": [
      7,
      400,
      9,
      114,
      22,
      200,
      1,
      29,
      17,
      13,
      163,
      218,
      67,
      400,
      22,
      201,
      1,
      63,
      17,
      13,
      163,
      368,
      219,
      220,
      220
    ]
  },
  {
    "intent": [
      "find",
      "all",
      "file",
      "in",
      "directory",
      "str_0",
      "with",
      "extension",
      "str_1"
    ],
    "code": [
      "for",
      "root",
      ",",
      "dirs",
      ",",
      "files",
      "in",
      "os",
      ".",
      "walk",
      "(",
      "'str_0'",
      ")",
      ":",
      "\n",
      "    ",
      "for",
      "file",
      "in",
      "files",
      ":",
      "\n",
      "        ",
      "if",
      "file",
      ".",
      "endswith",
      "(",
      "'str_1'",
      ")",
      ":",
      "\n",
      "            ",
      "pass",
      "",
      "",
      ""
    ],
    "slot_map": {
      "str_0": "/mydir",
      "str_1": ".txt"
    },
    "intent_indx": [
      45,
      36,
      126,
      23,
      170,
      5,
      77,
      433,
      30
    ],
    "code_indx_copy": [
      7,
      176,
      8,
      520,
      8,
      520,
      9,
      114,
      22,
      473,
      1,
      29,
      17,
      13,
      163,
      218,
      7,
      400,
      9,
      520,
      13,
      163,
      368,
      67,
      400,
      22,
      201,
      1,
      63,
      17,
      13,
      163,
      520,
      219,
      220,
      220,
      220
    ],
    "code_indx_nocopy": [
      7,
      176,
      8,
      520,
      8,
      520,
      9,
      114,
      22,
      473,
      1,
      29,
      17,
      13,
      163,
      218,
      7,
      400,
      9,
      520,
      13,
      163,
      368,
      67,
      400,
      22,
      201,
      1,
      63,
      17,
      13,
      163,
      520,
      219,
      220,
      220,
      220
    ]
  },
  {
    "intent": [
      "plot",
      "dataframe",
      "var_0",
      "without",
      "a",
      "legend"
    ],
    "code": [
      "var_0",
      ".",
      "plot",
      "(",
      "legend",
      "=",
      "False",
      ")"
    ],
    "slot_map": {
      "var_0": "df"
    },
    "intent_indx": [
      235,
      41,
      25,
      101,
      3,
      391
    ],
    "code_indx_copy": [
      34,
      22,
      292,
      1,
      401,
      19,
      88,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      292,
      1,
      401,
      19,
      88,
      17
    ]
  },
  {
    "intent": [
      "loop",
      "through",
      "the",
      "ip",
      "address",
      "range",
      "str_0"
    ],
    "code": [
      "for",
      "i",
      "in",
      "range",
      "(",
      "256",
      ")",
      ":",
      "\n",
      "    ",
      "for",
      "j",
      "in",
      "range",
      "(",
      "256",
      ")",
      ":",
      "\n",
      "        ",
      "ip",
      "=",
      "'192.168.%d.%d'",
      "%",
      "(",
      "i",
      ",",
      "j",
      ")",
      "\n",
      "print",
      "(",
      "ip",
      ")",
      "",
      ""
    ],
    "slot_map": {
      "str_0": "192.168.x.x"
    },
    "intent_indx": [
      433,
      281,
      17,
      433,
      433,
      123,
      5
    ],
    "code_indx_copy": [
      7,
      6,
      9,
      105,
      1,
      520,
      17,
      13,
      163,
      218,
      7,
      30,
      9,
      105,
      1,
      520,
      17,
      13,
      163,
      368,
      527,
      19,
      520,
      118,
      1,
      6,
      8,
      30,
      17,
      163,
      49,
      1,
      527,
      17,
      220,
      220
    ],
    "code_indx_nocopy": [
      7,
      6,
      9,
      105,
      1,
      520,
      17,
      13,
      163,
      218,
      7,
      30,
      9,
      105,
      1,
      520,
      17,
      13,
      163,
      368,
      520,
      19,
      520,
      118,
      1,
      6,
      8,
      30,
      17,
      163,
      49,
      1,
      520,
      17,
      220,
      220
    ]
  },
  {
    "intent": [
      "loop",
      "through",
      "the",
      "ip",
      "address",
      "range",
      "str_0"
    ],
    "code": [
      "for",
      "i",
      ",",
      "j",
      "in",
      "product",
      "(",
      "list",
      "(",
      "range",
      "(",
      "256",
      ")",
      ")",
      ",",
      "list",
      "(",
      "range",
      "(",
      "256",
      ")",
      ")",
      ")",
      ":",
      "\n",
      "    ",
      "pass",
      ""
    ],
    "slot_map": {
      "str_0": "192.168.x.x"
    },
    "intent_indx": [
      433,
      281,
      17,
      433,
      433,
      123,
      5
    ],
    "code_indx_copy": [
      7,
      6,
      8,
      30,
      9,
      329,
      1,
      33,
      1,
      105,
      1,
      520,
      17,
      17,
      8,
      33,
      1,
      105,
      1,
      520,
      17,
      17,
      17,
      13,
      163,
      218,
      219,
      220
    ],
    "code_indx_nocopy": [
      7,
      6,
      8,
      30,
      9,
      329,
      1,
      33,
      1,
      105,
      1,
      520,
      17,
      17,
      8,
      33,
      1,
      105,
      1,
      520,
      17,
      17,
      17,
      13,
      163,
      218,
      219,
      220
    ]
  },
  {
    "intent": [
      "loop",
      "through",
      "the",
      "ip",
      "address",
      "range",
      "str_0"
    ],
    "code": [
      "generator",
      "=",
      "iter_iprange",
      "(",
      "'192.168.1.1'",
      ",",
      "'192.168.255.255'",
      ",",
      "step",
      "=",
      "1",
      ")"
    ],
    "slot_map": {
      "str_0": "192.168.x.x"
    },
    "intent_indx": [
      433,
      281,
      17,
      433,
      433,
      123,
      5
    ],
    "code_indx_copy": [
      520,
      19,
      520,
      1,
      520,
      8,
      520,
      8,
      520,
      19,
      15,
      17
    ],
    "code_indx_nocopy": [
      520,
      19,
      520,
      1,
      520,
      8,
      520,
      8,
      520,
      19,
      15,
      17
    ]
  },
  {
    "intent": [
      "sum",
      "the",
      "corresponding",
      "decimal",
      "value",
      "for",
      "binary",
      "value",
      "of",
      "each",
      "boolean",
      "element",
      "in",
      "list",
      "var_0"
    ],
    "code": [
      "sum",
      "(",
      "1",
      "<<",
      "i",
      "for",
      "i",
      ",",
      "b",
      "in",
      "enumerate",
      "(",
      "var_0",
      ")",
      "if",
      "b",
      ")"
    ],
    "slot_map": {
      "var_0": "x"
    },
    "intent_indx": [
      111,
      17,
      333,
      246,
      19,
      20,
      267,
      19,
      2,
      21,
      353,
      1,
      23,
      4,
      25
    ],
    "code_indx_copy": [
      0,
      1,
      15,
      520,
      6,
      7,
      6,
      8,
      98,
      9,
      10,
      1,
      34,
      17,
      67,
      98,
      17
    ],
    "code_indx_nocopy": [
      0,
      1,
      15,
      520,
      6,
      7,
      6,
      8,
      98,
      9,
      10,
      1,
      34,
      17,
      67,
      98,
      17
    ]
  },
  {
    "intent": [
      "write",
      "multiple",
      "string",
      "var_0",
      ",",
      "var_1",
      "and",
      "var_2",
      "in",
      "one",
      "line",
      "in",
      "a",
      "file",
      "var_3"
    ],
    "code": [
      "var_3",
      ".",
      "write",
      "(",
      "'%r\\n%r\\n%r\\n'",
      "%",
      "(",
      "var_0",
      ",",
      "var_1",
      ",",
      "var_2",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": "line1",
      "var_1": "line2",
      "var_2": "line3",
      "var_3": "target"
    },
    "intent_indx": [
      163,
      6,
      13,
      25,
      60,
      61,
      29,
      62,
      23,
      293,
      167,
      23,
      3,
      126,
      65
    ],
    "code_indx_copy": [
      55,
      22,
      133,
      1,
      520,
      118,
      1,
      34,
      8,
      92,
      8,
      95,
      17,
      17
    ],
    "code_indx_nocopy": [
      55,
      22,
      133,
      1,
      520,
      118,
      1,
      34,
      8,
      92,
      8,
      95,
      17,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "list",
      "of",
      "list",
      "var_0",
      "into",
      "a",
      "flat",
      "list"
    ],
    "code": [
      "[",
      "y",
      "for",
      "x",
      "in",
      "var_0",
      "for",
      "y",
      "in",
      "(",
      "x",
      "if",
      "isinstance",
      "(",
      "x",
      ",",
      "list",
      ")",
      "else",
      "[",
      "x",
      "]",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": "data"
    },
    "intent_indx": [
      10,
      4,
      2,
      4,
      25,
      11,
      3,
      363,
      4
    ],
    "code_indx_copy": [
      12,
      104,
      7,
      26,
      9,
      34,
      7,
      104,
      9,
      1,
      26,
      67,
      208,
      1,
      26,
      8,
      33,
      17,
      213,
      12,
      26,
      16,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      104,
      7,
      26,
      9,
      34,
      7,
      104,
      9,
      1,
      26,
      67,
      208,
      1,
      26,
      8,
      33,
      17,
      213,
      12,
      26,
      16,
      17,
      16
    ]
  },
  {
    "intent": [
      "print",
      "new",
      "line",
      "character",
      "a",
      "str_0",
      "in",
      "a",
      "string",
      "str_1"
    ],
    "code": [
      "print",
      "(",
      "'foo\\nbar'",
      ".",
      "encode",
      "(",
      "'string_escape'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": "\\n",
      "str_1": "foo\\nbar"
    },
    "intent_indx": [
      161,
      186,
      167,
      96,
      3,
      5,
      23,
      3,
      13,
      30
    ],
    "code_indx_copy": [
      49,
      1,
      520,
      22,
      242,
      1,
      259,
      17,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      520,
      22,
      242,
      1,
      259,
      17,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "last",
      "comma",
      "character",
      "str_0",
      "in",
      "string",
      "var_0"
    ],
    "code": [
      "\"\"\"\"\"\"",
      ".",
      "join",
      "(",
      "var_0",
      ".",
      "rsplit",
      "(",
      "'str_0'",
      "str_0",
      "1",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": ",",
      "var_0": "s"
    },
    "intent_indx": [
      258,
      165,
      250,
      96,
      5,
      23,
      13,
      25
    ],
    "code_indx_copy": [
      289,
      22,
      23,
      1,
      34,
      22,
      271,
      1,
      29,
      11,
      15,
      17,
      17
    ],
    "code_indx_nocopy": [
      289,
      22,
      23,
      1,
      34,
      22,
      271,
      1,
      29,
      11,
      15,
      17,
      17
    ]
  },
  {
    "intent": [
      "calculate",
      "the",
      "mean",
      "of",
      "each",
      "element",
      "in",
      "array",
      "var_0",
      "with",
      "the",
      "element",
      "previous",
      "to",
      "it"
    ],
    "code": [
      "(",
      "var_0",
      "[",
      "1",
      ":",
      "]",
      "+",
      "var_0",
      "[",
      ":",
      "-",
      "1",
      "]",
      ")",
      "/",
      "2"
    ],
    "slot_map": {
      "var_0": "x"
    },
    "intent_indx": [
      243,
      17,
      388,
      2,
      21,
      1,
      23,
      82,
      25,
      77,
      17,
      1,
      433,
      8,
      89
    ],
    "code_indx_copy": [
      1,
      34,
      12,
      15,
      13,
      16,
      97,
      34,
      12,
      13,
      14,
      15,
      16,
      17,
      31,
      82
    ],
    "code_indx_nocopy": [
      1,
      34,
      12,
      15,
      13,
      16,
      97,
      34,
      12,
      13,
      14,
      15,
      16,
      17,
      31,
      82
    ]
  },
  {
    "intent": [
      "get",
      "an",
      "array",
      "of",
      "the",
      "mean",
      "of",
      "each",
      "two",
      "consecutive",
      "value",
      "in",
      "numpy",
      "array",
      "var_0"
    ],
    "code": [
      "var_0",
      "[",
      ":",
      "-",
      "1",
      "]",
      "+",
      "(",
      "var_0",
      "[",
      "1",
      ":",
      "]",
      "-",
      "var_0",
      "[",
      ":",
      "-",
      "1",
      "]",
      ")",
      "/",
      "2"
    ],
    "slot_map": {
      "var_0": "x"
    },
    "intent_indx": [
      16,
      217,
      82,
      2,
      17,
      388,
      2,
      21,
      28,
      408,
      19,
      23,
      81,
      82,
      25
    ],
    "code_indx_copy": [
      34,
      12,
      13,
      14,
      15,
      16,
      97,
      1,
      34,
      12,
      15,
      13,
      16,
      14,
      34,
      12,
      13,
      14,
      15,
      16,
      17,
      31,
      82
    ],
    "code_indx_nocopy": [
      34,
      12,
      13,
      14,
      15,
      16,
      97,
      1,
      34,
      12,
      15,
      13,
      16,
      14,
      34,
      12,
      13,
      14,
      15,
      16,
      17,
      31,
      82
    ]
  },
  {
    "intent": [
      "load",
      "data",
      "containing",
      "str_0",
      "from",
      "file",
      "str_1",
      "into",
      "numpy",
      "array",
      "var_0"
    ],
    "code": [
      "var_0",
      "=",
      "numpy",
      ".",
      "fromiter",
      "(",
      "codecs",
      ".",
      "open",
      "(",
      "'str_1'",
      ",",
      "encoding",
      "=",
      "'str_0'",
      ")",
      ",",
      "dtype",
      "=",
      "'<U2'",
      ")"
    ],
    "slot_map": {
      "str_0": "utf-8",
      "str_1": "new.txt",
      "var_0": "arr"
    },
    "intent_indx": [
      239,
      63,
      32,
      5,
      56,
      126,
      30,
      11,
      81,
      82,
      25
    ],
    "code_indx_copy": [
      34,
      19,
      149,
      22,
      520,
      1,
      520,
      22,
      106,
      1,
      63,
      8,
      520,
      19,
      29,
      17,
      8,
      179,
      19,
      520,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      149,
      22,
      520,
      1,
      520,
      22,
      106,
      1,
      63,
      8,
      520,
      19,
      29,
      17,
      8,
      179,
      19,
      520,
      17
    ]
  },
  {
    "intent": [
      "reverse",
      "sort",
      "list",
      "of",
      "dicts",
      "var_0",
      "by",
      "value",
      "for",
      "key",
      "var_1"
    ],
    "code": [
      "var_0",
      "=",
      "sorted",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "itemgetter",
      "(",
      "'var_1'",
      ")",
      ",",
      "reverse",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "var_0": "l",
      "var_1": "time"
    },
    "intent_indx": [
      273,
      117,
      4,
      2,
      433,
      25,
      42,
      19,
      20,
      22,
      61
    ],
    "code_indx_copy": [
      34,
      19,
      102,
      1,
      34,
      8,
      103,
      19,
      130,
      1,
      57,
      17,
      8,
      131,
      19,
      110,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      102,
      1,
      34,
      8,
      103,
      19,
      130,
      1,
      57,
      17,
      8,
      131,
      19,
      110,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "list",
      "of",
      "dictionary",
      "var_0",
      "based",
      "on",
      "key",
      "var_1",
      "in",
      "descending",
      "order"
    ],
    "code": [
      "var_0",
      "=",
      "sorted",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "lambda",
      "a",
      ":",
      "a",
      "[",
      "'var_1'",
      "]",
      ",",
      "reverse",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "var_0": "l",
      "var_1": "time"
    },
    "intent_indx": [
      117,
      3,
      4,
      2,
      24,
      25,
      199,
      140,
      22,
      61,
      23,
      121,
      158
    ],
    "code_indx_copy": [
      34,
      19,
      102,
      1,
      34,
      8,
      103,
      19,
      44,
      96,
      13,
      96,
      12,
      57,
      16,
      8,
      131,
      19,
      110,
      17
    ],
    "code_indx_nocopy": [
      34,
      19,
      102,
      1,
      34,
      8,
      103,
      19,
      44,
      96,
      13,
      96,
      12,
      57,
      16,
      8,
      131,
      19,
      110,
      17
    ]
  },
  {
    "intent": [
      "get",
      "row",
      "of",
      "dataframe",
      "var_0",
      "that",
      "match",
      "regex",
      "str_0"
    ],
    "code": [
      "var_0",
      ".",
      "loc",
      "[",
      "var_0",
      "[",
      "0",
      "]",
      ".",
      "str",
      ".",
      "contains",
      "(",
      "'str_0'",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": "df",
      "str_0": "(Hel|Just)",
      "(str_0)": "(Hel|Just)"
    },
    "intent_indx": [
      16,
      43,
      2,
      41,
      25,
      189,
      106,
      38,
      5
    ],
    "code_indx_copy": [
      34,
      22,
      204,
      12,
      34,
      12,
      43,
      16,
      22,
      25,
      22,
      520,
      1,
      29,
      17,
      16
    ],
    "code_indx_nocopy": [
      34,
      22,
      204,
      12,
      34,
      12,
      43,
      16,
      22,
      25,
      22,
      520,
      1,
      29,
      17,
      16
    ]
  },
  {
    "intent": [
      "find",
      "the",
      "string",
      "in",
      "var_0",
      "between",
      "two",
      "special",
      "character",
      "str_0",
      "and",
      "str_1"
    ],
    "code": [
      "re",
      ".",
      "search",
      "(",
      "'\\\\[(.*)\\\\]'",
      ",",
      "var_0",
      ")",
      ".",
      "group",
      "(",
      "1",
      ")"
    ],
    "slot_map": {
      "var_0": "your_string",
      "str_0": "[",
      "str_1": "]"
    },
    "intent_indx": [
      45,
      17,
      13,
      23,
      25,
      269,
      28,
      433,
      96,
      5,
      29,
      30
    ],
    "code_indx_copy": [
      39,
      22,
      94,
      1,
      520,
      8,
      34,
      17,
      22,
      121,
      1,
      15,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      94,
      1,
      520,
      8,
      34,
      17,
      22,
      121,
      1,
      15,
      17
    ]
  },
  {
    "intent": [
      "how",
      "to",
      "create",
      "a",
      "list",
      "of",
      "date",
      "string",
      "in",
      "str_0",
      "format",
      "with",
      "python",
      "panda",
      "?"
    ],
    "code": [
      "[",
      "d",
      ".",
      "strftime",
      "(",
      "'%Y%m%d'",
      ")",
      "for",
      "d",
      "in",
      "pandas",
      ".",
      "date_range",
      "(",
      "'20130226'",
      ",",
      "'20130302'",
      ")",
      "]"
    ],
    "slot_map": {
      "str_0": "yyyymmdd"
    },
    "intent_indx": [
      75,
      8,
      145,
      3,
      4,
      2,
      134,
      13,
      23,
      5,
      15,
      77,
      47,
      40,
      49
    ],
    "code_indx_copy": [
      12,
      2,
      22,
      65,
      1,
      520,
      17,
      7,
      2,
      9,
      278,
      22,
      520,
      1,
      520,
      8,
      520,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      2,
      22,
      65,
      1,
      520,
      17,
      7,
      2,
      9,
      278,
      22,
      520,
      1,
      520,
      8,
      520,
      17,
      16
    ]
  },
  {
    "intent": [
      "count",
      "number",
      "of",
      "time",
      "string",
      "str_0",
      "occurred",
      "in",
      "string",
      "str_1"
    ],
    "code": [
      "\"\"\"str_1\"\"\"",
      ".",
      "count",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": "brown",
      "str_1": "The big brown fox is brown"
    },
    "intent_indx": [
      173,
      74,
      2,
      135,
      13,
      5,
      433,
      23,
      13,
      30
    ],
    "code_indx_copy": [
      435,
      22,
      385,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      435,
      22,
      385,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "decode",
      "json",
      "string",
      "str_0",
      "to",
      "python",
      "dict"
    ],
    "code": [
      "json",
      ".",
      "loads",
      "(",
      "request",
      ".",
      "body",
      ")"
    ],
    "slot_map": {
      "str_0": "request.body"
    },
    "intent_indx": [
      178,
      176,
      13,
      5,
      8,
      47,
      182
    ],
    "code_indx_copy": [
      142,
      22,
      206,
      1,
      236,
      22,
      520,
      17
    ],
    "code_indx_nocopy": [
      142,
      22,
      206,
      1,
      236,
      22,
      520,
      17
    ]
  },
  {
    "intent": [
      "download",
      "the",
      "file",
      "from",
      "url",
      "var_0",
      "and",
      "save",
      "it",
      "under",
      "file",
      "var_1"
    ],
    "code": [
      "urllib",
      ".",
      "request",
      ".",
      "urlretrieve",
      "(",
      "var_0",
      ",",
      "var_1",
      ")"
    ],
    "slot_map": {
      "var_0": "url",
      "var_1": "file_name"
    },
    "intent_indx": [
      390,
      17,
      126,
      56,
      100,
      25,
      29,
      318,
      89,
      433,
      126,
      61
    ],
    "code_indx_copy": [
      235,
      22,
      236,
      22,
      353,
      1,
      34,
      8,
      92,
      17
    ],
    "code_indx_nocopy": [
      235,
      22,
      236,
      22,
      353,
      1,
      34,
      8,
      92,
      17
    ]
  },
  {
    "intent": [
      "split",
      "string",
      "var_0",
      "by",
      "space"
    ],
    "code": [
      "var_0",
      ".",
      "split",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": "text"
    },
    "intent_indx": [
      139,
      13,
      25,
      42,
      133
    ],
    "code_indx_copy": [
      34,
      22,
      71,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      71,
      1,
      17
    ]
  },
  {
    "intent": [
      "split",
      "string",
      "var_0",
      "by",
      "str_0"
    ],
    "code": [
      "var_0",
      ".",
      "split",
      "(",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "var_0": "text",
      "str_0": ","
    },
    "intent_indx": [
      139,
      13,
      25,
      42,
      5
    ],
    "code_indx_copy": [
      34,
      22,
      71,
      1,
      29,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      71,
      1,
      29,
      17
    ]
  },
  {
    "intent": [
      "split",
      "string",
      "var_0",
      "into",
      "a",
      "list",
      "by",
      "whitespace"
    ],
    "code": [
      "var_0",
      ".",
      "split",
      "(",
      ")"
    ],
    "slot_map": {
      "var_0": "line"
    },
    "intent_indx": [
      139,
      13,
      25,
      11,
      3,
      4,
      42,
      202
    ],
    "code_indx_copy": [
      34,
      22,
      71,
      1,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      71,
      1,
      17
    ]
  },
  {
    "intent": [
      "replace",
      "dot",
      "character",
      "str_0",
      "associated",
      "with",
      "ascii",
      "letter",
      "in",
      "list",
      "var_0",
      "with",
      "space",
      "str_1"
    ],
    "code": [
      "[",
      "re",
      "str_0",
      "sub",
      "(",
      "'(?<!\\\\d)\\\\.(?!\\\\d)'",
      ",",
      "' '",
      ",",
      "i",
      ")",
      "for",
      "i",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "str_0": ".",
      "var_0": "s",
      "str_1": ""
    },
    "intent_indx": [
      131,
      129,
      96,
      5,
      277,
      77,
      366,
      347,
      23,
      4,
      25,
      77,
      133,
      30
    ],
    "code_indx_copy": [
      12,
      39,
      11,
      40,
      1,
      520,
      8,
      109,
      8,
      6,
      17,
      7,
      6,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      12,
      39,
      11,
      40,
      1,
      520,
      8,
      109,
      8,
      6,
      17,
      7,
      6,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "sort",
      "list",
      "var_0",
      "based",
      "on",
      "second",
      "index",
      "of",
      "each",
      "string",
      "var_1"
    ],
    "code": [
      "sorted",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "lambda",
      "var_1",
      ":",
      "var_1",
      ".",
      "split",
      "(",
      "','",
      ")",
      "[",
      "1",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": "list_of_strings",
      "var_1": "s"
    },
    "intent_indx": [
      117,
      4,
      25,
      199,
      140,
      118,
      35,
      2,
      21,
      13,
      61
    ],
    "code_indx_copy": [
      102,
      1,
      34,
      8,
      103,
      19,
      44,
      92,
      13,
      92,
      22,
      71,
      1,
      73,
      17,
      12,
      15,
      16,
      17
    ],
    "code_indx_nocopy": [
      102,
      1,
      34,
      8,
      103,
      19,
      44,
      92,
      13,
      92,
      22,
      71,
      1,
      73,
      17,
      12,
      15,
      16,
      17
    ]
  },
  {
    "intent": [
      "call",
      "multiple",
      "bash",
      "function",
      "\u2018",
      "vasp",
      "\u2019",
      "and",
      "\u2018",
      "tee",
      "tee_output",
      "\u2019",
      "using",
      "\u2018",
      "|",
      "\u2019"
    ],
    "code": [
      "subprocess",
      ".",
      "check_call",
      "(",
      "'vasp | tee tee_output'",
      ",",
      "shell",
      "=",
      "True",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      294,
      6,
      348,
      67,
      377,
      433,
      378,
      29,
      377,
      433,
      433,
      378,
      108,
      377,
      433,
      378
    ],
    "code_indx_copy": [
      232,
      22,
      520,
      1,
      520,
      8,
      234,
      19,
      110,
      17
    ],
    "code_indx_nocopy": [
      232,
      22,
      520,
      1,
      520,
      8,
      234,
      19,
      110,
      17
    ]
  },
  {
    "intent": [
      "eliminate",
      "all",
      "string",
      "from",
      "list",
      "var_0"
    ],
    "code": [
      "[",
      "element",
      "for",
      "element",
      "in",
      "var_0",
      "if",
      "isinstance",
      "(",
      "element",
      ",",
      "int",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": "lst"
    },
    "intent_indx": [
      433,
      36,
      13,
      56,
      4,
      25
    ],
    "code_indx_copy": [
      12,
      506,
      7,
      506,
      9,
      34,
      67,
      208,
      1,
      506,
      8,
      20,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      506,
      7,
      506,
      9,
      34,
      67,
      208,
      1,
      506,
      8,
      20,
      17,
      16
    ]
  },
  {
    "intent": [
      "get",
      "all",
      "the",
      "element",
      "except",
      "string",
      "from",
      "the",
      "list",
      "str_0",
      "."
    ],
    "code": [
      "[",
      "element",
      "for",
      "element",
      "in",
      "str_0",
      "if",
      "not",
      "isinstance",
      "(",
      "element",
      ",",
      "str",
      ")",
      "]"
    ],
    "slot_map": {
      "str_0": "lst"
    },
    "intent_indx": [
      16,
      36,
      17,
      1,
      433,
      13,
      56,
      17,
      4,
      5,
      155
    ],
    "code_indx_copy": [
      12,
      506,
      7,
      506,
      9,
      11,
      67,
      283,
      208,
      1,
      506,
      8,
      25,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      506,
      7,
      506,
      9,
      11,
      67,
      283,
      208,
      1,
      506,
      8,
      25,
      17,
      16
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "list",
      "of",
      "dictionary",
      "var_0",
      "by",
      "the",
      "value",
      "of",
      "the",
      "dictionary",
      "key",
      "var_1"
    ],
    "code": [
      "newlist",
      "=",
      "sorted",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "lambda",
      "k",
      ":",
      "k",
      "[",
      "'var_1'",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": "list_to_be_sorted",
      "var_1": "name"
    },
    "intent_indx": [
      117,
      3,
      4,
      2,
      24,
      25,
      42,
      17,
      19,
      2,
      17,
      24,
      22,
      61
    ],
    "code_indx_copy": [
      520,
      19,
      102,
      1,
      34,
      8,
      103,
      19,
      44,
      90,
      13,
      90,
      12,
      57,
      16,
      17
    ],
    "code_indx_nocopy": [
      520,
      19,
      102,
      1,
      34,
      8,
      103,
      19,
      44,
      90,
      13,
      90,
      12,
      57,
      16,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "list",
      "of",
      "dictionary",
      "var_0",
      "by",
      "value",
      "in",
      "key",
      "var_1",
      "in",
      "descending",
      "order"
    ],
    "code": [
      "newlist",
      "=",
      "sorted",
      "(",
      "var_0",
      ",",
      "key",
      "=",
      "itemgetter",
      "(",
      "'var_1'",
      ")",
      ",",
      "reverse",
      "=",
      "True",
      ")"
    ],
    "slot_map": {
      "var_0": "l",
      "var_1": "name"
    },
    "intent_indx": [
      117,
      3,
      4,
      2,
      24,
      25,
      42,
      19,
      23,
      22,
      61,
      23,
      121,
      158
    ],
    "code_indx_copy": [
      520,
      19,
      102,
      1,
      34,
      8,
      103,
      19,
      130,
      1,
      57,
      17,
      8,
      131,
      19,
      110,
      17
    ],
    "code_indx_nocopy": [
      520,
      19,
      102,
      1,
      34,
      8,
      103,
      19,
      130,
      1,
      57,
      17,
      8,
      131,
      19,
      110,
      17
    ]
  },
  {
    "intent": [
      "how",
      "do",
      "i",
      "sort",
      "a",
      "list",
      "of",
      "dictionary",
      "by",
      "value",
      "of",
      "the",
      "dictionary",
      "in",
      "python",
      "?"
    ],
    "code": [
      "list_of_dicts",
      ".",
      "sort",
      "(",
      "key",
      "=",
      "operator",
      ".",
      "itemgetter",
      "(",
      "'name'",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      75,
      312,
      313,
      117,
      3,
      4,
      2,
      24,
      42,
      19,
      2,
      17,
      24,
      23,
      47,
      49
    ],
    "code_indx_copy": [
      520,
      22,
      126,
      1,
      103,
      19,
      129,
      22,
      130,
      1,
      438,
      17,
      17
    ],
    "code_indx_nocopy": [
      520,
      22,
      126,
      1,
      103,
      19,
      129,
      22,
      130,
      1,
      438,
      17,
      17
    ]
  },
  {
    "intent": [
      "how",
      "do",
      "i",
      "sort",
      "a",
      "list",
      "of",
      "dictionary",
      "by",
      "value",
      "of",
      "the",
      "dictionary",
      "in",
      "python",
      "?"
    ],
    "code": [
      "list_of_dicts",
      ".",
      "sort",
      "(",
      "key",
      "=",
      "operator",
      ".",
      "itemgetter",
      "(",
      "'age'",
      ")",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      75,
      312,
      313,
      117,
      3,
      4,
      2,
      24,
      42,
      19,
      2,
      17,
      24,
      23,
      47,
      49
    ],
    "code_indx_copy": [
      520,
      22,
      126,
      1,
      103,
      19,
      129,
      22,
      130,
      1,
      520,
      17,
      17
    ],
    "code_indx_nocopy": [
      520,
      22,
      126,
      1,
      103,
      19,
      129,
      22,
      130,
      1,
      520,
      17,
      17
    ]
  },
  {
    "intent": [
      "how",
      "to",
      "sort",
      "a",
      "dataframe",
      "by",
      "the",
      "ocurrences",
      "in",
      "a",
      "column",
      "in",
      "python",
      "(",
      "panda",
      ")"
    ],
    "code": [
      "df",
      ".",
      "groupby",
      "(",
      "'prots'",
      ")",
      ".",
      "sum",
      "(",
      ")",
      ".",
      "sort",
      "(",
      "'scores'",
      ",",
      "ascending",
      "=",
      "False",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      75,
      8,
      117,
      3,
      41,
      42,
      17,
      433,
      23,
      3,
      59,
      23,
      47,
      203,
      40,
      26
    ],
    "code_indx_copy": [
      151,
      22,
      159,
      1,
      520,
      17,
      22,
      0,
      1,
      17,
      22,
      126,
      1,
      520,
      8,
      280,
      19,
      88,
      17
    ],
    "code_indx_nocopy": [
      151,
      22,
      159,
      1,
      520,
      17,
      22,
      0,
      1,
      17,
      22,
      126,
      1,
      520,
      8,
      280,
      19,
      88,
      17
    ]
  },
  {
    "intent": [
      "join",
      "together",
      "with",
      "str_0",
      "element",
      "inside",
      "a",
      "list",
      "indexed",
      "with",
      "str_1",
      "within",
      "a",
      "dictionary",
      "var_0"
    ],
    "code": [
      "\"\"\"str_0\"\"\"",
      ".",
      "join",
      "(",
      "var_0",
      "[",
      "'str_1'",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": ",",
      "str_1": "category",
      "var_0": "trans"
    },
    "intent_indx": [
      272,
      433,
      77,
      5,
      1,
      44,
      3,
      4,
      433,
      77,
      30,
      52,
      3,
      24,
      25
    ],
    "code_indx_copy": [
      214,
      22,
      23,
      1,
      34,
      12,
      63,
      16,
      17
    ],
    "code_indx_nocopy": [
      214,
      22,
      23,
      1,
      34,
      12,
      63,
      16,
      17
    ]
  },
  {
    "intent": [
      "concatenate",
      "array",
      "of",
      "string",
      "str_0",
      "into",
      "a",
      "string"
    ],
    "code": [
      "\"\"\"\"\"\"",
      ".",
      "join",
      "(",
      "[",
      "str_0",
      "]",
      ")"
    ],
    "slot_map": {
      "str_0": "['A', 'B', 'C', 'D']",
      "[str_0]": "['A', 'B', 'C', 'D']"
    },
    "intent_indx": [
      0,
      82,
      2,
      13,
      5,
      11,
      3,
      13
    ],
    "code_indx_copy": [
      289,
      22,
      23,
      1,
      12,
      11,
      16,
      17
    ],
    "code_indx_nocopy": [
      289,
      22,
      23,
      1,
      12,
      11,
      16,
      17
    ]
  },
  {
    "intent": [
      "get",
      "json",
      "data",
      "from",
      "restful",
      "service",
      "str_0"
    ],
    "code": [
      "json",
      ".",
      "load",
      "(",
      "urllib",
      ".",
      "request",
      ".",
      "urlopen",
      "(",
      "'str_0'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": "url"
    },
    "intent_indx": [
      16,
      176,
      63,
      56,
      433,
      433,
      5
    ],
    "code_indx_copy": [
      142,
      22,
      156,
      1,
      235,
      22,
      236,
      22,
      237,
      1,
      29,
      17,
      17
    ],
    "code_indx_nocopy": [
      142,
      22,
      156,
      1,
      235,
      22,
      236,
      22,
      237,
      1,
      29,
      17,
      17
    ]
  },
  {
    "intent": [
      "remove",
      "all",
      "string",
      "from",
      "a",
      "list",
      "a",
      "string",
      "var_0",
      "where",
      "the",
      "value",
      "start",
      "with",
      "str_0",
      "or",
      "str_1"
    ],
    "code": [
      "[",
      "x",
      "for",
      "x",
      "in",
      "var_0",
      "if",
      "not",
      "x",
      ".",
      "startswith",
      "(",
      "'@$\\t'",
      ")",
      "and",
      "not",
      "x",
      ".",
      "startswith",
      "(",
      "'str_1'",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": "sents",
      "str_0": "@$\\t",
      "str_1": "#"
    },
    "intent_indx": [
      258,
      36,
      13,
      56,
      3,
      4,
      3,
      13,
      25,
      152,
      17,
      19,
      412,
      77,
      5,
      330,
      30
    ],
    "code_indx_copy": [
      12,
      26,
      7,
      26,
      9,
      34,
      67,
      283,
      26,
      22,
      449,
      1,
      520,
      17,
      454,
      283,
      26,
      22,
      449,
      1,
      63,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      26,
      7,
      26,
      9,
      34,
      67,
      283,
      26,
      22,
      449,
      1,
      520,
      17,
      454,
      283,
      26,
      22,
      449,
      1,
      63,
      17,
      16
    ]
  },
  {
    "intent": [
      "django",
      "filter",
      "by",
      "hour"
    ],
    "code": [
      "Entry",
      ".",
      "objects",
      ".",
      "filter",
      "(",
      "pub_date__contains",
      "=",
      "'08:00'",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      85,
      209,
      42,
      343
    ],
    "code_indx_copy": [
      520,
      22,
      78,
      22,
      79,
      1,
      520,
      19,
      520,
      17
    ],
    "code_indx_nocopy": [
      520,
      22,
      78,
      22,
      79,
      1,
      520,
      19,
      520,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "list",
      "of",
      "dictionary",
      "var_0",
      "first",
      "by",
      "key",
      "var_1",
      "and",
      "then",
      "by",
      "var_2"
    ],
    "code": [
      "var_0",
      ".",
      "sort",
      "(",
      "key",
      "=",
      "lambda",
      "item",
      ":",
      "(",
      "item",
      "[",
      "'var_1'",
      "]",
      ",",
      "item",
      "[",
      "'var_2'",
      "]",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": "list",
      "var_1": "points",
      "var_2": "time"
    },
    "intent_indx": [
      117,
      3,
      4,
      2,
      24,
      25,
      148,
      42,
      22,
      61,
      29,
      251,
      42,
      62
    ],
    "code_indx_copy": [
      34,
      22,
      126,
      1,
      103,
      19,
      44,
      386,
      13,
      1,
      386,
      12,
      57,
      16,
      8,
      386,
      12,
      58,
      16,
      17,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      126,
      1,
      103,
      19,
      44,
      386,
      13,
      1,
      386,
      12,
      57,
      16,
      8,
      386,
      12,
      58,
      16,
      17,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "datetime",
      "object",
      "str_0",
      "to",
      "second"
    ],
    "code": [
      "(",
      "t",
      "-",
      "datetime",
      ".",
      "datetime",
      "(",
      "str_0",
      ")",
      ")",
      ".",
      "total_seconds",
      "(",
      ")"
    ],
    "slot_map": {
      "str_0": "(1970, 1, 1)",
      "(str_0)": "(1970, 1, 1)"
    },
    "intent_indx": [
      10,
      12,
      14,
      5,
      8,
      118
    ],
    "code_indx_copy": [
      1,
      45,
      14,
      27,
      22,
      27,
      1,
      11,
      17,
      17,
      22,
      520,
      1,
      17
    ],
    "code_indx_nocopy": [
      1,
      45,
      14,
      27,
      22,
      27,
      1,
      11,
      17,
      17,
      22,
      520,
      1,
      17
    ]
  },
  {
    "intent": [
      "insert",
      "var_0",
      "before",
      "the",
      "file",
      "extension",
      "in",
      "str_0",
      "or",
      "replace",
      "var_1",
      "with",
      "var_2",
      "if",
      "it",
      "precedes",
      "the",
      "extension",
      "."
    ],
    "code": [
      "re",
      ".",
      "sub",
      "(",
      "'(\\\\_a)?\\\\.([^\\\\.]*)$'",
      ",",
      "'_suff.\\\\2'",
      ",",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "var_0": "_suff",
      "str_0": "long.file.name.jpg",
      "var_1": "_a",
      "var_2": "suff"
    },
    "intent_indx": [
      268,
      25,
      271,
      17,
      126,
      433,
      23,
      5,
      330,
      131,
      61,
      77,
      62,
      147,
      89,
      433,
      17,
      433,
      155
    ],
    "code_indx_copy": [
      39,
      22,
      40,
      1,
      520,
      8,
      520,
      8,
      29,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      40,
      1,
      520,
      8,
      520,
      8,
      29,
      17
    ]
  },
  {
    "intent": [
      "reload",
      "a",
      "module",
      "var_0"
    ],
    "code": [
      "import",
      "imp",
      "\n",
      "imp",
      ".",
      "reload",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": "module"
    },
    "intent_indx": [
      433,
      3,
      327,
      25
    ],
    "code_indx_copy": [
      392,
      520,
      163,
      520,
      22,
      524,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      392,
      520,
      163,
      520,
      22,
      520,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "integer",
      "var_0",
      "into",
      "an",
      "unassigned",
      "integer"
    ],
    "code": [
      "struct",
      ".",
      "unpack",
      "(",
      "'H'",
      ",",
      "struct",
      ".",
      "pack",
      "(",
      "'h'",
      ",",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": "number"
    },
    "intent_indx": [
      10,
      7,
      25,
      11,
      217,
      433,
      7
    ],
    "code_indx_copy": [
      318,
      22,
      403,
      1,
      520,
      8,
      318,
      22,
      319,
      1,
      520,
      8,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      318,
      22,
      403,
      1,
      520,
      8,
      318,
      22,
      319,
      1,
      520,
      8,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "int",
      "value",
      "in",
      "list",
      "var_0",
      "to",
      "float"
    ],
    "code": [
      "var_0",
      "=",
      "[",
      "float",
      "(",
      "x",
      ")",
      "for",
      "x",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": "numlist"
    },
    "intent_indx": [
      10,
      72,
      19,
      23,
      4,
      25,
      8,
      92
    ],
    "code_indx_copy": [
      34,
      19,
      12,
      228,
      1,
      26,
      17,
      7,
      26,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      34,
      19,
      12,
      228,
      1,
      26,
      17,
      7,
      26,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "write",
      "dataframe",
      "var_0",
      ",",
      "excluding",
      "index",
      ",",
      "to",
      "a",
      "csv",
      "file"
    ],
    "code": [
      "var_0",
      ".",
      "to_csv",
      "(",
      "filename",
      ",",
      "index",
      "=",
      "False",
      ")"
    ],
    "slot_map": {
      "var_0": "df"
    },
    "intent_indx": [
      163,
      41,
      25,
      60,
      433,
      35,
      60,
      8,
      3,
      278,
      126
    ],
    "code_indx_copy": [
      34,
      22,
      230,
      1,
      399,
      8,
      162,
      19,
      88,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      230,
      1,
      399,
      8,
      162,
      19,
      88,
      17
    ]
  },
  {
    "intent": [
      "convert",
      "a",
      "urllib",
      "unquoted",
      "string",
      "var_0",
      "to",
      "a",
      "json",
      "data",
      "var_1"
    ],
    "code": [
      "var_1",
      "=",
      "json",
      ".",
      "loads",
      "(",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": "unescaped",
      "var_1": "json_data"
    },
    "intent_indx": [
      10,
      3,
      433,
      433,
      13,
      25,
      8,
      3,
      176,
      63,
      61
    ],
    "code_indx_copy": [
      92,
      19,
      142,
      22,
      206,
      1,
      34,
      17
    ],
    "code_indx_nocopy": [
      92,
      19,
      142,
      22,
      206,
      1,
      34,
      17
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "list",
      "containing",
      "all",
      "ascii",
      "character",
      "a",
      "it",
      "element"
    ],
    "code": [
      "[",
      "chr",
      "(",
      "i",
      ")",
      "for",
      "i",
      "in",
      "range",
      "(",
      "127",
      ")",
      "]"
    ],
    "slot_map": {},
    "intent_indx": [
      145,
      3,
      4,
      32,
      36,
      366,
      96,
      3,
      89,
      1
    ],
    "code_indx_copy": [
      12,
      451,
      1,
      6,
      17,
      7,
      6,
      9,
      105,
      1,
      520,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      451,
      1,
      6,
      17,
      7,
      6,
      9,
      105,
      1,
      520,
      17,
      16
    ]
  },
  {
    "intent": [
      "write",
      "var_0",
      "to",
      "a",
      "binary",
      "file",
      "var_1"
    ],
    "code": [
      "var_1",
      ".",
      "write",
      "(",
      "struct",
      ".",
      "pack",
      "(",
      "'5B'",
      ",",
      "*",
      "var_0",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": "newFileBytes",
      "var_1": "newFile"
    },
    "intent_indx": [
      163,
      25,
      8,
      3,
      267,
      126,
      61
    ],
    "code_indx_copy": [
      92,
      22,
      133,
      1,
      318,
      22,
      319,
      1,
      520,
      8,
      3,
      34,
      17,
      17
    ],
    "code_indx_nocopy": [
      92,
      22,
      133,
      1,
      318,
      22,
      319,
      1,
      520,
      8,
      3,
      34,
      17,
      17
    ]
  },
  {
    "intent": [
      "python",
      "regex",
      "-",
      "check",
      "for",
      "a",
      "capital",
      "letter",
      "with",
      "a",
      "following",
      "lowercase",
      "in",
      "string",
      "var_0"
    ],
    "code": [
      "re",
      ".",
      "sub",
      "(",
      "'^[A-Z0-9]*(?![a-z])'",
      ",",
      "''",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": "string"
    },
    "intent_indx": [
      47,
      38,
      433,
      227,
      20,
      3,
      433,
      347,
      77,
      3,
      433,
      198,
      23,
      13,
      25
    ],
    "code_indx_copy": [
      39,
      22,
      40,
      1,
      520,
      8,
      21,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      40,
      1,
      520,
      8,
      21,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "last",
      "key",
      "of",
      "dictionary",
      "var_0"
    ],
    "code": [
      "list",
      "(",
      "var_0",
      ".",
      "keys",
      "(",
      ")",
      ")",
      "[",
      "-",
      "1",
      "]"
    ],
    "slot_map": {
      "var_0": "dict"
    },
    "intent_indx": [
      16,
      17,
      165,
      22,
      2,
      24,
      25
    ],
    "code_indx_copy": [
      33,
      1,
      34,
      22,
      169,
      1,
      17,
      17,
      12,
      14,
      15,
      16
    ],
    "code_indx_nocopy": [
      33,
      1,
      34,
      22,
      169,
      1,
      17,
      17,
      12,
      14,
      15,
      16
    ]
  },
  {
    "intent": [
      "write",
      "line",
      "str_0",
      "to",
      "file",
      "var_0"
    ],
    "code": [
      "print",
      "(",
      "'str_0'",
      ",",
      "file",
      "=",
      "var_0",
      ")"
    ],
    "slot_map": {
      "str_0": "hi there",
      "var_0": "f"
    },
    "intent_indx": [
      163,
      167,
      5,
      8,
      126,
      25
    ],
    "code_indx_copy": [
      49,
      1,
      29,
      8,
      400,
      19,
      34,
      17
    ],
    "code_indx_nocopy": [
      49,
      1,
      29,
      8,
      400,
      19,
      34,
      17
    ]
  },
  {
    "intent": [
      "write",
      "line",
      "str_0",
      "to",
      "file",
      "var_0"
    ],
    "code": [
      "f",
      "=",
      "open",
      "(",
      "'var_0'",
      ",",
      "'w'",
      ")",
      "\n",
      "f",
      ".",
      "write",
      "(",
      "'hi there\\n'",
      ")",
      "\n",
      "f",
      ".",
      "close",
      "(",
      ")"
    ],
    "slot_map": {
      "str_0": "hi there",
      "var_0": "myfile"
    },
    "intent_indx": [
      163,
      167,
      5,
      8,
      126,
      25
    ],
    "code_indx_copy": [
      192,
      19,
      106,
      1,
      56,
      8,
      493,
      17,
      163,
      192,
      22,
      133,
      1,
      520,
      17,
      163,
      192,
      22,
      502,
      1,
      17
    ],
    "code_indx_nocopy": [
      192,
      19,
      106,
      1,
      56,
      8,
      493,
      17,
      163,
      192,
      22,
      133,
      1,
      520,
      17,
      163,
      192,
      22,
      502,
      1,
      17
    ]
  },
  {
    "intent": [
      "write",
      "line",
      "str_0",
      "to",
      "file",
      "str_1"
    ],
    "code": [
      "with",
      "open",
      "(",
      "'str_1'",
      ",",
      "'a'",
      ")",
      "as",
      "the_file",
      ":",
      "\n",
      "    ",
      "the_file",
      ".",
      "write",
      "(",
      "'Hello\\n'",
      ")",
      ""
    ],
    "slot_map": {
      "str_0": "Hello",
      "str_1": "somefile.txt"
    },
    "intent_indx": [
      163,
      167,
      5,
      8,
      126,
      30
    ],
    "code_indx_copy": [
      364,
      106,
      1,
      63,
      8,
      410,
      17,
      366,
      520,
      13,
      163,
      218,
      520,
      22,
      133,
      1,
      520,
      17,
      220
    ],
    "code_indx_nocopy": [
      364,
      106,
      1,
      63,
      8,
      410,
      17,
      366,
      520,
      13,
      163,
      218,
      520,
      22,
      133,
      1,
      520,
      17,
      220
    ]
  },
  {
    "intent": [
      "convert",
      "unicode",
      "string",
      "var_0",
      "to",
      "ascii"
    ],
    "code": [
      "var_0",
      ".",
      "encode",
      "(",
      "'iso-8859-15'",
      ")"
    ],
    "slot_map": {
      "var_0": "s"
    },
    "intent_indx": [
      10,
      223,
      13,
      25,
      8,
      366
    ],
    "code_indx_copy": [
      34,
      22,
      242,
      1,
      520,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      242,
      1,
      520,
      17
    ]
  },
  {
    "intent": [
      "django",
      "get",
      "maximum",
      "value",
      "associated",
      "with",
      "field",
      "str_0",
      "in",
      "model",
      "var_0"
    ],
    "code": [
      "var_0",
      ".",
      "objects",
      ".",
      "filter",
      "(",
      "group",
      "=",
      "group",
      ")",
      ".",
      "order_by",
      "(",
      "'-added'",
      ")",
      "[",
      "0",
      "]"
    ],
    "slot_map": {
      "str_0": "added",
      "var_0": "AuthorizedEmail"
    },
    "intent_indx": [
      85,
      16,
      219,
      19,
      277,
      77,
      301,
      5,
      23,
      86,
      25
    ],
    "code_indx_copy": [
      34,
      22,
      78,
      22,
      79,
      1,
      121,
      19,
      121,
      17,
      22,
      138,
      1,
      520,
      17,
      12,
      43,
      16
    ],
    "code_indx_nocopy": [
      34,
      22,
      78,
      22,
      79,
      1,
      121,
      19,
      121,
      17,
      22,
      138,
      1,
      520,
      17,
      12,
      43,
      16
    ]
  },
  {
    "intent": [
      "find",
      "all",
      "number",
      "and",
      "dot",
      "from",
      "a",
      "string",
      "var_0",
      "using",
      "regex"
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'Test([0-9.]*[0-9]+)'",
      ",",
      "var_0",
      ")"
    ],
    "slot_map": {
      "var_0": "text"
    },
    "intent_indx": [
      45,
      36,
      74,
      29,
      129,
      56,
      3,
      13,
      25,
      108,
      38
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      520,
      8,
      34,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      520,
      8,
      34,
      17
    ]
  },
  {
    "intent": [
      "python",
      "regex",
      "to",
      "find",
      "all",
      "number",
      "and",
      "dot",
      "from",
      "str_0"
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'Test([\\\\d.]*\\\\d+)'",
      ",",
      "str_0",
      ")"
    ],
    "slot_map": {
      "str_0": "text"
    },
    "intent_indx": [
      47,
      38,
      8,
      45,
      36,
      74,
      29,
      129,
      56,
      5
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      520,
      8,
      11,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      520,
      8,
      11,
      17
    ]
  },
  {
    "intent": [
      "execute",
      "script",
      "str_0",
      "using",
      "str_1",
      "shell"
    ],
    "code": [
      "os",
      ".",
      "system",
      "(",
      "'str_1'",
      ",",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "str_0": "script.ps1",
      "str_1": "powershell.exe"
    },
    "intent_indx": [
      136,
      236,
      5,
      108,
      30,
      282
    ],
    "code_indx_copy": [
      114,
      22,
      120,
      1,
      63,
      8,
      29,
      17
    ],
    "code_indx_nocopy": [
      114,
      22,
      120,
      1,
      63,
      8,
      29,
      17
    ]
  },
  {
    "intent": [
      "sort",
      "a",
      "list",
      "of",
      "tuples",
      "var_0",
      "by",
      "third",
      "item",
      "in",
      "the",
      "tuple"
    ],
    "code": [
      "var_0",
      ".",
      "sort",
      "(",
      "key",
      "=",
      "lambda",
      "x",
      ":",
      "x",
      "[",
      "1",
      "]",
      "[",
      "2",
      "]",
      ")"
    ],
    "slot_map": {
      "var_0": "b"
    },
    "intent_indx": [
      117,
      3,
      4,
      2,
      31,
      25,
      42,
      120,
      37,
      23,
      17,
      112
    ],
    "code_indx_copy": [
      34,
      22,
      126,
      1,
      103,
      19,
      44,
      26,
      13,
      26,
      12,
      15,
      16,
      12,
      82,
      16,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      126,
      1,
      103,
      19,
      44,
      26,
      13,
      26,
      12,
      15,
      16,
      12,
      82,
      16,
      17
    ]
  },
  {
    "intent": [
      "get",
      "a",
      "list",
      "of",
      "all",
      "key",
      "in",
      "cassandra",
      "database",
      "var_0",
      "with",
      "pycassa"
    ],
    "code": [
      "list",
      "(",
      "var_0",
      ".",
      "get_range",
      "(",
      ")",
      ".",
      "get_keys",
      "(",
      ")",
      ")"
    ],
    "slot_map": {
      "var_0": "cf"
    },
    "intent_indx": [
      16,
      3,
      4,
      2,
      36,
      22,
      23,
      433,
      433,
      25,
      77,
      433
    ],
    "code_indx_copy": [
      33,
      1,
      34,
      22,
      520,
      1,
      17,
      22,
      520,
      1,
      17,
      17
    ],
    "code_indx_nocopy": [
      33,
      1,
      34,
      22,
      520,
      1,
      17,
      22,
      520,
      1,
      17,
      17
    ]
  },
  {
    "intent": [
      "create",
      "a",
      "datetime",
      "with",
      "the",
      "current",
      "date",
      "&",
      "time"
    ],
    "code": [
      "datetime",
      ".",
      "datetime",
      ".",
      "now",
      "(",
      ")"
    ],
    "slot_map": {},
    "intent_indx": [
      145,
      3,
      12,
      77,
      17,
      174,
      134,
      433,
      135
    ],
    "code_indx_copy": [
      27,
      22,
      27,
      22,
      296,
      1,
      17
    ],
    "code_indx_nocopy": [
      27,
      22,
      27,
      22,
      296,
      1,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "index",
      "of",
      "an",
      "integer",
      "str_0",
      "from",
      "a",
      "list",
      "var_0",
      "if",
      "the",
      "list",
      "also",
      "contains",
      "boolean",
      "item"
    ],
    "code": [
      "next",
      "(",
      "i",
      "for",
      "i",
      ",",
      "x",
      "in",
      "enumerate",
      "(",
      "var_0",
      ")",
      "if",
      "not",
      "isinstance",
      "(",
      "x",
      ",",
      "bool",
      ")",
      "and",
      "x",
      "==",
      "str_0",
      ")"
    ],
    "slot_map": {
      "str_0": "1",
      "var_0": "lst"
    },
    "intent_indx": [
      16,
      17,
      35,
      2,
      217,
      7,
      5,
      56,
      3,
      4,
      25,
      147,
      17,
      4,
      433,
      73,
      353,
      37
    ],
    "code_indx_copy": [
      492,
      1,
      6,
      7,
      6,
      8,
      26,
      9,
      10,
      1,
      34,
      17,
      67,
      283,
      208,
      1,
      26,
      8,
      453,
      17,
      454,
      26,
      76,
      11,
      17
    ],
    "code_indx_nocopy": [
      492,
      1,
      6,
      7,
      6,
      8,
      26,
      9,
      10,
      1,
      34,
      17,
      67,
      283,
      208,
      1,
      26,
      8,
      453,
      17,
      454,
      26,
      76,
      11,
      17
    ]
  },
  {
    "intent": [
      "subtract",
      "int_0",
      "from",
      "every",
      "number",
      "in",
      "a",
      "list",
      "var_0"
    ],
    "code": [
      "var_0",
      "[",
      ":",
      "]",
      "=",
      "[",
      "(",
      "x",
      "-",
      "int_0",
      ")",
      "for",
      "x",
      "in",
      "var_0",
      "]"
    ],
    "slot_map": {
      "var_0": "a",
      "int_0": "13"
    },
    "intent_indx": [
      393,
      259,
      56,
      270,
      74,
      23,
      3,
      4,
      25
    ],
    "code_indx_copy": [
      34,
      12,
      13,
      16,
      19,
      12,
      1,
      26,
      14,
      314,
      17,
      7,
      26,
      9,
      34,
      16
    ],
    "code_indx_nocopy": [
      34,
      12,
      13,
      16,
      19,
      12,
      1,
      26,
      14,
      314,
      17,
      7,
      26,
      9,
      34,
      16
    ]
  },
  {
    "intent": [
      "choose",
      "a",
      "random",
      "file",
      "from",
      "the",
      "directory",
      "content",
      "of",
      "the",
      "c",
      "drive",
      ",",
      "str_0"
    ],
    "code": [
      "random",
      ".",
      "choice",
      "(",
      "os",
      ".",
      "listdir",
      "(",
      "'C:\\\\'",
      ")",
      ")"
    ],
    "slot_map": {
      "str_0": "C:\\\\"
    },
    "intent_indx": [
      433,
      3,
      184,
      126,
      56,
      17,
      170,
      125,
      2,
      17,
      433,
      433,
      60,
      5
    ],
    "code_indx_copy": [
      150,
      22,
      212,
      1,
      114,
      22,
      200,
      1,
      520,
      17,
      17
    ],
    "code_indx_nocopy": [
      150,
      22,
      212,
      1,
      114,
      22,
      200,
      1,
      520,
      17,
      17
    ]
  },
  {
    "intent": [
      "get",
      "the",
      "highest",
      "element",
      "in",
      "absolute",
      "value",
      "in",
      "a",
      "numpy",
      "matrix",
      "var_0"
    ],
    "code": [
      "max",
      "(",
      "var_0",
      ".",
      "min",
      "(",
      ")",
      ",",
      "var_0",
      ".",
      "max",
      "(",
      ")",
      ",",
      "key",
      "=",
      "abs",
      ")"
    ],
    "slot_map": {
      "var_0": "x"
    },
    "intent_indx": [
      16,
      17,
      433,
      1,
      23,
      433,
      19,
      23,
      3,
      81,
      183,
      25
    ],
    "code_indx_copy": [
      181,
      1,
      34,
      22,
      112,
      1,
      17,
      8,
      34,
      22,
      181,
      1,
      17,
      8,
      103,
      19,
      359,
      17
    ],
    "code_indx_nocopy": [
      181,
      1,
      34,
      22,
      112,
      1,
      17,
      8,
      34,
      22,
      181,
      1,
      17,
      8,
      103,
      19,
      359,
      17
    ]
  },
  {
    "intent": [
      "get",
      "all",
      "url",
      "within",
      "text",
      "var_0"
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'\"(http.*?)\"'",
      ",",
      "var_0",
      ",",
      "re",
      ".",
      "MULTILINE",
      "|",
      "re",
      ".",
      "DOTALL",
      ")"
    ],
    "slot_map": {
      "var_0": "s"
    },
    "intent_indx": [
      16,
      36,
      100,
      52,
      257,
      25
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      520,
      8,
      34,
      8,
      39,
      22,
      520,
      409,
      39,
      22,
      520,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      520,
      8,
      34,
      8,
      39,
      22,
      520,
      409,
      39,
      22,
      520,
      17
    ]
  },
  {
    "intent": [
      "match",
      "url",
      "whose",
      "domain",
      "doe",
      "n't",
      "start",
      "with",
      "var_0",
      "from",
      "string",
      "var_1",
      "using",
      "regex"
    ],
    "code": [
      "re",
      ".",
      "findall",
      "(",
      "'http://[^t][^s\"]+\\\\.html'",
      ",",
      "var_1",
      ")"
    ],
    "slot_map": {
      "var_0": "t",
      "var_1": "document"
    },
    "intent_indx": [
      106,
      100,
      221,
      433,
      180,
      433,
      412,
      77,
      25,
      56,
      13,
      61,
      108,
      38
    ],
    "code_indx_copy": [
      39,
      22,
      48,
      1,
      520,
      8,
      92,
      17
    ],
    "code_indx_nocopy": [
      39,
      22,
      48,
      1,
      520,
      8,
      92,
      17
    ]
  },
  {
    "intent": [
      "split",
      "a",
      "string",
      "var_0",
      "considering",
      "the",
      "space",
      "str_0"
    ],
    "code": [
      "var_0",
      ".",
      "replace",
      "(",
      "' '",
      ",",
      "'! !'",
      ")",
      ".",
      "split",
      "(",
      "'!'",
      ")"
    ],
    "slot_map": {
      "var_0": "mystring",
      "str_0": ""
    },
    "intent_indx": [
      139,
      3,
      13,
      25,
      433,
      17,
      133,
      5
    ],
    "code_indx_copy": [
      34,
      22,
      108,
      1,
      109,
      8,
      520,
      17,
      22,
      71,
      1,
      520,
      17
    ],
    "code_indx_nocopy": [
      34,
      22,
      108,
      1,
      109,
      8,
      520,
      17,
      22,
      71,
      1,
      520,
      17
    ]
  },
  {
    "intent": [
      "open",
      "file",
      "var_0",
      "with",
      "mode",
      "str_0"
    ],
    "code": [
      "open",
      "(",
      "var_0",
      ",",
      "'str_0'",
      ")"
    ],
    "slot_map": {
      "var_0": "path",
      "str_0": "r"
    },
    "intent_indx": [
      275,
      126,
      25,
      77,
      276,
      5
    ],
    "code_indx_copy": [
      106,
      1,
      34,
      8,
      29,
      17
    ],
    "code_indx_nocopy": [
      106,
      1,
      34,
      8,
      29,
      17
    ]
  },
  {
    "intent": [
      "sum",
      "element",
      "at",
      "the",
      "same",
      "index",
      "in",
      "list",
      "var_0"
    ],
    "code": [
      "[",
      "[",
      "sum",
      "(",
      "item",
      ")",
      "for",
      "item",
      "in",
      "zip",
      "(",
      "*",
      "items",
      ")",
      "]",
      "for",
      "items",
      "in",
      "zip",
      "(",
      "*",
      "var_0",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": "data"
    },
    "intent_indx": [
      111,
      1,
      33,
      17,
      34,
      35,
      23,
      4,
      25
    ],
    "code_indx_copy": [
      12,
      12,
      0,
      1,
      386,
      17,
      7,
      386,
      9,
      36,
      1,
      3,
      35,
      17,
      16,
      7,
      35,
      9,
      36,
      1,
      3,
      34,
      17,
      16
    ],
    "code_indx_nocopy": [
      12,
      12,
      0,
      1,
      386,
      17,
      7,
      386,
      9,
      36,
      1,
      3,
      35,
      17,
      16,
      7,
      35,
      9,
      36,
      1,
      3,
      34,
      17,
      16
    ]
  },
  {
    "intent": [
      "add",
      "a",
      "new",
      "axis",
      "to",
      "array",
      "var_0"
    ],
    "code": [
      "var_0",
      "[",
      ":",
      ",",
      "(",
      "np",
      ".",
      "newaxis",
      ")",
      "]"
    ],
    "slot_map": {
      "var_0": "a"
    },
    "intent_indx": [
      58,
      3,
      186,
      419,
      8,
      82,
      25
    ],
    "code_indx_copy": [
      34,
      12,
      13,
      8,
      1,
      74,
      22,
      520,
      17,
      16
    ],
    "code_indx_nocopy": [
      34,
      12,
      13,
      8,
      1,
      74,
      22,
      520,
      17,
      16
    ]
  }
]